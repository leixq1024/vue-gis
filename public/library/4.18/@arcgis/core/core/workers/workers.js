/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import{a as e,h as r}from"../../chunks/object.js";import"../../chunks/deprecate.js";import"../lang.js";import t from"../../config.js";import{L as s}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import"../accessorSupport/decorators/property.js";import"../Accessor.js";import"../../chunks/PropertyOrigin.js";import"../scheduling.js";import{create as o,onAbortOrThrow as n,createAbortController as a,isPromiseLike as i,isAbortError as c,throwIfAborted as l,all as u}from"../promiseUtils.js";import"../../chunks/Message.js";import d from"../Error.js";import"../../chunks/ensureType.js";import"../accessorSupport/decorators/subclass.js";import{makeAbsolute as h}from"../urlUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/resourceExtension.js";import{g as m}from"../../chunks/locale.js";import"../../chunks/number.js";import"../../intl.js";import{workerMessages as p}from"../../kernel.js";import"../../request.js";import{g}from"../../chunks/assets.js";import"../watchUtils.js";import f,{M as b,r as k,R as w,n as v,t as E,p as y}from"./Connection.js";export{default as Connection,R as RemoteClient}from"./Connection.js";import"../../chunks/Scheduler.js";let j=null;j=h(g("esri/core/workers/init.js"));const _={};_.baseUrl=h(g("dojo/")),_.packages=[{name:"esri",location:"../esri"}];class P{constructor(){const e=document.createDocumentFragment();["addEventListener","dispatchEvent","removeEventListener"].forEach((r=>{this[r]=(...t)=>e[r](...t)}))}}const O=e.MutationObserver||e.WebKitMutationObserver,N=function(){let r;if(e.process&&e.process.nextTick)r=r=>{e.process.nextTick(r)};else if(e.Promise)r=r=>{e.Promise.resolve().then(r)};else if(O){const e=[],t=document.createElement("div");new O((()=>{for(;e.length>0;)e.shift()()})).observe(t,{attributes:!0}),r=r=>{e.push(r),t.setAttribute("queueStatus","1")}}return r}(),M=(()=>{const r=e.MessageEvent;try{new r("message",{data:null})}catch{return(e,r={})=>{const{data:t,bubbles:s=!1,cancelable:o=!1}=r,n=document.createEvent("Event");return n.initEvent(e,s,o),n.data=t,n}}return(e,t)=>new r(e,t)})();class I{constructor(){this._dispatcher=new P,this._isInitialized=!1,this._workerPostMessage({type:b.HANDSHAKE})}terminate(){}get onmessage(){return this._onmessageHandler}set onmessage(e){this._onmessageHandler&&this.removeEventListener("message",this._onmessageHandler),this._onmessageHandler=e,e&&this.addEventListener("message",e)}get onmessageerror(){return this._onmessageerrorHandler}set onmessageerror(e){this._onmessageerrorHandler&&this.removeEventListener("messageerror",this._onmessageerrorHandler),this._onmessageerrorHandler=e,e&&this.addEventListener("messageerror",e)}get onerror(){return this._onerrorHandler}set onerror(e){this._onerrorHandler&&this.removeEventListener("error",this._onerrorHandler),this._onerrorHandler=e,e&&this.addEventListener("error",e)}postMessage(e){N((()=>{this._workerMessageHandler(M("message",{data:e}))}))}dispatchEvent(e){return this._dispatcher.dispatchEvent(e)}addEventListener(e,r,t){this._dispatcher.addEventListener(e,r,t)}removeEventListener(e,r,t){this._dispatcher.removeEventListener(e,r,t)}_workerPostMessage(e){N((()=>{this.dispatchEvent(M("message",{data:e}))}))}async _workerMessageHandler(e){const r=k(e);if(r)switch(r.type){case b.CONFIGURE:this._isInitialized||this._workerPostMessage({type:b.CONFIGURED});break;case b.OPEN:{const{modulePath:e,jobId:t}=r;let s=await w.loadWorker(e);s||(s=await import(e));const o=w.connect(s);this._workerPostMessage({type:b.OPENED,jobId:t,data:o});break}}}}const L=s.getLogger("esri.core.workers");r.add("esri-workers-arraybuffer-transfer",!r("safari")||r("safari")>=12);const{CONFIGURED:C,CONFIGURE:S,HANDSHAKE:H}=b;let U;try{U=URL.createObjectURL(new Blob(['var esriConfig,workerPath,globalId=0,outgoing=new Map,configured=!1,HANDSHAKE=0,CONFIGURE=1,CONFIGURED=2,OPEN=3,OPENED=4,RESPONSE=5,INVOKE=6,ABORT=7;function createAbortError(){var e=new Error("Aborted");return e.name="AbortError",e}function receiveMessage(e){return e&&e.data?"string"==typeof e.data?JSON.parse(e.data):e.data:null}function invokeStaticMessage(e,r,t){var o=t&&t.signal,n=globalId++;return new Promise((function(t,a){if(o){if(o.aborted)return a(createAbortError());o.addEventListener("abort",(function(){outgoing.get(n)&&(outgoing.delete(n),self.postMessage({type:ABORT,jobId:n}),a(createAbortError()))}))}outgoing.set(n,{resolve:t,reject:a}),self.postMessage({type:INVOKE,jobId:n,methodName:e,abortable:null!=o,data:r})}))}function messageHandler(e){var r=receiveMessage(e);if(r){var t=r.jobId;switch(r.type){case CONFIGURE:var o=r.configure;if(configured)return;configured=!0,esriConfig=o.esriConfig,workerPath=esriConfig.workers.workerPath,self.dojoConfig=o.loaderConfig,esriConfig.workers.loaderUrl&&(self.importScripts(esriConfig.workers.loaderUrl),"function"==typeof require&&"function"==typeof require.config&&require.config(o.loaderConfig)),self.postMessage({type:CONFIGURED});break;case OPEN:var n;function a(e){var r=n.connect(e);self.postMessage({type:OPENED,jobId:t,data:r},[r])}"function"==typeof define&&define.amd?require([workerPath],(function(e){(n=e.default||e).loadWorker(r.modulePath).then((function(e){return e||new Promise((function(e){require([r.modulePath],e)}))})).then(a)})):"System"in self&&"function"==typeof System.import?System.import(workerPath).then((function(e){return(n=e.default).loadWorker(r.modulePath)})).then((function(e){return e||System.import(r.modulePath)})).then(a):(self.RemoteClient||importScripts(workerPath),(n=self.RemoteClient.default||self.RemoteClient).loadWorker(r.modulePath).then(a));break;case RESPONSE:if(outgoing.has(t)){var i=outgoing.get(t);outgoing.delete(t),r.error?i.reject(JSON.parse(r.error)):i.resolve(r.data)}}}}self.addEventListener("message",messageHandler),self.postMessage({type:HANDSHAKE});'],{type:"text/javascript"}))}catch(e){}const A="Failed to create Worker. Fallback to execute module in main thread";async function D(e){return o((s=>{function o(a){const i=k(a);if(i)switch(i.type){case H:!function(e){let s;if(null!=t.default){const e={...t};delete e.default,s=JSON.parse(JSON.stringify(e))}else s=JSON.parse(JSON.stringify(t));s.assetsPath=h(s.assetsPath),s.locale=m(),s.has={"csp-restrictions":r("csp-restrictions"),"esri-2d-debug":!1,"esri-2d-update-debug":r("esri-2d-update-debug"),"esri-atomics":r("esri-atomics"),"esri-secure-context":r("esri-secure-context"),"esri-shared-array-buffer":r("esri-shared-array-buffer"),"esri-tiles-debug":r("esri-tiles-debug"),"esri-workers-arraybuffer-transfer":r("esri-workers-arraybuffer-transfer"),"host-webworker":1},s.workers.loaderUrl?s.workers.loaderUrl=h(s.workers.loaderUrl):j&&(s.workers.loaderUrl=j);s.workers.workerPath?s.workers.workerPath=h(s.workers.workerPath):s.workers.workerPath="esri/core/workers/RemoteClient";const o=t.workers.loaderConfig,n=function(e){var r;const t={async:e.async,isDebug:e.isDebug,locale:e.locale,baseUrl:e.baseUrl,has:{...e.has},map:{...e.map},packages:e.packages&&e.packages.concat()||[],paths:{...e.paths}};return e.hasOwnProperty("async")||(t.async=!0),e.hasOwnProperty("isDebug")||(t.isDebug=!1),e.baseUrl||(t.baseUrl=_.baseUrl),null==(r=_.packages)||r.forEach((e=>{!function(e,r){for(const t of e)if(t.name===r.name)return;e.push(r)}(t.packages,e)})),t}({baseUrl:null==o?void 0:o.baseUrl,locale:m(),has:{"csp-restrictions":r("csp-restrictions"),"dojo-test-sniff":0,"host-webworker":1,...null==o?void 0:o.has},map:{...null==o?void 0:o.map},paths:{...null==o?void 0:o.paths},packages:(null==o?void 0:o.packages)||[]});e.postMessage({type:S,configure:{esriConfig:s,loaderConfig:n}})}(e);break;case C:e.removeEventListener("message",o),e.removeEventListener("error",n),s(e)}}function n(r){r.preventDefault(),e.removeEventListener("message",o),e.removeEventListener("error",n),L.warn("Failed to create Worker. Fallback to execute module in main thread",r),(e=new I).addEventListener("message",o),e.addEventListener("error",n)}e.addEventListener("message",o),e.addEventListener("error",n)}))}const J=s.getLogger("esri.core.workers"),{ABORT:x,INVOKE:F,OPEN:W,OPENED:G,RESPONSE:K}=b;class q{constructor(e,r){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=r,e.addEventListener("message",this._onMessage.bind(this)),e.addEventListener("error",(e=>{e.preventDefault(),J.error(e)}))}static async create(e){const t=await async function(){if(!r("esri-workers"))return D(new I);let e;if(U)try{e=new Worker(U)}catch(r){L.warn(A,event),e=new I}else L.warn(A,event),e=new I;return D(e)}();return new q(t,e)}terminate(){this.worker.terminate()}async open(e,r={}){const{signal:t}=r,s=v();return o(((r,o)=>{const a={resolve:r,reject:o,abortHandle:n(t,(()=>{this._outJobs.delete(s),this._post({type:x,jobId:s})}))};this._outJobs.set(s,a),this._post({type:W,jobId:s,modulePath:e})}))}_onMessage(e){const r=k(e);if(r)switch(r.type){case G:this._onOpenedMessage(r);break;case K:this._onResponseMessage(r);break;case x:this._onAbortMessage(r);break;case F:this._onInvokeMessage(r)}}_onAbortMessage(e){const r=this._inJobs,t=e.jobId,s=r.get(t);s&&(s.controller&&s.controller.abort(),r.delete(t))}_onInvokeMessage(e){const{methodName:r,jobId:t,data:s,abortable:o}=e,n=o?a():null,l=this._inJobs,u=p[r];let d;try{if("function"!=typeof u)throw new TypeError(`${r} is not a function`);d=u.call(null,s,{signal:n?n.signal:null})}catch(e){return void this._post({type:K,jobId:t,error:E(e)})}i(d)?(l.set(t,{controller:n,promise:d}),d.then((e=>{l.has(t)&&(l.delete(t),this._post({type:K,jobId:t},e))}),(e=>{l.has(t)&&(l.delete(t),e||(e={message:"Error encountered at method"+r}),c(e)||this._post({type:K,jobId:t,error:E(e||{message:`Error encountered at method ${r}`})}))}))):this._post({type:K,jobId:t},d)}_onOpenedMessage(e){var r;const{jobId:t,data:s}=e,o=this._outJobs.get(t);o&&(this._outJobs.delete(t),null==(r=o.abortHandle)||r.remove(),o.resolve(s))}_onResponseMessage(e){var r;const{jobId:t,error:s,data:o}=e,n=this._outJobs.get(t);n&&(this._outJobs.delete(t),null==(r=n.abortHandle)||r.remove(),s?n.reject(d.fromJSON(JSON.parse(s))):n.resolve(o))}_post(e,r,t){return y(this.worker,e,r,t)}}let T=r("esri-workers-debug")?1:r("host-browser")?navigator.hardwareConcurrency-1:0;T||(T=r("safari")&&r("mac")||r("trident")?7:2);let B=0;const V=[];function z(){re()}function $(e,r){return Q(e,{client:r})}async function Q(e,r){const t=new f;return await t.open(e,r),t}async function X(e,t={}){if("string"!=typeof e)throw new d("workers:undefined-module","modulePath is missing");let s=t.strategy||"distributed";if(r("host-webworker")&&!r("esri-workers")&&(s="local"),"local"===s){let r=await w.loadWorker(e);r||(r=await import(e)),l(t.signal);const s=t.client||r;return Q([w.connect(r)],{...t,client:s})}if(await re(),l(t.signal),"dedicated"===s){const r=B++%T;return Q([await V[r].open(e,t)],t)}if(t.maxNumWorkers&&t.maxNumWorkers>0){const r=Math.min(t.maxNumWorkers,T);if(r<T){const s=new Array(r);for(let o=0;o<r;++o){const r=B++%T;s[o]=V[r].open(e,t)}return Q(s,t)}}return Q(V.map((r=>r.open(e,t))),t)}function Y(){ee&&(Z.abort(),ee=null);for(let e=0;e<V.length;e++)V[e]&&V[e].terminate();V.length=0}let Z,ee=null;async function re(){if(ee)return ee;Z=a();const e=[];for(let r=0;r<T;r++){const t=q.create(r).then((e=>(V[r]=e,e)));e.push(t)}return ee=u(e),ee}export{z as initialize,X as open,$ as openWithPorts,Y as terminate};
