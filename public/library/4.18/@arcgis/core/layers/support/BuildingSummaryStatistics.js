/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../chunks/object.js";import"../../chunks/deprecate.js";import"../../core/lang.js";import"../../config.js";import{L as r,i as t}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import{resolve as o}from"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/ensureType.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{a as p}from"../../chunks/JSONSupport.js";import{a as l}from"../../chunks/Promise.js";import{L as n}from"../../chunks/Loadable.js";import"../../core/urlUtils.js";import"../../chunks/resourceExtension.js";import"../../kernel.js";import a from"../../request.js";const u=r.getLogger("esri.layers.support.BuildingSummaryStatistics");let m=class extends p{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};s([e({type:String})],m.prototype,"fieldName",void 0),s([e({type:String})],m.prototype,"modelName",void 0),s([e({type:String})],m.prototype,"label",void 0),s([e({type:Number})],m.prototype,"min",void 0),s([e({type:Number})],m.prototype,"max",void 0),s([e({json:{read:s=>Array.isArray(s)&&(s.every((s=>"string"==typeof s))||s.every((s=>"number"==typeof s)))?s.slice():null}})],m.prototype,"mostFrequentValues",void 0),s([e({type:[Number]})],m.prototype,"subLayerIds",void 0),m=s([i("esri.layers.support.BuildingFieldStatistics")],m);let c=class extends(n.LoadableMixin(l(p))){constructor(){super(...arguments),this.url=null}get fields(){return this.loaded||"loading"===this.loadStatus?this._get("fields"):(u.error("building summary statistics are not loaded"),null)}load(s){const r=t(s)?s.signal:null;return this.addResolvingPromise(this._fetchService(r)),o(this)}async _fetchService(s){const r=(await a(this.url,{query:{f:"json"},responseType:"json",signal:s})).data;this.read(r,{origin:"service"})}};s([e({constructOnly:!0,type:String})],c.prototype,"url",void 0),s([e({readOnly:!0,type:[m],json:{read:{source:"summary"}}})],c.prototype,"fields",null),c=s([i("esri.layers.support.BuildingSummaryStatistics")],c);var d=c;export default d;
