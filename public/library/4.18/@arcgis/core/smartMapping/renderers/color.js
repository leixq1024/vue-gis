/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../chunks/object.js";import"../../chunks/deprecate.js";import"../../core/lang.js";import"../../config.js";import{i as e}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import"../../core/accessorSupport/decorators/property.js";import"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import{all as o,reject as s}from"../../core/promiseUtils.js";import"../../chunks/Message.js";import r from"../../core/Error.js";import"../../chunks/compilerUtils.js";import"../../chunks/ensureType.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Evented.js";import"../../core/Collection.js";import"../../chunks/collectionUtils.js";import"../../chunks/JSONSupport.js";import"../../chunks/Promise.js";import"../../chunks/Loadable.js";import"../../chunks/asyncUtils.js";import"../../chunks/loadAll.js";import"../../core/urlUtils.js";import"../../core/accessorSupport/decorators/aliasOf.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/jsonMap.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../chunks/resourceExtension.js";import"../../chunks/persistableUrlUtils.js";import"../../geometry/SpatialReference.js";import"../../chunks/locale.js";import"../../chunks/number.js";import{fetchMessageBundle as i,substitute as t}from"../../intl.js";import"../../kernel.js";import"../../request.js";import"../../chunks/assets.js";import"../../geometry/Geometry.js";import"../../geometry/Point.js";import"../../chunks/Ellipsoid.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Extent.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalFolder.js";import"../../portal/PortalGroup.js";import"../../portal/PortalUser.js";import"../../portal/Portal.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../portal/PortalItem.js";import"../../Basemap.js";import"../../chunks/writeUtils.js";import"../../chunks/mathUtils2.js";import"../../chunks/colorUtils.js";import"../../Color.js";import"../../chunks/zmUtils.js";import"../../geometry/Multipoint.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../geometry.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/domains.js";import"../../chunks/arcadeOnDemand.js";import"../../layers/support/fieldUtils.js";import"../../popup/content/Content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/CustomContent.js";import"../../chunks/date.js";import"../../popup/support/FieldInfoFormat.js";import"../../popup/FieldInfo.js";import"../../popup/content/FieldsContent.js";import"../../chunks/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/MediaContent.js";import"../../popup/content/TextContent.js";import"../../popup/content.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/RelatedRecordsInfo.js";import"../../chunks/Identifiable.js";import"../../support/actions/ActionBase.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../PopupTemplate.js";import"../../symbols/Symbol.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/screenUtils.js";import"../../chunks/opacityUtils.js";import"../../chunks/materialUtils.js";import"../../symbols/edges/Edges3D.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/utils.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/patterns/StylePattern3D.js";import"../../symbols/FillSymbol3DLayer.js";import"../../chunks/colors.js";import"../../chunks/Symbol3DOutline.js";import"../../symbols/Font.js";import"../../symbols/IconSymbol3DLayer.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/Symbol3D.js";import"../../chunks/Thumbnail.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../chunks/Symbol3DVerticalOffset.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/MeshSymbol3D.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/uid.js";import"../../Graphic.js";import"../../chunks/basemapUtils.js";import"../../renderers/PointCloudRenderer.js";import"../../chunks/PointSizeSplatAlgorithm.js";import"../../chunks/LegendOptions.js";import"../../renderers/PointCloudClassBreaksRenderer.js";import a from"../../renderers/PointCloudRGBRenderer.js";import l from"../../renderers/PointCloudStretchRenderer.js";import"../../renderers/PointCloudUniqueValueRenderer.js";import n from"../../renderers/support/AuthoringInfo.js";import m from"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../tasks/support/ColorRamp.js";import"../../tasks/support/AlgorithmicColorRamp.js";import"../../tasks/support/MultipartColorRamp.js";import"../../chunks/colorRamps.js";import"../../renderers/Renderer.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../renderers/visualVariables/support/ColorStop.js";import p from"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../renderers/visualVariables/SizeVariable.js";import"../../chunks/sizeVariableUtils.js";import"../../chunks/unitUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/visualVariableUtils.js";import"../../chunks/VisualVariablesMixin.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties.js";import u from"../../renderers/ClassBreaksRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/devEnvironmentUtils.js";import"../../chunks/styleUtils.js";import"../../renderers/UniqueValueRenderer.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/MemCache.js";import"../../chunks/LRUCache.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/support/AttributeColorInfo.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/support/HeatmapColorStop.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import"../../chunks/timeUtils.js";import"../../TimeExtent.js";import"../../core/watchUtils.js";import"../../chunks/arcgisLayerUrl.js";import"../../chunks/fieldType.js";import"../../chunks/zscale.js";import"../../chunks/queryZScale.js";import"../../layers/support/Field.js";import"../../tasks/support/FeatureSet.js";import"../../chunks/DataLayerSource.js";import"../../tasks/support/AttachmentQuery.js";import"../../tasks/support/Query.js";import"../../tasks/support/StatisticDefinition.js";import"../../tasks/support/RelationshipQuery.js";import"../../chunks/ClassBreaksDefinition.js";import{c,g as d}from"../../chunks/layerUtils2.js";import"../../tasks/Task.js";import"../../chunks/OptimizedGeometry.js";import"../../chunks/featureConversionUtils.js";import"../../tasks/QueryTask.js";import"../../chunks/pbf.js";import"../../chunks/pbfQueryUtils.js";import"../../chunks/query.js";import"../../layers/support/AttachmentInfo.js";import"../../chunks/scaleUtils.js";import"../../chunks/spatialStatistics.js";import{a as y,b as h}from"../../chunks/utils5.js";import"../../chunks/quantizationUtils.js";import"../../chunks/predominanceUtils.js";import"../../chunks/heatmapUtils.js";import"../heuristics/scaleRange.js";import b from"../heuristics/sizeRange.js";import"../../chunks/numberUtils.js";import{c as f,s as j}from"../../chunks/utils7.js";import"../statistics/summaryStatistics.js";import{getAgeExpressions as v,verifyDates as g,supportedAgeUnits as w}from"../statistics/support/ageUtils.js";import"../statistics/summaryStatisticsForAge.js";import{a as k}from"../../chunks/ageUnit.js";import{g as S,a as T,o as x,b as V,f as E,u as M,c as z,v as I,i as U,d as C,e as O,h as D,j as R,k as P,l as F,m as q,n as L,p as B,q as A}from"../../chunks/utils8.js";import"../statistics/classBreaks.js";import"../../views/support/colorUtils.js";import"../../chunks/colors2.js";import"../../chunks/symbologyUtils.js";import"../../chunks/utils9.js";import{cloneScheme as Q,getSchemes as G,getSchemeById as W}from"../symbology/color.js";const H=Math.pow(2,53)-1;function $(e){const o={...e},s=o.symbolType.indexOf("3d-volumetric")>-1;delete o.symbolType,delete o.defaultSymbolEnabled,delete o.colorMixMode,delete o.edgesType;const r=o;return r.worldScale=s,r}async function J(o,s){let r=o.colorScheme,i=null,t=null;const a=await B(o.basemap,o.view);if(i=e(a.basemapId)?a.basemapId:null,t=e(a.basemapTheme)?a.basemapTheme:null,r)return{scheme:Q(r),basemapId:i,basemapTheme:t};const l=s||o.theme||"high-to-low",n=G({theme:l,basemap:i,basemapTheme:t,geometryType:o.geometryType,worldScale:o.worldScale,view:o.view});if(n)if(i=n.basemapId,t=n.basemapTheme,o.schemeId){const e=l+"/"+i+"/"+o.schemeId;r=W({id:e,geometryType:o.geometryType})}else r=n.primaryScheme;return{scheme:r,basemapId:i,basemapTheme:t}}async function N(e,o,s,r,t,a){const l=await i("esri/smartMapping/t9n/smartMapping"),n=a.layer,m=a.field,p=n.geometryType,c=a.defaultSymbolEnabled,d=Q(e.colorScheme),y=o&&o.opacity,h=[e.visualVariable.clone()];o&&o.visualVariables&&o.visualVariables.length&&h.push(...o.visualVariables.map((e=>e.clone()))),s&&s.minSize&&h.push(s.minSize);return{renderer:new u({classBreakInfos:[{minValue:-H,maxValue:H,symbol:F(p,{type:a.symbolType,color:d.noDataColor,size:q(d,p),outline:L(d,p,y),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}})}],defaultLabel:c?l.other:null,defaultSymbol:c?F(p,{type:a.symbolType,color:d.noDataColor,size:q(d,p),outline:L(d,p,y),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}}):null,field:m,normalizationType:r,normalizationField:t,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,visualVariables:h,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariable:e.visualVariable.clone(),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,colorScheme:Q(e.colorScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}async function Z(i){const t=await async function(o){if(!(o&&o.layer&&(o.field||o.valueExpression||o.sqlExpression)))throw new r("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(o.valueExpression&&!o.sqlExpression&&!o.view)throw new r("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const i={...o};if("90-10"===i.theme)throw new r("color-visual-variable:not-supported","Only 'high-to-low', 'above-and-below', 'centered-on', 'extremes', 'above', 'below' themes are supported.");const t=[0,2,1,3],a=c(i.layer,t);if(i.layer=a,!a)throw new r("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+d(t).join(", "));const l=e(i.signal)?{signal:i.signal}:null;if(await a.load(l),"mesh"!==a.geometryType&&i.worldScale&&(!i.view||"3d"!==i.view.type))return s(z("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"));const n=await y({field:i.field,normalizationField:i.normalizationField,valueExpression:i.valueExpression}),m=I(a,n,"color-visual-variable:invalid-parameters");if(m)throw m;return i}(i),{view:a,field:l,valueExpression:u,minValue:h,maxValue:b,layer:f,normalizationField:j,signal:v,statistics:g}=t,w=j?"field":void 0,[k,x]=await o([g||S({layer:f,field:l,valueExpression:u,sqlExpression:t.sqlExpression,sqlWhere:t.sqlWhere,normalizationType:w,normalizationField:j,minValue:h,maxValue:b,view:a,signal:v}),"90-10"===t.theme?T({layer:f,field:l,normalizationField:j,valueExpression:u,classificationMethod:"quantile",minValue:h,maxValue:b,view:a,numClasses:10,signal:v}):null]);return async function(e,o,s){const r=e.layer,{field:i,theme:t}=e,a=i&&"function"!=typeof i?r.getField(i):null,l=a&&"date"===a.type,u=await J({basemap:e.basemap,theme:e.theme,geometryType:r.geometryType,colorScheme:e.colorScheme,worldScale:e.worldScale,view:e.view}),c=u.scheme;if(!c)throw z("color-visual-variable:insufficient-info","Unable to find color scheme");const d=C(c.colors,5);if(d.length<5)throw z("color-visual-variable:insufficient-info","Color scheme does not have enough colors");const y=c.id.indexOf("seq-")>-1,h=R(o,s,t,l,"90-10"!==t),b=P(h,o,t,y),f=C(d,5),j=new p({field:i,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationField:e.normalizationField,stops:b.map(((e,o)=>({value:e,color:f[o]}))),legendOptions:e.legendOptions}),v=new m({type:"color",minSliderValue:null!=e.minValue?e.minValue:o.min,maxSliderValue:null!=e.maxValue?e.maxValue:o.max,theme:c.theme}),g=new n({visualVariables:[v]});return{basemapId:u.basemapId,basemapTheme:u.basemapTheme,visualVariable:j,statistics:o,defaultValuesUsed:h.defaultValuesUsed,colorScheme:Q(c),authoringInfo:g}}(t,k,null==x?void 0:x.result)}async function _(e,o){const s=await i("esri/smartMapping/t9n/smartMapping"),t=e.layer,a=e.defaultSymbolEnabled,l=t.geometryType,m=await J({basemap:e.basemap,geometryType:l,colorScheme:e.colorScheme,worldScale:e.symbolType.indexOf("3d-volumetric")>-1,view:e.view}),p=m.scheme,{result:c,outlineResult:d}=o,y=c.classBreakInfos,h=e.classificationMethod,b="standard-deviation"===h,f=e.normalizationType;if(!p)throw new r("color-class-breaks-renderer:insufficient-info","Unable to find color scheme");const v=function(e,o){const s=e.colorsForClassBreaks;let r;if(s&&s.length>0&&(s.some((e=>(e.numClasses===o&&(r=e.colors),!!r))),!r)){const e=s[s.length-1],i=o-e.numClasses;if(i>0){const o=e.colors[e.numClasses-1];r=e.colors.splice(0);for(let e=1;e<=i;e++)r.push(o)}}return r&&(r=C(r,r.length)),r}(p,y.length);if(!v||v.length!==y.length)throw new r("color-class-breaks-renderer:insufficient-info","Color scheme does not have enough colors");const g=d&&d.opacity,w=new u({classBreakInfos:y.map(((o,s)=>({minValue:o.minValue,maxValue:o.maxValue,symbol:F(l,{type:e.symbolType,color:v[s],size:q(p,l),outline:L(p,l,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}),label:o.label}))),defaultLabel:a?s.other:null,defaultSymbol:a?F(l,{type:e.symbolType,color:p.noDataColor,size:q(p,l),outline:L(p,l,g),meshInfo:{colorMixMode:e.colorMixMode,edgesType:e.edgesType}}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:f,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===f?c.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new n({type:"class-breaks-color",classificationMethod:h,standardDeviationInterval:e.standardDeviationInterval})});return b||j({classBreakInfos:w.classBreakInfos,classificationMethod:h,normalizationType:f,round:!0}),d&&d.visualVariables&&d.visualVariables.length&&(w.visualVariables=d.visualVariables.map((e=>e.clone()))),{renderer:w,colorScheme:Q(p),classBreaksResult:c,defaultValuesUsed:o.defaultValuesUsed,basemapId:m.basemapId,basemapTheme:m.basemapTheme}}async function K(s){const i=await async function(o){if(!(o&&o.layer&&(o.field||o.valueExpression||o.sqlExpression)))throw new r("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(o.valueExpression&&!o.sqlExpression&&!o.view)throw new r("color-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");const s={...o};s.symbolType=s.symbolType||"2d",s.defaultSymbolEnabled=null==s.defaultSymbolEnabled||s.defaultSymbolEnabled;const i=[0,2,1,3],t=c(s.layer,i);if(s.layer=t,!t)throw new r("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+d(i).join(", "));const a=e(s.signal)?{signal:s.signal}:null;await t.load(a);const l=t.geometryType;if(s.outlineOptimizationEnabled="polygon"===l&&s.outlineOptimizationEnabled,s.sizeOptimizationEnabled=("point"===l||"multipoint"===l||"polyline"===l)&&s.sizeOptimizationEnabled,"mesh"===l)s.symbolType="3d-volumetric",s.colorMixMode=s.colorMixMode||"replace",s.edgesType=s.edgesType||"none";else{if("3d-volumetric-uniform"===s.symbolType&&"point"!==l)throw new r("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(s.symbolType.indexOf("3d-volumetric")>-1&&(!s.view||"3d"!==s.view.type))throw new r("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const n=await y({field:s.field,normalizationField:s.normalizationField,valueExpression:s.valueExpression}),m=I(t,n,"color-continuous-renderer:invalid-parameters");if(m)throw m;return s}(s),{layer:t,view:a,signal:l}=i,[n,m,p]=await o([Z($(i)),i.outlineOptimizationEnabled?x({layer:t,view:a,signal:l}):null,i.sizeOptimizationEnabled?b({layer:t,view:a,signal:l}):null]),u=i.normalizationField;return N(n,m,p,u?"field":void 0,u,i)}async function X(o){const s=await async function(o){if(!o||!o.layer||!o.field&&!o.valueExpression)throw new r("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(o.valueExpression&&!o.view)throw new r("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");const s={...o};s.symbolType=s.symbolType||"2d",s.defaultSymbolEnabled=null==s.defaultSymbolEnabled||s.defaultSymbolEnabled,s.classificationMethod=s.classificationMethod||"equal-interval",s.normalizationType=h(s);const i=[0,2,1,3],t=c(s.layer,i);if(s.layer=t,!t)throw new r("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+d(i).join(", "));if(!(null!=s.minValue&&null!=s.maxValue||null==s.minValue&&null==s.maxValue))throw new r("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const a=e(s.signal)?{signal:s.signal}:null;await t.load(a);const l=t.geometryType;if(s.outlineOptimizationEnabled="polygon"===l&&s.outlineOptimizationEnabled,"mesh"===l)s.symbolType="3d-volumetric",s.colorMixMode=s.colorMixMode||"replace",s.edgesType=s.edgesType||"none";else{if("3d-volumetric-uniform"===s.symbolType&&"point"!==l)throw new r("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(s.symbolType.indexOf("3d-volumetric")>-1&&(!s.view||"3d"!==s.view.type))throw new r("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const n=await y({field:s.field,normalizationField:s.normalizationField}),m=I(t,n,"color-class-breaks-renderer:invalid-parameters");if(m)throw m;return s}(o);return _(s,await T(function(e){const o={...e};delete o.basemap,delete o.colorScheme,delete o.legendOptions,delete o.symbolType,delete o.defaultSymbolEnabled,delete o.colorMixMode,delete o.edgesType;const s=o;return s.analyzeData=!(null!=o.minValue&&null!=o.maxValue),s}(s),s.outlineOptimizationEnabled))}function Y(o){return function(o){if(!o||!o.layer)return s(z("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));const r={...o},i=[4],t=c(r.layer,i);if(r.layer=t,r.density=r.density||25,r.size=r.size||"100%",!U(r.size))return s(z("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!t)return s(z("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+d(i).join(", ")));const a=e(r.signal)?{signal:r.signal}:null;return t.load(a).then((()=>r))}(o).then((e=>({renderer:new a({field:"RGB",pointsPerInch:e.density,pointSizeAlgorithm:V(e.size)})})))}async function ee(o){const r=await function(o){if(!(o&&o.layer&&o.field))return s(z("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));const r=o.field.toLowerCase();if("intensity"!==r&&"elevation"!==r)return s(z("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));const i={...o},t=[4],a=c(i.layer,t);if(i.layer=a,i.density=i.density||25,i.size=i.size||"100%",!U(i.size))return s(z("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"));if(!a)return s(z("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+d(t).join(", ")));const l=e(i.signal)?{signal:i.signal}:null;return a.load(l).then((()=>i))}(o),i=r.statistics?r.statistics:await S({layer:r.layer,field:r.field,signal:r.signal}),t=await async function(e,o){const s=o.layer,r=await J({basemap:o.basemap,colorScheme:o.colorScheme,geometryType:s.geometryType,schemeId:"elevation"===o.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),i=r.scheme;if(!i)throw z("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme");const t=C(i.colors,5);if(t.length<5)throw z("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors");const a=O(e,!1,!0),l=a?A(a[0],a[1],5):D(e);return{stops:f({values:l,isDate:!1,dateFormatOptions:null,colors:t,labelIndexes:[0,2,4]}),basemapId:r.basemapId,basemapTheme:r.basemapTheme,statistics:e,defaultValuesUsed:!!a,colorScheme:Q(i)}}(i,r);return{renderer:new l({field:r.field,pointsPerInch:r.density,pointSizeAlgorithm:V(r.size),stops:t.stops}),basemapId:t.basemapId,basemapTheme:t.basemapTheme,statistics:t.statistics,defaultValuesUsed:t.defaultValuesUsed,colorScheme:t.colorScheme}}async function oe(s){const a=await i("esri/smartMapping/t9n/smartMapping"),l=await async function(o){if(!(o&&o.layer&&o.view&&o.startTime&&o.endTime))throw new r("color-age-renderer:missing-parameters","'layer', 'view', startTime', 'endTime' parameters are required");const s={...o};s.symbolType=s.symbolType||"2d",s.defaultSymbolEnabled=null==s.defaultSymbolEnabled||s.defaultSymbolEnabled;const i=[0,2,1,3],t=c(s.layer,i);if(s.layer=t,!t)throw new r("color-age-renderer:invalid-parameters","'layer' must be one of these types: "+d(i).join(", "));const a=e(s.signal)?{signal:s.signal}:null;await t.load(a);const l=t.geometryType;if(s.outlineOptimizationEnabled="polygon"===l&&s.outlineOptimizationEnabled,s.sizeOptimizationEnabled=("point"===l||"multipoint"===l||"polyline"===l)&&s.sizeOptimizationEnabled,"mesh"===l)s.symbolType="3d-volumetric",s.colorMixMode=s.colorMixMode||"replace",s.edgesType=s.edgesType||"none";else if("3d-volumetric-uniform"===s.symbolType&&"point"!==l)throw new r("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(s.symbolType.indexOf("3d-volumetric")>-1&&(!s.view||"3d"!==s.view.type))throw new r("color-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");const n=g(t,s.startTime,s.endTime,"color-age-renderer:invalid-parameters");if(n)throw n;if(s.unit&&-1===w.indexOf(s.unit))throw new r("color-age-renderer:invalid-unit",`Supported units are: ${w.join(", ")}`);return s}(s),{defaultSymbolEnabled:n,view:m,startTime:p,endTime:u,symbolType:y,colorMixMode:h,edgesType:f,minValue:j,maxValue:S,signal:T}=l,V=l.layer,[z,I,U]=await o([l.unit?{unit:l.unit,statistics:null}:k({view:m,layer:V,startTime:p,endTime:u,minValue:j,maxValue:S,signal:T}),l.outlineOptimizationEnabled?x({layer:V,view:m,signal:T}):null,l.sizeOptimizationEnabled?b({layer:V,view:m,signal:T}):null]),{unit:C,statistics:O}=z,D=v({layer:V,startTime:p,endTime:u,unit:C}).valueExpression,R=t(a[`ageInfo_${C}`],{unit:C,startTime:E(p,C,V),endTime:E(u,C,V)}),P=await Z($({layer:V,basemap:l.basemap,valueExpression:D,symbolType:y,statistics:O,legendOptions:{title:R},colorScheme:l.colorScheme,theme:l.theme,view:m,minValue:l.minValue,maxValue:l.maxValue,signal:T})),F={layer:V,valueExpression:D,defaultSymbolEnabled:n,symbolType:y,colorMixMode:h,edgesType:f},q=await N(P,I,U,null,null,F);return q.renderer.authoringInfo.visualVariables.forEach((e=>M(e,p,u,C))),{...q,unit:C}}export{oe as createAgeRenderer,X as createClassBreaksRenderer,K as createContinuousRenderer,ee as createPCContinuousRenderer,Y as createPCTrueColorRenderer,Z as createVisualVariable};
