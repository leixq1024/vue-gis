/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../chunks/object.js";import"../../chunks/deprecate.js";import"../../core/lang.js";import"../../config.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/ensureType.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import{a as i}from"../../chunks/JSONSupport.js";import"../../core/urlUtils.js";import"../../core/accessorSupport/decorators/cast.js";import{J as s}from"../../chunks/jsonMap.js";import{r as o}from"../../chunks/reader.js";import{w as n}from"../../chunks/writer.js";import"../../chunks/resourceExtension.js";import p from"../../geometry/SpatialReference.js";import"../../geometry/Geometry.js";import"../../geometry/Point.js";import"../../chunks/Ellipsoid.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Extent.js";import"../../chunks/zmUtils.js";import"../../geometry/Multipoint.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../geometry.js";const a=new s({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),l=new s({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),u=new s({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"}),m=new s({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),c=new s({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriYards:"yards"});let d=class extends i{constructor(e){super(e),this.accumulateAttributes=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.doNotLocateOnRestrictedElements=!0,this.findBestSequence=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}readStartTime(e,t){return null!=t.startTime?new Date(t.startTime):null}writeStartTime(e,t){t.startTime=e?e.getTime():null}};e([t({type:[String],json:{write:!0}})],d.prototype,"accumulateAttributes",void 0),e([t({json:{write:!0}})],d.prototype,"attributeParameterValues",void 0),e([t({type:String,json:{write:!0}})],d.prototype,"directionsLanguage",void 0),e([t({type:l.apiValues,json:{read:l.read,write:l.write}})],d.prototype,"directionsLengthUnits",void 0),e([t({type:m.apiValues,json:{read:m.read,write:m.write}})],d.prototype,"directionsOutputType",void 0),e([t({type:String,json:{write:!0}})],d.prototype,"directionsStyleName",void 0),e([t({type:String,json:{write:!0}})],d.prototype,"directionsTimeAttribute",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"doNotLocateOnRestrictedElements",void 0),e([t({json:{write:!0}})],d.prototype,"findBestSequence",void 0),e([t({json:{write:!0}})],d.prototype,"ignoreInvalidLocations",void 0),e([t({type:String,json:{read:{source:"impedanceAttributeName"},write:{target:"impedanceAttributeName"}}})],d.prototype,"impedanceAttribute",void 0),e([t({type:Number,json:{write:!0}})],d.prototype,"outputGeometryPrecision",void 0),e([t({type:c.apiValues,json:{read:c.read,write:c.write}})],d.prototype,"outputGeometryPrecisionUnits",void 0),e([t({type:a.apiValues,json:{read:a.read,write:a.write}})],d.prototype,"outputLines",void 0),e([t({type:p,json:{write:!0}})],d.prototype,"outSpatialReference",void 0),e([t({json:{write:!0}})],d.prototype,"pointBarriers",void 0),e([t({json:{write:!0}})],d.prototype,"polygonBarriers",void 0),e([t({json:{write:!0}})],d.prototype,"polylineBarriers",void 0),e([t({json:{write:!0}})],d.prototype,"preserveFirstStop",void 0),e([t({json:{write:!0}})],d.prototype,"preserveLastStop",void 0),e([t({type:[String],json:{write:!0}})],d.prototype,"restrictionAttributes",void 0),e([t({type:u.apiValues,json:{read:u.read,write:u.write}})],d.prototype,"restrictUTurns",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"returnBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"returnDirections",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"returnPolygonBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"returnPolylineBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"returnRoutes",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"returnStops",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"returnZ",void 0),e([t({type:Date,json:{type:Number,write:!0}})],d.prototype,"startTime",void 0),e([o("startTime")],d.prototype,"readStartTime",null),e([n("startTime")],d.prototype,"writeStartTime",null),e([t({type:Boolean,json:{write:!0}})],d.prototype,"startTimeIsUTC",void 0),e([t({json:{write:!0}})],d.prototype,"stops",void 0),e([t({json:{write:!0}})],d.prototype,"travelMode",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"useHierarchy",void 0),e([t({type:Boolean,json:{write:!0}})],d.prototype,"useTimeWindows",void 0),d=e([r("esri.tasks.support.RouteParameters")],d);var y=d;export default y;
