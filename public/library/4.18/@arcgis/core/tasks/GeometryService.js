/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../chunks/ArrayPool.js";import"../chunks/object.js";import"../chunks/deprecate.js";import"../core/lang.js";import"../config.js";import"../chunks/Logger.js";import"../chunks/string.js";import"../chunks/metadata.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"../chunks/PropertyOrigin.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../chunks/Message.js";import"../core/Error.js";import"../chunks/ensureType.js";import{subclass as t}from"../core/accessorSupport/decorators/subclass.js";import"../chunks/JSONSupport.js";import{urlToObject as s}from"../core/urlUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/jsonMap.js";import"../chunks/reader.js";import"../chunks/writer.js";import"../chunks/resourceExtension.js";import"../geometry/SpatialReference.js";import"../kernel.js";import n from"../request.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../chunks/Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"../chunks/zmUtils.js";import"../geometry/Multipoint.js";import o from"../geometry/Polygon.js";import"../chunks/extentUtils.js";import i from"../geometry/Polyline.js";import"../chunks/typeUtils.js";import{fromJSON as a,getJsonType as N}from"../geometry/support/jsonUtils.js";import"../geometry.js";import"./support/ProjectParameters.js";import{p as u,a as c}from"../chunks/utils4.js";import p from"./Task.js";import{e as I,c as m,g as _,l as T,o as f,r as y,d as l,t as S,p as g}from"../chunks/trimExtend.js";import U from"./support/GeneralizeParameters.js";import E from"./support/LengthsParameters.js";import O from"./support/OffsetParameters.js";import R from"./support/RelationParameters.js";import h from"./support/TrimExtendParameters.js";let A=class extends p{constructor(e){super(e),this.url=null}areasAndLengths(e,r){return async function(e,r,t){const s=u(e),o={...s.query,f:"json",...r.toJSON()},i=c(o,t);return n(s.path+"/areasAndLengths",i).then((e=>e.data))}(this.url,e,r)}autoComplete(e,r,t){return async function(e,r,t,s){const i=r[0].spatialReference,a=u(e),N={...a.query,f:"json",sr:JSON.stringify(i.toJSON()),polygons:JSON.stringify(I(r).geometries),polylines:JSON.stringify(I(t).geometries)},p=c(N,s);return n(a.path+"/autoComplete",p).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new o({spatialReference:i,rings:e})))))}(this.url,e,r,t)}buffer(e,r){return async function(e,r,t){const s=u(e),i={...s.query,f:"json",...r.toJSON()},a=r.outSpatialReference||r.geometries[0].spatialReference,N=c(i,t);return n(s.path+"/buffer",N).then((e=>(e.data.geometries||[]).map((({rings:e})=>new o({spatialReference:a,rings:e})))))}(this.url,e,r)}convexHull(e,r){return async function(e,r,t){const s=r[0].spatialReference,o=u(e),i={...o.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(I(r))},N=c(i,t);return n(o.path+"/convexHull",N).then((({data:e})=>a(e.geometry).set({spatialReference:s})))}(this.url,e,r)}cut(e,r,t){return async function(e,r,t,s){const o=u(e),i=r[0].spatialReference,c={...s,query:{...o.query,f:"json",sr:JSON.stringify(i),target:JSON.stringify({geometryType:N(r[0]),geometries:r}),cutter:JSON.stringify(t)}},p=await n(o.path+"/cut",c),{cutIndexes:I,geometries:m=[]}=p.data;return{cutIndexes:I,geometries:m.map((e=>{const r=a(e);return r.spatialReference=i,r}))}}(this.url,e,r,t)}densify(e,r){return async function(e,r,t){const s=r.geometries[0].spatialReference,o=u(e),i={...o.query,f:"json",...r.toJSON()},N=c(i,t);return n(o.path+"/densify",N).then((({data:e})=>(e.geometries||[]).map((e=>a(e).set({spatialReference:s})))))}(this.url,e,r)}difference(e,r,t){return async function(e,r,t,s){const o=r[0].spatialReference,i=u(e);let c={query:{...i.query,f:"json",sr:JSON.stringify(o.toJSON()),geometries:JSON.stringify(I(r)),geometry:JSON.stringify({geometryType:N(t),geometry:t.toJSON()})}};return s&&(c={...s,...c}),n(i.path+"/difference",c).then((({data:e})=>(e.geometries||[]).map((e=>a(e).set({spatialReference:o})))))}(this.url,e,r,t)}distance(e,r){return async function(e,r,t){const s=u(e),o={...s.query,f:"json",...r.toJSON()},i=c(o,t);return n(s.path+"/distance",i).then((({data:e})=>e&&e.distance))}(this.url,e,r)}fromGeoCoordinateString(e,r){return async function(e,r,t){const s={};null!=r.sr&&"object"==typeof r.sr?s.sr=r.sr.wkid||JSON.stringify(r.sr):s.sr=r.sr,s.strings=JSON.stringify(r.strings);const o=r.conversionType||"mgrs";s.conversionType=m.toJSON(o),s.conversionMode=r.conversionMode;const i=u(e),a={...i.query,f:"json",...s},N=c(a,t);return n(i.path+"/fromGeoCoordinateString",N).then((({data:e})=>e.coordinates))}(this.url,e,r)}generalize(e,r){return async function(e,r,t){const s=(r=U.from(r)).toJSON(),o=_(r),i=u(e),N={...i.query,f:"json",...o},p=s.geometries[0].spatialReference,I=c(N,t);return n(i.path+"/generalize",I).then((({data:e})=>(e.geometries||[]).map((e=>a(e).set({spatialReference:p})))))}(this.url,e,r)}intersect(e,r,t){return async function(e,r,t,s){const o=r[0].spatialReference,i=u(e),p={...i.query,f:"json",sr:JSON.stringify(o.toJSON()),geometries:JSON.stringify(I(r)),geometry:JSON.stringify({geometryType:N(t),geometry:t.toJSON()})},m=c(p,s);return n(i.path+"/intersect",m).then((({data:e})=>(e.geometries||[]).map((e=>a(e).set({spatialReference:o})))))}(this.url,e,r,t)}labelPoints(e,r){return function(e,r,t){const s=r.map((e=>e.toJSON())),o=r[0].spatialReference,i=u(e),N={...i.query,f:"json",sr:o.wkid?o.wkid:JSON.stringify(o.toJSON()),polygons:JSON.stringify(s)},p=c(N,t);return n(i.path+"/labelPoints",p).then((({data:e})=>(e.labelPoints||[]).map((e=>a(e).set({spatialReference:o})))))}(this.url,e,r)}lengths(e,r){return async function(e,r,t){r=E.from(r);const s=T(r),o=u(e),i={...o.query,f:"json",...s},a=c(i,t);return n(o.path+"/lengths",a).then((({data:e})=>e))}(this.url,e,r)}offset(e,r){return async function(e,r,t){r=O.from(r);const s=f(r),o=u(e),i={...o.query,f:"json",...s},N=r.geometries[0].spatialReference,p=c(i,t);return n(o.path+"/offset",p).then((({data:e})=>(e.geometries||[]).map((e=>a(e).set({spatialReference:N})))))}(this.url,e,r)}project(e,r){return g(this.url,e,r)}relation(e,r){return async function(e,r,t){r=R.from(r);const s=y(r),o=u(e),i={...o.query,f:"json",...s},a=c(i,t);return n(o.path+"/relation",a).then((({data:e})=>e.relations))}(this.url,e,r)}reshape(e,r,t){return async function(e,r,t,s){const o=r.spatialReference,i=u(e),p={...i.query,f:"json",sr:JSON.stringify(o.toJSON()),target:JSON.stringify({geometryType:N(r),geometry:r.toJSON()}),reshaper:JSON.stringify(t.toJSON())},I=c(p,s);return n(i.path+"/reshape",I).then((({data:e})=>a(e.geometry).set({spatialReference:o})))}(this.url,e,r,t)}simplify(e,r){return async function(e,r,t){const o="string"==typeof e?s(e):e,i=r[0].spatialReference,a=N(r[0]),u={...t,query:{...o.query,f:"json",sr:i.wkid?i.wkid:JSON.stringify(i),geometries:JSON.stringify(I(r))}},{data:c}=await n(o.path+"/simplify",u);return l(c.geometries,a,i)}(this.url,e,r)}toGeoCoordinateString(e,r){return async function(e,r,t){const s={};null!=r.sr&&"object"==typeof r.sr?s.sr=r.sr.wkid||JSON.stringify(r.sr):s.sr=r.sr,s.coordinates=JSON.stringify(r.coordinates);const o=r.conversionType||"mgrs";s.conversionType=m.toJSON(o),s.conversionMode=r.conversionMode,s.numOfDigits=r.numOfDigits,s.rounding=r.rounding,s.addSpaces=r.addSpaces;const i=u(e),a={...i.query,f:"json",...s},N=c(a,t);return n(i.path+"/toGeoCoordinateString",N).then((({data:e})=>e.strings))}(this.url,e,r)}trimExtend(e,r){return async function(e,r,t){r=h.from(r);const s=S(r),o=u(e),a={...o.query,f:"json",...s},N=r.sr,p=c(a,t);return n(o.path+"/trimExtend",p).then((({data:e})=>(e.geometries||[]).map((({paths:e})=>new i({spatialReference:N,paths:e})))))}(this.url,e,r)}union(e,r){return async function(e,r,t){const s=r[0].spatialReference,o=u(e),i={...o.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(I(r))},N=c(i,t);return n(o.path+"/union",N).then((({data:e})=>a(e.geometry).set({spatialReference:s})))}(this.url,e,r)}};A.UNIT_METER=9001,A.UNIT_GERMAN_METER=9031,A.UNIT_FOOT=9002,A.UNIT_SURVEY_FOOT=9003,A.UNIT_CLARKE_FOOT=9005,A.UNIT_FATHOM=9014,A.UNIT_NAUTICAL_MILE=9030,A.UNIT_SURVEY_CHAIN=9033,A.UNIT_SURVEY_LINK=9034,A.UNIT_SURVEY_MILE=9035,A.UNIT_KILOMETER=9036,A.UNIT_CLARKE_YARD=9037,A.UNIT_CLARKE_CHAIN=9038,A.UNIT_CLARKE_LINK=9039,A.UNIT_SEARS_YARD=9040,A.UNIT_SEARS_FOOT=9041,A.UNIT_SEARS_CHAIN=9042,A.UNIT_SEARS_LINK=9043,A.UNIT_BENOIT_1895A_YARD=9050,A.UNIT_BENOIT_1895A_FOOT=9051,A.UNIT_BENOIT_1895A_CHAIN=9052,A.UNIT_BENOIT_1895A_LINK=9053,A.UNIT_BENOIT_1895B_YARD=9060,A.UNIT_BENOIT_1895B_FOOT=9061,A.UNIT_BENOIT_1895B_CHAIN=9062,A.UNIT_BENOIT_1895B_LINK=9063,A.UNIT_INDIAN_FOOT=9080,A.UNIT_INDIAN_1937_FOOT=9081,A.UNIT_INDIAN_1962_FOOT=9082,A.UNIT_INDIAN_1975_FOOT=9083,A.UNIT_INDIAN_YARD=9084,A.UNIT_INDIAN_1937_YARD=9085,A.UNIT_INDIAN_1962_YARD=9086,A.UNIT_INDIAN_1975_YARD=9087,A.UNIT_FOOT_1865=9070,A.UNIT_RADIAN=9101,A.UNIT_DEGREE=9102,A.UNIT_ARCMINUTE=9103,A.UNIT_ARCSECOND=9104,A.UNIT_GRAD=9105,A.UNIT_GON=9106,A.UNIT_MICRORADIAN=9109,A.UNIT_ARCMINUTE_CENTESIMAL=9112,A.UNIT_ARCSECOND_CENTESIMAL=9113,A.UNIT_MIL6400=9114,A.UNIT_BRITISH_1936_FOOT=9095,A.UNIT_GOLDCOAST_FOOT=9094,A.UNIT_INTERNATIONAL_CHAIN=109003,A.UNIT_INTERNATIONAL_LINK=109004,A.UNIT_INTERNATIONAL_YARD=109001,A.UNIT_STATUTE_MILE=9093,A.UNIT_SURVEY_YARD=109002,A.UNIT_50KILOMETER_LENGTH=109030,A.UNIT_150KILOMETER_LENGTH=109031,A.UNIT_DECIMETER=109005,A.UNIT_CENTIMETER=109006,A.UNIT_MILLIMETER=109007,A.UNIT_INTERNATIONAL_INCH=109008,A.UNIT_US_SURVEY_INCH=109009,A.UNIT_INTERNATIONAL_ROD=109010,A.UNIT_US_SURVEY_ROD=109011,A.UNIT_US_NAUTICAL_MILE=109012,A.UNIT_UK_NAUTICAL_MILE=109013,A.UNIT_SQUARE_INCHES="esriSquareInches",A.UNIT_SQUARE_FEET="esriSquareFeet",A.UNIT_SQUARE_YARDS="esriSquareYards",A.UNIT_ACRES="esriAcres",A.UNIT_SQUARE_MILES="esriSquareMiles",A.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",A.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",A.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",A.UNIT_SQUARE_METERS="esriSquareMeters",A.UNIT_ARES="esriAres",A.UNIT_HECTARES="esriHectares",A.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",e([r()],A.prototype,"url",void 0),A=e([t("esri.tasks.GeometryService")],A);var j=A;export default j;
