/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../chunks/object.js";import"../../chunks/deprecate.js";import"../../core/lang.js";import"../../config.js";import{i as e}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/ensureType.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Evented.js";import"../../core/Collection.js";import"../../chunks/collectionUtils.js";import"../../chunks/JSONSupport.js";import"../../core/urlUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/enumeration.js";import"../../chunks/resourceExtension.js";import"../../chunks/mathUtils2.js";import"../../chunks/colorUtils.js";import"../../Color.js";import"../../chunks/screenUtils.js";import"../../chunks/opacityUtils.js";import"../../chunks/materialUtils.js";import"../../symbols/edges/Edges3D.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/utils.js";import"../../core/Handles.js";import"../../chunks/BuildingFilterBlock.js";import{B as r,e as i,h as l,i as a}from"../../chunks/filterUtils.js";let n=class extends r{constructor(){super(...arguments),this._createdPhaseFieldName=null,this._demolishedPhaseFieldName=null,this._parseValueFromFilter=s=>{const e=this._createdPhaseFieldName,t=new RegExp(`${e}\\s*<=\\s*(\\d+)\\s*OR\\s*${e}\\s*IS\\s*NULL`,"gi"),o=this._demolishedPhaseFieldName,r=new RegExp(`${o}\\s*>\\s*(\\d+)\\s*OR\\s*${o}\\s*IS\\s*NULL`,"gi");for(const{filterExpression:e}of s.filterBlocks.items){var i;const s=null!=(i=t.exec(e))?i:r.exec(e);if(s)return parseInt(s[1],10)}return null}}get filterExpressions(){if(!this.enabled)return{solid:null,xRay:null};const s=[],e=this._createdPhaseFieldName;e&&s.push(`(${e} <= ${this.value} OR ${e} IS NULL)`);const t=this._demolishedPhaseFieldName;t&&s.push(`(${t} > ${this.value} OR ${t} IS NULL)`);const o=s.join(" AND ");return{solid:o,xRay:o}}get _lastValue(){const s=this.allowedValues;return s.length>0?s[s.length-1]:0}_setup(){const s=[];this.layers.forEach((t=>{const o=i(t,"createdphase");e(o)&&(this._createdPhaseFieldName=o.fieldName,s.push(o));const r=i(t,"demolishedphase");e(r)&&(this._demolishedPhaseFieldName=r.fieldName,s.push(r))})),this._domainInfo=l(s);const t=a(this.layers,this._parseValueFromFilter);this.allowedValues.length>0?this.select(e(t)?t:this._lastValue):this.clear()}};s([t({readOnly:!0,dependsOn:["enabled","value","_createdPhaseFieldName","_demolishedPhaseFieldName"]})],n.prototype,"filterExpressions",null),s([t()],n.prototype,"_createdPhaseFieldName",void 0),s([t()],n.prototype,"_demolishedPhaseFieldName",void 0),s([t({readOnly:!0,dependsOn:["allowedValues.length"]})],n.prototype,"_lastValue",null),n=s([o("esri.widgets.BuildingExplorer.BuildingPhase")],n);var c=n;export default c;
