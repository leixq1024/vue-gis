/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../chunks/object.js";import"../../chunks/deprecate.js";import"../../core/lang.js";import"../../config.js";import{i as t,b as s,u as i,L as r}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import o from"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import{ignoreAbortErrors as a}from"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/compilerUtils.js";import"../../chunks/ensureType.js";import{subclass as h}from"../../core/accessorSupport/decorators/subclass.js";import{E as l}from"../../chunks/Evented.js";import m from"../../core/Collection.js";import"../../chunks/collectionUtils.js";import"../../chunks/JSONSupport.js";import"../../chunks/Promise.js";import"../../chunks/Loadable.js";import"../../core/urlUtils.js";import{aliasOf as p}from"../../core/accessorSupport/decorators/aliasOf.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/jsonMap.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../chunks/resourceExtension.js";import"../../chunks/persistableUrlUtils.js";import d from"../../geometry/SpatialReference.js";import{o as c}from"../../chunks/locale.js";import"../../chunks/number.js";import{fetchMessageBundle as u}from"../../intl.js";import"../../kernel.js";import"../../request.js";import"../../chunks/assets.js";import"../../geometry/Geometry.js";import"../../geometry/Point.js";import"../../chunks/Ellipsoid.js";import"../../geometry/support/webMercatorUtils.js";import{s as g}from"../../geometry/Extent.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalFolder.js";import"../../portal/PortalGroup.js";import"../../portal/PortalUser.js";import"../../portal/Portal.js";import{d as _,p as f}from"../../chunks/mathUtils2.js";import{c as y}from"../../chunks/vec3f64.js";import"../../chunks/common.js";import{g as L,b as v,c as j,f as b,a as w,s as S,h as P,d as k,k as C,e as M,n as D,o as O}from"../../chunks/vec3.js";import{s as x,p as A,k as V,t as R}from"../../chunks/mathUtils.js";import"../../chunks/colorUtils.js";import"../../Color.js";import"../../chunks/zmUtils.js";import"../../geometry/Multipoint.js";import I from"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../geometry.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/domains.js";import"../../chunks/arcadeOnDemand.js";import"../../layers/support/fieldUtils.js";import"../../popup/content/Content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/CustomContent.js";import"../../chunks/date.js";import"../../popup/support/FieldInfoFormat.js";import"../../popup/FieldInfo.js";import"../../popup/content/FieldsContent.js";import"../../chunks/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/MediaContent.js";import"../../popup/content/TextContent.js";import"../../popup/content.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/RelatedRecordsInfo.js";import"../../chunks/Identifiable.js";import"../../support/actions/ActionBase.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../PopupTemplate.js";import"../../symbols/Symbol.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol3DLayer.js";import{s as U}from"../../chunks/screenUtils.js";import"../../chunks/opacityUtils.js";import"../../chunks/materialUtils.js";import"../../symbols/edges/Edges3D.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/utils.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/patterns/StylePattern3D.js";import"../../symbols/FillSymbol3DLayer.js";import"../../chunks/colors.js";import"../../chunks/Symbol3DOutline.js";import"../../symbols/Font.js";import"../../symbols/IconSymbol3DLayer.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/Symbol3D.js";import"../../chunks/Thumbnail.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../chunks/Symbol3DVerticalOffset.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/MeshSymbol3D.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/uid.js";import"../../Graphic.js";import T from"../../core/Handles.js";import"../../layers/Layer.js";import{f as E,e as G,c as z,q as F,o as q,m as W,p as H,S as B,W as Q,t as N}from"../../chunks/unitUtils.js";import"../../chunks/lengthUtils.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/timeUtils.js";import"../../TimeExtent.js";import{whenTrue as Z,init as K}from"../../core/watchUtils.js";import"../../chunks/fieldType.js";import{i as $,t as J}from"../../chunks/mat4.js";import"../../chunks/pe.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../geometry/support/GeographicTransformation.js";import{projectVectorToVector as X,canProjectWithoutEngine as Y,projectPointToVector as ee,projectPointToWGS84ComparableLonLat as te,projectVectorToWGS84ComparableLonLat as se,canProjectToWGS84ComparableLonLat as ie,projectDirection as re}from"../../geometry/projection.js";import"../../chunks/unitConversionUtils.js";import"../../core/HandleOwner.js";import"../../chunks/_commonjsHelpers.js";import{inverseGeodeticSolver as ne}from"../../geometry/support/geodesicUtils.js";import"../../chunks/geometryEngineBase.js";import"../../chunks/hydrated.js";import{geodesicArea as oe}from"../../geometry/geometryEngine.js";import{c as ae}from"../../chunks/vec4f64.js";import{e as he}from"../../chunks/earcut.js";import{c as le}from"../../chunks/quatf64.js";import"../../chunks/mat3.js";import"../../chunks/BufferView.js";import{s as me,d as pe}from"../../chunks/vec2.js";import"../../chunks/vec4.js";import"../../chunks/quat.js";import"../../chunks/domUtils.js";import"../../chunks/widgetUtils.js";import"../../chunks/projector.js";import{T as de,L as ce,m as ue,c as ge,p as _e,r as fe,a as ye,b as Le,d as ve,Q as je,U as be,f as we}from"../../chunks/UnitNormalizer.js";import"../../chunks/accessibleHandler.js";import"../../chunks/messageBundle.js";import"../../chunks/renderable.js";import"../../chunks/vmEvent.js";import"../../chunks/index.js";import"../support/widget.js";import"../Widget.js";import"../../chunks/zscale.js";import"../../chunks/queryZScale.js";import"../../layers/support/Field.js";import"../../tasks/support/FeatureSet.js";import"../../chunks/DataLayerSource.js";import"../../tasks/support/AttachmentQuery.js";import"../../tasks/support/Query.js";import"../../tasks/support/StatisticDefinition.js";import"../../tasks/support/RelationshipQuery.js";import"../../tasks/Task.js";import"../../chunks/OptimizedGeometry.js";import"../../chunks/featureConversionUtils.js";import"../../tasks/QueryTask.js";import"../../chunks/pbf.js";import"../../chunks/pbfQueryUtils.js";import"../../chunks/query.js";import"../../layers/support/AttachmentInfo.js";import"../../chunks/aaBoundingBox.js";import"../../chunks/Queue.js";import"../../chunks/InputManager.js";import"../../chunks/interactiveToolUtils.js";import"../../chunks/throttle.js";import"../Attachments.js";import"../Attachments/AttachmentsViewModel.js";import"../Feature/FeatureViewModel.js";import"../Feature.js";import"../../chunks/AnchorElementViewModel.js";import"../Spinner/SpinnerViewModel.js";import"../Popup.js";import"../../chunks/layerViewUtils.js";import"../../chunks/actions.js";import"../../chunks/GoTo.js";import"../Popup/PopupViewModel.js";import{c as Se}from"../../chunks/screenUtils2.js";import"../../chunks/quantizationUtils.js";import"../../chunks/dehydratedFeatures.js";import"../../chunks/ElevationProvider.js";import{c as Pe}from"../../chunks/vec2f64.js";import{S as ke,g as Ce,C as Me,p as De,a as Oe,b as xe,D as Ae,V as Ve,i as Re,j as Ie,k as Ue,R as Te,M as Ee,r as Ge,G as ze,t as Fe}from"../../chunks/PiUtils.glsl.js";import{P as qe}from"../../chunks/Program.js";import{s as We,m as He,a as Be,d as Qe}from"../../chunks/isWebGL2Context.js";import"../../chunks/glUtil.js";import"../../chunks/InterleavedLayout.js";import"../../chunks/mat4f32.js";import"../../chunks/vec3f32.js";import{c as Ne}from"../../chunks/geometryUtils.js";import{D as Ze,e as Ke,G as $e,L as Je,R as Xe,o as Ye}from"../../chunks/ColorMaterial.js";import"../../chunks/Util.js";import{G as et,a as tt}from"../../chunks/Geometry.js";import"../../chunks/VertexArrayObject.js";import{O as st}from"../../chunks/Object3D.js";import"../../chunks/intersectorUtils.js";import{I as it}from"../../chunks/Intersector.js";import"../../chunks/Camera.js";import"../../chunks/RenderingContext.js";import"../../chunks/CameraSpace.glsl.js";import{a as rt}from"../../chunks/lineStippleUtils.js";import"../../chunks/elevationInfoUtils.js";import{M as nt,c as ot,I as at}from"../../chunks/InteractiveToolBase.js";import{L as ht}from"../../chunks/LaserLineRenderer.js";import{d as lt}from"../../chunks/commonProperties3.js";import{I as mt}from"../../chunks/InteractiveToolViewModel.js";import{s as pt,h as dt}from"../../chunks/dragEventPipeline3D.js";import{c as ct}from"../../chunks/manipulatorUtils.js";class ut{constructor(e){this._textItem=new de({visible:!1}),this._calloutItem=new ce({visible:!1,width:2}),this._visible=!1,this._calloutVisible=!0,e&&(this.fontSize=e)}get textItem(){return this._textItem}get calloutItem(){return this._calloutItem}set text(e){this._textItem.text=e}get text(){return this._textItem.text}set fontSize(e){this._textItem.fontSize=e}get fontSize(){return this._textItem.fontSize}set visible(e){this._visible=e,this._updateVisibility()}get visible(){return this._visible}addToView(e){e.overlay.items.addMany([this._textItem,this._calloutItem])}removeFromView(e){e.overlay&&!e.overlay.destroyed&&e.overlay.items.removeMany([this._textItem,this._calloutItem])}updatePosition(e,t){if(t){const s=t[0]-e[0],i=t[1]-e[1];this._textItem.position=[t[0],t[1]],this._textItem.anchor=Math.abs(s)>Math.abs(i)?s>0?"left":"right":i>0?"top":"bottom",this._calloutItem.startPosition=[e[0],e[1]],this._calloutItem.endPosition=[t[0],t[1]],this._calloutVisible=!0}else this._textItem.position=[e[0],e[1]],this._textItem.anchor="center",this._calloutVisible=!1}_updateVisibility(){this._textItem.visible=this._visible,this._calloutItem.visible=this._visible&&this._calloutVisible}}class gt{constructor(){this.origin=y(),this.start=y(),this.end=y()}update(e,t,s){if(L(this.start,e),L(this.end,t),s)switch(s){case"start":L(this.origin,this.start);break;case"center":ue([e,t],this.origin);break;case"end":L(this.origin,this.end);break;default:L(this.origin,s)}else ue([e,t],this.origin)}}var _t;!function(e){e.Linear=class{constructor(e,t){this._startPosition=y(),this._endPosition=y(),L(this._startPosition,e),L(this._endPosition,t)}eval(e,t){v(t,this._startPosition,this._endPosition,e)}};e.Spherical=class{constructor(e,t,s,i){this._startPosition=y(),this._endPosition=y();const r=E(s);X(e,s,this._startPosition,r),X(t,s,this._endPosition,r),this._destSR=i}eval(e,t){x(this._startPosition,this._endPosition,e,t),X(t,E(this._destSR),t,this._destSR)}}}(_t||(_t={}));var ft=_t;var yt=Object.freeze({__proto__:null,build:function(e){const t=new ke;return t.extensions.add("GL_OES_standard_derivatives"),t.attributes.add("position","vec3"),t.attributes.add("uv0","vec2"),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),t.varyings.add("vUV","vec2"),t.vertex.code.add(Ce`
    void main(void) {
      vUV = uv0;
      gl_Position = proj * view * vec4(position.xyz, 1.0);
    }
  `),t.fragment.uniforms.add("size","vec2").add("color1","vec4").add("color2","vec4"),t.fragment.include(Me),t.fragment.code.add(Ce`
    void main() {
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${e.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),t}});class Lt extends xe{initializeProgram(e){const t=Lt.shader.get(),s=this.configuration,i=t.build({OITEnabled:0===s.transparencyPassType});return new qe(e.rctx,i.generateSource("vertex"),i.generateSource("fragment"),Ae)}bindPass(e,t,s){Ve.bindProjectionMatrix(this.program,s.camera.projectionMatrix),this.program.setUniform2fv("size",t.size),this.program.setUniform4fv("color1",t.color1),this.program.setUniform4fv("color2",t.color2)}bindDraw(e){Ve.bindView(this.program,e)}setPipelineState(e){const t=this.configuration,s=3===e,i=2===e;return He({blending:t.transparent?s?jt:Re(e):null,depthTest:{func:Ie(e)},depthWrite:s?t.writeDepth&&Be:Ue(e),colorWrite:Qe,polygonOffset:s||i?t.polygonOffset&&vt:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}Lt.shader=new Te(yt,(()=>Promise.resolve().then((function(){return yt}))));const vt={factor:0,units:-25},jt=We(770,1,771,771);class bt extends Oe{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3}}e([De()],bt.prototype,"transparent",void 0),e([De()],bt.prototype,"writeDepth",void 0),e([De()],bt.prototype,"polygonOffset",void 0),e([De({count:4})],bt.prototype,"transparencyPassType",void 0);class wt extends Ee{constructor(e,t){super(t,e,Pt),this.techniqueConfig=new bt}dispose(){}getPassParameters(){return this.params}getTechniqueConfig(e){return this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.polygonOffset=this.params.polygonOffset,this.techniqueConfig.transparencyPassType=e?e.transparencyPassType:3,this.techniqueConfig}intersect(e,t,s,i,r,n,o){return Ge(e,t,i,r,n,void 0,o)}getGLMaterial(e){return 0===e.output||7===e.output?new St(e):void 0}createBufferWriter(){return new Ze(Ke)}}class St extends ze{constructor(e){super(e),this.updateParameters()}updateParameters(e){this.technique=this.techniqueRep.acquireAndReleaseExisting(Lt,this.material.getTechniqueConfig(e),this.technique)}beginSlot(e){let t=3;return this.technique.configuration.transparent&&(t=this.technique.configuration.writeDepth?5:8),e===t}ensureParameters(e){this.updateParameters(e)}bind(e,t){e.bindProgram(this.technique.program),this.technique.bindPass(e,this.material.getPassParameters(),t)}}const Pt={size:[1,1],color1:[.75,.75,.75,1],color2:[.5,.5,.5,1],transparent:!1,writeDepth:!0,polygonOffset:!1,...Fe},kt={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};class Ct{constructor(e,t=new nt,s={}){this._model=e,this._manipulators=t,this.vertexManipulators=[],this._visible=!1,this._laserLineRenderer=null,this._cursorManipulator=null,this._pathSegmentObjects=[],this._perimeterSegmentObjects=[],this._projectionLineObjects=[],this._areaLabel=new ut(16),this._pathLengthLabel=new ut(12),this._cursorSegmentLengthLabel=new ut(12),this._perimeterLengthLabel=new ut(12),this._pathLabelSegments=[],this._perimeterLabelSegments=[],this._cursorSegmentLengthLabelSegment=new gt,this._listenerHandles=null,this._origin=y(),this._originTransform=le(),this._tempStartPosition=y(),this._tempEndPosition=y(),this._tempHandlePosition=y(),this._sceneView=this._model.sceneView,this._params=ge(kt,s),this._layer=new Je("path-measurement-tool",{isPickable:!1}),this._createMaterials(),this._createObjects(),this._intersector=new it(this._sceneView.state.mode),this._intersector.options.store=0;const i=ct(this._sceneView,this._params.handleColor,this._params.handleOpacity);i.available=!1,i.radius=this._params.handleRadius,i.interactive=!1,this._manipulators.add(i),this._cursorManipulator=i}destroy(){this.hide()}get requiresCursorPoint(){return("initial"===this._model.state||"drawing"===this._model.state)&&this._model.active}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel},laserLineRenderer:this._laserLineRenderer}}show(){if(this._visible)return;this._visible=!0;const e=this._sceneView._stage,t={glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,globalAlpha:this._params.laserLineGlobalAlpha};this._laserLineRenderer=new ht(this._sceneView.renderCoordsHelper,t),e.addRenderPlugin(this._laserLineRenderer.renderSlots,this._laserLineRenderer),this._addToStage(e),this._areaLabel.addToView(this._sceneView),this._pathLengthLabel.addToView(this._sceneView),this._cursorSegmentLengthLabel.addToView(this._sceneView),this._perimeterLengthLabel.addToView(this._sceneView),this._initializeListeners(),this._updateAll(this._model.viewData)}hide(){if(!this._visible)return;this._visible=!1;const e=this._sceneView._stage;e.removeRenderPlugin(this._laserLineRenderer),this._laserLineRenderer=null,this._destroyListeners(),this._updatePathLength(0),this._removeFromStage(e),this._areaLabel.removeFromView(this._sceneView),this._pathLengthLabel.removeFromView(this._sceneView),this._cursorSegmentLengthLabel.removeFromView(this._sceneView),this._perimeterLengthLabel.removeFromView(this._sceneView),this._sceneView.cursor=null}vertexHandleAt(e,s){const i=this._manipulators.intersect(e,s);return t(i)?this.manipulatorIdToVertexId(i):null}manipulatorIdToVertexId(e){for(let t=0;t<this.vertexManipulators.length;t++){const{id:s}=this.vertexManipulators[t];if(e===s)return t}return null}pick(e){const t=this._sceneView.spatialReference,s=U(e.screenPoint);this._sceneView.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const i=this._intersector.results.min,r=y();if(!i.getIntersectionPoint(r))return new Ct.PickResult;const n=this._sceneView.renderCoordsHelper.fromRenderCoords(r,t),o="TerrainRenderer"===i.intersector?"surface":"feature";return new Ct.PickResult(o,r,n)}overlappingHandles(e,t){return _e(e,t,this._sceneView)<=this._params.handleRadius}screenToMap3D(){return pt(this._sceneView)}_createMaterials(){this._pathLineMaterial=new Xe({width:this._params.pathLineWidth,color:this._params.pathLineColor,polygonOffset:!0,renderOccluded:4},"path-line"),this._intersectingPathLineMaterial=new Xe({width:this._params.pathLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4},"intersecting-path-line"),this._perimeterLineMaterial=new Xe({width:this._params.perimeterLineWidth,color:this._params.perimeterLineColor,polygonOffset:!0,renderOccluded:4},"perimeter-line"),this._intersectingPerimeterLineMaterial=new Xe({width:this._params.perimeterLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4},"intersecting-perimeter-line"),this._projectionLineMaterial=new Xe({width:this._params.projectionLineWidth,color:this._params.projectionLineColor,polygonOffset:!0,stipplePattern:rt(this._params.projectionLineStippleSize),stippleIntegerRepeats:!1,renderOccluded:4},"projection-line"),this._checkerBoardMaterial=new wt({color1:this._params.areaColor1,color2:this._params.areaColor2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:4},"checker-board")}_createObjects(){this._cursorSegmentObject=new st,this._areaObject=new st}_addToStage(e){e.add(0,this._layer),e.add(3,this._pathLineMaterial),e.add(3,this._intersectingPathLineMaterial),e.add(3,this._perimeterLineMaterial),e.add(3,this._intersectingPerimeterLineMaterial),e.add(3,this._projectionLineMaterial),e.add(3,this._checkerBoardMaterial),e.addToViewContent([this._layer.id])}_removeFromStage(e){e.removeFromViewContent([this._layer.id]),e.remove(0,this._layer.id),e.remove(3,this._pathLineMaterial.id),e.remove(3,this._intersectingPathLineMaterial.id),e.remove(3,this._perimeterLineMaterial.id),e.remove(3,this._intersectingPerimeterLineMaterial.id),e.remove(3,this._projectionLineMaterial.id),e.remove(3,this._checkerBoardMaterial.id)}_syncViewData(e){if(!this._visible)return"none";const t=e.pathChanges;"full"===t.change?this._updateAll(e):"incremental"===t.change&&(t.updatedVertices.forEach((t=>{const s=(t-1+this._model.path.length)%this._model.path.length;this._updatePathSegment(e,t),this._updatePathSegment(e,s),this._updateVertexHandle(e,t),this._updateArea(e),this._updatePerimeterSegments(e),this._updateProjectionLines(e),this._updateLaserLine(),this._updateLabels(e)})),t.updatedVertices.has(this._model.path.length-1)&&this._updateCursorSegment());const s=t.change;return t.clear(),s}_updateAfterSyncViewData(e){const t=this._model.viewData;!("full"===this._syncViewData(t))&&e&&e(t)}_updateOrigin(e){ue(e.positionsRenderCoords,this._origin),$(this._originTransform),J(this._originTransform,this._originTransform,this._origin)}_updateAll(e){this._updateOrigin(e),this._updatePathLength(e.path.length),this._updatePathSegments(e),this._updatePerimeterSegments(e),this._updateHandles(e),this._updateArea(e),this._updateProjectionLines(e),this._updateLabels(e),this._updateLaserLine()}_updateCameraDependent(e){this._updateHandles(e),this._updateProjectionLines(e),this._updateLabels(e)}_updatePathLength(e){this._resizeObject3DArray(this._pathSegmentObjects,e),this._resizeObject3DArray(this._perimeterSegmentObjects,e),this._resizeManipulatorArray(this.vertexManipulators,e),fe(this._pathLabelSegments,e,(()=>new gt)),fe(this._perimeterLabelSegments,e,(()=>new gt))}_updatePathSegments(e){for(let t=0;t<this._pathSegmentObjects.length;++t)this._updatePathSegment(e,t);this._updateCursorSegment()}_updatePathSegment(e,t){const s=e.path,i=this._pathSegmentObjects[t];e.validMeasurement||t<s.length-1?(this._createInterpolatedLineGeometry(i,e.intersectingSegments.has(t)?this._intersectingPathLineMaterial:this._pathLineMaterial,"path-segment",e.positionsRenderCoords[t],e.positionsRenderCoords[(t+1)%s.length],this._origin,this._originTransform,this._model.measurementMode,this._pathLabelSegments[t],e.validMeasurement?"center":"end"),this._addObject3D(i)):(i.removeAllGeometries(),this._removeObject3D(i))}_updateCursorSegment(){const e=this._sceneView.renderCoordsHelper,t=this._model.path,s=this._cursorSegmentObject;t.length>0&&"drawing"===this._model.state&&this._model.cursorPoint?(e.toRenderCoords(t.back,this._tempStartPosition),e.toRenderCoords(this._model.cursorPoint,this._tempEndPosition),this._createInterpolatedLineGeometry(s,this._pathLineMaterial,"path-segment",this._tempStartPosition,this._tempEndPosition,this._origin,this._originTransform,this._model.measurementMode,this._cursorSegmentLengthLabelSegment,"end"),this._addObject3D(s)):(s.removeAllGeometries(),this._removeObject3D(s))}_updatePerimeterSegments(e){for(let t=0;t<this._perimeterSegmentObjects.length;++t)this._updatePerimeterSegment(e,t)}_updatePerimeterSegment(e,t){const s=e.path,i=this._perimeterSegmentObjects[t];e.validMeasurement&&"geodesic"!==this._model.measurementMode?(this._updatePerimeterSegmentObject(i,e.positionsFittedRenderCoords[t],e.positionsFittedRenderCoords[(t+1)%s.length],this._origin,this._originTransform,e.intersectingSegments.has(t),this._perimeterLabelSegments[t]),this._addObject3D(i)):(i.removeAllGeometries(),this._removeObject3D(i))}_updatePerimeterSegmentObject(e,t,s,i,r,n,o){this._createInterpolatedLineGeometry(e,n?this._intersectingPerimeterLineMaterial:this._perimeterLineMaterial,"perimeter-segment",t,s,i,r,this._model.measurementMode,o)}_updateHandles(e){for(let t=0;t<this.vertexManipulators.length;++t)this._updateVertexHandle(e,t);this._updateCursorHandle()}_updateVertexHandle(e,t){const{manipulator:s}=this.vertexManipulators[t];s.renderLocation=e.positionsRenderCoords[t]}_updateCursorHandle(){const e=this._cursorManipulator;"drawing"===this._model.state&&this._model.cursorPoint?(e.available=!0,e.location=this._model.cursorPoint):e.available=!1}_updateArea(e){switch(this._model.measurementMode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this._areaObject;if(e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices){const s=[],i=y();e.positionsFittedRenderCoords.forEach((e=>{j(i,e,this._origin),s.push(i[0],i[1],i[2])}));const r=[];e.positionsProjected.forEach((e=>{r.push(e[0],e[1])}));const n=new tt({position:{size:3,data:s},uv0:{size:2,data:r}},{position:e.triangleIndices,uv0:e.triangleIndices}),o=new et(n,"area");t.removeAllGeometries(),t.addGeometry(o,this._checkerBoardMaterial,this._originTransform),this._addObject3D(t),this._checkerBoardMaterial.setParameterValues({size:[e.checkerSize,e.checkerSize]})}else t.removeAllGeometries(),this._removeObject3D(t)}_updateAreaGeodesic(){const e=this._areaObject;e.removeAllGeometries(),this._removeObject3D(e)}_updateProjectionLines(e){const t=e.path;this._resizeObject3DArray(this._projectionLineObjects,t.length);for(let s=0;s<t.length;++s)this._updateProjectionLine(e,s)}_updateProjectionLine(e,t){const s=this._projectionLineObjects[t];if(s.removeAllGeometries(),e.validMeasurement&&"euclidean"===this._model.measurementMode){const e=y();j(e,this._model.viewData.positionsRenderCoords[t],this._origin);const i=y();j(i,this._model.viewData.positionsFittedRenderCoords[t],this._origin);const r=new et($e.createPolylineGeometry([e,i]),"projected-line");s.addGeometry(r,this._projectionLineMaterial,this._originTransform),this._addObject3D(s)}else this._removeObject3D(s)}_updateLabels(e){const t=this._sceneView.state.camera,s=this._params.labelDistance,i=this._model,r="geodesic"===i.measurementMode,n="drawing"===i.state,o=(e,t)=>e.visible&&t.visible&&this._sceneView.overlay.overlaps(e.textItem,t.textItem);{const s=this._areaLabel,r=ye(s,e.areaCentroid,t);s.text=i.areaLabel,s.visible=r&&e.validMeasurement&&0===e.intersectingSegments.size&&null!=i.areaLabel}{const r=this._pathLengthLabel,o=this._pathLabelSegments[e.pathLengthLabelSegmentIndex],a=this._cursorSegmentLengthLabelSegment,h=Le(r,o,a,s,t);r.text=i.pathLengthLabel,r.visible=h&&n&&i.path.length>0}{const e=this._cursorSegmentLengthLabel,r=this._cursorSegmentLengthLabelSegment,o=ve(e,r,s,"bottom",t);e.text=i.cursorSegmentLengthLabel,e.visible=o&&n&&i.cursorSegmentLength&&0!==i.cursorSegmentLength.value}o(this._cursorSegmentLengthLabel,this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),o(this._pathLengthLabel,this._areaLabel)&&(this._pathLengthLabel.visible=!1);{const n=this._perimeterLengthLabel;if(i.validMeasurement&&0===e.intersectingSegments.size)for(let a=0;a<e.path.length;++a){const h=(e.perimeterLengthLabelSegmentIndex+a)%e.path.length,l=r?this._pathLabelSegments[h]:this._perimeterLabelSegments[h],m=ve(n,l,s,"top",t);if(n.text=i.perimeterLengthLabel,n.visible=m,!o(n,this._areaLabel))break;n.visible=!1}else n.visible=!1}}_getFocusPoint(){const e=this._model,s=this._model.lastDraggedVertex;switch(e.state){case"drawing":return e.cursorPoint?e.cursorPoint:e.path.vertex(t(s)?s:e.path.length-1);case"editing":return t(s)?e.path.vertex(s):null;default:return e.cursorPoint}}_updateLaserLine(){const e=this._model,t=this._params.laserLineEnabled&&"measured"!==e.state&&e.active;this._laserLineRenderer.pointDistanceEnabled=!1,this._laserLineRenderer.lineVerticalPlaneEnabled=!1;const s=this._getFocusPoint();if(t&&s){const e=this._tempHandlePosition;this._sceneView.renderCoordsHelper.toRenderCoords(s,e),this._laserLineRenderer.heightManifoldTarget=e,this._laserLineRenderer.heightManifoldEnabled=!0}else this._laserLineRenderer.heightManifoldEnabled=!1}_addObject3D(e){e.parentLayer||(this._layer.addObject(e),this._sceneView._stage.add(1,e))}_removeObject3D(e){e.parentLayer&&(this._layer.removeObject(e),this._sceneView._stage.remove(1,e.id))}_resizeObject3DArray(e,t){fe(e,t,(()=>new st),(e=>{this._removeObject3D(e)}))}_resizeManipulatorArray(e,t){fe(e,t,(()=>{const e=ct(this._sceneView,this._params.handleColor,this._params.handleOpacity);e.radius=this._params.handleRadius;return{id:this._manipulators.add(e),manipulator:e}}),(({manipulator:e})=>{this._manipulators.remove(e)}))}_createInterpolatedLineGeometry(e,t,s,i,r,n,o,a,h,l){const m=this._sceneView.renderCoordsHelper,p=[],d=[],c=(e,t)=>{const s=Ne.get();j(s,e,n),p.push(s),d.push(t)};if("euclidean"===a){const e=Ne.get();ue([i,r],e);const t=Ne.get();m.worldUpAtPosition(e,t),c(i,t),c(r,t),h&&h.update(i,r,l)}else{const e=this._getSegmentInterpolator(i,r),t=this._params.lineSubdivisions+1&-2;let s=null,n=null,o=t/2-1,a=t/2;"start"===l?(o=0,a=1):"end"===l&&(o=t-2,a=t-1);for(let i=0;i<t;++i){const r=i/(t-1),h=Ne.get(),l=Ne.get();e.eval(r,h),m.worldUpAtPosition(h,l),i===o&&(s=h),i===a&&(n=h),c(h,l)}h&&h.update(s,n,l)}const u=new et($e.createPolylineGeometry(p,d),s);e.removeAllGeometries(),e.addGeometry(u,t,o)}_getSegmentInterpolator(e,t){const s=this._sceneView.spatialReference;if(Y(s,E(s))){const s=this._sceneView.renderCoordsHelper.spatialReference;return new ft.Spherical(e,t,s,s)}return new ft.Linear(e,t)}_initializeListeners(){this._listenerHandles=new T,this._listenerHandles.add([this._model.watch(["state","lastDraggedVertex"],(()=>this._updateLaserLine())),this._model.watch("cursorPoint",(()=>this._updateAfterSyncViewData((e=>{this._updateCursorSegment(),this._updateCursorHandle(),"drawing"===this._model.state&&this._updateLabels(e),this._updateLaserLine()})))),this._sceneView.state.watch("camera",(()=>this._updateAfterSyncViewData((()=>this._updateCameraDependent(this._model.viewData))))),this._model.watch(["unit","measurementMode"],(()=>this._updateAll(this._model.viewData))),this._model.watch(["areaLabel","cursorSegmentLengthLabel","pathLengthLabel","perimeterLengthLabel"],(()=>{this._updateLabels(this._model.viewData)})),this._model.watch(["active"],(()=>{this._updateLaserLine(),this._syncViewData(this._model.viewData)})),this._model.watch("viewData",(e=>this._syncViewData(e)))])}_destroyListeners(){this._listenerHandles.destroy(),this._listenerHandles=null}}Ct._handleGeometry=new et($e.createSphereGeometry(1,32,32),"handle"),function(e){e.PickRequest=class{};e.PickResult=class{constructor(e=null,t=null,s=null){this.type=e,this.scenePoint=t,this.mapPoint=s}}}(Ct||(Ct={}));var Mt=Ct;class Dt{constructor(e,t,s){this._manipulators=s,this._handles=new T,this._tempPickRequest=new Mt.PickRequest,this.model=e,this.view=t,this.model.reset(),this._setupManipulators()}destroy(){this._handles.destroy(),this._handles=null}handleInputEvent(e){switch(e.type){case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}}_setupManipulators(){const e=e=>`manipulator-${e}`;let t=0;const s=e=>s=>("start"===s.action&&(t++,this.model.lastDraggedVertex=i(this.view.manipulatorIdToVertexId(e)),"measured"===this.model.state&&(this.model.state="editing")),s),r=()=>e=>"end"===e.action?(t--,0===t&&"editing"===this.model.state&&(this.model.state="measured"),null):e,n=(t,n)=>{this._handles.add([ot(n,((e,n,o)=>{const a=dt(e),h=i(this.view.manipulatorIdToVertexId(t));n.next(s(t)).next(a).next(r()).next(this.view.screenToMap3D()).next((t=>{e.location=t.mapEnd,this.model.path.update(h,Ye(t.mapEnd))}));const l=Ye(this.model.path.vertex(h));o.next(a).next((()=>{this.model.path.update(h,l),e.location=l}))})),n.events.on("double-click",(e=>{Ot(e)&&("drawing"===this.model.state&&this.model.finishMeasurement(),e.stopPropagation())}))],e(t))},o=t=>{this._handles.remove(e(t))};this._manipulators.forEach((({id:e,manipulator:t})=>{n(e,t)})),this._handles.add([this._manipulators.on("after-add",(({item:{id:e,manipulator:t}})=>{n(e,t)})),this._manipulators.on("after-remove",(({item:{id:e}})=>{o(e)}))])}_handleDrag(e){"editing"===this.model.state&&e.stopPropagation()}_handleImmediateClick(e){if(!Ot(e))return;const t=Se(e);if(this.model.active)switch(this.model.state){case"initial":this._addVertexAt(t)&&(this.model.state="drawing",e.stopPropagation());break;case"drawing":{const i=this.view.vertexHandleAt(t,e.pointerType);if(s(i)){if(this._addVertexAt(t))return}else 0===i&&(this.model.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(t)}_handlePointerMove(e){if("mouse"===e.pointerType){const t=Se(e);this._hoverAt(t)}}_handleKeyDown(e){"Enter"===e.key&&"drawing"===this.model.state&&(this.model.finishMeasurement(),e.stopPropagation())}_hoverAt(e){if(this.view.requiresCursorPoint){const t=this._pick(e);t.mapPoint&&(this.model.cursorPoint=t.mapPoint)}else this.model.cursorPoint=null}_addVertexAt(e){const t=this._pick(e);return!!t.mapPoint&&(this.model.path.add(t.mapPoint),!0)}_pick(e){const t=this._tempPickRequest;return t.screenPoint=e,this.view.pick(t)}}function Ot(e){return"mouse"!==e.pointerType||0===e.button}let xt=class extends o{constructor(){super(...arguments),this.result=null}destroy(){this.result=null}set geometry(e){this.result=null,this._set("geometry",t(e)?e.clone():null)}};var At;e([n({value:null})],xt.prototype,"geometry",null),e([n()],xt.prototype,"result",void 0),xt=e([h("esri.views.3d.interactive.graphics.AreaMeasurement3D")],xt),function(e){e.boundingSphere=function(e,t){const s=t.center;b(s,0,0,0);for(let t=0;t<e.length;++t)w(s,s,e[t]);S(s,s,1/e.length);let i=0;for(let t=0;t<e.length;++t)i=Math.max(i,P(s,e[t]));t.radius=Math.sqrt(i)},e.bestFitPlane=function(e,t){if(e.length<3)throw new Error("need at least 3 points to fit a plane");A(e[0],e[1],e[2],t)},e.planePointDistance=function(e,t){return k(e,t)+e[3]},e.segmentLengthEuclidean=function(e,t,s){return ee(e,Vt,s)&&ee(t,Rt,s)?C(Vt,Rt):0},e.segmentLengthGeodesic=function(e,t){if(!te(e,Vt)||!te(t,Rt))return 0;const s={distance:null};return ne(s,[Vt[0],Vt[1]],[Rt[0],Rt[1]]),s.distance},e.segmentLengthGeodesicVector=function(e,t,s){const i={distance:null};return ne(i,[e[0],e[1]],[t[0],t[1]],s),i.distance},e.triangleAreaEuclidean=function(e,t,s){const i=t[0]-e[0],r=t[1]-e[1],n=s[0]-e[0],o=s[1]-e[1];return.5*Math.abs(i*o-r*n)},e.triangleAreaGeodesic=function(e,t,s,i){const r=Ut;return se(e,i,Vt)&&se(t,i,Rt)&&se(s,i,It)?(r.setPoint(0,0,Vt),r.setPoint(0,1,Rt),r.setPoint(0,2,It),Math.abs(oe(r,"square-meters"))):0},e.tangentFrame=function(e,t,s){Math.abs(e[0])>Math.abs(e[1])?b(t,0,1,0):b(t,1,0,0),M(s,e,t),D(t,t),M(t,s,e),D(s,s)},e.fitHemisphere=function(e,t=null,s=!0){const i=(e,t)=>{if(0===t[0]&&0===t[1]&&0===t[2])return!1;for(let s=0;s<e.length;++s)if(k(t,e[s])<-1e-6)return!1;return!0};if(0===e.length)return!1;if(1===e.length)return t&&L(t,e[0]),!0;b(Tt,0,0,0);for(let t=0;t<e.length;++t)w(Tt,Tt,e[t]);if(D(Tt,Tt),i(e,Tt))return t&&L(t,Tt),!0;if(!s)return!1;for(let s=0;s<e.length;++s)for(let r=0;r<e.length;++r)if(s!==r&&(M(Tt,e[s],e[r]),D(Tt,Tt),i(e,Tt)))return t&&L(t,Tt),!0;return!1},e.compareSets=function(e,t){if(e===t)return!0;if(e.size!==t.size)return!1;for(let s=0;s<e.size;++s)if(!t.has(e[s]))return!1;return!0}}(At||(At={}));const Vt=y(),Rt=y(),It=y(),Ut=new I({rings:[[Vt,Rt,It]],spatialReference:d.WGS84}),Tt=y();var Et=At;class Gt{constructor(){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=y(),this.areaCentroidRenderCoords=y(),this.geodesicAreaCentroidRenderCoords=y(),this._length=0,this._centroidRenderCoords=y(),this._planeWorldCoords=ae(),this._worldUp=y(),this._worldTangent=y(),this._frame=[y(),y(),y()],this._tempU=y(),this._tempV=y(),this._tempVec3=y(),this._tempSphere={center:y(),radius:0}}update(e,t,s,i,r,n,o){this._resize(e.length);const a=E(t.spatialReference),h=Y(t.spatialReference,a)&&ie(t.spatialReference),l=this.positionsGeographic,m=this.positionsWorldCoords,p=this.positionsRenderCoords,d=this.positionsSpherical;for(let t=0;t<e.length;++t){const s=e.vertex(t);ee(s,m[t],n),ee(s,p[t],r),h&&(te(s,l[t]),ee(s,d[t],a),D(d[t],d[t]))}const c=this._updatePathLengths(i);if(this.pathLength=this._length>0?new je(s.normalizeDistance(c),"meters"):null,h){const e=this._updateGeodesicPathLengths(i,n);this.geodesicPathLength=this._length>0?new je(e,"meters"):null}else this.geodesicPathLength=null;if(!i)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),void this.geodesicIntersectingSegments.clear();this._updateArea(t,s,r,n,o),h&&this._updateGeodesicArea(t)}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(y()),this.positionsRenderCoords.push(y()),this.positionsProjectedWorldCoords.push(Pe()),this.positionsFittedRenderCoords.push(y()),this.positionsGeographic.push(y()),this.positionsSpherical.push(y()),this.positionsStereographic.push(Pe()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorldCoords,s=this.pathSegmentLengths;let i=0;for(let r=0;r<this._length;++r){const n=s[r]=C(t[r],t[(r+1)%this._length]);(r<this._length-1||e)&&(i+=n)}return i}_updateGeodesicPathLengths(e,t){const s=this.positionsGeographic,i=this.geodesicPathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=i[n]=Et.segmentLengthGeodesicVector(s[n],s[(n+1)%this._length],t);(n<this._length-1||e)&&(r+=o)}return r}_updateArea(e,t,s,i,r){const n=e.renderCoordsHelper,o=this.positionsWorldCoords,a=this.positionsRenderCoords,h=this.positionsProjectedWorldCoords,l=this.positionsFittedRenderCoords,m=this._planeWorldCoords,p=this._centroidRenderCoords;ue(a,p),n.worldUpAtPosition(p,this._worldUp),n.worldBasisAtPosition(p,0,this._worldTangent),re(p,this._worldUp,s,this._worldUp,i),re(p,this._worldTangent,s,this._worldTangent,i),o.length>2&&Et.bestFitPlane(o,m),this.fittingMode=this._selectFittingMode(m,o,this._worldUp,r);let d=0;if("horizontal"===this.fittingMode){let e=-1/0;a.forEach(((t,s)=>{const i=n.getAltitude(a[s]);i>e&&(e=i,d=s)}))}const c=o[d];let u=m,g=this._worldTangent;"horizontal"===this.fittingMode?u=this._worldUp:"vertical"===this.fittingMode&&(u=this._tempVec3,g=this._worldUp,V(m,this._worldUp,u)),L(this._frame[2],u),V(g,u,this._frame[0]),M(this._frame[1],this._frame[0],this._frame[2]),O(this._frame[1],this._frame[1]);const _=this._tempVec3,f=this._tempU,y=this._tempV;for(let e=0;e<this._length;++e){const t=h[e],r=l[e];j(_,o[e],c),me(t,k(this._frame[0],_),k(this._frame[1],_)),S(f,this._frame[0],t[0]),S(y,this._frame[1],t[1]),w(_,f,y),w(_,_,c),X(_,i,r,s)}this.perimeterLength=this._length>0?new je(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,ue(l,this.areaCentroidRenderCoords),X(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,i),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?new je(t.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const t=e.renderCoordsHelper,s=this.positionsSpherical,i=this.positionsStereographic,r=this._tempVec3,n=Et.fitHemisphere(s,r);if(!n)return void(this.geodesicArea=null);const o=this._tempU,a=this._tempV;R(r,o,a);for(let e=0;e<this._length;++e){const t=k(s[e],o),n=k(s[e],a),h=k(s[e],r);me(i[e],t/h,n/h)}S(r,r,G(e.spatialReference).radius),t.toRenderCoords(r,E(e.spatialReference),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=n&&0===this.geodesicIntersectingSegments.size?new je(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths;let s=0;for(let i=0;i<this._length;++i){s+=t[i]=pe(e[i],e[(i+1)%this._length])}return s}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],n=e[(s+1)%this._length],o=e[i],a=e[(i+1)%this._length];g(r,n,o,a)&&(t.add(s),t.add(i))}}_computeArea(){const e=this.positionsProjectedWorldCoords,t=zt(e,2),s=this.triangleIndices=new Uint32Array(he(t,[],2));let i=0;for(let t=0;t<s.length;t+=3)i+=Et.triangleAreaEuclidean(e[s[t]],e[s[t+1]],e[s[t+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],n=e[(s+1)%this._length],o=e[i],a=e[(i+1)%this._length];g(r,n,o,a)&&(t.add(s),t.add(i))}}_computeGeodesicArea(){const e=this.positionsGeographic,t=zt(this.positionsStereographic,2),s=this.geodesicTriangleIndices=new Uint32Array(he(t,[],2));let i=0;for(let t=0;t<s.length;t+=3)i+=Et.triangleAreaGeodesic(e[s[t]],e[s[t+1]],e[s[t+2]],d.WGS84);return i}_selectFittingMode(e,t,s,i){const r=t.map((t=>Math.abs(Et.planePointDistance(e,t)))).reduce(((e,t)=>Math.max(e,t)),0);Et.boundingSphere(t,this._tempSphere);const n=r/(2*this._tempSphere.radius),o=n<i.maxRelativeErrorCoplanar,a=n<i.maxRelativeErrorAlmostCoplanar;let h="horizontal";if(o)h="oblique";else if(a){h=Math.abs(k(s,e))>Math.cos(_(i.verticalAngleThreshold))?"horizontal":"vertical"}return h}}function zt(e,t){const s=new Float64Array(e.length*t);for(let i=0;i<e.length;++i){const r=e[i];for(let e=0;e<t;++e)s[i*t+e]=r[e]}return s}function Ft(e){const t=new Set;return e.forEach((e=>{t.add(e)})),t}class qt{constructor(){this.change="none",this.updatedVertices=new Set}fullChange(){this.change="full"}incrementalChange(e){"none"===this.change&&(this.change="incremental"),this.updatedVertices.add(e)}clear(){this.change="none",this.updatedVertices.clear()}assign(e){this.change=e.change,this.updatedVertices=Ft(e.updatedVertices)}merge(e){switch(this.change){case"none":this.assign(e);break;case"full":break;case"incremental":"incremental"===e.change?e.updatedVertices.forEach((e=>{this.updatedVertices.add(e)})):"full"===e.change&&(this.change="full")}}}let Wt=class extends(l.EventedMixin(o)){constructor(){super(...arguments),this.vertices=new m}get front(){return this.vertices.items[0]||null}get back(){return this.vertices.items[this.vertices.length-1]||null}clear(){this.vertices.removeAll(),this.emit("cleared",{}),this._notifyFrontBack()}vertex(e){return this.vertices.items[e]}add(e){this.vertices.add(e);const t=this.vertices.length-1;return this._notifyFrontBack(),this.emit("vertex-added",{index:t}),t}remove(e){this.vertices.removeAt(e),this._notifyFrontBack(),this.emit("vertex-removed",{index:e})}update(e,t){null!=t&&(this.vertices.splice(e,1,t),this._notifyFrontBack()),this.emit("vertex-updated",{index:e})}_notifyFrontBack(){this.notifyChange("front"),this.notifyChange("back")}toPolygon(){const e=[];if(0===this.vertices.length)return null;this.vertices.forEach((t=>{e.push(t.hasZ?[t.x,t.y,t.z]:[t.x,t.y])}));const t=this.vertices.getItemAt(0);return e.push(t.hasZ?[t.x,t.y,t.z]:[t.x,t.y]),new I({rings:[e],spatialReference:t.spatialReference})}};e([n({readOnly:!0})],Wt.prototype,"vertices",void 0),e([n({aliasOf:"vertices.length"})],Wt.prototype,"length",void 0),e([n({readOnly:!0})],Wt.prototype,"front",null),e([n({readOnly:!0})],Wt.prototype,"back",null),Wt=e([h("esri.views.3d.interactive.measurementTools.support.Path")],Wt);var Ht=Wt;let Bt=class extends o{constructor(){super(...arguments),this._unitNormalizer=new be,this._measurementData=new Gt,this._measurementDataChanges=new qt,this._viewDataChanges=new qt,this._handles=new T,this.dataObject=new xt,this.path=new Ht,this.pathVersion=0,this.cursorPoint=null,this.state="initial",this.lastDraggedVertex=null,this.mode="auto",this.unit="metric",this.active=!1,this.maxRelativeErrorCoplanar=.005,this.maxRelativeErrorAlmostCoplanar=.01,this.verticalAngleThreshold=80,this.geodesicMeasurementDistanceThreshold=1e5}initialize(){u("esri/core/t9n/Units").then((e=>{this.messages=e})),this._handles.add(c((async()=>{this.messages=await u("esri/core/t9n/Units")}))),this._handles.add(Z(this.sceneView,"ready",(()=>{const{spatialReference:e}=this.sceneView,t=E(e),s=t===B?Q:t,i=!e||Y(e,s)?s:e;this._worldSpatialReference=i,this._unitNormalizer.spatialReference=i})),"scene-view"),this.reset();const e=()=>{this._set("pathVersion",this.pathVersion+1)};this._handles.add(this.path.on("cleared",(()=>{this._measurementDataChanges.fullChange(),this._set("pathVersion",0),this.dataObject.geometry=null}))),this._handles.add(this.path.on("vertex-added",(()=>{this._measurementDataChanges.fullChange(),e(),this.dataObject.geometry=this.path.toPolygon()}))),this._handles.add(this.path.on("vertex-removed",(()=>{this._measurementDataChanges.fullChange(),e(),this.dataObject.geometry=this.path.toPolygon()}))),this._handles.add(this.path.on("vertex-updated",(t=>{this._measurementDataChanges.incrementalChange(t.index),e(),this.dataObject.geometry=this.path.toPolygon()}))),this._handles.add(this.dataObject.watch("geometry",(()=>{const e=this.measurementData;this.dataObject.result={area:e.area,geodesicArea:e.geodesicArea,pathLength:e.pathLength,geodesicPathLength:e.geodesicPathLength,perimeterLength:e.perimeterLength}})))}destroy(){this._handles.destroy(),this._handles=null}get validMeasurement(){return this.path.length>=3&&"measured"===this.state||"editing"===this.state}get isMeasuring(){return this.path.length>=1}get measurementData(){this._viewDataChanges.merge(this._measurementDataChanges),this._measurementDataChanges.clear();const e=Ft(this._measurementData.intersectingSegments),t=Ft(this._measurementData.geodesicIntersectingSegments);return this._measurementData.update(this.path,this.sceneView,this._unitNormalizer,this.validMeasurement,this.sceneView.renderSpatialReference,this._worldSpatialReference,{maxRelativeErrorCoplanar:this.maxRelativeErrorCoplanar,maxRelativeErrorAlmostCoplanar:this.maxRelativeErrorAlmostCoplanar,verticalAngleThreshold:this.verticalAngleThreshold}),Et.compareSets(this._measurementData.intersectingSegments,e)||this._viewDataChanges.fullChange(),Et.compareSets(this._measurementData.geodesicIntersectingSegments,t)||this._viewDataChanges.fullChange(),this._measurementData}get area(){return this.measurementData.area}get geodesicArea(){return this.measurementData.geodesicArea}get areaLabel(){return this._formatAreaLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicArea:this.measurementData.area,this.unit)}get pathLength(){return this.measurementData.pathLength}get geodesicPathLength(){return this.measurementData.geodesicPathLength}get pathLengthLabel(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.pathLength,this.unit)}get perimeterLength(){return this.measurementData.perimeterLength}get geodesicPerimeterLength(){return this.measurementData.geodesicPathLength}get perimeterLengthLabel(){return this.measurementData.perimeterLength&&this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.perimeterLength,this.unit)}get cursorSegmentLength(){return this.path.back&&this.cursorPoint&&new je(this._unitNormalizer.normalizeDistance(Et.segmentLengthEuclidean(this.path.back,this.cursorPoint,this._worldSpatialReference)),"meters")}get geodesicCursorSegmentLength(){return this.path.back&&this.cursorPoint&&new je(Et.segmentLengthGeodesic(this.path.back,this.cursorPoint),"meters")}get cursorSegmentLengthLabel(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.geodesicCursorSegmentLength:this.cursorSegmentLength,this.unit)}get viewData(){const e=this.measurementData,t="geodesic"===this.measurementMode,s=t?this.geodesicArea:this.area;let i=1;if(s){const e=this._toPreferredAreaUnit(s,this.unit);i=f(Math.sqrt(e.value)/Math.sqrt(300)),i*=Math.sqrt(z(1,e.unit,"square-meters")),i/=this._unitNormalizer.normalizeDistance(1)}return{validMeasurement:this.validMeasurement,path:this.path,pathChanges:this._viewDataChanges,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:t?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:t?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:t?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:this.validMeasurement?0:this.path.length-2,perimeterLengthLabelSegmentIndex:0,checkerSize:i}}get measurementMode(){let e=this.mode;if("auto"===e){e="euclidean";(this.geodesicPathLength?this.geodesicPathLength.value:0)+(!this.validMeasurement&&this.geodesicCursorSegmentLength?this.geodesicCursorSegmentLength.value:0)>this.geodesicMeasurementDistanceThreshold&&(e="geodesic")}return null==this.geodesicPathLength&&(e="euclidean"),e}reset(){this.clearMeasurement()}clearMeasurement(){this.path.clear(),this.state="initial",this.cursorPoint=null}finishMeasurement(){this.path.length<3?this.clearMeasurement():(this._measurementDataChanges.fullChange(),this.state="measured")}_preferredAreaUnit(e,t){switch(t){case"metric":return q(e.value,e.unit);case"imperial":return F(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const s=this._deriveLengthUnitFromAreaUnit(t);switch(s){case"metric":return H(e.value,e.unit);case"imperial":return W(e.value,e.unit);default:return s}}_toPreferredAreaUnit(e,t){return e.toUnit(this._preferredAreaUnit(e,t))}_toPreferredLengthUnit(e,t){return e.toUnit(this._preferredLengthUnit(e,t))}_formatAreaLabel(e,t,s){return e&&t&&we(e,t,this._preferredAreaUnit(t,s))}_formatLengthLabel(e,t,s){return e&&t&&we(e,t,this._preferredLengthUnit(t,s))}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":return"metric";case"imperial":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"acres":return"imperial";case"ares":case"hectares":return"metric"}throw new Error("unhandled area unit")}};e([n()],Bt.prototype,"messages",void 0),e([n()],Bt.prototype,"dataObject",void 0),e([n({constructOnly:!0})],Bt.prototype,"sceneView",void 0),e([n({readOnly:!0})],Bt.prototype,"path",void 0),e([n({readOnly:!0})],Bt.prototype,"pathVersion",void 0),e([n()],Bt.prototype,"cursorPoint",void 0),e([n()],Bt.prototype,"state",void 0),e([n()],Bt.prototype,"lastDraggedVertex",void 0),e([n()],Bt.prototype,"mode",void 0),e([n()],Bt.prototype,"unit",void 0),e([n()],Bt.prototype,"active",void 0),e([n({readOnly:!0,dependsOn:["path.length","state"]})],Bt.prototype,"validMeasurement",null),e([n({readOnly:!0,dependsOn:["path.length"]})],Bt.prototype,"isMeasuring",null),e([n({readOnly:!0,dependsOn:["pathVersion","validMeasurement","maxRelativeErrorCoplanar","maxRelativeErrorAlmostCoplanar","verticalAngleThreshold"],autoTracked:!1})],Bt.prototype,"measurementData",null),e([n({readOnly:!0,dependsOn:["measurementData"]})],Bt.prototype,"area",null),e([n({readOnly:!0,dependsOn:["measurementData"]})],Bt.prototype,"geodesicArea",null),e([n({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],Bt.prototype,"areaLabel",null),e([n({readOnly:!0,dependsOn:["measurementData"]})],Bt.prototype,"pathLength",null),e([n({readOnly:!0,dependsOn:["measurementData"]})],Bt.prototype,"geodesicPathLength",null),e([n({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],Bt.prototype,"pathLengthLabel",null),e([n({readOnly:!0,dependsOn:["measurementData"]})],Bt.prototype,"perimeterLength",null),e([n({readOnly:!0,dependsOn:["measurementData"]})],Bt.prototype,"geodesicPerimeterLength",null),e([n({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],Bt.prototype,"perimeterLengthLabel",null),e([n({readOnly:!0,dependsOn:["path.back","cursorPoint"]})],Bt.prototype,"cursorSegmentLength",null),e([n({readOnly:!0,dependsOn:["path.back","cursorPoint"]})],Bt.prototype,"geodesicCursorSegmentLength",null),e([n({readOnly:!0,dependsOn:["messages","unit","measurementMode","cursorSegmentLength","geodesicCursorSegmentLength"]})],Bt.prototype,"cursorSegmentLengthLabel",null),e([n({readOnly:!0,dependsOn:["unit","measurementMode","measurementData"]})],Bt.prototype,"viewData",null),e([n()],Bt.prototype,"maxRelativeErrorCoplanar",void 0),e([n()],Bt.prototype,"maxRelativeErrorAlmostCoplanar",void 0),e([n()],Bt.prototype,"verticalAngleThreshold",void 0),e([n()],Bt.prototype,"geodesicMeasurementDistanceThreshold",void 0),e([n({readOnly:!0,dependsOn:["mode","validMeasurement","geodesicPathLength","geodesicCursorSegmentLength","geodesicMeasurementDistanceThreshold"]})],Bt.prototype,"measurementMode",null),Bt=e([h("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DModel")],Bt);var Qt=Bt;let Nt=class extends at{constructor(e){super(e),this._handles=new T,this.deferCreation=!0,this.model=new Qt({sceneView:e.view})}initialize(){this._view=new Mt(this.model,this.manipulators),this._controller=new Dt(this.model,this._view,this.manipulators),this._handles.add(K(this,"state",(e=>{switch(e){case"measured":return this.complete();case"ready":return;default:return this.create()}}),!0))}destroy(){this.detach(),this._view.destroy(),this._view=null,this._controller.destroy(),this._controller=null,this._handles.destroy(),this._handles=null}get state(){return this.model.isMeasuring?"measured"===this.model.state?"measured":"measuring":"ready"}get isSupported(){return"3d"===this.get("view.type")}get cursor(){return!this.model.active||"initial"!==this.model.state&&"drawing"!==this.model.state?null:"crosshair"}activate(){this.model.active=!0}deactivate(){this.model.active=!1}onShow(){this._view.show()}onHide(){this._view.hide()}onDetach(){this.model.reset()}onInputEvent(e){this._controller.handleInputEvent(e)}};e([n({dependsOn:["model.isMeasuring","model.state"],readOnly:!0})],Nt.prototype,"state",null),e([n({dependsOn:["view.type"],readOnly:!0})],Nt.prototype,"isSupported",null),e([n({dependsOn:["model.active","state"],readOnly:!0})],Nt.prototype,"cursor",null),e([n({constructOnly:!0})],Nt.prototype,"model",void 0),e([p("model.mode")],Nt.prototype,"mode",void 0),e([p("model.unit")],Nt.prototype,"unit",void 0),e([p("model.areaLabel")],Nt.prototype,"areaLabel",void 0),e([p("model.area")],Nt.prototype,"area",void 0),e([p("model.geodesicArea")],Nt.prototype,"geodesicArea",void 0),e([p("model.pathLengthLabel")],Nt.prototype,"pathLengthLabel",void 0),e([p("model.pathLength")],Nt.prototype,"pathLength",void 0),e([p("model.geodesicPathLength")],Nt.prototype,"geodesicPathLength",void 0),e([p("model.perimeterLengthLabel")],Nt.prototype,"perimeterLengthLabel",void 0),e([p("model.perimeterLength")],Nt.prototype,"perimeterLength",void 0),e([p("model.geodesicPerimeterLength")],Nt.prototype,"geodesicPerimeterLength",void 0),e([p("model.validMeasurement")],Nt.prototype,"validMeasurement",void 0),e([p("model.viewData")],Nt.prototype,"viewData",void 0),Nt=e([h("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],Nt);var Zt=Nt;const Kt=r.getLogger("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel");let $t=class extends mt{constructor(e){super(e),this.supportedViewType="3d",this._handles=new T,this._userUnitOptions=null,this._userUnit=null,this.tool=null}initialize(){this._handles.add([K(this,"unit",(e=>{this.tool&&(this.tool.model.unit=e)}))])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get measurement(){if(!this.tool||this.isDisabled)return null;const e=this.tool.model,t=e.measurementMode,s=e.measurementData,i=e.validMeasurement,r=0===("euclidean"===t?s.intersectingSegments:s.geodesicIntersectingSegments).size,n=r?i?"available":"unavailable":"invalid";return{mode:t,area:{text:r&&i?e.areaLabel:null,state:n},perimeterLength:{text:r&&i?e.perimeterLengthLabel:null,state:n}}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}newMeasurement(){a(this.start())}clearMeasurement(){this.clear()}createToolParams(){return{toolConstructor:Zt,constructorArguments:()=>({unit:this.unit})}}logUnsupportedError(){Kt.error("AreaMeasurement3D widget is not implemented for MapView")}logError(...e){Kt.error(...e)}_findSelectableUnit(e,t){const s=this.unitOptions;return-1!==s.indexOf(e)?e:t?this._findSelectableUnit(t):s[0]}_filteredOrAllUnits(e){if(!e)return N.slice();const t=e.filter((e=>-1!==N.indexOf(e)));return 0===t.length?N.slice():t}};e([n({readOnly:!0,dependsOn:["isDisabled","tool.state"]})],$t.prototype,"state",null),e([n({readOnly:!0,dependsOn:["view.ready","tool.model.area","tool.model.geodesicArea","tool.model.areaLabel","tool.model.perimeterLength","tool.model.geodesicPerimeterLength","tool.model.perimeterLengthLabel","tool.model.measurementMode","tool.model.measurementData"]})],$t.prototype,"measurement",null),e([n({constructOnly:!0})],$t.prototype,"tool",void 0),e([n(lt)],$t.prototype,"defaultUnit",void 0),e([n({dependsOn:["view.spatialReference"]})],$t.prototype,"unitOptions",null),e([n({dependsOn:["unitOptions","defaultUnit"]})],$t.prototype,"unit",null),e([n()],$t.prototype,"clearMeasurement",null),$t=e([h("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],$t);var Jt=$t;export default Jt;
