/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../chunks/object.js";import"../../chunks/deprecate.js";import"../../core/lang.js";import"../../config.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import t from"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import{ignoreAbortErrors as i}from"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/ensureType.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../chunks/resourceExtension.js";let r=class extends t{get canZoomIn(){if(!this.get("view.ready"))return!1;const e=this.get("view.animation.target.scale")||this.get("view.scale"),o=this.get("view.constraints.effectiveMaxScale");return 0===o||e>o}get canZoomOut(){if(!this.get("view.ready"))return!1;const e=this.get("view.animation.target.scale")||this.get("view.scale"),o=this.get("view.constraints.effectiveMinScale");return 0===o||e<o}};e([o({dependsOn:["view.ready","view.scale","view.animation.target.scale","view.constraints.effectiveMaxScale"],readOnly:!0})],r.prototype,"canZoomIn",null),e([o({dependsOn:["view.ready","view.scale","view.animation.target.scale","view.constraints.effectiveMinScale"],readOnly:!0})],r.prototype,"canZoomOut",null),e([o()],r.prototype,"view",void 0),r=e([s("esri.widgets.Zoom.ZoomConditions2D")],r);var n=r;let a=class extends t{get canZoomIn(){return!!this.get("view.ready")}get canZoomOut(){return!!this.get("view.ready")}};e([o({dependsOn:["view.ready"],readOnly:!0})],a.prototype,"canZoomIn",null),e([o({dependsOn:["view.ready"],readOnly:!0})],a.prototype,"canZoomOut",null),e([o()],a.prototype,"view",void 0),a=e([s("esri.widgets.Zoom.ZoomConditions3D")],a);var c=a;let m=class extends t{constructor(e){super(e),this.canZoomIn=!1,this.canZoomOut=!1}destroy(){this.view=null}get state(){return this.get("view.ready")?"ready":"disabled"}set view(e){e?"2d"===e.type?this._zoomConditions=new n({view:e}):"3d"===e.type&&(this._zoomConditions=new c({view:e})):this._zoomConditions=null,this._set("view",e)}zoomIn(){if(!this.canZoomIn)return;const e=this.view;"2d"===e.type?e.mapViewNavigation.zoomIn():i(e.goTo({zoomFactor:2}))}zoomOut(){if(!this.canZoomOut)return;const e=this.view;"2d"===e.type?e.mapViewNavigation.zoomOut():i(e.goTo({zoomFactor:.5}))}};e([o()],m.prototype,"_zoomConditions",void 0),e([o({aliasOf:"_zoomConditions.canZoomIn",readOnly:!0})],m.prototype,"canZoomIn",void 0),e([o({aliasOf:"_zoomConditions.canZoomOut",readOnly:!0})],m.prototype,"canZoomOut",void 0),e([o({dependsOn:["view.ready"],readOnly:!0})],m.prototype,"state",null),e([o()],m.prototype,"view",null),m=e([s("esri.widgets.Zoom.ZoomViewModel")],m);var p=m;export default p;
