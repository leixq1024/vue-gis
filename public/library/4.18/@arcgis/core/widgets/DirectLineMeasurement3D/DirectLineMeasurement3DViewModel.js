/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../chunks/ArrayPool.js";import"../../chunks/object.js";import"../../chunks/deprecate.js";import"../../core/lang.js";import"../../config.js";import{i as t,b as i,u as s,L as r}from"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/metadata.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import n from"../../core/Accessor.js";import"../../chunks/PropertyOrigin.js";import"../../core/scheduling.js";import{ignoreAbortErrors as a}from"../../core/promiseUtils.js";import"../../chunks/Message.js";import"../../core/Error.js";import"../../chunks/compilerUtils.js";import"../../chunks/ensureType.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Evented.js";import"../../core/Collection.js";import"../../chunks/collectionUtils.js";import"../../chunks/JSONSupport.js";import"../../chunks/Promise.js";import"../../chunks/Loadable.js";import"../../core/urlUtils.js";import{aliasOf as h}from"../../core/accessorSupport/decorators/aliasOf.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/jsonMap.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../chunks/resourceExtension.js";import"../../chunks/persistableUrlUtils.js";import"../../geometry/SpatialReference.js";import{o as c}from"../../chunks/locale.js";import"../../chunks/number.js";import{fetchMessageBundle as d}from"../../intl.js";import"../../kernel.js";import"../../request.js";import"../../chunks/assets.js";import"../../geometry/Geometry.js";import m from"../../geometry/Point.js";import"../../chunks/Ellipsoid.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Extent.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalFolder.js";import"../../portal/PortalGroup.js";import"../../portal/PortalUser.js";import"../../portal/Portal.js";import{r as p,b as u,d as _,s as g,p as v}from"../../chunks/mathUtils2.js";import{c as f}from"../../chunks/vec3f64.js";import"../../chunks/common.js";import{k as b,f as y,n as w,c as j,e as P,i as L,b as S,g as k,s as M,a as C}from"../../chunks/vec3.js";import{s as D}from"../../chunks/mathUtils.js";import"../../chunks/colorUtils.js";import"../../Color.js";import"../../chunks/zmUtils.js";import"../../geometry/Multipoint.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import O from"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../geometry.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/domains.js";import"../../chunks/arcadeOnDemand.js";import"../../layers/support/fieldUtils.js";import"../../popup/content/Content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/CustomContent.js";import"../../chunks/date.js";import"../../popup/support/FieldInfoFormat.js";import"../../popup/FieldInfo.js";import"../../popup/content/FieldsContent.js";import"../../chunks/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/MediaContent.js";import"../../popup/content/TextContent.js";import"../../popup/content.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/RelatedRecordsInfo.js";import"../../chunks/Identifiable.js";import"../../support/actions/ActionBase.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../PopupTemplate.js";import"../../symbols/Symbol.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol3DLayer.js";import{f as x,d as R,b as z,s as T,e as A,g as U}from"../../chunks/screenUtils.js";import"../../chunks/opacityUtils.js";import"../../chunks/materialUtils.js";import"../../symbols/edges/Edges3D.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/utils.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/patterns/StylePattern3D.js";import"../../symbols/FillSymbol3DLayer.js";import"../../chunks/colors.js";import"../../chunks/Symbol3DOutline.js";import"../../symbols/Font.js";import"../../symbols/IconSymbol3DLayer.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/Symbol3D.js";import"../../chunks/Thumbnail.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../chunks/Symbol3DVerticalOffset.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/MeshSymbol3D.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/uid.js";import"../../Graphic.js";import E from"../../core/Handles.js";import"../../layers/Layer.js";import{f as I,e as V,S as G,W as H,m as F,c as q,z as W}from"../../chunks/unitUtils.js";import"../../chunks/lengthUtils.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/timeUtils.js";import"../../TimeExtent.js";import{init as Q}from"../../core/watchUtils.js";import"../../chunks/fieldType.js";import{i as N,t as B}from"../../chunks/mat4.js";import"../../chunks/pe.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../geometry/support/GeographicTransformation.js";import{canProjectWithoutEngine as J,projectPointToWGS84ComparableLonLat as X,projectPointToVector as Z,projectVectorToVector as $}from"../../geometry/projection.js";import"../../chunks/unitConversionUtils.js";import"../../core/HandleOwner.js";import"../../chunks/_commonjsHelpers.js";import{inverseGeodeticSolver as K,isSupported as Y,geodesicLengths as ee}from"../../geometry/support/geodesicUtils.js";import"../../chunks/geometryEngineBase.js";import"../../chunks/hydrated.js";import{geodesicLength as te}from"../../geometry/geometryEngine.js";import"../../chunks/vec4f64.js";import"../../chunks/earcut.js";import"../../chunks/deduplicate.js";import"../../chunks/triangulationUtils.js";import{c as ie}from"../../chunks/quatf64.js";import"../../chunks/mat3.js";import"../../chunks/BufferView.js";import{s as se,n as re,l as oe,b as ne,f as ae,i as le}from"../../chunks/vec2.js";import{e as he,c as ce}from"../../chunks/vec4.js";import"../../chunks/quat.js";import"../../chunks/domUtils.js";import"../../chunks/widgetUtils.js";import"../../chunks/projector.js";import{U as de,Q as me,s as pe,T as ue,L as _e,c as ge,p as ve,e as fe,f as be,g as ye,h as we,i as je,j as Pe,k as Le,m as Se}from"../../chunks/UnitNormalizer.js";import"../../chunks/accessibleHandler.js";import"../../chunks/messageBundle.js";import"../../chunks/renderable.js";import"../../chunks/vmEvent.js";import"../../chunks/index.js";import"../support/widget.js";import"../Widget.js";import"../../chunks/zscale.js";import"../../chunks/queryZScale.js";import"../../layers/support/Field.js";import"../../tasks/support/FeatureSet.js";import"../../chunks/DataLayerSource.js";import"../../tasks/support/AttachmentQuery.js";import"../../tasks/support/Query.js";import"../../tasks/support/StatisticDefinition.js";import"../../tasks/support/RelationshipQuery.js";import"../../tasks/Task.js";import"../../chunks/OptimizedGeometry.js";import"../../chunks/featureConversionUtils.js";import"../../tasks/QueryTask.js";import"../../chunks/pbf.js";import"../../chunks/pbfQueryUtils.js";import"../../chunks/query.js";import"../../layers/support/AttachmentInfo.js";import"../../chunks/aaBoundingBox.js";import"../../chunks/MapUtils.js";import"../../chunks/Queue.js";import"../../chunks/InputManager.js";import"../../chunks/interactiveToolUtils.js";import"../../chunks/throttle.js";import"../Attachments.js";import"../Attachments/AttachmentsViewModel.js";import"../Feature/FeatureViewModel.js";import"../Feature.js";import"../../chunks/AnchorElementViewModel.js";import"../Spinner/SpinnerViewModel.js";import"../Popup.js";import"../../chunks/layerViewUtils.js";import"../../chunks/actions.js";import"../../chunks/GoTo.js";import"../Popup/PopupViewModel.js";import{c as ke}from"../../chunks/screenUtils2.js";import"../../chunks/quantizationUtils.js";import"../../chunks/dehydratedFeatures.js";import{g as Me}from"../../chunks/ElevationProvider.js";import"../../chunks/vec2f64.js";import"../../chunks/requestImageUtils.js";import{S as Ce,g as De,p as Oe,a as xe,b as Re,D as ze,V as Te,R as Ae,M as Ue,G as Ee,t as Ie}from"../../chunks/PiUtils.glsl.js";import{P as Ve}from"../../chunks/Program.js";import{m as Ge,a as He,d as Fe}from"../../chunks/isWebGL2Context.js";import"../../chunks/glUtil.js";import{n as qe}from"../../chunks/InterleavedLayout.js";import"../../chunks/mat4f32.js";import"../../chunks/vec3f32.js";import{c as We,u as Qe,O as Ne}from"../../chunks/geometryUtils.js";import{R as Be,G as Je,o as Xe}from"../../chunks/ColorMaterial.js";import{V as Ze}from"../../chunks/Util.js";import{G as $e}from"../../chunks/Geometry.js";import"../../chunks/VertexArrayObject.js";import{c as Ke}from"../../chunks/lineUtils.js";import"../../chunks/Object3D.js";import"../../chunks/intersectorUtils.js";import{I as Ye}from"../../chunks/Intersector.js";import"../../chunks/Camera.js";import"../../chunks/DefaultTextureUnits.js";import"../../chunks/elevationAlignmentUtils.js";import"../../chunks/RenderingContext.js";import"../../chunks/PhysicallyBasedRendering.glsl.js";import"../../chunks/CameraSpace.glsl.js";import{a as et}from"../../chunks/lineStippleUtils.js";import"../../chunks/Texture.js";import{P as tt}from"../../chunks/PropertiesPool.js";import{f as it,c as st,a as rt}from"../../chunks/vec4f32.js";import"../../chunks/elevationInfoUtils.js";import{I as ot,c as nt,r as at}from"../../chunks/InteractiveToolBase.js";import{V as lt,O as ht,R as ct,L as dt}from"../../chunks/RightAngleQuadVisualElement.js";import"../../chunks/LaserLineRenderer.js";import{d as mt}from"../../chunks/commonProperties3.js";import{I as pt}from"../../chunks/InteractiveToolViewModel.js";import{s as ut,h as _t}from"../../chunks/dragEventPipeline3D.js";import{c as gt}from"../../chunks/manipulatorUtils.js";let vt=class extends n{constructor(){super(...arguments),this.settings=new ft,this.measurement=null}destroy(){this.settings.destroy()}set startPoint(e){this.measurement=null,this._set("startPoint",t(e)?e.clone():null)}set endPoint(e){this.measurement=null,this._set("endPoint",t(e)?e.clone():null)}};e([o()],vt.prototype,"settings",void 0),e([o({value:null})],vt.prototype,"startPoint",null),e([o({value:null})],vt.prototype,"endPoint",null),e([o()],vt.prototype,"measurement",void 0),vt=e([l("esri.views.3d.interactive.graphics.DirectLineMeasurement3D")],vt);let ft=class extends n{constructor(){super(...arguments),this.unit="metric"}};e([o({value:"metric"})],ft.prototype,"unit",void 0),ft=e([l("esri.views.3d.interactive.graphics.directLineMeasurement3D.Settings")],ft);let bt=class extends n{constructor(){super(...arguments),this._tempStartPosition=f(),this._tempEndPosition=f(),this._tempCornerPosition=f(),this._unitNormalizer=new de,this._handles=new E,this._propertiesPool=new tt({startPoint:m,endPoint:m},this),this.model=new vt,this.cursorPoint=null,this.state="initial",this.mode="auto",this.active=!1,this.geodesicMeasurementDistanceThreshold=1e5}initialize(){this._handles.add([this.model.watch("startPoint",(()=>this._updateMeasurement()),!0),this.model.watch("endPoint",(()=>this._updateMeasurement()),!0),this.model.watch("settings",(()=>this._updateMeasurement()),!0)],"model"),d("esri/core/t9n/Units").then((e=>{this.messages=e})),this._handles.add(c((async()=>{this.messages=await d("esri/core/t9n/Units")}))),this._handles.add(Q(this.sceneView,"spatialReference",(e=>{const t=I(e),i=t===G?H:t;this._sphericalPCPF=i;const s=J(e,i);this._unitNormalizer.spatialReference=s?i:e})),"scene-view"),this.reset()}destroy(){this._handles.destroy(),this._handles=null,this._propertiesPool.destroy(),this._propertiesPool=null,this.model.destroy()}set startPointSurfaceLocation(e){this._set("startPointSurfaceLocation",e),this._updateMeasurement()}set endPointSurfaceLocation(e){this._set("endPointSurfaceLocation",e),this._updateMeasurement()}get measurementSurfaceLocation(){const e=this.startPointSurfaceLocation,t=this.endPointSurfaceLocation;return null==e||null==t||"above-the-surface"===e&&"below-the-surface"===t||"below-the-surface"===e&&"above-the-surface"===t||"on-the-surface"===e&&"on-the-surface"===t?"camera-dependent":"above-the-surface"===e||"above-the-surface"===t?"above-the-surface":"below-the-surface"}get validMeasurement(){return t(this.model.startPoint)&&t(this.model.endPoint)}get isMeasuring(){return!!this.startPoint}get geodesicDistanceExceeded(){return t(this.model.measurement)&&this.model.measurement.horizontalDistance&&this.model.measurement.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold}get measurementMode(){let e=this.mode;return"auto"===e&&(e="euclidean","degrees"!==this.unit&&"degrees-minutes-seconds"!==this.unit||(e="geodesic"),this.geodesicDistanceExceeded&&(e="geodesic")),e}reset(){this.clearMeasurement()}clearMeasurement(){this.state="initial",this.startPoint=null,this.endPoint=null,this.cursorPoint=null,this._clearOverride("measurementSurfaceLocation"),this._updateMeasurement()}finishMeasurement(){if(!this._isOverridden("measurementSurfaceLocation")){const e=this.measurementSurfaceLocation,t="camera-dependent"===e?this.sceneView.state.camera.aboveGround?"above-the-surface":"below-the-surface":e;this._override("measurementSurfaceLocation",t)}this.state="measured"}_fallbackGeodesicAngle(e,t){return e/V(t).metersPerDegree}_fallbackGeodesicDistance(e,t,i){if(X(e,yt)){X(t,wt);const e=_(yt[0]),i=_(yt[1]),s=_(wt[0]),r=_(wt[1]),o=Math.abs(s-e),n=u(Math.sin(i)*Math.sin(r)+Math.cos(i)*Math.cos(r)*Math.cos(o)),a=p(n),l={distance:0};return K(l,[yt[0],yt[1]],[wt[0],wt[1]]),{distance:l.distance,angle:a}}{const t=e.spatialReference,s=i;return{distance:s,angle:this._fallbackGeodesicAngle(s,t)}}}_exactGeodesicDistanceAndAngle(e,t,i){const s=e.spatialReference,r=new O({paths:[e,t],spatialReference:s}),o=s.isGeographic&&Y(s)?ee([r],"meters")[0]:s.isWebMercator?te(r,"meters"):void 0,{distance:n,angle:a}=o?{distance:o,angle:this._fallbackGeodesicAngle(o,s)}:this._fallbackGeodesicDistance(e,t,i);return{distance:new me(n,"meters"),angle:new me(a,"degrees")}}_euclideanDistances(e,t){e.z>t.z&&(e=[e,e=t][0]);const i=e.clone();i.z=t.z;const s=this._tempStartPosition,r=this._tempEndPosition,o=this._tempCornerPosition,n=this.sceneView.spatialReference,a=this._sphericalPCPF,l=J(n,a)?a:n;Z(e,s,l),Z(t,r,l),Z(i,o,l);const h=b(s,r),c=b(o,r),d=Math.abs(t.z-e.z),m=e=>this._unitNormalizer.normalizeDistance(e),p=m(h),u=m(c),_=m(d);return{direct:new me(p,"meters"),horizontal:new me(u,"meters"),vertical:new me(_,"meters")}}_updateMeasurement(){if(i(this.startPoint)||i(this.endPoint))return void(this.model.measurement=null);const e=this._euclideanDistances(this.startPoint,this.endPoint),t=this._exactGeodesicDistanceAndAngle(this.startPoint,this.endPoint,e.horizontal.value);this.model.measurement={directDistance:e.direct,horizontalDistance:e.horizontal,verticalDistance:e.vertical,geodesicDistance:t.distance,geodesicAngle:t.angle}}};e([o()],bt.prototype,"messages",void 0),e([o({constructOnly:!0})],bt.prototype,"sceneView",void 0),e([o()],bt.prototype,"model",void 0),e([h("model.startPoint")],bt.prototype,"startPoint",void 0),e([o({value:null})],bt.prototype,"startPointSurfaceLocation",null),e([h("model.endPoint")],bt.prototype,"endPoint",void 0),e([o({value:null})],bt.prototype,"endPointSurfaceLocation",null),e([o({dependsOn:["startPointSurfaceLocation","endPointSurfaceLocation"]})],bt.prototype,"measurementSurfaceLocation",null),e([o()],bt.prototype,"cursorPoint",void 0),e([o()],bt.prototype,"state",void 0),e([o()],bt.prototype,"mode",void 0),e([h("model.settings.unit")],bt.prototype,"unit",void 0),e([o()],bt.prototype,"active",void 0),e([o({readOnly:!0,dependsOn:["model.startPoint","model.endPoint"]})],bt.prototype,"validMeasurement",null),e([o({readOnly:!0,dependsOn:["startPoint"]})],bt.prototype,"isMeasuring",null),e([o()],bt.prototype,"geodesicMeasurementDistanceThreshold",void 0),e([o({readOnly:!0,dependsOn:["model.measurement","geodesicMeasurementDistanceThreshold"]})],bt.prototype,"geodesicDistanceExceeded",null),e([o({readOnly:!0,dependsOn:["unit","geodesicDistanceExceeded"]})],bt.prototype,"measurementMode",null),bt=e([l("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],bt);const yt=f(),wt=f();var jt=bt;class Pt extends lt{constructor(e){super(e.view),this._handles=new E,this._textItem=null,this._calloutItem=null,this._showCallout=!0,this._showText=!0,this._geometry=null,this._text=null,this._fontSize=14,this._distance=25,this._anchor="right",this.applyProps(e)}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._updateLabelPosition()}get textItem(){return this._textItem}get text(){return this._text}set text(e){this._text=e,this.attached&&(this._textItem.text=this._text)}get fontSize(){return this._fontSize}set fontSize(e){this._fontSize=e,this.attached&&(this._textItem.fontSize=this._fontSize)}get distance(){return this._distance}set distance(e){this._distance!==e&&(this._distance=e,this._updateLabelPosition())}get anchor(){return this._anchor}set anchor(e){this._anchor!==e&&(this._anchor=e,this._updateLabelPosition())}_updateLabelPosition(){if(this.attached&&t(this.geometry)&&this.view._stage)switch(this.geometry.type){case"point":this._computeLabelPositionFromPoint(this.geometry,Ct)?(this._textItem.position=[Ct[0],Ct[1]],this._textItem.anchor="center",this._showText=!0):this._showText=!1,this._showCallout=!1;break;case"euclidean":case"geodesic":if(this._computeLabelPositionFromSegment(this.geometry,this._distance,this._anchor,Ct,Dt)){const e=Dt[0]-Ct[0],t=Dt[1]-Ct[1];this._textItem.position=[Dt[0],Dt[1]],this._textItem.anchor=Math.abs(e)>Math.abs(t)?e>0?"left":"right":t>0?"top":"bottom",this._textItem.visible=this.visible,this._calloutItem.startPosition=[Ct[0],Ct[1]],this._calloutItem.endPosition=[Dt[0],Dt[1]],this._showText=!0,this._showCallout=!0}else this._showText=!1,this._showCallout=!1}this.updateVisibility(this.visible)}_computeLabelPositionFromPoint(e,t){this.view.renderCoordsHelper.toRenderCoords(e,kt);const i=this.view._stage.getCamera();return i.projectToRenderScreen(kt,Mt),!(Mt[2]<0||Mt[2]>1)&&(i.renderToScreen(Mt,t),!0)}_computeLabelPositionFromSegment(e,t,i,s,r){if(!e)return!1;const o=this.view._stage.getCamera();pe(e.startRenderSpace,e.endRenderSpace,Lt,o),se(St,-Lt[1],Lt[0]);let n=!1;switch(i){case"top":n=St[1]<0;break;case"bottom":n=St[1]>0;break;case"left":n=St[0]>0;break;case"right":n=St[0]<0}if(n&&re(St,St),0===oe(St))switch(i){case"top":St[1]=1;break;case"bottom":St[1]=-1;break;case"left":St[0]=-1;break;case"right":St[0]=1}return e.eval(.5,kt),o.projectToRenderScreen(kt,Mt),!(Mt[2]<0||Mt[2]>1)&&(o.renderToScreen(Mt,s),ne(St,St,t*o.pixelRatio),ae(St,St,Mt),o.renderToScreen(St,r),!0)}createResources(){this._textItem=new ue({visible:!0}),this._textItem.text=s(this._text),this._textItem.fontSize=this._fontSize,this._calloutItem=new _e({visible:!0,width:2}),this._updateLabelPosition(),this.view.overlay.items.addMany([this._textItem,this._calloutItem]),this._handles.add(this.view.state.watch("camera",(()=>{this._updateLabelPosition()})))}destroyResources(){this.view.overlay&&!this.view.overlay.destroyed&&this.view.overlay.items.removeMany([this._textItem,this._calloutItem]),this._handles.removeAll()}updateVisibility(e){this._textItem.visible=this._showText&&e,this._calloutItem.visible=this._showCallout&&e}}const Lt=x(),St=x(),kt=f(),Mt=R(),Ct=z(),Dt=z();class Ot extends ht{constructor(e){super(e),this._origin=f(),this._renderOccluded=4,this._width=1,this._color=it(1,0,1,1),this._innerWidth=1,this._innerColor=null,this._stipplePattern=null,this._stippleOffColor=null,this._stippleIntegerRepeats=!1,this._writeDepthEnabled=!0,this._falloff=0,this._polygonOffset=!1,this.applyProps(e)}setGeometryFromExtent(e){const t=this.view.spatialReference,i=f(),s=f(),r=100,o=[];y(i,e[0],e[1],r),this.view.renderCoordsHelper.toRenderCoords(i,t,s),o.push([s[0],s[1],s[2]]),y(i,e[2],e[1],r),this.view.renderCoordsHelper.toRenderCoords(i,t,s),o.push([s[0],s[1],s[2]]),y(i,e[2],e[3],r),this.view.renderCoordsHelper.toRenderCoords(i,t,s),o.push([s[0],s[1],s[2]]),y(i,e[0],e[3],r),this.view.renderCoordsHelper.toRenderCoords(i,t,s),o.push([s[0],s[1],s[2]]),y(i,e[0],e[1],r),this.view.renderCoordsHelper.toRenderCoords(i,t,s),o.push([s[0],s[1],s[2]]),y(i,e[0],e[1],r),this.view.renderCoordsHelper.toRenderCoords(i,t,s),o.push([s[0],s[1],s[2]]),this.geometry=[o]}setGeometryFromFrustum(e){const t=[];e.lines.forEach((e=>{t.push([e.origin[0],e.origin[1],e.origin[2]]),t.push([e.endpoint[0],e.endpoint[1],e.endpoint[2]])})),this.geometry=[t]}setGeometryFromSegment(e){const{points:t}=e.createRenderGeometry(this._origin,this.view.renderCoordsHelper);this.geometry=[t]}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get color(){return this._color}set color(e){he(e,this._color)||(ce(this._color,e),this._updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){he(e,this._innerColor)||(this._innerColor=ce(st(),e),this._updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(e){const i=t(e)!==t(this._stipplePattern);this._stipplePattern=e,i?this.recreate():this._updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){(i(e)||i(this._stippleOffColor)||!he(e,this._stippleOffColor))&&(this._stippleOffColor=t(e)?rt(e):null,this._updateMaterial())}get stippleIntegerRepeats(){return this._stippleIntegerRepeats}set stippleIntegerRepeats(e){this._stippleIntegerRepeats!==e&&(this._stippleIntegerRepeats=e,this._updateMaterial())}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this._updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){e!==this._polygonOffset&&(this._polygonOffset=e,this._updateMaterial())}createExternalResources(){this._material=new Be(this.materialParameters,"lineVisualElement")}destroyExternalResources(){this._material=null}createGeometries(e){const t=this._createLineGeometries();if(0!==t.length)for(let i=0;i<t.length;++i){const s=Ke(t[i]),r=new $e(s,"lineVisualElement");e.addGeometry(r,this._material)}}forEachExternalResource(e){e(this._material)}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,isClosed:!1,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,stippleIntegerRepeats:this._stippleIntegerRepeats,polygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}_updateMaterial(){this.attached&&this._material.setParameterValues(this.materialParameters)}_createLineGeometries(){const e=this.geometry;if(i(e))return[];const t=[];return e.forEach((e=>{const i=e.length,s=new Float64Array(3*i);e.forEach(((e,t)=>{s[3*t+0]=e[0],s[3*t+1]=e[1],s[3*t+2]=e[2]}));const r={attributeData:{position:s},removeDuplicateStartEnd:0};t.push(r)})),t}}var xt=Object.freeze({__proto__:null,build:function(){const e=new Ce;e.vertex.uniforms.add("proj","mat4").add("view","mat4").add("width","float"),e.attributes.add("position","vec3"),e.attributes.add("normal","vec3"),e.attributes.add("uv0","vec2"),e.attributes.add("auxpos1","float"),e.varyings.add("vtc","vec2"),e.varyings.add("vlength","float"),e.varyings.add("vradius","float"),e.vertex.code.add(De`
    void main(void) {
      vec3 bitangent = normal;

      vtc = uv0;
      vlength = auxpos1;
      vradius = 0.5 * width;

      vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
      gl_Position = proj * pos;
    }
  `),e.fragment.uniforms.add("outlineSize","float").add("outlineColor","vec4").add("stripeLength","float").add("stripeEvenColor","vec4").add("stripeOddColor","vec4");const t=1/Math.sqrt(2);return e.fragment.code.add(De`
    const float INV_SQRT2 = ${De.float(t)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      gl_FragColor = color;
    }
  `),e}});class Rt extends Re{constructor(e,t){super(e,t)}initializeProgram(e){const t=Rt.shader.get().build();return new Ve(e.rctx,t.generateSource("vertex"),t.generateSource("fragment"),ze)}bindPass(e,t,i){Te.bindProjectionMatrix(this.program,i.camera.projectionMatrix),this.program.setUniform1f("width",t.width),this.program.setUniform1f("outlineSize",t.outlineSize),this.program.setUniform4fv("outlineColor",t.outlineColor),this.program.setUniform1f("stripeLength",t.stripeLength),this.program.setUniform4fv("stripeEvenColor",t.stripeEvenColor),this.program.setUniform4fv("stripeOddColor",t.stripeOddColor)}bindDraw(e){Te.bindView(this.program,e)}initializePipeline(){return Ge({polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:513},depthWrite:He,colorWrite:Fe})}get primitiveType(){return 5}}Rt.shader=new Ae(xt,(()=>Promise.resolve().then((function(){return xt}))));class zt extends xe{constructor(){super(...arguments),this.polygonOffsetEnabled=!1}}e([Oe()],zt.prototype,"polygonOffsetEnabled",void 0);class Tt extends Ue{constructor(e,t){super(t,e,Ut),this.techniqueConfig=new zt}getTechniqueConfig(){return this.techniqueConfig.polygonOffsetEnabled=this.params.polygonOffset,this.techniqueConfig}dispose(){}getPassParameters(){return this.params}intersect(){}createBufferWriter(){return new qt}getGLMaterial(e){return 0===e.output?new At(e):void 0}}class At extends Ee{constructor(e){super(e),this.updateParameters()}updateParameters(){this.technique=this.techniqueRep.acquireAndReleaseExisting(Rt,this.material.getTechniqueConfig(),this.technique)}beginSlot(e){return 3===e}bind(e,t){e.bindProgram(this.technique.program),this.technique.bindPass(e,this.material.getPassParameters(),t)}}const Ut={width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1,...Ie},Et=qe().vec3f(Ze.POSITION).vec3f(Ze.NORMAL).vec2f(Ze.UV0).f32(Ze.AUXPOS1),It=f(),Vt=f(),Gt=f(),Ht=f(),Ft=f();class qt{constructor(){this.vertexBufferLayout=Et}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 2*(e.indices[Ze.POSITION].length/2+1)}write(e,t,i,s){const r=t.vertexAttr[Ze.POSITION].data,o=t.vertexAttr[Ze.NORMAL].data,n=r.length/3,a=t&&t.indices&&t.indices.position;a&&a.length!==2*(n-1)&&console.warn("MeasurementArrowMaterial does not support indices");const l=It,h=Vt,c=Gt,d=Ht,m=Ft,p=e.transformation,u=e.invTranspTransformation,_=i.position,g=i.normal,v=i.uv0;let f=0;for(let e=0;e<n;++e){const t=3*e;if(y(l,r[t],r[t+1],r[t+2]),e<n-1){const t=3*(e+1);y(h,r[t],r[t+1],r[t+2]),y(m,o[t],o[t+1],o[t+2]),w(m,m),j(c,h,l),w(c,c),P(d,m,c),w(d,d)}const i=b(l,h);p&&u&&(L(l,l,p),L(h,h,p),L(d,d,u));const a=s+2*e,S=a+1;_.setVec(a,l),_.setVec(S,l),g.setVec(a,d),g.setVec(S,d),v.set(a,0,f),v.set(a,1,-1),v.set(S,0,f),v.set(S,1,1),e<n-1&&(f+=i)}const S=i.auxpos1;for(let e=0;e<2*n;++e)S.set(s+e,f)}}class Wt extends ht{constructor(e){super(e),this._parameters=Qt,this._handles=null,this._origin=f(),this._originTransform=ie(),this._arrowCenter=f(),this._renderOccluded=4,this._geometry=null,this._stripeLength=1,this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameterValues({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameterValues({stripeLength:this._stripeLength})}createExternalResources(){this._arrowMaterial=new Tt({outlineColor:this._parameters.arrowOutlineColor,stripeEvenColor:this._parameters.arrowStripeEvenColor,stripeOddColor:this._parameters.arrowStripeOddColor,renderOccluded:this.renderOccluded,polygonOffset:!0},"arrow"),this._handles=new E,this._handles.add(this.view.state.watch("camera",(()=>{this.viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles.destroy(),this._handles=null}forEachExternalResource(e){e(this._arrowMaterial)}createGeometries(e){if(i(this._geometry)||i(this._geometry.startRenderSpace)||i(this._geometry.endRenderSpace))return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);e.addGeometry(t,this._arrowMaterial,this._originTransform),this.viewChanged()}_createArrowGeometry(e,t,i,s){const r=this.view.renderCoordsHelper,o=[],n=[],a=(e,t)=>{const s=We.get();j(s,e,i),o.push(s),n.push(t)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const i=We.get();r.worldUpAtPosition(this._arrowCenter,i),a(e,i),a(t,i)}else{s.eval(.5,this._arrowCenter);const e=this._parameters.arrowSubdivisions+1&-2;for(let t=0;t<e;++t){const i=t/(e-1),o=We.get(),n=We.get();s.eval(i,o),r.worldUpAtPosition(o,n),a(o,n)}}return new $e(Je.createPolylineGeometry(o,n),"arrow")}geometryChanged(){this.recreateGeometry()}viewChanged(){if(this.view.ready&&this.attached&&t(this._geometry)){const e=this.view._stage.getCamera().computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameterValues({width:this._parameters.arrowWidth*e})}}}const Qt={arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128};class Nt{constructor(e=f(),t=f()){this.startRenderSpace=e,this.endRenderSpace=t,this.type="euclidean"}eval(e,t){return S(t,this.startRenderSpace,this.endRenderSpace,e)}createRenderGeometry(e,t){const i=[],s=[],r=(t,r)=>{const o=Xt;j(o,t,e),i.push([o[0],o[1],o[2]]),s.push([r[0],r[1],r[2]])},o=t.worldUpAtPosition(this.eval(.5,Jt),We.get());return r(this.startRenderSpace,o),r(this.endRenderSpace,o),{points:i,normals:s}}}class Bt{constructor(e,t,i){this.startRenderSpace=e,this.endRenderSpace=t,this.renderSpatialReference=i,this.type="geodesic",this._start=f(),this._end=f(),this._pcpf=I(i),this._project=J(i,this._pcpf),this._projectIn(e,this._start),this._projectIn(t,this._end)}_projectIn(e,t){this._project?$(e,this.renderSpatialReference,t,this._pcpf):k(t,e)}eval(e,t){return this._project?(D(this._start,this._end,e,t),$(t,this._pcpf,t,this.renderSpatialReference)):S(t,this._start,this._end,e),t}createRenderGeometry(e,t){const i=[],s=[],r=(t,r)=>{const o=Zt;j(o,t,e),i.push([o[0],o[1],o[2]]),s.push([r[0],r[1],r[2]])};for(let e=0;e<128;++e){const i=e/127,s=Jt,o=Xt;this.eval(i,s),t.worldUpAtPosition(s,o),r(s,o)}return{points:i,normals:s}}}const Jt=f(),Xt=f(),Zt=f(),$t=it(1,.5,0,.75),Kt={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:$t,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:$t,guideLineWidth:2,guideLineColor:$t,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12};class Yt{constructor(e,t={}){this._visible=!1,this._measurementArrow=null,this._horizontalAndVerticalSegmentLines=null,this._rightAngleQuad=null,this._directSegmentLabel=null,this._verticalSegmentLabel=null,this._horizontalSegmentLabel=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._laserLine=null,this._directSegmentLabelMeasurement="directDistance",this._horizontalSegmentLabelMeasurement="horizontalDistance",this._verticalSegmentLabelMeasurement="verticalDistance",this._handles=new E,this._listenerHandles=null,this._cursorPosition=f(),this._startPosition=f(),this._endPosition=f(),this._cornerPosition=f(),this._origin=f(),this._originTransform=ie(),this._lastDraggedHandle=null,this._viewMode=ei.None,this._viewModeDirty=!0,this._triangleCollapseRatioThreshold=.03,this._model=e,this._view=e.sceneView,this._params=ge(Kt,t),this._measurementArrow=new Wt({attached:!0,view:this._view,geometry:null,renderOccluded:4}),this._horizontalAndVerticalSegmentLines=new Ot({attached:!0,view:this._view,width:this._params.triangleLineWidth,color:this._params.triangleColor,renderOccluded:4}),this._rightAngleQuad=new ct({attached:!0,view:this._view,color:$t,renderOccluded:4}),this._directSegmentLabel=new Pt({attached:!0,view:this._view,fontSize:this._params.direcLabelFontSize}),this._verticalSegmentLabel=new Pt({attached:!0,view:this._view,fontSize:this._params.verticalLabelFontSize}),this._horizontalSegmentLabel=new Pt({attached:!0,view:this._view,fontSize:this._params.horizontalLabelFontSize}),this._projectedGeodesicLine=new Ot({attached:!0,view:this._view,width:this._params.geodesicProjectionLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:et(this._params.guideStippleLengthPixels),stippleIntegerRepeats:!1,renderOccluded:4}),this._geodesicStartHint=new Ot({attached:!0,view:this._view,width:this._params.guideLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:et(this._params.guideStippleLengthPixels),stippleIntegerRepeats:!1,renderOccluded:4}),this._geodesicEndHint=new Ot({attached:!0,view:this._view,width:this._params.guideLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:et(this._params.guideStippleLengthPixels),stippleIntegerRepeats:!1,renderOccluded:4}),this._laserLine=new dt({view:this._view,attached:!0}),this._intersector=new Ye(this._view.state.mode),this._intersector.options.store=0,this._initializeListeners()}destroy(){this.hide(),this._destroyListeners(),this._handles.destroy(),this._handles=null,this._measurementArrow.destroy(),this._measurementArrow=null,this._horizontalAndVerticalSegmentLines.destroy(),this._horizontalAndVerticalSegmentLines=null,this._rightAngleQuad.destroy(),this._rightAngleQuad=null,this._directSegmentLabel.destroy(),this._directSegmentLabel=null,this._verticalSegmentLabel.destroy(),this._verticalSegmentLabel=null,this._horizontalSegmentLabel.destroy(),this._horizontalSegmentLabel=null,this._projectedGeodesicLine.destroy(),this._projectedGeodesicLine=null,this._geodesicStartHint.destroy(),this._geodesicStartHint=null,this._geodesicEndHint.destroy(),this._geodesicEndHint=null}get requiresCursorPoint(){return"initial"===this._model.state&&this._model.active}get cameraAboveGround(){return this._view.state.camera.aboveGround}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get viewMode(){return this._viewModeDirty&&(this._viewMode=this._computeViewMode()),this._viewMode}_computeViewMode(){this._viewModeDirty=!1;const e=this._model,t=e.model,s=t.measurement,r="geodesic"===e.measurementMode;if(i(t.startPoint)||i(t.endPoint)||t.startPoint.equals(t.endPoint))return ei.None;if(r){if(!this._model.geodesicDistanceExceeded)return ei.Direct;if(this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition))return ei.ProjectedGeodesic}if(i(s))return ei.Direct;return Math.min(s.verticalDistance.value/s.horizontalDistance.value,s.horizontalDistance.value/s.verticalDistance.value)<this.triangleCollapseRatioThreshold?ei.Direct:ei.Triangle}get triangleCollapseRatioThreshold(){return this._triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._triangleCollapseRatioThreshold=e,this._viewModeDirty=!0,this._geometryChanged()}get testData(){const e=this._laserLine.testData,i="geodesic"===this._model.measurementMode;return{labels:{direct:i?this._horizontalSegmentLabel:this._directSegmentLabel,horizontal:i?this._directSegmentLabel:this._horizontalSegmentLabel,vertical:this._verticalSegmentLabel},laserLineRenderer:{heightManifoldEnabled:!!t(e)&&e.heightManifoldEnabled,heightManifoldTarget:t(e)?e.heightManifoldTarget:null,pointDistanceEnabled:!!t(e)&&e.pointDistanceEnabled,pointDistanceOrigin:t(e)?e.pointDistanceOrigin:null,pointDistanceTarget:t(e)?e.pointDistanceTarget:null,lineVerticalPlaneEnabled:!!t(e)&&e.lineVerticalPlaneEnabled},stripeLength:this._computeMeasurementArrowStripeLength(this._model.model)}}get directLabelText(){return this._directSegmentLabel.text}get horizontalLabelText(){return this._horizontalSegmentLabel.text}get verticalLabelText(){return this._verticalSegmentLabel.text}createManipulators(){const e=()=>{const e=gt(this._view,this._params.handleColor,this._params.handleOpacity);return e.available=!1,e.radius=this._params.handleRadius,e},t=e(),i=e();this._model.startPoint&&(t.location=s(this._model.startPoint),t.available=!0),this._model.endPoint&&(i.location=s(this._model.endPoint),i.available=!0);const r=()=>{let e=this._lastDraggedHandle;t.grabbing&&!i.grabbing&&(e="start"),i.grabbing&&!t.grabbing&&(e="end"),t.grabbing||i.grabbing||(e=null);const s=e!==this._lastDraggedHandle;this._lastDraggedHandle=e,s&&this.visible&&this._updateLaserLine()};return this._handles.add([t.events.on("grab-changed",(()=>{r()})),i.events.on("grab-changed",(()=>{r()}))]),{start:t,end:i}}show(){this._visible||(this._visible=!0,this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha},this._laserLine.visible=!0,this._viewModeDirty=!0,this._updateCursorPosition(),this._updateStartPosition(),this._updateEndPosition(),this._updateLaserLine(),this._geometryChanged())}hide(){this._visible&&(this._visible=!1,this._measurementArrow.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._rightAngleQuad.visible=!1,this._directSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1,this._horizontalSegmentLabel.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,this._laserLine.visible=!1,this._view.cursor=null)}pick(e){const t=this._view.spatialReference,i=T(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,r=f();if(!s.getIntersectionPoint(r))return new Yt.PickResult;const o=this._view.renderCoordsHelper.fromRenderCoords(r,t),n="TerrainRenderer"===s.intersector?"ground":"feature";return new Yt.PickResult(n,r,o)}getElevation(e){return this._view.basemapTerrain.ready&&Me(this._view.elevationProvider,e)||0}overlappingHandles(e,t){return ve(e,t,this._view)<=this._params.handleRadius}_getLabelPositions(e,t,i,s,r){const o=this._viewMode!==ei.Triangle,n=A(We.get()),a=A(We.get());r.projectToRenderScreen(i,n),r.projectToRenderScreen(t,a);const l={direct:o?"top":"bottom",horizontal:"top",vertical:n[0]<a[0]?"left":"right"};if(!o){const s=Ne.get(),o=Ne.get();if(pe(e,i,s,r),pe(e,t,o,r),le(s,o)>=ti)l.direct=g(s[1])===g(o[1])?fe(l.vertical):l.vertical;else{const e=U(Ne.get());pe(i,t,e,r),le(e,o)>=ti&&(l.direct=g(e[0])===g(o[0])?fe(l.horizontal):l.horizontal)}}if("below-the-surface"===s){const e=e=>"top"===e?"bottom":"top";l.direct=e(l.direct),l.horizontal=e(l.horizontal),l.vertical=e(l.vertical)}return l}_updateLabelText(){const e=this._model.model.measurement;if(i(e)||!this._model.messages)return;const t={verticalDistance:"",horizontalDistance:"",directDistance:"",geodesicDistance:""},s=this._model.messages,r=e.directDistance,o=e.horizontalDistance,n=e.verticalDistance,a=e.geodesicDistance,l=e.geodesicAngle;switch(this._model.unit){case"metric":t.directDistance=r&&Pe(s,r),t.horizontalDistance=o&&Pe(s,o),t.verticalDistance=n&&Le(s,n),t.geodesicDistance=a&&Pe(s,a);break;case"imperial":t.directDistance=r&&we(s,r),t.horizontalDistance=o&&we(s,o),t.verticalDistance=n&&je(s,n),t.geodesicDistance=a&&we(s,a);break;case"degrees":{const e=l&&be(s,l,"degrees");t.directDistance=e,t.horizontalDistance=e,t.geodesicDistance=e;break}case"degrees-minutes-seconds":t.horizontalDistanceText=l&&ye(l);break;default:t.directDistance=r&&be(s,r,this._model.unit),t.horizontalDistance=o&&be(s,o,this._model.unit),t.verticalDistance=n&&be(s,n,this._model.unit),t.geodesicDistance=a&&be(s,a,this._model.unit)}this._directSegmentLabel.text=t[this._directSegmentLabelMeasurement],this._horizontalSegmentLabel.text=t[this._horizontalSegmentLabelMeasurement],this._verticalSegmentLabel.text=t[this._verticalSegmentLabelMeasurement]}_geometryChanged(){const e=this._view,t=e.state.camera,i=this._model,s=i.measurementMode,r=e.renderCoordsHelper,o=this.viewMode;if(o===ei.None)return this._rightAngleQuad.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._directSegmentLabel.visible=!1,this._horizontalSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1,this._measurementArrow.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,void(this._geodesicEndHint.visible=!1);let n=this._startPosition,a=this._endPosition;const l="camera-dependent"===i.measurementSurfaceLocation?this._view.state.camera.aboveGround?"above-the-surface":"below-the-surface":i.measurementSurfaceLocation,h="above-the-surface"===l?1:-1,c=h*(e.renderCoordsHelper.getAltitude(a)-e.renderCoordsHelper.getAltitude(n));c<0&&(n=this._endPosition,a=this._startPosition);const d=this._cornerPosition;e.renderCoordsHelper.worldUpAtPosition(n,d),M(d,d,h*Math.abs(c)),C(d,d,n);const m="geodesic"===s,p=m?new Bt(this._startPosition,this._endPosition,this._view.renderCoordsHelper.spatialReference):new Nt(this._startPosition,this._endPosition),u=this._getLabelPositions(n,a,d,l,t);switch(Se([n,a,d],this._origin),N(this._originTransform),B(this._originTransform,this._originTransform,this._origin),this._measurementArrow.geometry=p,this._measurementArrow.stripeLength=this._computeMeasurementArrowStripeLength(this._model.model),this._measurementArrow.visible=!0,this._directSegmentLabel.anchor=u.direct,this._directSegmentLabel.geometry=p,this._directSegmentLabel.visible=!0,this._directSegmentLabelMeasurement="geodesic"===s?"geodesicDistance":"directDistance",o){case ei.Direct:this._horizontalSegmentLabelMeasurement=m?"geodesicDistance":"horizontalDistance",this._rightAngleQuad.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._horizontalSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1;break;case ei.ProjectedGeodesic:{const e=k(We.get(),this._startPosition),t=k(We.get(),this._endPosition);r.setAltitude(0,e),r.setAltitude(0,t);const i=new Bt(e,t,this._view.renderCoordsHelper.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(i),this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.setGeometryFromSegment(new Nt(e,this._startPosition)),this._geodesicStartHint.visible=!0,this._geodesicEndHint.setGeometryFromSegment(new Nt(t,this._endPosition)),this._geodesicEndHint.visible=!0,this._directSegmentLabel.geometry=i,this._directSegmentLabelMeasurement="geodesicDistance",this._rightAngleQuad.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._horizontalSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1;break}case ei.Triangle:{this._horizontalAndVerticalSegmentLines.geometry=[[[n[0],n[1],n[2]],[d[0],d[1],d[2]],[a[0],a[1],a[2]]]],this._horizontalAndVerticalSegmentLines.visible=!0;const e=new Nt(n,d);this._verticalSegmentLabel.visible=!0,this._verticalSegmentLabel.geometry=e,this._verticalSegmentLabel.anchor=u.vertical,this._verticalSegmentLabelMeasurement="verticalDistance";const t=new Nt(d,a);this._horizontalSegmentLabel.visible=!0,this._horizontalSegmentLabel.geometry=t,this._horizontalSegmentLabel.anchor=u.horizontal,this._horizontalSegmentLabelMeasurement="horizontalDistance",this._rightAngleQuad.geometry={previous:n,center:d,next:a},this._rightAngleQuad.visible=!0,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1;break}}this._updateLabelText()}_computeMeasurementArrowStripeLength(e){let i=null;if(t(e.measurement)){const t=e.measurement.directDistance;switch(this._model.model.settings.unit){case"metric":i=t&&t.toUnit("meters");break;case"imperial":i=t&&t.toUnit(F(t.value,t.unit));break;case"degrees":case"degrees-minutes-seconds":{const t=e.measurement.geodesicAngle;i=t&&t.toUnit("degrees");break}default:i=t&&t.toUnit(this._model.model.settings.unit)}}let s=1;return i&&(s=v(i.value/30),s*="degrees"===i.unit?V(this._view.spatialReference).metersPerDegree:q(1,i.unit,"meters")),s}_requiresGeodesicGuideAt(e){if(!this._view.state)return!1;const t=this._view.state.camera,i=this._view.renderCoordsHelper,s=t.computeScreenPixelSizeAt(e);return i.getAltitude(e)/s>=10}_updateCursorPosition(){this._model.cursorPoint&&this._view.renderCoordsHelper.toRenderCoords(this._model.cursorPoint,this._cursorPosition)}_updateStartPosition(){t(this._model.startPoint)&&this._view.renderCoordsHelper.toRenderCoords(this._model.startPoint,this._startPosition)}_updateEndPosition(){t(this._model.endPoint)&&this._view.renderCoordsHelper.toRenderCoords(this._model.endPoint,this._endPosition)}_getFocusPosition(){const e=this._model,t=this.viewMode===ei.Direct&&"euclidean"===e.measurementMode;switch(e.state){case"drawing":return t?this._startPosition:e.endPoint?this._endPosition:this._startPosition;case"editing":return t?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return e.cursorPoint?this._cursorPosition:null}}_getFocusSpherePosition(){return"drawing"===this._model.state||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition}_updateLaserLine(){const e=this._model,t=this._getFocusPosition(),i=this.viewMode,s=this._params.laserLineEnabled&&!!t&&"measured"!==e.state&&e.active;if(s){const r=s&&"euclidean"===e.measurementMode;this._laserLine.heightManifoldTarget=r?t:null;const o=s&&!!e.startPoint&&"geodesic"===e.measurementMode;this._laserLine.pointDistanceLine=o?{origin:this._getFocusSpherePosition(),target:t}:null;const n=s&&i===ei.Triangle;this._laserLine.lineVerticalPlaneSegment=n?Qe.fromPoints(this._startPosition,this._endPosition,ii):null}else this._laserLine.heightManifoldTarget=null,this._laserLine.pointDistanceLine=null,this._laserLine.lineVerticalPlaneSegment=null}_initializeListeners(){this._listenerHandles=new E,this._listenerHandles.add([this._model.watch("state",(()=>{this._visible&&this._updateLaserLine()}),!0),this._model.watch("measurementMode",(()=>{this._viewModeDirty=!0,this._visible&&this._updateLaserLine()}),!0),this._model.watch("hoveredHandle",(()=>{this._visible&&this._geometryChanged()}),!0),this._model.watch("cursorPoint",(()=>{this._updateCursorPosition(),this._visible&&this._updateLaserLine()}),!0),this._model.model.watch("startPoint",(()=>{this._updateStartPosition(),this._viewModeDirty=!0,this._visible&&(this._updateLaserLine(),this._geometryChanged())}),!0),this._model.model.watch("endPoint",(()=>{this._updateEndPosition(),this._viewModeDirty=!0,this._visible&&(this._updateLaserLine(),this._geometryChanged())}),!0),this._model.watch("messages",(()=>{this._viewModeDirty=!0,this._visible&&this._geometryChanged(),this._updateLabelText()}),!0),this._model.watch("unit",(()=>{this._viewModeDirty=!0,this._visible&&this._geometryChanged()}),!0),this._model.watch("active",(()=>{this._visible&&(this._updateLaserLine(),this._geometryChanged())}),!0),this._view.state.watch("camera",(()=>{this._visible&&this._geometryChanged()}),!0),this._model.model.watch("measurement",(()=>{this._viewModeDirty=!0,this._visible?this._geometryChanged():this._updateLabelText()}),!0)])}_destroyListeners(){this._listenerHandles.destroy(),this._listenerHandles=null}}var ei;!function(e){e.PickRequest=class{};e.PickResult=class{constructor(e=null,t=null,i=null){this.type=e,this.scenePoint=t,this.mapPoint=i}}}(Yt||(Yt={})),function(e){e[e.Triangle=0]="Triangle",e[e.ProjectedGeodesic=1]="ProjectedGeodesic",e[e.Direct=2]="Direct",e[e.None=3]="None"}(ei||(ei={}));const ti=Math.cos(_(12)),ii=Qe.create();let si=class extends ot{constructor(e){super(e),this._handles=new E,this._cachedPickRequest=new Yt.PickRequest,this._cachedPickResult=new Yt.PickResult,this._isAnyPointerDown=!1,this.deferCreation=!0,this.startManipulator=null,this.endManipulator=null,this.model=new jt({sceneView:e.view})}initialize(){this._set("directLineMeasurementView",new Yt(this.model));const e=Q(this,"state",(e=>{"ready"!==e&&this.create(),"measured"===e&&this.complete()}),!0);this._handles.add(e);const{start:t,end:i}=this.directLineMeasurementView.createManipulators(),r=(e,t,i)=>nt(e,((e,r,o)=>{const n=_t(e);r.next(n).next(ut(this.view)).next((e=>"start"!==e.action?e:null)).next((s=>{const r=Xe(s.mapEnd,ri);this.model[t]=r,e.location=r,this.model[i]=this._surfaceLocation(r,s.surfaceType)})),o.next(n).next(at(this.model,[t,i])).next((()=>{e.location=s(this.model[t])}))}));this._handles.add([r(t,"startPoint","startPointSurfaceLocation"),r(i,"endPoint","endPointSurfaceLocation")]),[t,i].forEach((e=>{this._handles.add([e.events.on("grab-changed",(()=>{const e=t.grabbing||i.grabbing;e&&"measured"===this.model.state&&(this.model.state="editing"),e||(this.model.finishMeasurement(),"editing"===this.model.state&&(this.model.state="measured"))}))])})),this.manipulators.add(t),this.manipulators.add(i),this.startManipulator=t,this.endManipulator=i}destroy(){this.directLineMeasurementView.destroy(),this._set("directLineMeasurementView",null),this.model.destroy(),this._set("model",null),this._handles.destroy(),this._handles=null}get state(){var e;return null!=(e=this.model)&&e.isMeasuring?"measured"===this.model.state?"measured":"measuring":"ready"}get creating(){return"initial"===this.model.state||"drawing"===this.model.state}get isSupported(){return"3d"===this.get("view.type")}get cursor(){var e;return null==(e=this.model)||!e.active||"drawing"!==this.model.state&&"initial"!==this.model.state?null:"crosshair"}activate(){this.model.active=!0}deactivate(){this.model.active=!1}onDetach(){this.model.reset()}onShow(){this.directLineMeasurementView.show(),this._updateManipulatorVisibility()}onHide(){this.directLineMeasurementView.hide()}onInputEvent(e){switch(e.type){case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"pointer-down":this._handlePointerDown();break;case"pointer-up":this._handlePointerUp()}this._updateManipulatorVisibility()}_handlePointerMove(e){this._clearCachedPickRequest();const t=ke(e);"mouse"===e.pointerType&&(this._hoverAt(t),"drawing"===this.model.state&&(this.endManipulator.events.emit("drag",{action:"update",start:t,screenPoint:t}),e.stopPropagation()))}_handlePointerDown(){this._isAnyPointerDown=!0}_handlePointerUp(){this._isAnyPointerDown=!1}_handleImmediateClick(e){if(this._clearCachedPickRequest(),!function(e){return"mouse"!==e.pointerType||0===e.button}(e))return;const t=ke(e),i=e.pointerType;let s=!1;if(this.model.active)switch(this.model.state){case"initial":this.startManipulator.events.emit("drag",{action:"start",pointerType:i,start:t,screenPoint:t}),this.startManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),this.model.startPoint&&(this.startManipulator.interactive=!1,this.endManipulator.interactive=!1,this.model.state="drawing",this.endManipulator.events.emit("drag",{action:"start",pointerType:i,start:t,screenPoint:t}),s=!0);break;case"drawing":this.endManipulator.events.emit("drag",{action:"update",start:t,screenPoint:t}),null!=this.model.endPoint&&(this.endManipulator.events.emit("drag",{action:"end",start:t,screenPoint:t}),this.startManipulator.interactive=!0,this.endManipulator.interactive=!0,this.model.finishMeasurement(),s=!0)}s&&e.stopPropagation(),"mouse"===e.pointerType&&this._hoverAt(t)}_hoverAt(e){const t=this._isAnyPointerDown&&"drawing"!==this.model.state&&"editing"!==this.model.state;if(this.directLineMeasurementView.requiresCursorPoint&&!t){const t=this._pick(e);t.mapPoint&&(this.model.cursorPoint=t.mapPoint)}else this.model.cursorPoint=null}_pick(e){const t=this._cachedPickRequest.screenPoint;return t&&t.x===e.x&&t.y===e.y||(this._cachedPickRequest.screenPoint=e,this._cachedPickResult=this.directLineMeasurementView.pick(this._cachedPickRequest)),this._cachedPickResult}_clearCachedPickRequest(){this._cachedPickRequest.screenPoint=null}_surfaceLocation(e,t){return 0===t?"on-the-surface":e.z>=this.directLineMeasurementView.getElevation(e)?"above-the-surface":"below-the-surface"}_updateManipulatorVisibility(){this.startManipulator.available=null!=this.model.startPoint,this.endManipulator.available=null!=this.model.endPoint}};e([o({dependsOn:["model.isMeasuring","model.state"],readOnly:!0})],si.prototype,"state",null),e([o({dependsOn:["model.state"],readOnly:!0})],si.prototype,"creating",null),e([o({dependsOn:["view.type"],readOnly:!0})],si.prototype,"isSupported",null),e([o({dependsOn:["model.active","model.state"],readOnly:!0})],si.prototype,"cursor",null),e([o({constructOnly:!0})],si.prototype,"model",void 0),e([o({constructOnly:!0})],si.prototype,"directLineMeasurementView",void 0),e([h("model.mode")],si.prototype,"mode",void 0),e([h("model.unit")],si.prototype,"unit",void 0),e([h("model.validMeasurement")],si.prototype,"validMeasurement",void 0),si=e([l("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],si);const ri=new m;var oi=si;const ni=r.getLogger("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel");let ai=class extends pt{constructor(e){super(e),this.supportedViewType="3d",this._handles=new E,this._userUnitOptions=null,this._userUnit=null}initialize(){this._handles.add([Q(this,"unit",(e=>{this.tool&&(this.tool.model.unit=e)}))])}destroy(){this._handles.destroy(),this._handles=null}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get measurement(){if(!this.tool)return null;const e=this.tool.model,i=e.measurementMode,s="geodesic"===i,r=t(e.model.measurement),o=this.tool.directLineMeasurementView;return{mode:i,directDistance:{text:s?null:o.directLabelText,state:r&&!s?"available":"unavailable"},horizontalDistance:{text:o.horizontalLabelText,state:r?"available":"unavailable"},verticalDistance:{text:o.verticalLabelText,state:r?"available":"unavailable"}}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}newMeasurement(){a(this.start())}clearMeasurement(){this.clear()}createToolParams(){return{toolConstructor:oi,constructorArguments:()=>({unit:this.unit})}}logUnsupportedError(){ni.error("DirectLineMeasurement3D widget is not implemented for MapView")}logError(...e){ni.error(...e)}_findSelectableUnit(e,t){const i=this.unitOptions;return-1!==i.indexOf(e)?e:t?this._findSelectableUnit(t):i[0]}_filteredOrAllUnits(e){if(!e)return W.slice();const t=e.filter((e=>-1!==W.indexOf(e)));return 0===t.length?W.slice():t}};e([o({dependsOn:["isDisabled","tool.state"],readOnly:!0})],ai.prototype,"state",null),e([o({dependsOn:["view.ready","unit","tool.model.messages","tool.model.startPoint","tool.model.endPoint","tool.directLineMeasurementView.triangleCollapseRatioThreshold","tool.model.model.measurement","tool.model.measurementMode"],readOnly:!0})],ai.prototype,"measurement",null),e([o()],ai.prototype,"tool",void 0),e([o(mt)],ai.prototype,"defaultUnit",void 0),e([o({dependsOn:["view.spatialReference"]})],ai.prototype,"unitOptions",null),e([o({dependsOn:["unitOptions","defaultUnit"]})],ai.prototype,"unit",null),ai=e([l("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],ai);var li=ai;export default li;
