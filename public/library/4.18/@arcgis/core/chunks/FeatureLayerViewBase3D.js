/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"./object.js";import{b as r,i as t,e as s}from"./Logger.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import a from"../core/Accessor.js";import{resolve as o,throwIfAborted as l,reject as u,createAbortError as n}from"../core/promiseUtils.js";import c from"../core/Error.js";import{n as h}from"./compilerUtils.js";import"./ensureType.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import{aliasOf as m}from"../core/accessorSupport/decorators/aliasOf.js";import"./resourceExtension.js";import d from"../geometry/SpatialReference.js";import y from"../Graphic.js";import{init as f}from"../core/watchUtils.js";import{T as g}from"./Scheduler.js";import F from"../layers/support/Field.js";import{W as b}from"../layers/ElevationLayer.js";import{r as w,a as x}from"./query.js";import{R as C}from"./RefreshableLayerView.js";import{j as v}from"./dehydratedFeatures.js";import{c as O,F as T,a as M,E as j}from"./EventedSet.js";import{L as _,u as R}from"../views/SceneView.js";import{g as S}from"./ColorMaterial.js";import V from"../views/layers/LayerView.js";import{F as N}from"./FeatureLayerView.js";class q{constructor(e){this._handle=new E(e),this._frameTask=e.registerTask(g.REMOTE_CLIENT,(()=>{}),(()=>!1))}destroy(){this._frameTask.remove(),this._handle.destroy()}invoke(e,r){return e.buffer&&0!==e.buffer.byteLength?(e.options.sourceSpatialReference&&e.options.sourceSpatialReference instanceof d&&(e.options={...e.options,sourceSpatialReference:e.options.sourceSpatialReference.toJSON()}),this._handle.invoke(e,r).then((e=>this._frameTask.schedule((()=>{if(e.spatialReference=d.fromJSON(e.spatialReference),e.fields)for(let r=0;r<e.fields.length;r++)e.fields[r]=F.fromJSON(e.fields[r]);const r=e.spatialReference;for(const t of e.features)t.uid=y.generateUID(),t.geometry&&(t.geometry.spatialReference=r);return e}))))):o(null)}}class E extends b{constructor(e){super("PBFDecoderWorker","_parseFeatureQuery",e)}getTransferList(e){return[e.buffer]}}let D=class extends a{get queryFeaturesDehydrated(){const e=this.layer.capabilities,s=e&&e.query;if(s&&s.supportsFormatPBF){var i,a;r(this._decoder)&&(this._decoder=new q(this.scheduler));const e={sourceSpatialReference:null!=(i=null==(a=this.layer.spatialReference)?void 0:a.toJSON())?i:null,applyTransform:!0,maxStringAttributeLength:1024};return(r,s)=>w(this.layer.parsedUrl,r,"pbf",s).then((r=>(l(s),t(this._decoder)?this._decoder.invoke({buffer:r.data,options:e},s.signal):u(n()))))}return(e,r)=>x(this.layer.parsedUrl,e,this.layer.spatialReference,r).then((e=>v(e.data)))}queryFeatureCount(e,r){return this.layer.queryFeatureCount(e,r)}destroy(){this._decoder=s(this._decoder)}};e([i({constructOnly:!0})],D.prototype,"layer",void 0),e([i({constructOnly:!0})],D.prototype,"scheduler",void 0),e([i({readOnly:!0,dependsOn:["layer.capabilities.query.supportsFormatPBF"]})],D.prototype,"queryFeaturesDehydrated",null),D=e([p("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceQuery3D")],D);let L=class extends a{queryFeaturesDehydrated(e,r){return this.layer.queryFeatures(e,r)}};e([i({constructOnly:!0})],L.prototype,"layer",void 0),L=e([p("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceQuery3D")],L);let Q=class extends a{destroy(){}queryFeaturesDehydrated(e,r){return this.source.queryFeaturesJSON(e,r).then(v,(t=>{if(t&&"query-features-json:unsupported"===t.name)return this.layer.queryFeatures(e,r);throw t}))}queryFeatureCount(e,r){return this.layer.queryFeatureCount(e,r)}};e([i({constructOnly:!0})],Q.prototype,"layer",void 0),e([m("layer.source")],Q.prototype,"source",void 0),Q=e([p("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileClientQuery3D")],Q);class P{constructor(e){this.memoryCache=null,this._capabilities=null;const r=e.layerView.layer;this.layerView=e.layerView,this.objectIdField=r.objectIdField,this.returnZ=e.returnZ,this.returnM=e.returnM;const t=this.layerView.view.resourceController;this.query=function(e,r){switch(e.source.type){case"feature-layer":return new D({layer:e,scheduler:r});case"memory":case"csv":case"geojson":return new Q({layer:e});case"ogc-feature":return new L({layer:e});case"stream-layer":throw new Error("Tile based queries unsupported for stream sources")}}(r,t.scheduler),t&&this.memoryCacheEnabled&&(this.memoryCache=t.memoryController.getMemCache(r.uid))}get memoryCacheEnabled(){switch(this.layerView.layer.source.type){case"feature-layer":case"ogc-feature":return!0;case"csv":case"geojson":case"memory":case"stream-layer":return!1}}destroy(){s(this.memoryCache),this.query.destroy()}createQuery(){const e=this.layerView.layer.createQuery();return e.outFields=this.layerView.availableFields,e.returnZ=this.returnZ,e.returnM=this.returnM,e.outSpatialReference=this.tilingScheme.spatialReference,e}get viewingMode(){return this.layerView.view.state.mode}get tilingScheme(){return this.layerView.view.featureTiles.tilingScheme}get scheduler(){const e=this.layerView.view.resourceController;return e?e.scheduler:null}get geometryType(){return this.layerView.layer.geometryType}get fullExtent(){return this.layerView.layer.fullExtent}get tileMaxRecordCount(){return this.layerView.layer.capabilities.query.tileMaxRecordCount}get maxRecordCount(){return this.layerView.layer.capabilities.query.maxRecordCount}get capabilities(){return t(this._capabilities)||(this._capabilities=O(this.layerView.layer)),this._capabilities}logFetchError(e,r){e.error("#fetchTile()",this.layerView.layer,r&&r.message?r.message:r)}}let Z=class extends(C(T(N(_(V))))){constructor(e){super(e),this._controllerTotal=0,this._graphicsCoreTotal=0,this.suspendResumeExtentMode="data"}destroy(){this.fetcherContext&&(this.fetcherContext.destroy(),this.fetcherContext=null)}get updatingProgressValue(){let e=1;if(this.controller&&this.controller.updating){const r=this.controller.updatingRemaining,t=this.controller.updatingTotal;t>0&&(this._controllerTotal=Math.max(t,this._controllerTotal),e=(t-r)/t)}let r=1;if(this.graphics3d&&this.graphics3d.graphicsCore){const e=this.graphics3d.graphicsCore.updatingRemaining,t=this.graphics3d.graphicsCore.updatingTotal;t>0&&(this._graphicsCoreTotal=Math.max(t,this._graphicsCoreTotal),r=(t-e)/t)}return 1===e&&1===r&&(this._controllerTotal=0,this._graphicsCoreTotal=0),.5*(e+r)}get maximumNumberOfFeatures(){var e,r;return null!=(e=null==(r=this.controller)?void 0:r.maximumNumberOfFeatures)?e:this._get("maximumNumberOfFeatures")}set maximumNumberOfFeatures(e){this._set("maximumNumberOfFeatures",e),this.controller&&(this.controller.maximumNumberOfFeatures=e)}get maximumNumberOfFeaturesExceeded(){return!!this.controller&&!(this.suspended||!this.controller.maximumNumberOfFeaturesExceeded)}get asyncGraphicsUpdates(){if(this.controller)switch(this.controller.mode){case"snapshot":{const e=U[this.layer.geometryType];return null==e||this.controller.serviceDataCount>e}case"tiles":return!0;default:h(this.controller.mode)}return!0}get hasZ(){const e=this.layer,r=e.capabilities&&e.capabilities.data;return!(!r||!r.supportsZ)&&("returnZ"in e&&null!=e.returnZ?e.returnZ:r.supportsZ)}get hasM(){const e=this.layer,r=e.capabilities&&e.capabilities.data;return!(!r||!r.supportsM)&&("returnM"in e&&null!=e.returnM&&e.returnM)}async fetchPopupFeatures(e,r){const t=this.validateFetchPopupFeatures(r);return t?u(t):this.fetchClientPopupFeatures(r)}setVisibility(e,r){this.graphics3d&&this.graphics3d.graphicsCore.setObjectIdVisibility(e,r)}createQuery(){return super.createQuery()}queryFeatures(e,r){const t=()=>super.queryFeatures(e,r);return"mesh"===this.layer.geometryType?this._queryFeaturesMesh(this._ensureQuery(e),t):t()}beforeSetController(e){e.maximumNumberOfFeatures=this.maximumNumberOfFeatures}createController(){this.fetcherContext=new P({layerView:this,returnZ:this.hasZ,returnM:this.hasM});const e=new M({layerView:this,context:this.fetcherContext,graphics:new j,extent:this.clippingExtent});return this.updatingHandles.add(e,"serviceDataExtent",(e=>{this.graphics3d&&(this.graphics3d.dataExtent=e)}),2),this.handles.add(f(this,"suspended",(r=>{r?e.suspend():e.resume()}),!0)),this.updatingHandles.add(this.graphics3d.graphicsCore,"displayFeatureLimit",(()=>this.updateDisplayFeatureLimit(e)),2),this.handles.add(this.view.resourceController.memoryController.events.on("quality-changed",(()=>this.updateDisplayFeatureLimit()))),e}async doRefresh(){!this.suspended&&this.controller&&this.controller.refetch()}getUsedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return(e?e.usedMemory:0)+(this.controller?this.controller.memoryForUnusedFeatures:0)}getUnloadedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return(e?e.unprocessedMemoryEstimate:0)+(this.controller?this.controller.expectedFeatureDiff*e.usedMemoryPerGraphic:0)}ignoresMemoryFactor(){return this.controller&&this.controller.hasMaximumNumberOfFeaturesOverride}updateDisplayFeatureLimit(e=this.controller){if(!e||!this.graphics3d||!this.graphics3d.graphicsCore)return;const r=this.graphics3d.graphicsCore.displayFeatureLimit,t=this.view.resourceController.memoryController.memoryFactor;if(1===t)e.displayFeatureLimit=r;else{const s=Math.ceil(r.maximumNumberOfFeatures*t),i=Math.ceil(r.maximumTotalNumberOfFeatures*t),a=Math.ceil(r.minimumTotalNumberOfFeatures*t);e.displayFeatureLimit={...r,maximumNumberOfFeatures:s,maximumTotalNumberOfFeatures:i,minimumTotalNumberOfFeatures:a}}}async _queryFeaturesMesh(e,r){await this._validateQueryFeaturesMesh(e);const t=await r();if(e&&e.outStatistics)return t;const s=this.layer.objectIdField,i=this.graphics3d.graphicsCore.graphics3DGraphicsByObjectID,a=[];for(const e of t.features)if(e.geometry){const r=i.get(e.attributes[s]);r&&(e.geometry=S(r.graphic.geometry),a.push(e))}else a.push(e);return t.features=a,t}async _validateQueryFeaturesMesh(e){if(!e)return;const r=e=>{throw new c("feature-layer-view:unsupported-query",`Queries on Mesh feature collection layers do not support '${e}'`)},s=["quantizationParameters","geometryPrecision","maxAllowableOffset"];for(const t of s)null!=e[t]&&r(t);"returnM"in e&&e.returnM&&r("returnM"),"returnCentroid"in e&&e.returnCentroid&&r("returnCentroid"),t(e.outSpatialReference)&&!e.outSpatialReference.equals(this.view.spatialReference)&&r("outSpatialReference")}get performanceInfo(){const e=this.controller&&this.controller.displayFeatureLimit,r=t(e)&&e.averageSymbolComplexity,s=t(r)?`f:${r.primitivesPerFeature},v:${r.primitivesPerCoordinate}`:"n/a",i={...this._getResourceInfo(),storedFeatures:0,totalVertices:0,partial:this.maximumNumberOfFeaturesExceeded,mode:this.controller?this.controller.mode:"n/a",symbolComplexity:s,nodes:this.controller?this.controller.tileDescriptors.length:0};if(this.controller&&i.displayedNumberOfFeatures){const e=this.controller.debug;i.storedFeatures=e.storedFeatures,i.totalVertices=e.totalVertices}return i}};e([i()],Z.prototype,"layer",void 0),e([i()],Z.prototype,"controller",void 0),e([i({readOnly:!0,dependsOn:["controller.updatingRemaining","controller.updatingTotal","graphics3d.graphicsCore.updatingRemaining","graphics3d.graphicsCore.updatingTotal"],autoTracked:!1})],Z.prototype,"updatingProgressValue",null),e([i({dependsOn:["controller.maximumNumberOfFeatures"]})],Z.prototype,"maximumNumberOfFeatures",null),e([i({dependsOn:["suspended","controller.maximumNumberOfFeaturesExceeded"]})],Z.prototype,"maximumNumberOfFeaturesExceeded",null),e([i(R)],Z.prototype,"updatingProgress",void 0),e([i({readOnly:!0,dependsOn:["controller.mode","layer.geometryType","controller.serviceDataCount"]})],Z.prototype,"asyncGraphicsUpdates",null),e([i({readOnly:!0})],Z.prototype,"hasZ",null),e([i({readOnly:!0})],Z.prototype,"hasM",null),e([i()],Z.prototype,"suspendResumeExtentMode",void 0),Z=e([p("esri.views.3d.layers.FeatureLayerViewBase3D")],Z);const U={point:5e3,polygon:500,polyline:1e3};var k=Z;export{k as F};
