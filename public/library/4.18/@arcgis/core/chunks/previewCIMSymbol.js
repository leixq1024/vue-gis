/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"./tslib.es6.js";import"./ArrayPool.js";import"./object.js";import"./deprecate.js";import"../core/lang.js";import"../config.js";import"./Logger.js";import"./string.js";import"./metadata.js";import"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"./PropertyOrigin.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"./Message.js";import"../core/Error.js";import"./ensureType.js";import"../core/accessorSupport/decorators/subclass.js";import"./JSONSupport.js";import"../core/urlUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./enumeration.js";import"./reader.js";import"./writer.js";import"./resourceExtension.js";import"./persistableUrlUtils.js";import"../geometry/SpatialReference.js";import"../kernel.js";import"../request.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"./Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"./mathUtils2.js";import"./colorUtils.js";import"../Color.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry.js";import"./arcadeOnDemand.js";import"../symbols/Symbol3DLayer.js";import{p as t}from"./screenUtils.js";import"./opacityUtils.js";import"./materialUtils.js";import"./Symbol3DMaterial.js";import"./colors.js";import"./Symbol3DOutline.js";import"../symbols/IconSymbol3DLayer.js";import"./utils3.js";import{getCIMSymbolSize as o,scaleCIMSymbolTo as r}from"../symbols/support/cimSymbolUtils.js";import"./aaBoundingRect.js";import"./quantizationUtils.js";import"./callExpressionWithFeature.js";import"./CIMSymbolHelper.js";import"./cimAnalyzer.js";import"./Rasterizer.js";import{CIMSymbolRasterizer as s}from"./CIMSymbolRasterizer.js";const e=new s(null,!0);async function i(s,i={}){const{size:m,maxSize:p,feature:l,fieldMap:a,geometryType:j,style:n,node:c,opacity:y}=i,u=o(s),g=Math.min(null!=m?m:u,null!=p?p:t(120));g!==u&&(s=s.clone(),r(s,g,{preserveOutlineWidth:!0}));let d=3;s&&s.data&&s.data.symbol&&"CIMPointSymbol"!==s.data.symbol.type&&(d=1);const b=await e.rasterizeCIMSymbolAsync(s,l,a,j,{scaleFactor:d,style:n}),h=document.createElement("canvas");h.width=b.imageData.width,h.height=b.imageData.height;h.getContext("2d").putImageData(b.imageData,0,0);let U=h.width/d,S=h.height/d;if(null!=m&&(null==(null==i?void 0:i.scale)||(null==i?void 0:i.scale))){const t=U/S;U=t<=1?Math.ceil(g*t):g,S=t<=1?g:Math.ceil(g/t)}const M=new Image(U,S);return M.src=h.toDataURL(),null!=y&&(M.style.opacity=`${y}`),c&&c.appendChild(M),M}export{i as previewCIMSymbol};
