/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{h as t}from"./object.js";import{b as s,i}from"./Logger.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import a from"../core/Accessor.js";import{resolve as o,all as n,createAbortController as h,isAbortError as d}from"../core/promiseUtils.js";import"./ensureType.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"./resourceExtension.js";import l,{g as p}from"../geometry/SpatialReference.js";import{p as u}from"../geometry/Extent.js";import g,{f as m,h as _}from"../geometry/Polygon.js";import{a as y}from"./extentUtils.js";import{getJsonType as f,isPolygon as b,isPolyline as w,isExtent as S,isPoint as G}from"../geometry/support/jsonUtils.js";import{a as v,c as T}from"./screenUtils.js";import{h as I}from"./unitUtils.js";import{normalizeMapX as U}from"../geometry/support/normalizeUtils.js";import{c as x,k as j,i as z,y as C,z as R,w as A,h as P}from"./aaBoundingRect.js";import{HandleOwnerMixin as M}from"../core/HandleOwner.js";import{e as F,a as q,b as k}from"./defaults.js";import{b as B}from"./OptimizedGeometry.js";import{w as H,x as D,f as O,q as V,i as L}from"./featureConversionUtils.js";import{c as N,p as Q}from"./projectionSupport.js";import{F as X}from"./definitions.js";import{g as Y}from"./capabilities2.js";import{q as E,d as Z}from"./quantizationUtils.js";import{b as W}from"./BidiText.js";import{W as J}from"./enums.js";import{i as K,g as $,a as ee,b as te,c as se,d as ie,e as re,n as ae}from"./graphicsUtils.js";import{F as oe}from"./FeatureSetReader.js";import{r as ne}from"./rbush.js";import{F as he,C as de,a as ce,A as le}from"./TileStore.js";import{c as pe,W as ue,a as ge,e as me}from"./WGLMeshFactory.js";import{F as _e,W as ye,T as fe}from"./FeatureContainer.js";import{c as be,a as we}from"./schemaUtils.js";import{G as Se}from"./GraphicsView.js";class Ge extends he{constructor(e,t){super(e,t,null)}static from(e){const t=oe.createInstance(),s=[],i=e.filter((e=>!!e.geometry));for(const e of i){const t=f(e.geometry);H(s,[e],t,!1,!1,"uid")}return new Ge(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Ge(this.instance,this._features);return this.copyInto(e),e}}class ve extends _e{get hasLabels(){return!1}get labelsVisible(){return!1}renderChildren(e){this.attributeView.bindTextures(e.context),this.children.some((e=>e.hasData))&&(super.renderChildren(e),e.drawPhase===J.MAP&&this._renderChildren(e),e.drawPhase===J.HIGHLIGHT&&this._renderHighlight(e))}_renderChildren(e,t){for(const s of this.children)s.isReady&&s.hasData&&(s.commitChanges(e),e.context.setStencilFunction(514,s.stencilRef,255),s._displayList.replay(e,s,t))}_renderHighlight(e){const{painter:t}=e,s=t.effects.highlight;s.bind(e),this._renderChildren(e,s.defines),s.draw(e),s.unbind()}}const Te=new B,Ie=new B;function Ue(e){e.coords.length=0,e.lengths.length=0}class xe{constructor(){this.bounds=x(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,s,i,r,a){let o;return 0===xe._pool.length?o=new xe:(o=xe._pool.pop(),this._set.delete(o)),o.acquire(e,t,s,i,r,a),o}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if(b(e.geometry)){const i=e.symbol;if(s(i))return null;if(K(i.type)){const s=m(e.geometry);return E(t,{},{x:s[0],y:s[1]},!1,!1)}}return null}acquire(e=null,t,s,i,r,a){e&&this.set(e,t,s,i,r,a)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r,a){this.graphic=e,this.geometry=s,this.symbolResource=t,this.updateBounds(i,r,a)}updateBounds(e,t,s){$(this.bounds,this.size,this.symbolResource,this.geometry,e,t,s)}getGeometryQuantized(e){if(b(this.geometry)){const t=this.geometry.rings;if(1===t.length&&2===t[0].length)return Z(e,{paths:[[t[0][0],t[0][1]]]})}else if(w(this.geometry))return Ue(Te),Ue(Ie),D(Te,this.geometry),O(Ie,Te,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",e.scale[0]),V(Te,Ie,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",e),L(Te,this.geometry.hasZ,this.geometry.hasM);return Z(e,this.geometry)}}xe._pool=[],xe._set=new Set;const je={minX:0,minY:0,maxX:0,maxY:0},ze=x(),Ce=[];function Re(e,t,s,i,r){return je.minX=t,je.minY=s,je.maxX=i,je.maxY=r,e.search(je)}class Ae{constructor(e,s,i,r,a,o){this._graphics=r,this._onAdd=a,this._onRemove=o,this._index=ne(9,t("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=i;const n=e.getClosestInfoForScale(s);n&&(this._currentLevel=n.level,this._resolution=this._tileInfoView.getTileResolution(n.level)),this._metersPerUnit=I(e.spatialReference)}hitTest(e,t,s,i,r){e=U(e,this._tileInfoView.spatialReference);const a=.5*i*s;ze[0]=e-a,ze[1]=t-a,ze[2]=e+a,ze[3]=t+a;const o=.5*i*(s+50),n=Re(this._index,e-o,t-o,e+o,t+o);if(!n||0===n.length)return[];const h={x:e,y:t},d=[];let c;for(const s of n)if(s.graphic.visible)switch(f(s.geometry)){case"esriGeometryPoint":{const e=s.symbol;if(!e)continue;const t=s.geometry,{x:a,y:o}=t,n=i*this._metersPerUnit;let c;switch(e.type){case"esriTS":c=ee(a,o,e,s.size,i,r);break;case"expanded-cim":c=ie(a,o,e,i,n,r);break;case"esriSMS":case"esriPMS":c=te(a,o,e,i,n,r)}u(c,h)&&d.push(s)}break;case"esriGeometryPolyline":{const r=s.symbol;if(!r||!r.layers.length)continue;const a=r.layers[0];c=1.5*i*window.devicePixelRatio*v(a.width),se(s.geometry,e,t,c)&&d.push(s)}break;case"esriGeometryEnvelope":{const e=s.geometry,t=j(e.xmin,e.ymin,e.xmax,e.ymax);z(t,ze)&&d.push(s);break}case"esriGeometryPolygon":{if(u(s.geometry,h)){d.push(s);break}const e=y(s.geometry);if(Math.abs(e.ymax-e.ymin)<5*i||Math.abs(e.xmax-e.xmin)<5*i){const t=j(e.xmin,e.ymin,e.xmax,e.ymax);z(t,ze)&&d.push(s)}break}case"esriGeometryMultipoint":{const e=s.symbol;if(!e)continue;const t=s.geometry.points;let a;for(let o=0;o<t.length;o++)if(a="esriTS"===e.type?ee(t[o][0],t[o][1],e,s.size,i,r):te(t[o][0],t[o][1],e,i,i*this._metersPerUnit,r),u(a,h)){d.push(s);break}break}}return d.sort(((e,t)=>{const s=re(e.graphic),i=re(t.graphic);return s===i?t.zorder-e.zorder:s-i})),d.map((e=>e.graphic))}getGraphicsData(e,t,s){const i=Re(this._index,t.bounds[0],t.bounds[1],t.bounds[2],t.bounds[3]);if(0===i.length||0===s.length)return[];i.sort(((e,t)=>e.zorder-t.zorder)),i[0].insertAfter=-1;for(let e=1;e<i.length;e++)i[e].insertAfter=i[e-1].graphic.uid;i.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),s.sort(((e,t)=>e.uid-t.uid));let r,a=0,o=0;const n=[],h={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const t of s){for(o=-2;a<i.length;)if(r=i[a],a++,t.uid===r.graphic.uid){o=r.insertAfter;break}if(!r.geometry||-2===o)continue;const s=r.getGeometryQuantized(h),d={...r.graphic.attributes};d[this._uidFieldName]=t.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),n.push({centroid:xe.getCentroidQuantized(r,h),geometry:s,attributes:d,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return n.sort(((e,t)=>e.zorder-t.zorder)),n}queryTileData(e,t){const s=50*t.resolution,i=C(t.bounds,s,x()),r=Re(this._index,i[0],i[1],i[2],i[3]),a=[];return this._createTileGraphics(a,e,r,{originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]}),a}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,s){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const i=xe.acquire(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,i),s&&this._index.insert(i),i.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=R(i.bounds);return i.size[0]=i.size[1]=0,this._index.remove(i),i.set(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView.getTileResolution(e);this._resolution=t,this._index.clear(),Ce.length=0,this._itemByGraphic.forEach((e=>{e.updateBounds(this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),e.geometry&&Ce.push(e)})),this._index.load(Ce)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i){const r=this._uidFieldName;let a,o,n,h;s.sort(((e,t)=>e.zorder-t.zorder));for(let d=0;d<s.length;d++){n=s[d],a=n.graphic,o=n.getGeometryQuantized(i),h=0===d?-1:s[d-1].graphic.uid;const c={...n.graphic.attributes};c[r]=a.uid,null==n.groupId&&(n.groupId=t.createTemplateGroup(n.symbol,null)),e.push({centroid:xe.getCentroidQuantized(n,i),geometry:o,attributes:c,symbol:n.symbol,groupId:n.groupId,insertAfter:h,zorder:n.zorder})}}}function Pe(e,t,s){if(s.has(e))return s.get(e);const i={tile:t,addedOrModified:[],removed:[]};return s.set(e,i),i}let Me=class extends(Se(M(a))){constructor(e){super(e),this._storage=new de,this._displayIds=new Map,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=o(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this),this._processAnalyzedGraphics=this._processAnalyzedGraphics.bind(this),this._graphicsChangeHandler=this._graphicsChangeHandler.bind(this)}_createMatcher(e,t){if(e){const s=be({indexCount:0,fields:{}},"feature",e);this._matcher=pe(s,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._tileStore=new ce(this.view.featuresTilingScheme),this.container=new ve(this.view.featuresTilingScheme),this._attributeStore=new le({type:"local",initialize:e=>o(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},Y());this._graphicStore=new Ae(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}));const e=new ue(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,e),this._meshFactory=new ge(null,this.uid,e),this._templateStore=e,this.watch("renderer",(t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",this._graphicsChangeHandler),"graphics"),this._attached=!0,this.notifyChange("updating")}))}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return o();const s=this.view.toMap(T(e,t));return this.searchFeatures(s).then((e=>e&&e.length?e[0]:null))}async searchFeatures(e,t=2){return this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation)}update(e){const t=e.state,s=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(s),this._tileStore.setViewState(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:s,newValue:i}=e,r=t;switch(s){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(r),this.requestUpdate();break;case"visible":this._setFilterState(r.uid,i),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);return!t||0===A(t)||0===P(t)?[]:this._tileStore.boundsIntersections(t)}_updateTile(e){const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified);return this._processGraphics(s).then((s=>(this._patchTile(t.key,{type:"update",addOrUpdate:s,remove:e.removed,end:!0}),s)))}_patchTile(e,t){if(!this._tiles.has(e))return;const s=this._tiles.get(e);this.container.onTileData(s,t),this.container.requestRender()}_graphicsChangeHandler(e){for(const t of e.added)this._pendingUpdate.added.add(t);for(const t of e.moved)this._pendingUpdate.added.add(t);for(const t of e.removed)this._pendingUpdate.added.has(t)?this._pendingUpdate.added.delete(t):this._pendingUpdate.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]},t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t),this._tileStore.setViewState(e)}const a=[],o=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],n=this._getIntersectingTiles(t);for(const e of n){r=e.id;Pe(r,e,i).removed.push(this._displayIds.get(t.uid))}a.push(this._updateGraphic(t,null)),o[e]=t}const h=s.length;for(let t=0;t<e.length;t++){const s=e[t];o[h+t]=s,this._graphicsSet.add(s),a.push(this.addGraphic(s))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t){r=s.id;Pe(r,s,i).removed.push(this._displayIds.get(e.uid))}this._graphicsSet.delete(e),this._graphicStore.remove(e)}let d;this._flipUpdatingGraphics(),await n(a);for(let e=0;e<o.length;e++){d=o[e];const t=this._getIntersectingTiles(d);for(const e of t){r=e.id;Pe(r,e,i).addedOrModified.push(d)}}this._graphicStore.updateZ();const c=[];for(const[e,t]of i)c.push(this._updateTile(t));await n(c)}catch(e){}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return s(e.geometry)?null:{geometryType:f(e.geometry),spatialReference:l.fromJSON(e.geometry.spatialReference),fields:t}}async _getSymbolForGraphic(e,t){return i(e.symbol)?e.symbol:i(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)}async _getSymbolResources(e,t){if(!this.container.stage)return o(null);const s=this._getArcadeInfo(e),i=await this._getSymbolForGraphic(e,t),r=we(i),a=await me(r,s,t);if("esriTS"===a.type){const e=[],[t]=W(a.text);for(let s=0;s<t.length;s++)e.push(t.charCodeAt(s));const s={symbol:a,id:0,glyphIds:e},[{mosaicItem:i}]=await this.container.getMaterialItems([s]);return{symbol:a,mosaicItem:i}}return{symbol:a,mosaicItem:null}}async _projectAndNormalizeGeometry(e){if(s(e.geometry))return o(null);let t=e.geometry;if(b(t)){const e=t.rings;t.rings=e}else if(w(t)){const e=t.paths;t.paths=e}else S(t)&&(t=g.fromExtent(t));return N(t.spatialReference,this.view.spatialReference).then((()=>{const e=ae(t),s=Q(e,t.spatialReference,this.view.spatialReference);return _(s),s}))}_onTileUpdate(e){const t=p(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}addGraphic(e){this._abortProcessingGraphic(e.uid);const t=h();this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};return this._addOrUpdateGraphic(e,s).then((()=>{this._graphicIdToAbortController.delete(e.uid)})).catch((t=>{if(this._graphicIdToAbortController.delete(e.uid),!d(t))throw t}))}async _updateGraphic(e,t){const s=this._projectAndNormalizeGeometry(e),i=this._getSymbolResources(e,t),[r,a]=await n([s,i]);this._graphicStore.addOrModify(e,a,r)}async _addOrUpdateGraphic(e,t){const s=this._projectAndNormalizeGeometry(e),i=this._getSymbolResources(e,t);try{const[t,r]=await n([s,i]);this._addProjectedGraphic(e,r,t)}catch(e){if(!d(e))throw e}}_addProjectedGraphic(e,t,s){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,s)}_addTile(e){const t=x();this.view.featuresTilingScheme.getTileBounds(t,e);const s=new ye(e,t,!0);return this._tiles.set(e,s),this.container.addChild(s),s}_addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&G(e.geometry)&&this._wrapPoints(e,s)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating"),this._processGraphics(i).then((e=>{const t={type:"update",clear:!0,addOrUpdate:e,remove:[],end:!0};s.setData(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")})).catch((e=>{if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!d(e))throw e}))}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?X:0))}_getGraphicsData(e,t,s){const i=p(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,s);if(i){const e=Math.round((i.valid[1]-i.valid[0])/t.resolution);for(const t of r)t.geometry&&G(t.geometry)&&this._wrapPoints(t,e)}return r}_wrapPoints(e,t){const s=e.geometry;512===t?s.x<20?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>492&&(e.geometry={points:[[s.x,s.y],[-t,0]]}):s.x<-20?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>532&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}async _processGraphics(e,t){if(!(e&&e.length)||!this._meshFactory)return null;const s=Ge.from(e),i=this._meshFactory;return await i.analyzeGraphics(s,await this._matcher,null,null,t),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(s)}_processAnalyzedGraphics(e){const t=this._meshFactory,s=t.createMeshData(e.getApproximateSize()),i=e.getCursor();for(;i.next();){const e=i.readGraphic();e.insertAfter=-1===e.insertAfter?-1:this._displayIds.get(e.insertAfter),e.displayId=this._displayIds.get(e.attributes[this.uid]),t.writeGraphic(s,i)}const r={};return s.encode(r,[]),fe.decode(r)}_abortProcessingGraphic(e){if(this._graphicIdToAbortController.has(e)){this._graphicIdToAbortController.get(e).abort()}}_getNullSymbol(e){const t=e.geometry;return w(t)?F:b(t)||S(t)?q:k}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};e([r({constructOnly:!0})],Me.prototype,"requestUpdateCallback",void 0),e([r({constructOnly:!0})],Me.prototype,"graphics",void 0),e([r()],Me.prototype,"updating",null),e([r()],Me.prototype,"view",void 0),e([r()],Me.prototype,"updateRequested",void 0),Me=e([c("esri.views.2d.layers.support.GraphicsView2D")],Me);var Fe=Me;export{Fe as G};
