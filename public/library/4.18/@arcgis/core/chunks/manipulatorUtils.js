/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{i as t,b as i,c as s,u as r}from"./Logger.js";import{o as n}from"./metadata.js";import{n as o}from"./compilerUtils.js";import{E as a}from"./Evented.js";import c from"../geometry/Point.js";import{d as l}from"./mathUtils2.js";import{c as h,Z as d}from"./vec3f64.js";import{a as u,t as g,i as m,s as f,g as p,h as _,f as v,c as b,n as y,e as S}from"./vec3.js";import"../geometry.js";import{b as w,d as j,s as E,g as L}from"./screenUtils.js";import{e as T}from"./unitUtils.js";import{c as O,g as P,m as R,i as F,a as z}from"./mat4.js";import{x as A}from"./aaBoundingRect.js";import{canProjectWithoutEngine as D,projectPoint as x,sphericalECEFToSphericalPCPF as C,computeLatLonToENURotation as I}from"../geometry/projection.js";import{c as M,f as q}from"./vec4f64.js";import{c as N,a as W}from"./quatf64.js";import{f as B}from"./mat3.js";import{a as U}from"./BufferView.js";import{j as V}from"./vec2.js";import{f as k,B as G}from"./aaBoundingBox.js";import{g as H}from"./ElevationProvider.js";import{g as $,S as Z,T as J,e as K,C as Q,s as X,p as Y,a as ee,b as te,V as ie,h as se,i as re,k as ne,z as oe,R as ae,t as ce,M as le,r as he,G as de,F as ue,w as ge}from"./PiUtils.glsl.js";import{P as me}from"./Program.js";import{m as fe,a as pe,d as _e}from"./isWebGL2Context.js";import{n as ve}from"./InterleavedLayout.js";import{u as be,r as ye,p as Se,c as we,b as je}from"./geometryUtils.js";import{o as Ee,L as Le,C as Te,c as Oe,g as Pe,G as Re}from"./ColorMaterial.js";import{a as Fe}from"./Util.js";import{G as ze}from"./Geometry.js";import{O as Ae}from"./Object3D.js";import{C as De}from"./Camera.js";class xe{constructor(e){this.camera=new De,this._elevation={offset:0,override:null},this.collisionType={type:"point"},this.collisionPriority=0,this._renderObjects=[],this.autoScaleRenderObjects=!0,this._available=!0,this._noDisplayCount=0,this._radius=10,this._worldSized=!1,this.focusMultiplier=2,this.touchMultiplier=2.5,this.worldOriented=!1,this._modelTransform=N(),this._worldFrame=null,this._renderLocation=h(),this._renderLocationDirty=!0,this._location=new c({x:0,y:0,z:0}),this._elevationAlignedLocation=new c,this._elevationAlignedLocationDirty=!0,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.cursor=null,this._grabbing=!1,this.dragging=!1,this._hovering=!1,this._selected=!1,this._state=0,this._focused=!1,this.events=new a.EventEmitter,this._screenLocation={screenPointArray:w(),renderScreenPointArray:j(),pixelSize:0},this._screenLocationDirty=!0,this._applyObjectTransform=null,this._engineResourcesAddedToStage=!1,this._engineResources=null,this._attached=!1,this._engineLayerId=null,this._materialIdReferences=null,this._location.spatialReference=e.view.spatialReference;for(const t in e)this[t]=e[t];this.view.state&&this.view.state.camera&&this.camera.copyFrom(this.view.state.camera)}destroy(){this._removeResourcesFromStage(),this._engineResources=null,this.view=null,this.camera=null}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this._elevationAlignedLocationDirty=!0,this._renderLocationDirty=!0,this._updateEngineObject()}get renderObjects(){return this._renderObjects}set renderObjects(e){this._removeResourcesFromStage(),this._engineResources=null,this._renderObjects=e.slice(),this._updateEngineObject()}set available(e){e!==this._available&&(this._available=e,this._updateEngineObject())}get available(){return this._available}disableDisplay(){return this._noDisplayCount++,1===this._noDisplayCount&&this._updateEngineObject(),{remove:n((()=>{this._noDisplayCount--,0===this._noDisplayCount&&this._updateEngineObject()}))}}set radius(e){e!==this._radius&&(this._radius=e,this._updateEngineObject())}get radius(){return this._radius}set worldSized(e){e!==this._worldSized&&(this._worldSized=e,this._updateEngineObject())}get worldSized(){return this._worldSized}get modelTransform(){return this._modelTransform}set modelTransform(e){Ce(e)&&(this._screenLocationDirty=!0),O(this._modelTransform,e),this._updateEngineObject()}get renderLocation(){return this._renderLocationDirty&&(this._renderLocationDirty=!1,this.view.renderCoordsHelper.toRenderCoords(this.elevationAlignedLocation,this._renderLocation),this.worldOriented?(this._worldFrame||(this._worldFrame=N()),function(e,t,i){switch(e.viewingMode){case"local":return F(i),!0;case"global":{const s=T(e.renderCoordsHelper.spatialReference);C(t,0,Ve,0,s.radius),I(l(Ve[1]),l(Ve[0]),i)}}}(this.view,this._renderLocation,this._worldFrame)):this._worldFrame&&(this._worldFrame=null)),this._renderLocation}set renderLocation(e){this.view.renderCoordsHelper.fromRenderCoords(e,this._location),this.elevationAlignedLocation=this._location}get location(){return this._location}set location(e){Ee(e,this._location),this._renderLocationDirty=!0,this._screenLocationDirty=!0,this._elevationAlignedLocationDirty=!0,this._updateEngineObject(),this.events.emit("location-update",{location:this._location})}get elevationAlignedLocation(){return this._elevationAlignedLocationDirty?(this._evaluateElevationAlignment(),this._updateElevationAlignedLocation(),this._elevationAlignedLocation):this._elevationAlignedLocation}set elevationAlignedLocation(e){Ee(e,this._location),this._evaluateElevationAlignment(),this._location.z-=this._elevation.offset,this._updateElevationAlignedLocation(),this._updateEngineObject(),this.events.emit("location-update",{location:this._location})}_updateElevationAlignedLocation(){this._elevationAlignedLocation.x=this.location.x,this._elevationAlignedLocation.y=this.location.y;const e=t(this._elevation.override)?this._elevation.override:this.location.z||0;this._elevationAlignedLocation.z=e+this._elevation.offset,this._elevationAlignedLocation.spatialReference=this.location.spatialReference,this._renderLocationDirty=!0,this._screenLocationDirty=!0,this._elevationAlignedLocationDirty=!1}grabbableForEvent(){return!0}get grabbing(){return this._grabbing}set grabbing(e){e!==this._grabbing&&(this._grabbing=e,this._setFocused(this._hovering||this._grabbing),this._updateEngineObject())}get hovering(){return this._hovering}set hovering(e){e!==this._hovering&&(this._hovering=e,this._setFocused(this._hovering||this._grabbing),this._updateEngineObject())}get selected(){return this._selected}set selected(e){e!==this._selected&&(this._selected=e,this._updateEngineObject(),this.events.emit("select-changed",{action:e?"select":"deselect"}))}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,this._updateEngineObject())}updateStateEnabled(e,t){t?this.state|=e:this.state&=~e}_setFocused(e){e!==this._focused&&(this._focused=e,this.events.emit("focus-changed",{action:!0===e?"focus":"unfocus"}))}get focused(){return this._focused}get screenLocation(){return this.ensureScreenLocation(),this._screenLocation}ensureScreenLocation(){if(!this._screenLocationDirty)return;this._screenLocation.pixelSize=this.camera.computeScreenPixelSizeAt(this.renderLocation),this._screenLocationDirty=!1;let e;if(Ce(this._modelTransform)){const t=this._calculateModelTransformOffset(Ze);e=u(t,t,this.renderLocation)}else e=this.renderLocation;this.camera.projectToRenderScreen(e,this._screenLocation.renderScreenPointArray),this.camera.renderToScreen(this._screenLocation.renderScreenPointArray,this._screenLocation.screenPointArray)}get applyObjectTransform(){return this._applyObjectTransform}set applyObjectTransform(e){this._applyObjectTransform=e,this._screenLocationDirty=!0,this._updateEngineObject()}intersectionDistance(e,t){if(!this.available)return null;const s=E(e,Ie),r=this._getCollisionRadius(t),n=-1*this.collisionPriority;switch(this.collisionType.type){case"point":if(V(this.screenLocation.screenPointArray,s)<r*r)return this.screenLocation.renderScreenPointArray[2]+n;break;case"line":{const e=this.collisionType.paths,t=this._getWorldToScreenObjectScale(),o=this._calculateObjectTransform(t,Be),a=r*this.screenLocation.pixelSize,c=ye.fromScreen(this.camera,s,qe);if(i(c))return null;for(const t of e){if(0===t.length)continue;const e=m(Ve,t[0],o);for(let i=1;i<t.length;i++){const s=m(ke,t[i],o),r=be.closestRayDistance2(be.fromPoints(e,s,Me),c);if(null!=r&&r<a*a){const t=u(we.get(),e,s);f(t,t,.5);const i=L(we.get());return this.camera.projectToRenderScreen(t,i),i[2]+n}p(e,s)}}break}case"disc":{var a;const e=this.collisionType.direction,t=null!=(a=this.collisionType.offset)?a:d,o=this._getWorldToScreenObjectScale(),c=this._calculateObjectTransform(o,Be),l=r*this.screenLocation.pixelSize,h=ye.fromScreen(this.camera,s,qe);if(i(h))return null;const u=B(Ne,c),f=g(He,e,u),p=m($e,t,c);Se.fromPositionAndNormal(p,f,Ue);const v=Ge;if(Se.intersectRay(Ue,h,v)&&_(v,p)<l*l)return this.screenLocation.renderScreenPointArray[2]+n;break}case"ribbon":{const{paths:e,direction:t}=this.collisionType,o=this._getWorldToScreenObjectScale(),a=this._calculateObjectTransform(o,Be),c=r*this.camera.computeScreenPixelSizeAt(this.renderLocation),l=ye.fromScreen(this.camera,s,qe);if(i(l))return null;const h=B(Ne,a),d=g(He,t,h),_=this._calculateModelTransformPosition($e);Se.fromPositionAndNormal(_,d,Ue);const v=Ge;if(!Se.intersectRay(Ue,l,v))break;for(const t of e){if(0===t.length)continue;const e=m(Ve,t[0],a);for(let i=1;i<t.length;i++){const s=m(ke,t[i],a),r=be.distance2(be.fromPoints(e,s,Me),v);if(null!=r&&r<c*c){const t=u(we.get(),e,s);f(t,t,.5);const i=L(we.get());return this.camera.projectToRenderScreen(t,i),i[2]+n}p(e,s)}}break}default:o(this.collisionType)}return null}attach(e={manipulator3D:{}}){if(!this.view._stage)return;const t=e.manipulator3D;if(this._engineLayerId=t.engineLayerId,i(this._engineLayerId)){const e=new Le("manipulator-3d",{isPickable:!1});this.view._stage.add(0,e),this.view._stage.addToViewContent([e.id]),this._engineLayerId=e.id,t.engineLayerId=e.id}t.engineLayerReferences=(t.engineLayerReferences||0)+1,this._materialIdReferences=t.materialIdReferences,i(this._materialIdReferences)&&(this._materialIdReferences=new Map,t.materialIdReferences=this._materialIdReferences),this.camera.copyFrom(this.view.state.camera),this._attached=!0,this._updateEngineObject(),D(this._location.spatialReference,this.view.spatialReference)||(this.location=new c({x:0,y:0,z:0,spatialReference:this.view.spatialReference}))}detach(e={manipulator3D:{}}){const t=e.manipulator3D;t.engineLayerReferences--;const i=0===t.engineLayerReferences;i&&(t.engineLayerId=null),this._removeResourcesFromStage(i),this._engineResources=null,this._engineLayerId=null,this._materialIdReferences=null,this._attached=!1}onViewChange(){this.camera.copyFrom(this.view.state.camera),this._screenLocationDirty=!0,this._updateEngineObject()}onElevationChange(e){x(this.location,Je,e.spatialReference),A(e.extent,Je)&&(this.location=this._location)}_evaluateElevationAlignment(e=this.location){if(i(this.elevationInfo))return!1;let t=null,r=0;const n=s(this.elevationInfo.offset,0);switch(this.elevationInfo.mode){case"on-the-ground":t=H(this.view.elevationProvider,e,"ground")||0;break;case"relative-to-ground":r=(H(this.view.elevationProvider,e,"ground")||0)+n;break;case"relative-to-scene":r=(H(this.view.elevationProvider,e,"scene")||0)+n;break;case"absolute-height":r=n}return(r!==this._elevation.offset||t!==this._elevation.override)&&(this._elevation.offset=r,this._elevation.override=t,!0)}_updateEngineObject(){if(!this._attached)return;if(!this.available)return void this._removeResourcesFromStage();const e=this._getWorldToScreenObjectScale(),t=Be;if(!0===this.autoScaleRenderObjects){const i=this._getFocusedSize(this._radius,this.focused)*e;this._calculateObjectTransform(i,t)}else this._calculateObjectTransform(e,t);const{objectsByState:i}=this._ensureEngineResources(),s=(this.focused?2:1)|(this.selected?8:4),r=this._noDisplayCount>0;for(const{stateMask:e,objects:n}of i){if(r){for(const e of n)e.setVisible(!1);continue}const i=!(0!=(15&e))||(s&e)==(15&e),o=!(0!=(65520&e))||(this.state&e)==(65520&e);if(i&&o)for(const e of n)e.setVisible(!0),e.objectTransformation=t;else for(const e of n)e.setVisible(!1)}}_ensureEngineResources(){if(i(this._engineResources)){const e=this.view._stage.getContent(0,r(this._engineLayerId)),t=[],i=new Set;this.renderObjects.forEach((({material:e})=>{i.has(e)||(t.push(e),i.add(e))}));const s=(e,t)=>{const{geometry:i,material:s,transform:r}=t;Array.isArray(i)?i.forEach((t=>e.addGeometry(t,s,r))):e.addGeometry(i,s,r)},n=new Map;this.renderObjects.forEach((e=>{const t=new Ae({idHint:"manipulator",castShadow:!1});s(t,e);const i=e.stateMask||0,r=n.get(i)||[];r.push(t),n.set(i,r)}));const o=[];n.forEach(((e,t)=>{o.push({stateMask:t,objects:e})})),this._engineResources={objectsByState:o,layer:e,materials:t}}return this._addResourcesToStage(),this._engineResources}_addResourcesToStage(){if(this._engineResourcesAddedToStage||i(this._engineResources))return;const{objectsByState:e,layer:t,materials:s}=this._engineResources;s.forEach((e=>{const t=r(this._materialIdReferences),i=t.get(e.id)||0;0===i&&this.view._stage.add(3,e),t.set(e.id,i+1)})),e.forEach((({objects:e})=>{e.forEach((e=>{t.addObject(e),this.view._stage.add(1,e)}))})),this._engineResourcesAddedToStage=!0}_removeResourcesFromStage(e=!1){if(!this._engineResourcesAddedToStage||i(this._engineResources))return;const{objectsByState:t,layer:s,materials:n}=this._engineResources;t.forEach((({objects:e})=>{e.forEach((e=>{s.removeObject(e),this.view._stage.remove(1,e.id)}))})),n.forEach((e=>{const t=r(this._materialIdReferences),i=t.get(e.id);1===i?(this.view._stage.remove(3,e.id),t.delete(e.id)):t.set(e.id,i-1)})),e&&this.view._stage.remove(0,s.id),this._engineResourcesAddedToStage=!1}_getCollisionRadius(e){return this._getFocusedSize(this.radius,!0)*("touch"===e?this.touchMultiplier:1)}_getFocusedSize(e,t){return e*(t?this.focusMultiplier:1)}_getWorldToScreenObjectScale(){return this._worldSized?1:this.screenLocation.pixelSize}_calculateModelTransformPosition(e){const t=this._getWorldToScreenObjectScale(),i=this._calculateObjectTransform(t,We);return v(e,i[12],i[13],i[14])}_calculateModelTransformOffset(e){const t=this._calculateModelTransformPosition(e);return b(e,t,this.renderLocation)}_calculateObjectTransform(e,i){return P(i,e,0,0,0,0,e,0,0,0,0,e,0,0,0,0,1),this._worldFrame&&R(i,i,this._worldFrame),R(i,i,this._modelTransform),i[12]+=this.renderLocation[0],i[13]+=this.renderLocation[1],i[14]+=this.renderLocation[2],i[15]=1,t(this._applyObjectTransform)&&this._applyObjectTransform(i),i}get test(){let e=!1;if(t(this._engineResources))for(const t in this._engineResources.objectsByState){const i=this._engineResources.objectsByState[t];for(const t of i.objects)if(t.isVisible){e=!0;break}if(e)break}return{areAnyResourcesVisible:e}}}function Ce(e){return 0!==e[12]||0!==e[13]||0!==e[14]}const Ie=w(),Me=be.create(),qe=ye.create(),Ne=W(),We=N(),Be=N(),Ue=Se.create(),Ve=h(),ke=h(),Ge=h(),He=h(),$e=h(),Ze=h(),Je=new c({x:0,y:0,z:0,spatialReference:null});var Ke;!function(e){e.builder=function(e,t){e.vertex.uniforms.add("camPos","vec3").add("perScreenPixelRatio","float").add("screenSize","float"),e.vertex.code.add($`
    float computeRenderPixelSizeAt( vec3 pWorld ){
      vec3 viewForward = - vec3(view[0][2], view[1][2], view[2][2]);
      float viewDirectionDistance = abs(dot(viewForward, pWorld - camPos));
      return viewDirectionDistance*perScreenPixelRatio;
    }

    vec3 screenSizeScaling(vec3 position, vec3 anchor){
      return position * screenSize * computeRenderPixelSizeAt(anchor) + anchor;
    }
  `)},e.bindPassUniforms=function(e,t,i){e.setUniform1f("perScreenPixelRatio",i.camera.perScreenPixelRatio),e.setUniform1f("screenSize",t.screenSize)}}(Ke||(Ke={}));var Qe=Object.freeze({__proto__:null,build:function(e){const t=new Z;return t.include(J,{linearDepth:!1}),t.include(Ke.builder,{}),t.include(K,e),t.fragment.include(Q),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),t.fragment.uniforms.add("color","vec4"),t.attributes.add("position","vec3"),t.varyings.add("vWorldPosition","vec3"),e.screenSizeEnabled&&t.attributes.add("offset","vec3"),e.shadingEnabled&&(t.vertex.uniforms.add("viewNormal","mat4"),t.fragment.uniforms.add("shadedColor","vec4").add("shadingDirection","vec3"),t.attributes.add("normal","vec3"),t.varyings.add("vViewNormal","vec3")),t.vertex.code.add($`
    void main(void) {
      vWorldPosition = ${e.screenSizeEnabled?"screenSizeScaling(offset, position)":"position"};
  `),e.shadingEnabled&&t.vertex.code.add($`
      vec3 worldNormal = normal;
      vViewNormal = (viewNormal * vec4(worldNormal, 1)).xyz;
    `),t.vertex.code.add($`
    gl_Position = transformPosition(proj, view, vWorldPosition);
  }
  `),t.fragment.code.add($`
    void main() {
      discardBySlice(vWorldPosition);
    `),e.shadingEnabled?t.fragment.code.add($`
      vec3 viewNormalNorm = normalize(vViewNormal);
      float shadingFactor = 1.0 - clamp(-dot(viewNormalNorm, shadingDirection), 0.0, 1.0);
      vec4 finalColor = mix(color, shadedColor, shadingFactor);
    `):t.fragment.code.add($`
      vec4 finalColor = color;
    `),t.fragment.code.add($`
      if (finalColor.a < ${$.float(X)}) {
        discard;
      }
      ${7===e.output?$`gl_FragColor = vec4(finalColor.a);`:""}

      ${0===e.output?$`gl_FragColor = highlightSlice(finalColor, vWorldPosition); ${e.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}`:""}
    }
    `),t}});class Xe extends te{initializeProgram(e){const t=Xe.shader.get(),i=this.configuration,s=t.build({output:i.output,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:i.sliceHighlightDisabled,sliceEnabledForVertexPrograms:!1,screenSizeEnabled:i.screenSizeEnabled,shadingEnabled:i.shadingEnabled,OITEnabled:0===i.transparencyPassType});return new me(e.rctx,s.generateSource("vertex"),s.generateSource("fragment"),tt)}bindPass(e,t,i){const{screenSizeEnabled:s,shadingEnabled:r}=this.configuration,{color:n,shadingTint:o,shadingDirection:a}=t;ie.bindProjectionMatrix(this.program,i.camera.projectionMatrix),this.program.setUniform4fv("color",n),r&&(this.program.setUniform4fv("shadedColor",this.blendColor(it,o,n)),this.program.setUniform3fv("shadingDirection",a),this.program.setUniformMatrix4fv("viewNormal",i.camera.viewInverseTransposeMatrix)),s&&Ke.bindPassUniforms(this.program,t,i)}blendColor(e,t,i){const s=1-t[3],r=t[3]+i[3]*s;return 0===r?(e[3]=r,e):(e[0]=(t[0]*t[3]+i[0]*i[3]*s)/r,e[1]=(t[1]*t[3]+i[1]*i[3]*s)/r,e[2]=(t[2]*t[3]+i[2]*i[3]*s)/r,e[3]=i[3],e)}bindDraw(e){ie.bindView(this.program,e),ie.bindCamPosition(this.program,e.origin,e.camera.viewInverseTransposeMatrix),K.bindUniformsWithOrigin(this.program,this.configuration,e)}setPipelineState(e){const t=this.configuration,i=3===e,s=2===e;return fe({blending:0!==t.output&&7!==t.output||!t.transparent?null:i?se:re(e),culling:(r=t.cullFace,0!==r&&{face:1===r?1028:1029,mode:2305}),depthTest:{func:s?513:t.shadingEnabled?515:513},depthWrite:i?t.writeDepth&&pe:ne(e),colorWrite:_e,polygonOffset:i||s?null:oe});var r}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}Xe.shader=new ae(Qe,(()=>Promise.resolve().then((function(){return Qe}))));class Ye extends ee{constructor(){super(...arguments),this.output=0,this.cullFace=0,this.slicePlaneEnabled=!1,this.sliceHighlightDisabled=!1,this.transparent=!1,this.writeDepth=!0,this.screenSizeEnabled=!0,this.shadingEnabled=!0,this.transparencyPassType=3}}e([Y({count:8})],Ye.prototype,"output",void 0),e([Y({count:3})],Ye.prototype,"cullFace",void 0),e([Y()],Ye.prototype,"slicePlaneEnabled",void 0),e([Y()],Ye.prototype,"sliceHighlightDisabled",void 0),e([Y()],Ye.prototype,"transparent",void 0),e([Y()],Ye.prototype,"writeDepth",void 0),e([Y()],Ye.prototype,"screenSizeEnabled",void 0),e([Y()],Ye.prototype,"shadingEnabled",void 0),e([Y({count:4})],Ye.prototype,"transparencyPassType",void 0);const et={POSITION:"position",NORMAL:"normal",OFFSET:"offset"},tt={position:0,normal:1,offset:2},it=M();class st extends le{constructor(e,t){super(t,e,nt),this.supportsEdges=!0,this.techniqueConfig=new Ye,this._vertexAttributeLocations=tt}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.params.cullFace,this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled,this.techniqueConfig.transparent=this.params.transparent,this.techniqueConfig.writeDepth=this.params.writeDepth,this.techniqueConfig.screenSizeEnabled=this.params.screenSizeEnabled,this.techniqueConfig.shadingEnabled=this.params.shadingEnabled,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig}getPassParameters(){return this.params}intersect(e,t,i,s,r,n,o){if(this.params.screenSizeEnabled){const i=e.getAttribute(et.OFFSET),a={applyToVertex:(e,t,r,n)=>{const o=v(at,i.data[3*n+0],i.data[3*n+1],i.data[3*n+2]),a=v(ct,e,t,r);return f(o,o,this.params.screenSize*s.camera.computeRenderPixelSizeAt(o)),u(a,a,o),[a[0],a[1],a[2]]},applyToAabb:e=>{const t=k(e,at);return G(e,this.params.screenSize*s.camera.computeRenderPixelSizeAt(t))}};he(e,t,s,r,n,a,o)}else he(e,t,s,r,n,void 0,o)}getGLMaterial(e){return 0===e.output||7===e.output||4===e.output?new rt(e):void 0}createBufferWriter(){return new ot(this.params.screenSizeEnabled)}}class rt extends de{constructor(e){super(e),this.updateParameters()}updateParameters(e){this.technique=this.techniqueRep.acquireAndReleaseExisting(Xe,this.material.getTechniqueConfig(this.output,e),this.technique)}beginSlot(e){if(4===this.output)return 3===e;let t=3;return this.technique.configuration.transparent&&(t=this.technique.configuration.writeDepth?5:8),e===t}ensureParameters(e){this.updateParameters(e)}bind(e,t){e.bindProgram(this.technique.program),this.technique.bindPass(e,this.material.getPassParameters(),t)}}const nt={color:[1,1,1,1],shadingTint:[0,0,0,.25],shadingDirection:y(h(),[.5,-.5,-.5]),transparent:!1,writeDepth:!0,slicePlaneEnabled:!1,cullFace:0,screenSizeEnabled:!1,screenSize:14,shadingEnabled:!0,...ce};class ot{constructor(e){this.screenSizeEnabled=e;const t=ve().vec3f(et.POSITION).vec3f(et.NORMAL);this.screenSizeEnabled&&t.vec3f(et.OFFSET),this.vertexBufferLayout=t}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices[et.POSITION].length}write(e,t,i,s){if(ue(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,i,s),this.screenSizeEnabled){if(!(et.OFFSET in t.vertexAttr))throw new Error(`${et.OFFSET} vertex attribute required for screenSizeEnabled ShadedColorMaterial`);{const r=t.vertexAttr[et.OFFSET],n=t.indices[et.OFFSET];Fe(3===r.size);const o=i.getField(et.OFFSET,U);if(!o)throw new Error("unable to acquire view for "+et.OFFSET);ge(n,r.data,e.invTranspTransformation,o,s)}}}}const at=h(),ct=h();function lt(e,t=4){const i=q(e[0],e[1],e[2],e.length>3?e[3]:1),s=e[3]<1;return new st({color:i,transparent:s,writeDepth:!0,cullFace:2,renderOccluded:t},"manipulator")}function ht(e,t=4){const i=q(e[0],e[1],e[2],4===e.length?e[3]:1);return new Te({color:i,transparent:!0,writeDepth:!0,cullFace:1,renderOccluded:t},"manipulator-outline")}function dt(e,t,i){return new xe({view:e,renderObjects:[{geometry:new ze(Re.createSphereGeometry(1,32,32),"manipulator"),material:lt(q(t[0],t[1],t[2],null!=i?i:1))}]})}function ut(e,t,i,s){const r=b(we.get(),e,i),n=gt(r,S(we.get(),s,r),i,je.get());z(n,n);const o=m(we.get(),t,n);return Math.atan2(o[1],o[0])}function gt(e,t,i,s){const r=y(we.get(),e),n=y(we.get(),t),o=S(we.get(),r,n);return s[0]=r[0],s[1]=r[1],s[2]=r[2],s[3]=0,s[4]=n[0],s[5]=n[1],s[6]=n[2],s[7]=0,s[8]=o[0],s[9]=o[1],s[10]=o[2],s[11]=0,s[12]=i[0],s[13]=i[1],s[14]=i[2],s[15]=1,s}function mt(e,i){const s=e.getViewForGraphic(i);return t(s)&&"computeAttachmentOrigin"in s?s.computeAttachmentOrigin(i,e.spatialReference):null}function ft(e,s,r){const n=mt(e,r);t(n)?s.elevationAlignedLocation=n:function(e,t){if(i(t))return;const s=Oe(t);if(i(s))return;e.location=Pe(s)}(s,r.geometry)}export{xe as M,st as S,lt as a,gt as b,dt as c,ut as d,et as e,ht as f,mt as g,ft as p};
