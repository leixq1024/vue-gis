/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import t from"../layers/support/PixelBlock.js";const e=function(t){return t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0};function n(n,i){if(!i||!e(n))return n;const l=n.pixels.length;return i&&i.some((t=>t>=l))||1===l&&1===i.length&&0===i[0]?n:l!==i.length||i.some(((t,e)=>t!==e))?new t({pixelType:n.pixelType,width:n.width,height:n.height,mask:n.mask,validPixelCount:n.validPixelCount,maskIsAlpha:n.maskIsAlpha,pixels:i.map((t=>n.pixels[t])),statistics:n.statistics&&i.map((t=>n.statistics[t]))}):n}function i(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),o=new Uint8Array(4*l),r=[];let a,s=0,h=0;const f=5===n[0].length;if(l>65536)return n.forEach((t=>{r[t[0]-i]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:i,alphaSpecified:f};if(t.fillUnspecified)for(a=n[h],s=a[0]-i;s<l;s++)o[4*s]=a[1],o[4*s+1]=a[2],o[4*s+2]=a[3],o[4*s+3]=f?a[4]:255,s===a[0]-i&&(a=h===n.length-1?a:n[++h]);else for(s=0;s<n.length;s++)a=n[s],h=4*(a[0]-i),o[h]=a[1],o[h+1]=a[2],o[h+2]=a[3],o[h+3]=f?a[4]:255;return{indexedColormap:o,offset:i,alphaSpecified:f}}function l(t,n){if(!e(t))return t;if(!n&&(n.indexedColormap||n.indexed2DColormap))return t;const i=t.clone(),l=i.pixels;let o=i.mask;const r=i.width*i.height;if(1!==l.length)return t;const{indexedColormap:a,indexed2DColormap:s,offset:h,alphaSpecified:f}=n,u=a.length-1;let p=0;const x=l[0],c=new Uint8Array(x.length),m=new Uint8Array(x.length),d=new Uint8Array(x.length);let w,y=0;if(a)if(o)for(p=0;p<r;p++)o[p]&&(y=4*(x[p]-h),y<h||y>u?o[p]=0:(c[p]=a[y],m[p]=a[y+1],d[p]=a[y+2],o[p]=a[y+3]));else{for(o=new Uint8Array(r),p=0;p<r;p++)y=4*(x[p]-h),y<h||y>u?o[p]=0:(c[p]=a[y],m[p]=a[y+1],d[p]=a[y+2],o[p]=a[y+3]);i.mask=o}else if(o)for(p=0;p<r;p++)o[p]&&(w=s[x[p]],c[p]=w[0],m[p]=w[1],d[p]=w[2],o[p]=w[3]);else{for(o=new Uint8Array(r),p=0;p<r;p++)w=s[x[p]],c[p]=w[0],m[p]=w[1],d[p]=w[2],o[p]=w[3];i.mask=o}return i.pixels=[c,m,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=f,i}function o(t){if(!e(t))return null;t.statistics||t.updateStatistics();const{pixels:n,mask:i,pixelType:l,statistics:o}=t,r=t.width*t.height,a=n.length;let s,h,f,u,p;const x=[],c=[];let m,d,w,y,g,M,k,A,U,C;const T=256;for(u=0;u<a;u++){if(m=new Uint32Array(T),w=n[u],"u8"===l)if(s=-.5,h=255.5,i)for(p=0;p<r;p++)i[p]&&m[w[p]]++;else for(p=0;p<r;p++)m[w[p]]++;else{if(s=o[u].minValue,h=o[u].maxValue,f=(h-s)/T,d=new Uint32Array(257),i)for(p=0;p<r;p++)i[p]&&d[Math.floor((w[p]-s)/f)]++;else for(p=0;p<r;p++)d[Math.floor((w[p]-s)/f)]++;for(p=0;p<255;p++)m[p]=d[p];m[255]=d[255]+d[256]}for(x.push({min:s,max:h,size:T,counts:m}),y=0,g=0,A=0,p=0;p<T;p++)y+=m[p],g+=p*m[p];for(U=g/y,p=0;p<T;p++)A+=m[p]*Math.pow(p-U,2);C=Math.sqrt(A/(y-1)),f=(h-s)/T,M=(U+.5)*f+s,k=C*f,c.push({min:s,max:h,avg:M,stddev:k})}return{statistics:c,histograms:x}}function r(t){const e=[];for(let n=0;n<t.length;n++){const{min:i,max:l,size:o,counts:r}=t[n];let a=0,s=0;for(let t=0;t<o;t++)a+=r[t],s+=t*r[t];const h=s/a;let f=0;for(let t=0;t<o;t++)f+=r[t]*Math.pow(t-h,2);const u=(l-i)/o,p=(h+.5)*u+i,x=Math.sqrt(f/(a-1))*u;e.push({min:i,max:l,avg:p,stddev:x})}return e}function a(t){const{minCutOff:e,maxCutOff:n,gamma:i,pixelType:l}=t,o=t.outMin||0,r=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(l))return null;const a=e.length;let s,h,f=0;"s8"===l?f=-127:"s16"===l&&(f=-32767);let u=256;["u16","s16"].indexOf(l)>-1&&(u=65536);const p=[],x=[],c=r-o;for(s=0;s<a;s++)x[s]=n[s]-e[s],p[s]=c/(n[s]-e[s]);const m=i&&i.length>=a,d=[];if(m)for(s=0;s<a;s++)i[s]>1?i[s]>2?d[s]=6.5+Math.pow(i[s]-2,2.5):d[s]=6.5+100*Math.pow(2-i[s],4):d[s]=1;let w;const y=[];let g,M,k;if(m)for(s=0;s<a;s++){for(k=[],h=0;h<u;h++)g=h+f,w=(g-e[s])/x[s],M=1,i[s]>1&&(M-=Math.pow(1/c,w*d[s])),g<n[s]&&g>e[s]?k[h]=Math.floor(M*c*Math.pow(w,1/i[s]))+o:g>=n[s]?k[h]=r:k[h]=o;y[s]=k}else for(s=0;s<a;s++){for(k=[],h=0;h<u;h++)g=h+f,g<=e[s]?k[h]=o:g>=n[s]?k[h]=r:k[h]=Math.floor((g-e[s])/x[s]*c)+o;y[s]=k}if(null!=t.contrastOffset){const e=function(t,e){const n=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(e,-100),100),l=255,o=128;let r,a;const s=new Uint8Array(256);for(r=0;r<256;r++)n>0&&n<100?a=(200*r-100*l+2*l*i)/(2*(100-n))+o:n<=0&&n>-100?a=(200*r-100*l+2*l*i)*(100+n)/2e4+o:100===n?(a=200*r-100*l+(l+1)*(100-n)+2*l*i,a=a>0?l:0):-100===n&&(a=o),s[r]=a>l?l:a<0?0:a;return s}(t.contrastOffset,t.brightnessOffset);for(s=0;s<a;s++)for(k=y[s],h=0;h<u;h++)k[h]=e[k[h]]}return{lut:y,offset:f}}function s(t,n){if(!e(t))return null;const i=t.clone(),{pixels:l,mask:o}=i,{minCutOff:r,maxCutOff:a,gamma:s}=n,h=n.outMin||0,f=n.outMax||255,u=i.width*i.height,p=l.length;let x,c,m,d,w;const y=f-h,g=[],M=[];for(x=0;x<p;x++)M[x]=a[x]-r[x],g[x]=y/(a[x]-r[x]);const k=s&&s.length>=p,A=[];if(k)for(x=0;x<p;x++)s[x]>1?s[x]>2?A[x]=6.5+Math.pow(s[x]-2,2.5):A[x]=6.5+100*Math.pow(2-s[x],4):A[x]=1;if(k)if(null!=o){for(c=0;c<u;c++)if(o[c])for(x=0;x<p;x++)m=l[x][c],w=(m-r[x])/M[x],d=1,s[x]>1&&(d-=Math.pow(1/y,w*A[x])),m<a[x]&&m>r[x]?l[x][c]=Math.floor(d*y*Math.pow(w,1/s[x]))+h:m>=a[x]?l[x][c]=f:l[x][c]=h}else for(c=0;c<u;c++)for(x=0;x<p;x++)m=l[x][c],w=(m-r[x])/M[x],d=1,s[x]>1&&(d-=Math.pow(1/y,w*A[x])),m<a[x]&&m>r[x]?l[x][c]=Math.floor(d*y*Math.pow(w,1/s[x]))+h:m>=a[x]?l[x][c]=f:l[x][c]=h;else if(null!=o){for(c=0;c<u;c++)if(o[c])for(x=0;x<p;x++)m=l[x][c],m<a[x]&&m>r[x]?l[x][c]=Math.floor((m-r[x])/M[x]*y)+h:m>=a[x]?l[x][c]=f:l[x][c]=h}else for(c=0;c<u;c++)for(x=0;x<p;x++)m=l[x][c],m<a[x]&&m>r[x]?l[x][c]=Math.floor((m-r[x])/M[x]*y)+h:m>=a[x]?l[x][c]=f:l[x][c]=h;return i.pixelType="u8",i.updateStatistics(),i}function h(n,i){if(!e(n))return null;const{pixels:l,mask:o}=n,r=n.width*n.height,a=l.length;let s=i.lut;const{offset:h}=i;let f,u;s&&1===s[0].length&&(s=l.map((()=>s)));const p=[];let x,c,m;if(h)if(null==o)for(f=0;f<a;f++){for(x=l[f],c=s[f],m=new Uint8Array(r),u=0;u<r;u++)m[u]=c[x[u]-h];p.push(m)}else for(f=0;f<a;f++){for(x=l[f],c=s[f],m=new Uint8Array(r),u=0;u<r;u++)o[u]&&(m[u]=c[x[u]-h]);p.push(m)}else if(null==o)for(f=0;f<a;f++){for(x=l[f],c=s[f],m=new Uint8Array(r),u=0;u<r;u++)m[u]=c[x[u]];p.push(m)}else for(f=0;f<a;f++){for(x=l[f],c=s[f],m=new Uint8Array(r),u=0;u<r;u++)o[u]&&(m[u]=c[x[u]]);p.push(m)}const d=new t({width:n.width,height:n.height,pixels:p,mask:o,pixelType:"u8"});return d.updateStatistics(),d}function f(t,n){if(!e(t))return null;const i=t.clone(),{pixels:l}=i,o=i.width*i.height,r=n.length,a=Math.floor(r/2),s=n[Math.floor(a)],h=l[0];let f,u,p,x,c,m,d=!1;const w=new Uint8Array(o),y=new Uint8Array(o),g=new Uint8Array(o);let M=i.mask;const k=4===n[0].mappedColor.length;for(M||(M=new Uint8Array(o),M.fill(k?255:1),i.mask=M),c=0;c<o;c++)if(M[c]){for(f=h[c],d=!1,m=a,u=s,p=0,x=r-1;x-p>1;){if(f===u.value){d=!0;break}f>u.value?p=m:x=m,m=Math.floor((p+x)/2),u=n[Math.floor(m)]}d||(f===n[p].value?(u=n[p],d=!0):f===n[x].value?(u=n[x],d=!0):f<n[p].value?(d=!1,u=null):f>n[p].value&&(f<n[x].value?(u=n[p],d=!0):x===r-1?(d=!1,u=null):(u=n[x],d=!0))),d?(w[c]=u.mappedColor[0],y[c]=u.mappedColor[1],g[c]=u.mappedColor[2],M[c]=u.mappedColor[3]):w[c]=y[c]=g[c]=M[c]=0}return i.pixels=[w,y,g],i.mask=M,i.pixelType="u8",i.maskIsAlpha=k,i}function u(t,e,n,i,l,o,r,a){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:o<=i*e?0:o<i*e+e?o-i*e:e,xmax:l+r<=n*t?0:l+r<n*t+t?l+r-n*t:t,ymax:o+a<=i*e?0:o+a<i*e+e?o+a-i*e:e}}function p(t,e){if(!t||0===t.length)return null;const n=t.filter((t=>t.pixelBlock))[0];if(!n)return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,o=.01*Math.min(i,l),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>o?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>o?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,r.map((t=>t.extent.xmin))),s=Math.min.apply(null,r.map((t=>t.extent.ymin))),h=Math.max.apply(null,r.map((t=>t.extent.xmax))),f=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-a)/i),y:Math.round((f-e.ymax)/l)},p={width:Math.round((h-a)/i),height:Math.round((f-s)/l)},c={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};if(Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==r.length||u.x<0||u.y<0||p.width<c.width||p.height<c.height)return null;return{extent:e,pixelBlock:x(r.map((t=>t.pixelBlock)),p,u,c)}}function x(n,i,l,o){const r=n.filter((t=>e(t)))[0];if(null==r)return null;const a=o?o.width:i.width,s=o?o.height:i.height,h=r.width,f=r.height,p=i.width/h,x=i.height/f,c=l?l.x:0,m=l?l.y:0,d=r.pixelType,w=t.getPixelArrayConstructor(d),y=r.pixels.length,g=[];let M,k,A,U,C,T,v,B,S,O,P;for(T=0;T<y;T++){for(k=new w(a*s),v=0;v<x;v++)for(B=0;B<p;B++)if(A=n[v*p+B],A)for(M=A.pixels[T],P=u(h,f,B,v,c,m,a,s),S=P.ymin;S<P.ymax;S++)for(U=(v*f+S-m)*a+(B*h-c),C=S*h,O=P.xmin;O<P.xmax;O++)k[U+O]=M[C+O];g.push(k)}let b,j;if(n.some((t=>null==t||t.mask&&t.mask.length>0)))for(b=new Uint8Array(a*s),v=0;v<x;v++)for(B=0;B<p;B++)if(A=n[v*p+B],j=A?A.mask:null,P=u(h,f,B,v,c,m,a,s),j)for(S=P.ymin;S<P.ymax;S++)for(U=(v*f+S-m)*a+(B*h-c),C=S*h,O=P.xmin;O<P.xmax;O++)b[U+O]=j[C+O];else if(A)for(S=P.ymin;S<P.ymax;S++)for(U=(v*f+S-m)*a+(B*h-c),C=S*h,O=P.xmin;O<P.xmax;O++)b[U+O]=1;else for(S=P.ymin;S<P.ymax;S++)for(U=(v*f+S-m)*a+(B*h-c),C=S*h,O=P.xmin;O<P.xmax;O++)b[U+O]=0;const I=new t({width:a,height:s,pixels:g,pixelType:d,mask:b});return I.updateStatistics(),I}function c(t,n,i){if(!e(t))return null;const{width:l,height:o}=t,r=n.x,a=n.y,s=i.width+r,h=i.height+a;if(r<0||a<0||s>l||h>o)return t;if(0===r&&0===a&&s===l&&h===o)return t;t.mask||(t.mask=new Uint8Array(l*o));const f=t.mask;for(let t=0;t<o;t++){const e=t*l;for(let n=0;n<l;n++)f[e+n]=t<a||t>=h||n<r||n>=s?0:1}return t.updateStatistics(),t}function m(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let o=l.next();for(;!o.done;)i=t.get(o.value),i>e&&(n=o.value,e=i),o=l.next();return n}function d(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function w(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function y(n,i,l){let{x:o,y:r}=i;const{width:a,height:s}=l;if(0===o&&0===r&&s===n.height&&a===n.width)return n;const{width:h,height:f}=n,u=Math.max(0,r),p=Math.max(0,o),x=Math.min(o+a,h),c=Math.min(r+s,f);if(x<0||c<0||!e(n))return null;o=Math.max(0,-o),r=Math.max(0,-r);const{pixels:m,mask:d}=n,w=a*s,y=m.length,g=[];for(let e=0;e<y;e++){const i=m[e],l=t.createEmptyBand(n.pixelType,w);for(let t=u;t<c;t++){const e=t*h;let n=(t+r-u)*a+o;for(let t=p;t<x;t++)l[n++]=i[e+t]}g.push(l)}const M=new Uint8Array(w);for(let t=u;t<c;t++){const e=t*h;let n=(t+r-u)*a+o;for(let t=p;t<x;t++)M[n++]=d?d[e+t]:1}const k=new t({width:l.width,height:l.height,pixelType:n.pixelType,pixels:g,mask:M});return k.updateStatistics(),k}function g(n,i=!0){if(!e(n))return null;const{pixels:l,width:o,height:r,mask:a,pixelType:s}=n,h=[],f=Math.round(o/2),u=Math.round(r/2),p=r-1,x=o-1;for(let e=0;e<l.length;e++){const n=l[e],a=t.createEmptyBand(s,f*u);let c=0;for(let t=0;t<r;t+=2)for(let e=0;e<o;e+=2){const l=n[t*o+e];if(i){const i=e===x?l:n[t*o+e+1],r=t===p?l:n[t*o+e+o],s=e===x?r:t===p?i:n[t*o+e+o+1];a[c++]=(l+i+r+s)/4}else a[c++]=l}h.push(a)}let c=null;if(a){c=new Uint8Array(f*u);let t=0;for(let e=0;e<r;e+=2)for(let n=0;n<o;n+=2){const l=a[e*o+n];if(i){const i=n===x?l:a[e*o+n+1],r=e===p?l:a[e*o+n+o],s=n===x?r:e===p?i:a[e*o+n+o+1];c[t++]=l*i*r*s?1:0}else c[t++]=l}}return new t({width:f,height:u,pixelType:s,pixels:h,mask:c})}function M(t,n,i){if(!e(t))return null;const{width:l,height:o}=n;let{width:r,height:a}=t;const s=new Map,h={x:0,y:0},f=null==i?1:1+i;let u=t;for(let t=0;t<f;t++){const e=Math.ceil(r/l),i=Math.ceil(a/o);for(let r=0;r<i;r++){h.y=r*o;for(let i=0;i<e;i++){h.x=i*l;const e=y(u,h,n);s.set(`${t}/${r}/${i}`,e)}}t<f-1&&(u=g(u)),r=Math.round(r/2),a=Math.round(a/2)}return s}function k(n,i,l,o,r="nearest"){if(!e(n))return null;"majority"===r&&(n=function(t){if(!e(t))return null;const n=t.clone(),{width:i,height:l,pixels:o,mask:r}=t,a=o[0],s=n.pixels[0];for(let t=2;t<l-1;t++){const e=new Map;for(let n=t-2;n<t+2;n++)for(let t=0;t<4;t++){const l=n*i+t;w(e,a[l],r?r[l]:1)}s[t*i]=m(e),s[t*i+1]=s[t*i+2]=s[t*i];let n=3;for(;n<i-1;n++){let l=(t-2)*i+n+1;w(e,a[l],r?r[l]:1),l=(t-1)*i+n+1,w(e,a[l],r?r[l]:1),l=t*i+n+1,w(e,a[l],r?r[l]:1),l=(t+1)*i+n+1,w(e,a[l],r?r[l]:1),l=(t-2)*i+n-3,d(e,a[l],r?r[l]:1),l=(t-1)*i+n-3,d(e,a[l],r?r[l]:1),l=t*i+n-3,d(e,a[l],r?r[l]:1),l=(t+1)*i+n-3,d(e,a[l],r?r[l]:1),s[t*i+n]=m(e)}s[t*i+n+1]=s[t*i+n]}for(let t=0;t<i;t++)s[t]=s[i+t]=s[2*i+t],s[(l-1)*i+t]=s[(l-2)*i+t];return n.updateStatistics(),n}(n));const{pixels:a,mask:s,pixelType:h}=n,f=n.width,u=n.height,p=t.getPixelArrayConstructor(h),x=a.length,{width:c,height:y}=i,g=o.cols,M=o.rows,k=Math.ceil(c/g),A=Math.ceil(y/M);let U,C,T,v,B,S,O,P=!1;for(let t=0;t<l.length;t+=3)-1===l[t]&&-1===l[t+1]&&-1===l[t+2]&&(P=!0);const b=new Float32Array(c*y),j=new Float32Array(c*y);let I,z,D=0;const E="majority"===r?0:.5;for(let t=0;t<A;t++)for(let e=0;e<k;e++){U=12*(t*k+e),C=l[U],T=l[U+1],v=l[U+2],B=l[U+3],S=l[U+4],O=l[U+5];for(let n=0;n<M;n++){D=(t*M+n)*c+e*g,z=(n+.5)/M;for(let t=0;t<n;t++)I=(t+.5)/g,b[D+t]=Math.round((C*I+T*z+v)*f-E),j[D+t]=Math.round((B*I+S*z+O)*u-E)}U+=6,C=l[U],T=l[U+1],v=l[U+2],B=l[U+3],S=l[U+4],O=l[U+5];for(let n=0;n<M;n++){D=(t*M+n)*c+e*g,z=(n+.5)/M;for(let t=n;t<g;t++)I=(t+.5)/g,b[D+t]=Math.round((C*I+T*z+v)*f-E),j[D+t]=Math.round((B*I+S*z+O)*u-E)}}const $=(t,e)=>{for(let n=0;n<y;n++){U=n*c;for(let n=0;n<c;n++)b[U]<0||j[U]<0?t[U]=0:t[U]=e[b[U]+j[U]*f],U++}},q=[];let F;for(let t=0;t<x;t++)F=new p(c*y),$(F,a[t]),q.push(F);const V=new t({width:c,height:y,pixelType:h,pixels:q});if(s)V.mask=new Uint8Array(c*y),$(V.mask,s);else if(P){V.mask=new Uint8Array(c*y);for(let t=0;t<c*y;t++)V.mask[t]=b[t]<0||j[t]<0?0:1}return V.updateStatistics(),V}export{a,i as b,l as c,o as d,n as e,M as f,r as g,c as h,k as i,y as j,p as k,h as l,x as m,f as r,s};
