/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{A as t}from"./ArrayPool.js";import{h as e}from"./object.js";import{L as s,b as i,i as r,l as n,o,k as a,u as h}from"./Logger.js";import{createAbortController as u,all as l,createResolver as d,isAbortError as c,resolve as _}from"../core/promiseUtils.js";import f from"../core/Error.js";import{E as m}from"./Evented.js";import p from"../geometry/Extent.js";import{c as g}from"./mathUtils2.js";import{d as y}from"./diffUtils.js";import{c as x}from"./aaBoundingRect.js";import b from"../layers/support/FieldsIndex.js";import{Q as I}from"../tasks/support/Query.js";import{l as T,o as S,m as z,c as w,v as A,u as F}from"./featureConversionUtils.js";import{T as C}from"./TileKey.js";import{k,H as M,A as D,N as v,l as E}from"./definitions.js";import{a as U}from"./TileInfoView.js";import{c as j,D as B,g as R}from"./visualVariablesUtils.js";import{g as G}from"./Utils10.js";import{F as L}from"./FeatureSetReader.js";import{r as O}from"./rbush.js";class P extends L{constructor(t,e,s){super(t),this._featureIndex=-1,this._dateFields=new Set,this._geometryType=s,this._features=e}static fromFeatures(t,e,s){const i=T([],t,e,!1,!1,s);for(let e=0;e<i.length;e++)i[e].displayId=t[e].displayId;return P.fromOptimizedFeatures(i,e)}static fromFeatureSet(t,e){const s=S(t,e);return P.fromOptimizedFeatureSet(s)}static fromOptimizedFeatureSet(t){const{features:e,geometryType:s}=t,i=P.fromOptimizedFeatures(e,s);i._exceededTransferLimit=t.exceededTransferLimit,i._transform=t.transform;for(const e of t.fields)"esriFieldTypeDate"===e.type&&i._dateFields.add(e.name);return i}static fromOptimizedFeatures(t,e,s){const i=L.createInstance(),r=new P(i,t,e);return r._transform=s,r}get _current(){return this._features[this._featureIndex]}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}getApproximateSize(){return this._features.length}getCursor(){return this.copy()}getQuantizationTransform(){return this._transform}getAttributeHash(){let t="";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getIndex(){return this._featureIndex}setIndex(t){this._featureIndex=t}getObjectId(){return this._current.objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){this._current.displayId=t}getGroupId(){return this._current.groupId}setGroupId(t){this._current.groupId=t}copy(){const t=new P(this.instance,this._features,this.geometryType);return this.copyInto(t),t}next(){if(!this._hasFilter)return++this._featureIndex<this._features.length;for(;++this._featureIndex<this._features.length&&!this._passesFilter(););return this._featureIndex<this._features.length}readLegacyFeature(){return z(this._current,this.geometryType,this.hasZ,this.hasM)}readOptimizedFeature(){return this._current}readLegacyPointGeometry(){const t=this.readGeometry();return t?{x:t.coords[0],y:t.coords[1]}:null}readLegacyGeometry(){const t=this.readGeometry();return w(t,this.geometryType,this.hasZ,this.hasM)}readLegacyCentroid(){const t=this.readCentroid();return t?{x:t.coords[0],y:t.coords[1]}:null}readGeometryArea(){return A(this._current.geometry,2)}readUnquantizedGeometry(){const t=this.readGeometry();if("esriGeometryPoint"===this.geometryType||!t)return t;const e=t.clone();return function({coords:t,lengths:e}){let s=0;for(const i of e){for(let e=1;e<i;e++)t[2*(s+e)]+=t[2*(s+e)-2],t[2*(s+e)+1]+=t[2*(s+e)-1];s+=i}}(e),e}readHydratedGeometry(){const t=this._current.geometry;if(!t)return null;const e=t.clone();return F(e,e,this.hasZ,this.hasM,this._transform),e}getXHydrate(){const t=this._current.geometry.coords[0]+this._tx,e=this.getQuantizationTransform();return t*e.scale[0]+e.translate[0]}getYHydrate(){const t=this._current.geometry.coords[1]+this._ty,e=this.getQuantizationTransform();return e.translate[1]-t*e.scale[1]}readGeometry(){if(!this._current.hasGeometry)return null;const t=this._current.geometry.clone();if(t.isPoint)return t.coords[0]+=this._tx,t.coords[1]+=this._ty,t;let e=0;for(const s of t.lengths)t.coords[2*e]+=this._tx,t.coords[2*e+1]+=this._ty,e+=s;return t}readCentroid(){if(!this._current.hasGeometry)return null;if(!this._current.centroid){const t=this._computeCentroid();if(!t)return null;t.coords[0]-=this._tx,t.coords[1]-=this._ty,this._current.centroid=t}const t=this._current.centroid.clone();return t.coords[0]+=this._tx,t.coords[1]+=this._ty,t}_readAttribute(t,e){const s=this._current.attributes[t];if(void 0!==s)return e&&this._dateFields.has(t)?new Date(s):s;const i=this.readAttributes(),r=t.toLocaleLowerCase().trim();for(const t in i)if(t.toLocaleLowerCase().trim()===r){const e=this._current.attributes[t];return this._dateFields.has(t)?new Date(e):e}}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._transform=this._transform,t._dateFields=this._dateFields}_readAttributes(){return this._current.attributes}_passesFilter(){if(!this._hasFilter)return!0;let t=0,e=0;switch(this.geometryType){case"esriGeometryPoint":{const s=this._current.geometry;if(!s)return!1;[t,e]=s.coords;break}case"esriGeometryPolygon":{const s=this.readCentroid();if(!s)return!1;[t,e]=s.coords,t-=this._tx,e-=this._ty;break}default:return!1}return t>=this._xmin&&t<=this._xmax&&e>=this._ymin&&e<=this._ymax}}class N{constructor(t,e){this.key=new C(0,0,0,0),this.bounds=x(),this.objectIds=new Set,this.key.set(e);const s=t.getLODInfoAt(this.key);this.tileInfoView=t,this.tileInfoView.getTileBounds(this.bounds,this.key,!0),this.resolution=s.resolution,this.scale=s.scale,this.level=s.level,this.needsClear=!0}get id(){return this.key.id}get extent(){return p.fromBounds(this.bounds,this.tileInfoView.tileInfo.spatialReference)}get transform(){return{originPosition:"upperLeft",scale:[this.resolution,this.resolution],translate:[this.bounds[0],this.bounds[3]]}}get bbox(){const t=this.bounds;return{minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]}}clone(){return new N(this.tileInfoView,this.key)}createChildTiles(){const e=this.key.getChildKeys(),s=t.acquire();for(let t=0;t<e.length;t++)s[t]=new N(this.tileInfoView,e[t]);return s}getQuantizationParameters(){return I.fromJSON({mode:"view",originPosition:"upperLeft",tolerance:this.resolution,extent:{xmin:this.bounds[0],ymin:this.bounds[1],xmax:this.bounds[2],ymax:this.bounds[3],spatialReference:this.tileInfoView.tileInfo.spatialReference}})}}const H=s.getLogger("esri.views.layers.2d.features.support.AttributeStore"),Y=j(B,H),V=t=>(2147483648&t)>>>31,X=t=>2147483647&t;function Q(t){return 1===V(t)}const Z={sharedArrayBuffer:e("esri-shared-array-buffer"),atomics:e("esri-atomics")};function K(t,e){return s=>e(t(s))}class q{constructor(t,e,s,i){this.size=0,this.texelSize=4;const{pixelType:r,layout:n,textureOnly:o}=i;this.textureOnly=o||!1,this.pixelType=r,this._ctype=e,this.layout=n,this._resetRange(),this._shared=t,this.size=s,o||(this.data=this._initData(r,s,t,e))}get buffer(){return a(this.data,(t=>t.buffer))}unsetComponentAllTexels(t,e){const s=h(this.data);for(let i=0;i<this.size*this.size;i++)s[i*this.texelSize+t]&=~e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponentAllTexels(t,e){const s=h(this.data);for(let i=0;i<this.size*this.size;i++)s[i*this.texelSize+t]|=255&e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponent(t,e,s){const i=h(this.data);for(const r of s)i[r*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,r),this.dirtyEnd=Math.max(this.dirtyEnd,r)}setComponentTexel(t,e,s){h(this.data)[s*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}unsetComponentTexel(t,e,s){h(this.data)[s*this.texelSize+t]&=~e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}getData(t,e){const s=X(t);return h(this.data)[s*this.texelSize+e]}setData(t,e,s){const i=X(t),r=1<<e;0!=(this.layout&r)?(this.data[i*this.texelSize+e]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)):H.error("mapview-attributes-store","Tried to set a value for a texel's readonly component")}lock(){5121===this.pixelType&&this._shared&&Z.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,1)}unlock(){5121===this.pixelType&&this._shared&&Z.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,0)}expand(t){if(this.size=t,!this.textureOnly){const e=this._initData(this.pixelType,t,this._shared,this._ctype),s=h(this.data);e.set(s),this.data=e}}toMessage(){const t=this.dirtyStart,e=this.dirtyEnd,s=this.texelSize;if(t>e)return null;this._resetRange();const i=!(this._shared||"local"===this._ctype),r=this.pixelType,n=this.layout,o=h(this.data);if(!o.slice){if(!i)return{start:t,end:e,data:null,pixelType:r,layout:n};return{start:t,end:e,data:new(G(this.pixelType))(Array.prototype.slice.call(this.data,t*s,(e+1)*s)),pixelType:r,layout:n}}return{start:t,end:e,data:i&&o.slice(t*s,(e+1)*s)||null,pixelType:r,layout:n}}_initData(t,e,s,i){const r=s&&"local"!==i?SharedArrayBuffer:ArrayBuffer,n=G(t),o=new n(new r(e*e*4*n.BYTES_PER_ELEMENT));for(let t=0;t<o.length;t+=4)o[t+1]=255;return o}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}}class J{constructor(t,e){this._client=t,this.config=e,this._attributeComputeMap=new Map,this._blocks=new Array,this._filters=new Array(k),this._targetType=0,this._abortController=u(),this._hasScaleExpr=!1,this._size=32,this._idsToHighlight=new Set;const s=e.supportsTextureFloat?5126:5121;Y(`Creating AttributeStore ${Z.sharedArrayBuffer?"with":"without"} shared memory`),this._blockDescriptors=[{pixelType:5121,layout:1},{pixelType:5121,layout:15,textureOnly:!0},{pixelType:s,layout:15},{pixelType:s,layout:15}],this._blocks=this._blockDescriptors.map((()=>null))}destroy(){this._abortController.abort()}get hasScaleExpr(){return this._hasScaleExpr}get _signal(){return this._abortController.signal}update(t,s){this.config=s;const r=s.schema.processors[0].storage,n=y(this._schema,r);if((t.targets.feature||t.targets.aggregate)&&(t.storage.data=!0),n&&(e("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:",n),t.storage.data=!0,this._schema=r,this._attributeComputeMap.clear(),!i(r))){switch(r.target){case"feature":this._targetType=0;break;case"aggregate":this._targetType=1}for(const t of r.mapping)this._bindAttribute(t)}}onTileData(t,e){if(i(e.addOrUpdate))return;const s=e.addOrUpdate.getCursor();for(;s.next();){const t=s.getDisplayId();this.setAttributeData(t,s)}}invalidateResources(){this._createResourcesPromise=null,this._abortController.abort(),this._abortController=u()}async setHighlight(t,e){const s=this._getBlock(0),i=e.map((t=>X(t)));s.lock(),s.unsetComponentAllTexels(0,1),s.setComponent(0,1,i),s.unlock(),this._idsToHighlight.clear();for(const e of t)this._idsToHighlight.add(e);await this.sendUpdates()}async updateFilters(t,s){const{config:i,service:r,spatialReference:n}=s,{filters:o}=i,a=o.map(((t,e)=>this._updateFilter(t,e,r,n)));(await l(a)).some((t=>t))&&(t.storage.filters=!0,e("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:","Filters changed"))}setData(t,e,s,i){const r=X(t);this._ensureSizeForTexel(r),this._getBlock(e).setData(t,s,i)}getData(t,e,s){return this._getBlock(e).getData(t,s)}getHighlightFlag(t){return this._idsToHighlight.has(t)?M:0}unsetAttributeData(t){const e=X(t);this._getBlock(0).setData(e,0,0)}setAttributeData(t,e){const s=X(t);if(this._ensureSizeForTexel(s),this._getBlock(0).setData(s,0,this.getFilterFlags(e)),this._targetType!==V(t))return;const i=this._attributeComputeMap,r=this.config.supportsTextureFloat?1:2;i.size&&i.forEach(((t,i)=>{const n=i*r%4,o=Math.floor(i*r/4),a=this._getBlock(o+D),h=t(e);if(this.config.supportsTextureFloat)a.setData(s,n,h);else if(h===v)a.setData(s,n,255),a.setData(s,n+1,255);else{const t=g(Math.round(h),-32767,32766)+32768,e=255&t,i=(65280&t)>>8;a.setData(s,n,e),a.setData(s,n+1,i)}}))}sendUpdates(){if(this._nextUpdate)return this._nextUpdate.promise;if(this._currUpdate)return this._nextUpdate=d(),this._nextUpdate.promise;const t={blocks:this._blocks.map((t=>r(t)?t.toMessage():null))};return this._currUpdate=this._createResources().then((()=>{const e=()=>{if(this._currUpdate=null,this._nextUpdate){const t=this._nextUpdate;this._nextUpdate=null,this.sendUpdates().then((()=>t.resolve()))}},s=this._client.update(t,this._signal).then(e).catch(e);return this._client.render(this._signal),s})).catch((t=>c(t)?(this._createResourcesPromise=null,this._createResources()):(H.error(new f("mapview-attribute-store","Encountered an error during client update",t)),_()))),this._currUpdate}_ensureSizeForTexel(t){for(;t>=this._size*this._size;)if(this._expand())return}_bindAttribute(t){let e;if(null!=t.fieldIndex)t.normalizationField&&H.warn("mapview-arcade","Ignoring normalizationField specified with an arcade expression which is not supported."),e=e=>e.getComputedNumericAtIndex(t.fieldIndex);else{if(!t.field)return;e=t.normalizationField?e=>{const s=e.readAttribute(t.normalizationField);return s?e.readAttribute(t.field)/s:null}:e=>e.readAttribute(t.field)}if(t.valueRepresentation){e=K(e,(e=>R(e,t.valueRepresentation)))}this._attributeComputeMap.set(t.binding,K(e,(t=>null===t||isNaN(t)||t===1/0?v:t)))}_createResources(){if(r(this._createResourcesPromise))return this._createResourcesPromise;this._getBlock(E),Y("Initializing AttributeStore");const t={shared:Z.sharedArrayBuffer&&!("local"===this._client.type),size:this._size,blocks:n(this._blocks,(t=>({textureOnly:t.textureOnly,buffer:t.buffer,pixelType:t.pixelType})))},e=this._client.initialize(t,this._signal).catch((t=>{c(t)?this._createResourcesPromise=null:H.error(new f("mapview-attribute-store","Encountered an error during client initialization",t))}));return this._createResourcesPromise=e,e.then((()=>i(this._createResourcesPromise)?this._createResources():void 0)),e}_getBlock(t){const e=this._blocks[t];if(r(e))return e;Y(`Initializing AttributeBlock at index ${t}`);const s=Z.sharedArrayBuffer,i=this._client.type,n=new q(s,i,this._size,this._blockDescriptors[t]);return this._blocks[t]=n,this._createResourcesPromise=null,n}_expand(){if(this._size<this.config.maxTextureSize){const t=this._size<<=1;return Y("Expanding block size to",t,this._blocks),o(this._blocks,(e=>e.expand(t))),this._createResourcesPromise=null,this._size=t,0}return H.error(new f("mapview-limitations","Maximum number of onscreen features exceeded.")),-1}async _updateFilter(t,e,s,n){const o=this._filters[e],a=r(o)&&o.hash;if(!o&&!t)return!1;if(a===JSON.stringify(t))return!1;if(i(t)){const t=1<<e+1,s=this._getBlock(0);return this._filters[e]=null,s.setComponentAllTexels(0,t),this.sendUpdates(),!0}const h=await this._getFilter(e,s);return await h.update(t,n),!0}async _getFilter(t,e){const s=this._filters[t];if(r(s))return s;const{default:i}=await import("./FeatureFilter.js"),n=new i({geometryType:e.geometryType,hasM:!1,hasZ:!1,timeInfo:e.timeInfo,fieldsIndex:new b(e.fields)});return this._filters[t]=n,n}isVisible(t){return!!(2&this._getBlock(0).getData(t,0))}getFilterFlags(t){let e=0;const s=(r=t.getDisplayId(),1===V(r)?254:255);var r;for(let r=0;r<this._filters.length;r++){const n=!!(s&1<<r),o=this._filters[r];e|=(!n||i(o)||o.check(t)?1:0)<<r}let n=0;if(this._idsToHighlight.size){const e=t.getObjectId();n=this.getHighlightFlag(e)}return e<<1|n}}class ${constructor(){this._freeIds=[],this._idCounter=1}createId(t=!1){return function(t,e){return((e?2147483648:0)|t)>>>0}(this._getFreeId(),t)}releaseId(t){this._freeIds.push(t)}_getFreeId(){return this._freeIds.length?this._freeIds.pop():this._idCounter++}}class W{constructor(t,e){this._mask=0,this._buf=t,this._mask=e}static fromBuffer(t,e){return new W(t,e)}static create(t,e=4294967295){const s=new Uint32Array(Math.ceil(t/32));return new W(s,e)}_getIndex(t){return Math.floor(t/32)}has(t){const e=this._mask&t;return!!(this._buf[this._getIndex(e)]&1<<e%32)}set(t){const e=this._mask&t,s=this._getIndex(e),i=1<<e%32;this._buf[s]|=i}unset(t){const e=this._mask&t,s=this._getIndex(e),i=1<<e%32;this._buf[s]&=4294967295^i}resize(t){const e=this._buf,s=new Uint32Array(Math.ceil(t/32));s.set(e),this._buf=s}or(t){for(let e=0;e<this._buf.length;e++)this._buf[e]|=t._buf[e];return this}and(t){for(let e=0;e<this._buf.length;e++)this._buf[e]&=t._buf[e];return this}xor(t){for(let e=0;e<this._buf.length;e++)this._buf[e]^=t._buf[e];return this}ior(t){for(let e=0;e<this._buf.length;e++)this._buf[e]|=~t._buf[e];return this}iand(t){for(let e=0;e<this._buf.length;e++)this._buf[e]&=~t._buf[e];return this}ixor(t){for(let e=0;e<this._buf.length;e++)this._buf[e]^=~t._buf[e];return this}any(){for(let t=0;t<this._buf.length;t++)if(this._buf[t])return!0;return!1}copy(t){for(let e=0;e<this._buf.length;e++)this._buf[e]=t._buf[e];return this}clone(){return new W(this._buf.slice(),this._mask)}clear(){for(let t=0;t<this._buf.length;t++)this._buf[t]=0}forEachSet(t){for(let e=0;e<this._buf.length;e++){let s=this._buf[e],i=32*e;if(s)for(;s;){1&s&&t(i),s>>>=1,i++}}}countSet(){let t=0;return this.forEachSet((e=>{t++})),t}}function tt(t,e,s){if(!(t.length>e))for(;t.length<=e;)t.push(s)}class et{constructor(){this._numerics=[],this._strings=[],this._idGenerator=new $,this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[]}createBitset(){const t=this._bitsets.length;return this._bitsets.push(W.create(this._allocatedSize,2147483647)),t+1}getBitset(t){return this._bitsets[t-1]}_expand(){this._allocatedSize<<=1;for(const t of this._bitsets)t.resize(this._allocatedSize)}_ensureNumeric(t,e){this._numerics[t]||(this._numerics[t]=[]);tt(this._numerics[t],e,0)}_ensureInstanceId(t){tt(this._instanceIds,t,0)}_ensureString(t,e){this._strings[t]||(this._strings[t]=[]);tt(this._strings[t],e,null)}createDisplayId(t=!1){const e=this._idGenerator.createId();return e>this._allocatedSize&&this._expand(),((t,e)=>((e?2147483648:0)|t)>>>0)(e,t)}releaseDisplayId(t){for(const e of this._bitsets)e.unset(t);return this._idGenerator.releaseId(2147483647&t)}getComputedNumeric(t,e){return this.getComputedNumericAtIndex(2147483647&t,0)}setComputedNumeric(t,e,s){return this.setComputedNumericAtIndex(2147483647&t,s,0)}getComputedString(t,e){return this.getComputedStringAtIndex(2147483647&t,0)}setComputedString(t,e,s){return this.setComputedStringAtIndex(2147483647&t,0,s)}getComputedNumericAtIndex(t,e){const s=2147483647&t;return this._ensureNumeric(e,s),this._numerics[e][s]}setComputedNumericAtIndex(t,e,s){const i=2147483647&t;this._ensureNumeric(e,i),this._numerics[e][i]=s}getInstanceId(t){const e=2147483647&t;return this._ensureInstanceId(e),this._instanceIds[e]}setInstanceId(t,e){const s=2147483647&t;this._ensureInstanceId(s),this._instanceIds[s]=e}getComputedStringAtIndex(t,e){const s=2147483647&t;return this._ensureString(e,s),this._strings[e][s]}setComputedStringAtIndex(t,e,s){const i=2147483647&t;this._ensureString(e,i),this._strings[e][i]=s}getXMin(t){return this._bounds[4*(2147483647&t)]}getYMin(t){return this._bounds[4*(2147483647&t)+1]}getXMax(t){return this._bounds[4*(2147483647&t)+2]}getYMax(t){return this._bounds[4*(2147483647&t)+3]}setBounds(t,e){const s=e.readHydratedGeometry();if(!s||!s.coords.length)return!1;let i=1/0,r=1/0,n=-1/0,o=-1/0;s.forEachVertex(((t,e)=>{i=Math.min(i,t),r=Math.min(r,e),n=Math.max(n,t),o=Math.max(o,e)}));const a=2147483647&t;return tt(this._bounds,4*a+4,0),this._bounds[4*a]=i,this._bounds[4*a+1]=r,this._bounds[4*a+2]=n,this._bounds[4*a+3]=o,!0}}const st={added:[],removed:[]},it=new Set,rt=new C(0,0,0,0);class nt extends m{constructor(t){super(),this._tiles=new Map,this._index=O(9,e("csp-restrictions")?t=>({minX:t.bounds[0],minY:t.bounds[1],maxX:t.bounds[2],maxY:t.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this.tiles=[],this.tileScheme=t}destroy(){this.clear()}clear(){this.tiles.length=0,this._tiles.clear(),this._index.clear()}has(t){return this._tiles.has(t)}get(t){return this._tiles.get(t)}findByKey(t){return this._tiles.get(t.id)}intersections(t,e){const s="string"==typeof t?this.get(t):t;if(!s)return[];const i=e*s.resolution,r=s.bounds[0]-i,n=s.bounds[1]-i,o=s.bounds[2]+i,a=s.bounds[3]+i,h=[];for(const t of this._index.search({minX:r,minY:n,maxX:o,maxY:a})){const e=t.bounds.slice();e[0]=Math.max(e[0],r),e[1]=Math.max(e[1],n),e[2]=Math.min(e[2],o),e[3]=Math.min(e[3],a),e[2]-e[0]>0&&e[3]-e[1]>0&&h.push({bounds:e,tile:t})}return h}boundsIntersections(t){return this._index.search({minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]})}updateTiles(t){const e={added:[],removed:[]};for(const s of t.added)if(!this.has(s)){const t=new N(this.tileScheme,s);this._tiles.set(s,t),this._index.insert(t),e.added.push(t)}for(const s of t.removed)if(this.has(s)){const t=this.get(s);this._tiles.delete(s),this._index.remove(t),e.removed.push(t)}this.tiles.length=0,this._tiles.forEach((t=>this.tiles.push(t))),(e.added.length||e.removed.length)&&this.emit("update",e)}setViewState(t){const e=this.tileScheme.getTileCoverage(t,0);if(!e)return;const{spans:s,lodInfo:i}=e,{level:r}=i;if(s.length>0)for(const{row:t,colFrom:e,colTo:n}of s)for(let s=e;s<=n;s++){const e=rt.set(r,t,i.normalizeCol(s),i.getWorldForColumn(s)).id;if(it.add(e),!this.has(e)){const t=new N(this.tileScheme,e);this._tiles.set(e,t),this._index.insert(t),this.tiles.push(t),st.added.push(t)}}for(let t=this.tiles.length-1;t>=0;t--){const e=this.tiles[t];it.has(e.id)||(this._tiles.delete(e.id),this.tiles.splice(t,1),this._index.remove(e),st.removed.push(e))}(st.added.length||st.removed.length)&&this.emit("update",st),U.pool.release(e),it.clear(),st.added.length=0,st.removed.length=0}}export{J as A,et as C,P as F,N as T,nt as a,Q as i};
