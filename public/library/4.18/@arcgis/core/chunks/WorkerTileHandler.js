/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{A as e}from"./ArrayPool.js";import"./object.js";import"../core/lang.js";import"../config.js";import{i as t}from"./Logger.js";import{n as r}from"./string.js";import{resolve as i,all as n,isAborted as s,isAbortError as a}from"../core/promiseUtils.js";import"./Message.js";import"../core/Error.js";import"./ensureType.js";import"./mathUtils2.js";import"./colorUtils.js";import"../Color.js";import"./_commonjsHelpers.js";import{e as l,d as o}from"./earcut.js";import{P as c}from"./pbf.js";import{C as h,a as x,b as u,p as f,c as d,r as y,I as p,T as g,l as _,i as m,S as V}from"./StyleRepository.js";import"./unitBezier.js";import"./definitions.js";import{R as I}from"./Rect.js";import{B}from"./BidiEngine.js";import{D}from"./config.js";import"./GeometryUtils2.js";import{s as w,g as b,c as v,t as P}from"./TurboLine.js";import{P as M,T as L,a as k,S as T}from"./TileClipper.js";class A{constructor(e,t,r,i,n,s,a){this._glyphItems=e,this._maxWidth=t,this._lineHeight=r,this._letterSpacing=i,this._hAnchor=n,this._vAnchor=s,this._justify=a}getShaping(e,t,r){const i=this._letterSpacing,n=this._lineHeight,s=this._justify,a=this._maxWidth,l=[];let o=0,c=0,h=0,x=0,u=-1,f=0,d=-1;const y=e.length;for(let g=0;g<y;g++){const _=e.charCodeAt(g),m=r&&(746===(p=_)||747===p||!(p<4352)&&(p>=12704&&p<=12735||p>=12544&&p<=12591||p>=65072&&p<=65103&&!(p>=65097&&p<=65103)||p>=63744&&p<=64255||p>=13056&&p<=13311||p>=11904&&p<=12031||p>=12736&&p<=12783||p>=12288&&p<=12351&&!(p>=12296&&p<=12305||p>=12308&&p<=12319||12336===p)||p>=13312&&p<=19903||p>=19968&&p<=40959||p>=12800&&p<=13055||p>=12592&&p<=12687||p>=43360&&p<=43391||p>=55216&&p<=55295||p>=4352&&p<=4607||p>=44032&&p<=55215||p>=12352&&p<=12447||p>=12272&&p<=12287||p>=12688&&p<=12703||p>=12032&&p<=12255||p>=12784&&p<=12799||p>=12448&&p<=12543&&12540!==p||p>=65280&&p<=65519&&!(65288===p||65289===p||65293===p||p>=65306&&p<=65310||65339===p||65341===p||65343===p||p>=65371&&p<=65503||65507===p||p>=65512&&p<=65519)||p>=65104&&p<=65135&&!(p>=65112&&p<=65118||p>=65123&&p<=65126)||p>=5120&&p<=5759||p>=6320&&p<=6399||p>=65040&&p<=65055||p>=19904&&p<=19967||p>=40960&&p<=42127||p>=42128&&p<=42191));if(10===_){if(g===y-1)continue;if(u>=x){const e=l[u],t=e.x+e.glyphMosaicItem.metrics.advance;f=Math.max(t,f),s&&this._applyJustification(l,x,u),x=l.length}t?c-=n:c+=n,o=0,++h;continue}let V;for(const e of this._glyphItems)if(V=e[_],V)break;if(V){if(l.push({codePoint:_,x:o,y:c,vertical:m,glyphMosaicItem:V}),o+=V.metrics.advance+i,a>0&&o>a&&d>=0){const e=d+1,r=l[e].x;f=Math.max(r,f);for(let i=e;i<l.length;i++)t?l[i].y-=n:l[i].y+=n,l[i].x-=r;s&&this._applyJustification(l,x,d),t?c-=n:c+=n,o-=r,++h,x=e,d=-1}++u,32===_&&(d=l.length-1)}}var p;if(u>=x){const e=l[u],t=e.x+e.glyphMosaicItem.metrics.advance;f=Math.max(f,t),s&&this._applyJustification(l,x,u)}if(l.length>0){const e=(s-this._hAnchor)*f;let r=(-this._vAnchor*(h+1)+.5)*n;t&&h&&(r+=h*n);for(const t of l)t.x+=e,t.y+=r}return l}static getTextBox(e,t){if(!e.length)return null;let r=1/0,i=1/0,n=0,s=0;for(const a of e){const e=a.glyphMosaicItem.metrics.advance,l=a.x,o=a.y-17,c=l+e,h=o+t;r=Math.min(r,l),n=Math.max(n,c),i=Math.min(i,o),s=Math.max(s,h)}return{x:r,y:i,width:n-r,height:s-i}}static getBox(e){if(!e.length)return null;let t=1/0,r=1/0,i=0,n=0;for(const s of e){const{height:e,left:a,top:l,width:o}=s.glyphMosaicItem.metrics,c=s.x,h=s.y-(e-Math.abs(l)),x=c+o+a,u=h+e;t=Math.min(t,c),i=Math.max(i,x),r=Math.min(r,h),n=Math.max(n,u)}return{x:t,y:r,width:i-t,height:n-r}}static addDecoration(e,t){const r=e.length;if(0===r)return;let i=e[0].x+e[0].glyphMosaicItem.metrics.left,n=e[0].y;for(let s=1;s<r;s++){const r=e[s];if(r.y!==n){const a=e[s-1].x+e[s-1].glyphMosaicItem.metrics.left+e[s-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:n+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new I(4,0,4,8),metrics:{width:a-i,height:8,left:0,top:0,advance:0},page:0,code:0}}),n=r.y,i=r.x+r.glyphMosaicItem.metrics.left}}const s=e[r-1].x+e[r-1].glyphMosaicItem.metrics.left+e[r-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:n+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new I(4,0,4,8),metrics:{width:s-i,height:8,left:0,top:0,advance:0},page:0,code:0}})}_applyJustification(e,t,r){const i=e[r],n=i.vertical?24:i.glyphMosaicItem.metrics.advance,s=(i.x+n)*this._justify;for(let i=t;i<=r;i++)e[i].x-=s}}class C{constructor(e,t,r=0,i=-1,n=.5){this.x=e,this.y=t,this.angle=r,this.segment=i,this.minzoom=n}}class E{constructor(e,t,r,i,n,s=.5,a=u){this.anchor=e,this.labelAngle=t,this.glyphAngle=r,this.page=i,this.alternateVerticalGlyph=n,this.minzoom=s,this.maxzoom=a}}class N{constructor(e,t,r,i,n,s,a,l,o,c,h,x){this.tl=e,this.tr=t,this.bl=r,this.br=i,this.mosaicRect=n,this.labelAngle=s,this.minAngle=a,this.maxAngle=l,this.anchor=o,this.minzoom=c,this.maxzoom=h,this.page=x}}class S{constructor(e){this.shapes=e}}class z{getIconPlacement(e,t,r){const i=new M(e.x,e.y),n=0===r.rotationAlignment,s=r.keepUpright;let a=r.rotate*h;n&&(a+=e.angle);const l=new S([]);return r.allowOverlap&&r.ignorePlacement||!D||(l.iconColliders=[]),this._addIconPlacement(l,i,t,r,a),n&&s&&this._addIconPlacement(l,i,t,r,a+x),l}_addIconPlacement(e,t,r,i,n){const s=r.pixelRatio,a=r.width/s,l=r.height/s,o=i.offset;let c=o[0],h=o[1];switch(i.anchor){case 0:c-=a/2,h-=l/2;break;case 1:h-=l/2;break;case 2:c-=a,h-=l/2;break;case 3:c-=a/2;break;case 4:c-=a/2,h-=l;break;case 5:break;case 7:h-=l;break;case 6:c-=a;break;case 8:c-=a,h-=l}const x=r.rect,f=2/s,d=c-f,y=h-f,p=d+x.width/s,g=y+x.height/s,_=new M(d,y),m=new M(p,g),V=new M(d,g),I=new M(p,y);if(0!==n){const e=Math.cos(n),t=Math.sin(n);_.rotate(e,t),m.rotate(e,t),V.rotate(e,t),I.rotate(e,t)}const B=new N(_,I,V,m,x,n,0,256,t,.5,u,0);if(e.shapes.push(B),(!i.allowOverlap||!i.ignorePlacement)&&D){const r=i.size,s=i.padding,o={xTile:t.x,yTile:t.y,dxPixels:c*r-s,dyPixels:h*r-s,hard:!i.optional,partIndex:0,width:a*r+2*s,height:l*r+2*s,angle:n,minLod:.5,maxLod:u};e.iconColliders.push(o)}}getTextPlacement(e,t,r,i){const n=new M(e.x,e.y),s=i.rotate*h,a=0===i.rotationAlignment,l=i.keepUpright,o=i.padding;let c=.5;const f=!a?0:e.angle,d=e.segment>=0&&a,y=i.allowOverlap&&i.ignorePlacement?null:[],p=[],g=!d;let _=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,V=_,I=m;const B=(d||a)&&l,D=i.size/24;let w=!1;for(const e of t)if(e.vertical){w=!0;break}let b,v=0,P=0;if(!d&&w){const e=A.getTextBox(t,24*i.lineHeight);switch(i.anchor){case 1:v=e.height/2,P=-e.width/2;break;case 2:v=-e.height/2,P=e.width/2;break;case 3:v=e.height/2,P=e.width/2;break;case 4:v=-e.height/2,P=-e.width/2;break;case 5:v=e.height;break;case 7:P=-e.width;break;case 6:P=e.width;break;case 8:v=-e.height}}v+=24*i.offset[0],P+=24*i.offset[1];for(const h of t){const t=h.glyphMosaicItem;if(!t||t.rect.isEmpty)continue;const L=t.rect,k=t.metrics,T=t.page;if(y&&g){if(void 0!==b&&b!==h.y){let t,r,n,a;w?(t=-I+v,r=_+P,n=I-V,a=m-_):(t=_+v,r=V+P,n=m-_,a=I-V);const l={xTile:e.x,yTile:e.y,dxPixels:t*D-o,dyPixels:r*D-o,hard:!i.optional,partIndex:1,width:n*D+2*o,height:a*D+2*o,angle:s,minLod:.5,maxLod:u};y.push(l),_=Number.POSITIVE_INFINITY,m=Number.NEGATIVE_INFINITY,V=_,I=m}b=h.y}const A=[];if(d){const i=.5*t.metrics.width,n=(h.x+k.left-4+i)*D*8;if(c=this._placeGlyph(e,c,n,r,e.segment,1,h.vertical,T,A),l&&(c=this._placeGlyph(e,c,n,r,e.segment,-1,h.vertical,T,A)),c>=2)break}else A.push(new E(n,f,f,T,!1)),a&&l&&A.push(new E(n,f+x,f+x,T,!1));const C=h.x+k.left,S=h.y-17-k.top,z=C+k.width,F=S+k.height;let O,U,R,j,G,q,K,H;if(!d&&w)if(h.vertical){const e=(C+z)/2-k.height/2,t=(S+F)/2+k.width/2;O=new M(-t-4+v,e-4+P),U=new M(O.x+L.width,O.y+L.height),R=new M(O.x,U.y),j=new M(U.x,O.y)}else O=new M(4-S+v,C-4+P),U=new M(O.x-L.height,O.y+L.width),R=new M(U.x,O.y),j=new M(O.x,U.y);else O=new M(C-4+v,S-4+P),U=new M(O.x+L.width,O.y+L.height),R=new M(O.x,U.y),j=new M(U.x,O.y);for(const t of A){let r,n,a,l;if(t.alternateVerticalGlyph){if(!G){const e=(S+F)/2+P;G=new M((C+z)/2+v-k.height/2-4,e+k.width/2+4),q=new M(G.x+L.height,G.y-L.width),K=new M(q.x,G.y),H=new M(G.x,q.y)}r=G,n=K,a=H,l=q}else r=O,n=R,a=j,l=U;const c=S,x=F,u=t.glyphAngle+s;if(0!==u){const e=Math.cos(u),t=Math.sin(u);r=r.clone(),n=n.clone(),a=a.clone(),l=l.clone(),r.rotate(e,t),l.rotate(e,t),n.rotate(e,t),a.rotate(e,t)}let f=0,b=256;if(d&&w?h.vertical?t.alternateVerticalGlyph?(f=32,b=96):(f=224,b=32):(f=224,b=96):(f=192,b=64),p.push(new N(r,a,n,l,L,t.labelAngle,f,b,t.anchor,t.minzoom,t.maxzoom,t.page)),y&&(!B||this._legible(t.labelAngle)))if(g)C<_&&(_=C),c<V&&(V=c),z>m&&(m=z),x>I&&(I=x);else if(t.minzoom<2){const r={xTile:e.x,yTile:e.y,dxPixels:(C+v)*D-o,dyPixels:(c+v)*D-o,hard:!i.optional,partIndex:1,width:(z-C)*D+2*o,height:(x-c)*D+2*o,angle:u,minLod:t.minzoom,maxLod:t.maxzoom};y.push(r)}}}if(c>=2)return null;if(y&&g){let t,r,n,a;w?(t=-I+v,r=_+P,n=I-V,a=m-_):(t=_+v,r=V+P,n=m-_,a=I-V);const l={xTile:e.x,yTile:e.y,dxPixels:t*D-o,dyPixels:r*D-o,hard:!i.optional,partIndex:1,width:n*D+2*o,height:a*D+2*o,angle:s,minLod:.5,maxLod:u};y.push(l)}const L=new S(p);return y&&y.length>0&&(L.textColliders=y),L}_legible(e){const t=y(e);return t<65||t>=193}_placeGlyph(e,t,r,i,n,s,a,l,o){let c=s;const h=c<0?f(e.angle+x,d):e.angle;let y=0;r<0&&(c*=-1,r*=-1,y=x),c>0&&++n;let p=new M(e.x,e.y),g=i[n],_=u;if(i.length<=n)return _;for(;;){const e=g.x-p.x,s=g.y-p.y,x=Math.sqrt(e*e+s*s),u=Math.max(r/x,t),m=e/x,V=s/x,I=f(Math.atan2(V,m)+y,d);if(o.push(new E(p,h,I,l,!1,u,_)),a&&o.push(new E(p,h,I,l,!0,u,_)),u<=t)return u;p=g.clone();do{if(n+=c,i.length<=n||n<0)return u;g=i[n]}while(p.isEqual(g));let B=g.x-p.x,D=g.y-p.y;const w=Math.sqrt(B*B+D*D);B*=x/w,D*=x/w,p.x-=B,p.y-=D,_=u}}}class F{constructor(e,t){this.layerExtent=4096,this._features=[],this.layer=e,this.zoom=t,this._filter=e.getFeatureFilter()}pushFeature(e){this._filter&&!this._filter.filter(e,this.zoom)||this._features.push(e)}hasFeatures(){return this._features.length>0}}class O extends F{constructor(e,t,r,i){super(e,t),this.type=4,this._circleVertexBuffer=r,this._circleIndexBuffer=i}get circleIndexStart(){return this._circleIndexStart}get circleIndexCount(){return this._circleIndexCount}processFeatures(e){const t=this._circleVertexBuffer,r=this._circleIndexBuffer;this._circleIndexStart=3*r.index,this._circleIndexCount=0;const i=this.layer,n=this.zoom;e&&e.setExtent(this.layerExtent);let s=1,a=[1,1,1,1],l=1,o=0,c=1,h=[1,1,1,1],x=1;for(const u of this._features){const f=u.getGeometry(e);if(f){i.hasDataDrivenRadius&&(s=i.getPaintValue("circle-radius",n,u)),i.hasDataDrivenColor&&(a=i.getPaintValue("circle-color",n,u)),i.hasDataDrivenOpacity&&(l=i.getPaintValue("circle-opacity",n,u)),i.hasDataDrivenStrokeWidth&&(c=i.getPaintValue("circle-stroke-width",n,u)),i.hasDataDrivenStrokeColor&&(h=i.getPaintValue("circle-stroke-color",n,u)),i.hasDataDrivenStrokeOpacity&&(x=i.getPaintValue("circle-stroke-opacity",n,u)),i.hasDataDrivenBlur&&(o=i.getPaintValue("circle-blur",n,u));for(const e of f)if(e)for(const i of e){const e=t.index;t.add(i.x,i.y,0,0,s,a,l,o,c,h,x),t.add(i.x,i.y,0,1,s,a,l,o,c,h,x),t.add(i.x,i.y,1,0,s,a,l,o,c,h,x),t.add(i.x,i.y,1,1,s,a,l,o,c,h,x),r.add(e+0,e+1,e+2),r.add(e+1,e+2,e+3),this._circleIndexCount+=6}}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this._circleVertexBuffer.array.length,e+=this._circleIndexBuffer.array.length;let t=0;const r=new Uint32Array(e),i=new Int32Array(r.buffer);r[t++]=this.type,r[t++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)r[t++]=this.layerUIDs[e];r[t++]=this._circleIndexStart,r[t++]=this._circleIndexCount,r[t++]=this._circleVertexBuffer.array.length;for(let e=0;e<this._circleVertexBuffer.array.length;e++)i[t++]=this._circleVertexBuffer.array[e];r[t++]=this._circleIndexBuffer.array.length;for(let e=0;e<this._circleIndexBuffer.array.length;e++)r[t++]=this._circleIndexBuffer.array[e];return r.buffer}}class U{constructor(e,t){this.values={};const r=t.keys,i=t.values;for(;e.next();)switch(e.tag()){case 1:this.id=e.getUInt64();break;case 2:{const t=e.getMessage(),n=this.values;for(;!t.empty();){const e=t.getUInt32(),s=t.getUInt32();n[r[e]]=i[s]}t.release();break}case 3:this.type=e.getUInt32();break;case 4:this._pbfGeometry=e.getMessage();break;default:e.skip()}}getGeometry(e){if(void 0!==this._geometry)return this._geometry;if(!this._pbfGeometry)return null;const t=this._pbfGeometry;let r,i;this._pbfGeometry=null,e?e.reset(this.type):r=[];let n,s=1,a=0,l=0,o=0;for(;!t.empty();){if(0===a){const e=t.getUInt32();s=7&e,a=e>>3}switch(a--,s){case 1:l+=t.getSInt32(),o+=t.getSInt32(),e?e.moveTo(l,o):(i&&r.push(i),i=[],i.push(new M(l,o)));break;case 2:l+=t.getSInt32(),o+=t.getSInt32(),e?e.lineTo(l,o):i.push(new M(l,o));break;case 7:e?e.close():i&&!i[0].equals(l,o)&&i.push(i[0].clone());break;default:throw t.release(),new Error("Invalid path operation")}}return e?n=e.result():(i&&r.push(i),n=r),t.release(),this._geometry=n,n}}const R=new L;class j extends F{constructor(e,t,r,i,n,s){if(super(e,t),this.type=1,e.hasDataDrivenFill!==r.isDataDriven())throw new Error("incompatible fill buffer");if(e.hasDataDrivenOutline!==n.isDataDriven())throw new Error("incompatible outline buffer");this._fillVertexBuffer=r,this._fillIndexBuffer=i,this._outlineVertexBuffer=n,this._outlineIndexBuffer=s}get fillIndexStart(){return this._fillIndexStart}get fillIndexCount(){return this._fillIndexCount}get outlineIndexStart(){return this._outlineIndexStart}get outlineIndexCount(){return this._outlineIndexCount}processFeatures(e){this._fillIndexStart=3*this._fillIndexBuffer.index,this._fillIndexCount=0,this._outlineIndexStart=3*this._outlineIndexBuffer.index,this._outlineIndexCount=0;const t=this.layer,r=this.zoom,i=t.hasDataDrivenFill,n=t.hasDataDrivenOutline;e&&e.setExtent(this.layerExtent);const s=t.getPaintValue("fill-pattern",r);let a=t.getPaintValue("fill-antialias",r)&&void 0===s,l=[1,1,1,1],o=[1,1,1,1],c=1;if(t.outlineUsesFillColor){if(a&&!t.hasDataDrivenOpacity){const e=t.getPaintValue("fill-opacity",r),i=t.getPaintValue("fill-opacity",r+1);e<1&&i<1&&(a=!1)}if(a&&!t.hasDataDrivenColor){const e=t.getPaintValue("fill-color",r),i=t.getPaintValue("fill-color",r+1);e[3]<1&&i[3]<1&&(a=!1)}}for(const h of this._features){let x,u;!s&&t.hasDataDrivenColor&&(l=t.getPaintValue("fill-color",r,h)),t.hasDataDrivenOpacity&&(c=t.getPaintValue("fill-opacity",r,h)),!s&&t.hasDataDrivenOutlineColor&&(o=t.getPaintValue("fill-outline-color",r,h)),i&&(x={color:l,opacity:c}),n&&(u={color:t.outlineUsesFillColor?l:o,opacity:c});const f=h.getGeometry(e),d=null==e?void 0:e.validateTessellation;this._processFeature(f,a,t.outlineUsesFillColor,x,u,d)}}serialize(){let e=12;e+=this.layerUIDs.length,e+=this._fillVertexBuffer.array.length,e+=this._fillIndexBuffer.array.length,e+=this._outlineVertexBuffer.array.length,e+=this._outlineIndexBuffer.array.length;let t=0;const r=new Uint32Array(e),i=new Int32Array(r.buffer);r[t++]=this.type,r[t++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)r[t++]=this.layerUIDs[e];r[t++]=this._fillIndexStart,r[t++]=this._fillIndexCount,r[t++]=this._outlineIndexStart,r[t++]=this._outlineIndexCount,r[t++]=this._fillVertexBuffer.isDataDriven()?1:0,r[t++]=this._outlineVertexBuffer.isDataDriven()?1:0,r[t++]=this._fillVertexBuffer.array.length;for(let e=0;e<this._fillVertexBuffer.array.length;e++)i[t++]=this._fillVertexBuffer.array[e];r[t++]=this._fillIndexBuffer.array.length;for(let e=0;e<this._fillIndexBuffer.array.length;e++)r[t++]=this._fillIndexBuffer.array[e];r[t++]=this._outlineVertexBuffer.array.length;for(let e=0;e<this._outlineVertexBuffer.array.length;e++)i[t++]=this._outlineVertexBuffer.array[e];r[t++]=this._outlineIndexBuffer.array.length;for(let e=0;e<this._outlineIndexBuffer.array.length;e++)r[t++]=this._outlineIndexBuffer.array[e];return r.buffer}_processFeature(e,t,r,i,n,s){if(!e)return;const a=e.length;if(t&&(!r||!n||n.color[3]*n.opacity==1))for(let t=0;t<a;t++)this._processOutline(e[t],n);let l;for(let t=0;t<a;t++){const r=j._area(e[t]);r>128?(void 0!==l&&this._processFill(e,l,i,s),l=[t]):r<-128&&void 0!==l&&l.push(t)}void 0!==l&&this._processFill(e,l,i,s)}_processOutline(e,t){const r=this._outlineVertexBuffer,i=this._outlineIndexBuffer,n=i.index;let s,a,l;const o=new M(0,0),c=new M(0,0),h=new M(0,0);let x=-1,u=-1,f=-1,d=-1,y=-1,p=!1;let g=e.length;if(g<2)return;const _=e[0];let m=e[g-1];for(;g&&m.isEqual(_);)--g,m=e[g-1];if(!(g-0<2)){for(let n=0;n<g;++n){0===n?(s=e[g-1],a=e[0],l=e[1],o.assignSub(a,s),o.normalize(),o.rightPerpendicular()):(s=a,a=l,l=n!==g-1?e[n+1]:e[0],o.assign(c));const _=this._isClipEdge(s,a);-1===d&&(p=_),c.assignSub(l,a),c.normalize(),c.rightPerpendicular();const m=o.x*c.y-o.y*c.x;h.assignAdd(o,c),h.normalize();const V=-h.x*-o.x+-h.y*-o.y;let I=Math.abs(0!==V?1/V:1);I>8&&(I=8),m>=0?(f=r.add(a.x,a.y,o.x,o.y,0,1,t),-1===d&&(d=f),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),u=r.add(a.x,a.y,I*-h.x,I*-h.y,0,-1,t),-1===y&&(y=u),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),x=u,u=f,f=r.add(a.x,a.y,h.x,h.y,0,1,t),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),u=r.add(a.x,a.y,c.x,c.y,0,1,t),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f)):(f=r.add(a.x,a.y,I*h.x,I*h.y,0,1,t),-1===d&&(d=f),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),u=r.add(a.x,a.y,-o.x,-o.y,0,-1,t),-1===y&&(y=u),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),x=u,u=f,f=r.add(a.x,a.y,-h.x,-h.y,0,-1,t),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f),x=r.add(a.x,a.y,-c.x,-c.y,0,-1,t),x>=0&&u>=0&&f>=0&&!_&&i.add(x,u,f))}x>=0&&u>=0&&d>=0&&!p&&i.add(x,u,d),x>=0&&d>=0&&y>=0&&!p&&i.add(x,y,d),this._outlineIndexCount+=3*(i.index-n)}}_processFill(t,r,i,n){let s;r.length>1&&(s=[]);let a=0;for(const e of r)0!==a&&s.push(a),a+=t[e].length;const c=2*a,h=e.acquire();for(const e of r){const r=t[e],i=r.length;for(let e=0;e<i;++e)h.push(r[e].x,r[e].y)}const x=l(h,s,2);if(n&&o(h,s,2,x)>0){const e=[],n=[];if(function(e,t,r,i){let n,s;R.beginPolygon(e,t);for(const e of i){const t=r[e];if(!(t.length<3)){R.beginContour();for(let e=0;e<t.length;++e){n=t[e].x,s=t[e].y;const r=[n,s,0];R.addVertex(r,r)}R.endContour()}}R.endPolygon()}(e,n,t,r),n.length>0){const t=this._fillVertexBuffer.index;let r=0;for(;r<e.length;)this._fillVertexBuffer.add(e[r++],e[r++],i);let s=0;for(;s<n.length;)this._fillIndexBuffer.add(t+n[s+0],t+n[s+1],t+n[s+2]),s+=3;this._fillIndexCount+=n.length}}else{const e=x.length;if(e>0){const t=this._fillVertexBuffer.index;let r=0;for(;r<c;)this._fillVertexBuffer.add(h[r++],h[r++],i);let n=0;for(;n<e;)this._fillIndexBuffer.add(t+x[n++],t+x[n++],t+x[n++]);this._fillIndexCount+=e}}e.release(h)}_isClipEdge(e,t){return e.x===t.x?e.x<=-64||e.x>=4160:e.y===t.y&&(e.y<=-64||e.y>=4160)}static _area(e){let t=0;const r=e.length-1;for(let i=0;i<r;i++)t+=(e[i].x-e[i+1].x)*(e[i].y+e[i+1].y);return t+=(e[r].x-e[0].x)*(e[r].y+e[0].y),.5*t}}class G{constructor(e){this._array=[],e<=0&&console.error("strideInBytes must be positive!"),this._stride=e}get array(){return this._array}get index(){return 4*this._array.length/this._stride}get itemSize(){return this._stride}get sizeInBytes(){return 4*this._array.length}reset(){this.array.length=0}toBuffer(){return new Uint32Array(this._array).buffer}static i1616to32(e,t){return 65535&e|t<<16}static i8888to32(e,t,r,i){return 255&e|(255&t)<<8|(255&r)<<16|i<<24}static i8816to32(e,t,r){return 255&e|(255&t)<<8|r<<16}}class q extends G{constructor(){super(12)}add(e,t,r){const i=this.array;i.push(e),i.push(t),i.push(r)}}class K extends F{constructor(e,t,r,i){if(super(e,t),this.type=2,this._tessellationOptions={},this.tessellationProperties={_lineVertexBuffer:null,_lineIndexBuffer:null,_hasPattern:null,_ddValues:null,_capType:null,_joinType:null,_miterLimitCosine:null,_roundLimitCosine:null},e.hasDataDrivenLine!==r.isDataDriven())throw new Error("incompatible line buffer");this.tessellationProperties._lineVertexBuffer=r,this.tessellationProperties._lineIndexBuffer=i,this.tessellationProperties._hasPattern=e.getPaintValue("line-pattern",this.zoom)||e.getPaintValue("line-dasharray",this.zoom).length>0,this._isThinLine=e.isThinLine,this._isThinLine?this._tessellationCallbacks={vertex:H(this.tessellationProperties),bridge:W(this.tessellationProperties)}:this._tessellationCallbacks={vertex:Y(this.tessellationProperties),bridge:J(this.tessellationProperties)}}get lineIndexStart(){return this._lineIndexStart}get lineIndexCount(){return this._lineIndexCount}processFeatures(e){this._lineIndexStart=3*this.tessellationProperties._lineIndexBuffer.index,this._lineIndexCount=0;const t=this.layer,r=this.zoom,i=t.hasDataDrivenLine;e&&e.setExtent(this.layerExtent);let n=[1,1,1,1],s=1,a=1;for(const l of this._features){let o;if(!this.tessellationProperties._hasPattern&&t.hasDataDrivenColor&&(n=t.getPaintValue("line-color",r,l)),t.hasDataDrivenOpacity&&(s=t.getPaintValue("line-opacity",r,l)),t.hasDataDrivenWidth&&(a=t.getPaintValue("line-width",r,l)),i&&(o={color:n,opacity:s,size:Math.max(Math.min(a,256),0)},o.size<=0||o.opacity<=0||o.color[3]<=0))continue;this.tessellationProperties._capType=t.getLayoutValue("line-cap",r,l),this.tessellationProperties._joinType=t.getLayoutValue("line-join",r,l),this.tessellationProperties._miterLimitCosine=b(t.getLayoutValue("line-miter-limit",r,l)),this.tessellationProperties._roundLimitCosine=b(t.getLayoutValue("line-round-limit",r,l));const c=l.getGeometry(e);this._processFeature(c,o)}v()}serialize(){let e=7;e+=this.layerUIDs.length,e+=this.tessellationProperties._lineVertexBuffer.array.length,e+=this.tessellationProperties._lineIndexBuffer.array.length;let t=0;const r=new Uint32Array(e),i=new Int32Array(r.buffer);r[t++]=this.type,r[t++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)r[t++]=this.layerUIDs[e];r[t++]=this._lineIndexStart,r[t++]=this._lineIndexCount,r[t++]=this.tessellationProperties._lineVertexBuffer.isDataDriven()?1:0,r[t++]=this.tessellationProperties._lineVertexBuffer.array.length;for(let e=0;e<this.tessellationProperties._lineVertexBuffer.array.length;e++)i[t++]=this.tessellationProperties._lineVertexBuffer.array[e];r[t++]=this.tessellationProperties._lineIndexBuffer.array.length;for(let e=0;e<this.tessellationProperties._lineIndexBuffer.array.length;e++)r[t++]=this.tessellationProperties._lineIndexBuffer.array[e];return r.buffer}_processFeature(e,t){if(!e)return;const r=e.length;for(let i=0;i<r;i++)this._processGeometry(e[i],t)}_processGeometry(e,t){if(e.length<2)return;let r,i,n=e[0],s=1;for(;s<e.length;)r=e[s].x-n.x,i=e[s].y-n.y,r*r+i*i<1e-6?e.splice(s,1):(n=e[s],++s);if(e.length<2)return;const a=3*this.tessellationProperties._lineIndexBuffer.index;this._tessellationOptions.trackDistance=this.tessellationProperties._hasPattern,this._tessellationOptions.initialDistance=0,this._tessellationOptions.thin=this._isThinLine,this._tessellationOptions.wrapDistance=65535,this._tessellationOptions.outerBisectorAutoSplitThreshold=.2631578947368421,this._tessellationOptions.enableOuterBisectorSplit=this.tessellationProperties._hasPattern,this._tessellationOptions.innerBisectorAutoSplitThreshold=.2631578947368421,this._tessellationOptions.enableInnerBisectorSplit=this.tessellationProperties._hasPattern,this.tessellationProperties._ddValues=t,P(e,this._tessellationOptions,this._tessellationCallbacks),this._lineIndexCount+=3*this.tessellationProperties._lineIndexBuffer.index-a}}const H=e=>t=>{t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)},W=e=>t=>{e._lineIndexBuffer.add(t.leftExit0,t.rightEntry0,t.leftExit2),e._lineIndexBuffer.add(t.rightEntry0,t.rightEntry2,t.leftExit2)},Y=e=>t=>{const r=2===e._joinType?e._miterLimitCosine:e._roundLimitCosine,i=t.isCap&&0!==e._capType;let n=!1;t.cosine>.97?(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues),t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues)):t.cosine<1-.97?(t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):t.canSplit?(w(),t.sign>0?(t.splitInner?(t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.leftInner.x,t.leftInner.y,0,-1,t.distance,e._ddValues),t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.rightInner.x,t.rightInner.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)),t.cosine<r?(n=!t.isCap,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):t.splitOuter?(n=n||t.gapOuter,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.leftOuter.x,-t.leftOuter.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.rightOuter.x,-t.rightOuter.y,0,1,t.distance,e._ddValues)):(t.entry2=t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues))):(t.splitInner?(t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.leftInner.x,-t.leftInner.y,0,1,t.distance,e._ddValues),t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.rightInner.x,-t.rightInner.y,0,1,t.distance,e._ddValues)):(t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues)),t.cosine<r?(n=!t.isCap,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues)):t.splitOuter?(n=n||t.gapOuter,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.leftOuter.x,t.leftOuter.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.rightOuter.x,t.rightOuter.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)))):t.sign>0?(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues),t.cosine<r?(n=!t.isCap,t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x,-t.prevNormal.y,0,1,t.distance,e._ddValues),t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.nextNormal.x,-t.nextNormal.y,0,1,t.distance,e._ddValues)):(t.entry2=t.exit2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues))):(t.exit2=t.entry2=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.bisector.x/t.cosine,-t.bisector.y/t.cosine,0,1,t.distance,e._ddValues),t.cosine<r?(n=!t.isCap,t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x,t.prevNormal.y,0,-1,t.distance,e._ddValues),t.exit0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.nextNormal.x,t.nextNormal.y,0,-1,t.distance,e._ddValues)):(t.exit0=t.entry0=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.bisector.x/t.cosine,t.bisector.y/t.cosine,0,-1,t.distance,e._ddValues)));let s;if(t.canSplit&&(t.splitInner||t.splitOuter)||n||i?(s=t.entry1=t.exit1=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,0,0,0,0,t.distance,e._ddValues)):s=t.entry1=t.exit1=null,n&&1!==e._joinType)e._lineIndexBuffer.add(s,t.sign>0?t.exit2:t.entry0,t.sign>0?t.entry2:t.exit0);else if(i&&1===e._capType||n&&1===e._joinType){let r,i,n,a,l,o;if(t.isCap){const e=Math.PI;l=Math.ceil(e/.8),o=e/l,t.isFirstVertex?(r=t.prevNormal.x,i=t.prevNormal.y,n=t.entry0,a=t.entry2):t.isLastVertex&&(r=-t.nextNormal.x,i=-t.nextNormal.y,n=t.exit2,a=t.exit0)}else{const e=2*Math.acos(t.cosine);l=Math.ceil(e/.8),o=e/l,r=t.sign>0?-t.prevNormal.x:t.nextNormal.x,i=t.sign>0?-t.prevNormal.y:t.nextNormal.y,n=t.sign>0?t.entry2:t.exit0,a=t.sign>0?t.exit2:t.entry0}const c=Math.cos(o),h=Math.sin(o),x=h*r+c*i;let u,f;r=c*r-h*i,i=x;for(let o=0;o<l;++o){if(u=f,o<l-1)if(t.isCap){const n=t.isFirstVertex?-1:1;f=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,r,i,n,0,t.distance,e._ddValues)}else f=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,r,i,0,t.sign,t.distance,e._ddValues);e._lineIndexBuffer.add(0===o?n:u,s,o===l-1?a:f);const x=h*r+c*i;r=c*r-h*i,i=x}}else if(i&&2===e._capType){const r=t.isFirstVertex?1:-1;let i,n;e._hasPattern?(i=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x-r*t.inbound.x,t.prevNormal.y-r*t.inbound.y,-r,-1,t.distance,e._ddValues),n=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x-r*t.inbound.x,-t.prevNormal.y-r*t.inbound.y,-r,1,t.distance,e._ddValues)):(i=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,t.prevNormal.x-r*t.inbound.x,t.prevNormal.y-r*t.inbound.y,0,-1,t.distance,e._ddValues),n=e._lineVertexBuffer.index,e._lineVertexBuffer.add(t.currentVertex.x,t.currentVertex.y,-t.prevNormal.x-r*t.inbound.x,-t.prevNormal.y-r*t.inbound.y,0,1,t.distance,e._ddValues)),r>0?(e._lineIndexBuffer.add(s,t.entry2,n),e._lineIndexBuffer.add(s,n,i),e._lineIndexBuffer.add(s,i,t.entry0)):(e._lineIndexBuffer.add(s,n,t.exit2),e._lineIndexBuffer.add(s,i,n),e._lineIndexBuffer.add(s,t.exit0,i))}},J=e=>t=>{e._lineIndexBuffer.add(t.leftExit0,t.rightEntry0,null!=t.leftExit1?t.leftExit1:t.leftExit2),e._lineIndexBuffer.add(t.rightEntry0,null!=t.rightEntry1?t.rightEntry1:t.rightEntry2,null!=t.leftExit1?t.leftExit1:t.leftExit2),null!=t.leftExit1&&null!=t.rightEntry1?(e._lineIndexBuffer.add(t.leftExit1,t.rightEntry1,t.leftExit2),e._lineIndexBuffer.add(t.rightEntry1,t.rightEntry2,t.leftExit2)):null!=t.leftExit1?e._lineIndexBuffer.add(t.leftExit1,t.rightEntry2,t.leftExit2):null!=t.rightEntry1&&e._lineIndexBuffer.add(t.rightEntry1,t.rightEntry2,t.leftExit2)};class Z{constructor(e){for(this.extent=4096,this.keys=[],this.values=[],this._pbfLayer=e.clone();e.next();)switch(e.tag()){case 1:this.name=e.getString();break;case 3:this.keys.push(e.getString());break;case 4:this.values.push(e.processMessage(Z._parseValue));break;case 5:this.extent=e.getUInt32();break;default:e.skip()}}getData(){return this._pbfLayer}static _parseValue(e){for(;e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getInt64();case 5:return e.getUInt64();case 6:return e.getSInt64();case 7:return e.getBool();default:e.skip()}return null}}function Q(e,t){return e.iconMosaicItem&&t.iconMosaicItem?e.iconMosaicItem.page===t.iconMosaicItem.page?0:e.iconMosaicItem.page-t.iconMosaicItem.page:e.iconMosaicItem&&!t.iconMosaicItem?1:!e.iconMosaicItem&&t.iconMosaicItem?-1:0}class X extends F{constructor(e,t,r,i,n,s,a,l){if(super(e,t),this.type=3,this._markerMap=new Map,this._glyphMap=new Map,this._glyphBufferDataStorage=new Map,this._isIconSDF=!1,e.hasDataDrivenIcon!==r.isDataDriven())throw new Error("incompatible icon buffer");if(e.hasDataDrivenText!==n.isDataDriven())throw new Error("incompatible text buffer");this._iconVertexBuffer=r,this._iconIndexBuffer=i,this._textVertexBuffer=n,this._textIndexBuffer=s,this._placementEngine=a,this._workerTileHandler=l}get markerPageMap(){return this._markerMap}get glyphsPageMap(){return this._glyphMap}get symbolInstances(){return this._symbolInstances}getResources(e,t,i){const n=this.layer,s=this.zoom,a=n.hasDataDrivenIcon,l=n.hasDataDrivenText;e&&e.setExtent(this.layerExtent);const o=n.getLayoutProperty("icon-image"),c=n.getLayoutProperty("text-field"),h=[];let x,u,f,d,y,p,g,_,m,V,I=[1,1,1,1],B=1,D=1,w=[1,1,1,1],b=1,v=1;for(const P of this._features){const M=P.getGeometry(e);if(!M||0===M.length)continue;let L,k;o&&(L=n.getLayoutValue("icon-image",s,P),o.isDataDriven||(L=this._replaceKeys(L,P.values)),L&&(t.add(L),x=n.getLayoutValue("icon-rotate",s,P),u=n.getLayoutValue("icon-anchor",s,P),f=n.getLayoutValue("icon-offset",s,P)));let T=!1;if(c&&(k=n.getLayoutValue("text-field",s,P),k&&!c.isDataDriven&&(k=this._replaceKeys(k,P.values)),k)){k=k.replace(/\\n/g,"\n");switch(n.getLayoutValue("text-transform",s,P)){case 2:k=k.toLowerCase();break;case 1:k=k.toUpperCase()}if(X._bidiEngine.hasBidiChar(k)){let e;e="rtl"===X._bidiEngine.checkContextual(k)?"IDNNN":"ICNNN",k=X._bidiEngine.bidiTransform(k,e,"VLYSN"),T=!0}const e=k.length;if(e>0){V=n.getLayoutValue("text-font",s,P);for(const t of V){let r=i[t];r||(r=i[t]=new Set);for(let t=0;t<e;t++){const e=k.charCodeAt(t);r.add(e)}}d=n.getLayoutValue("text-rotate",s,P),y=n.getLayoutValue("text-anchor",s,P),p=n.getLayoutValue("text-offset",s,P),g=n.getLayoutValue("text-justify",s,P),_=n.getLayoutValue("text-letter-spacing",s,P),m=n.getLayoutValue("text-max-width",s,P)}}if(!L&&!k)continue;const A=n.getLayoutValue("icon-size",s,P),C=n.getLayoutValue("text-size",s,P);n.hasDataDrivenIconColor&&(I=n.getPaintValue("icon-color",s,P)),n.hasDataDrivenIconOpacity&&(B=n.getPaintValue("icon-opacity",s,P)),n.hasDataDrivenIconSize&&(D=A),n.hasDataDrivenTextColor&&(w=n.getPaintValue("text-color",s,P)),n.hasDataDrivenTextOpacity&&(b=n.getPaintValue("text-opacity",s,P)),n.hasDataDrivenTextSize&&(v=C);const E=n.getLayoutValue("symbol-sort-key",s,P),N={sprite:L,label:k,rtl:T,type:P.type,geometry:M,hash:(k?r(k):0)^(L?r(L):0),priority:E,iconSize:A,iconRotate:x,ddIconValues:a?{color:I,opacity:B,size:D}:null,iconAnchor:u,iconOffset:f,textSize:C,textRotate:d,ddTextValues:l?{color:w,opacity:b,size:v}:null,textAnchor:y,textOffset:p,textJustify:g,textLetterSpacing:_,textMaxWidth:m,textFontArray:V};h.push(N)}this._symbolFeatures=h}processFeatures(e){e&&e.setExtent(this.layerExtent);const t=this.layer,r=this.zoom,i=t.getLayoutValue("symbol-placement",r),n=0!==i,s=8*t.getLayoutValue("symbol-spacing",r),a=t.getLayoutProperty("icon-image"),l=t.getLayoutProperty("text-field"),o=a?new p(t,r,n):null,c=l?new g(t,r,n):null,x=this._workerTileHandler;let u;a&&(u=x.getSpriteItems()),this._iconIndexStart=3*this._iconIndexBuffer.index,this._textIndexStart=3*this._textIndexBuffer.index,this._iconIndexCount=0,this._textIndexCount=0,this._markerMap.clear(),this._glyphMap.clear();const f=[];let d=1;c&&c.size&&(d=c.size/24);const y=c?c.maxAngle*h:0,_=c?8*c.size:0;for(const e of this._symbolFeatures){let t;o&&u&&e.sprite&&(t=u[e.sprite],t&&t.sdf&&(this._isIconSDF=!0));let r;!!t&&(o.size=e.iconSize,o.rotate=e.iconRotate,o.offset=e.iconOffset);let a=0;const l=e.label;if(l){c.size=e.textSize,c.rotate=e.textRotate,c.anchor=e.textAnchor,c.fontArray=e.textFontArray,c.justify=e.textJustify,c.letterSpacing=e.textLetterSpacing,c.maxWidth=e.textMaxWidth,c.offset=e.textOffset;const t=n?c.keepUpright:c.writingMode&&c.writingMode.indexOf(1)>=0;let i=.5;switch(c.anchor){case 5:case 1:case 7:i=0;break;case 6:case 2:case 8:i=1}let s=.5;switch(c.anchor){case 5:case 3:case 6:s=0;break;case 7:case 4:case 8:s=1}let o=.5;switch(c.justify){case 0:o=i;break;case 1:o=0;break;case 3:o=1}const h=24*c.letterSpacing,u=n?0:24*c.maxWidth,f=24*c.lineHeight;let y,p;if(y=c.fontArray.map((e=>x.getGlyphItems(e))),p=new A(y,u,f,h,i,s,o),r=p.getShaping(l,e.rtl,t),r&&r.length>0){let e=1e30,t=-1e30;for(const i of r)e=Math.min(e,i.x),t=Math.max(t,i.x);a=(t-e+48)*d*8}}for(let l of e.geometry){const h=[];if(1===i){if(r&&r.length>0&&c&&c.size){const e=8*c.size*(2+Math.min(2,4*Math.abs(c.offset[1])));l=X._smoothVertices(l,e)}X._pushAnchors(h,l,s,a)}else 2===i?X._pushCenterAnchor(h,l):3===e.type?X._pushCentroid(h,l):h.push(new C(l[0].x,l[0].y));for(const i of h){if(i.x<0||i.x>4096||i.y<0||i.y>4096)continue;if(n&&a>0&&0===c.rotationAlignment&&!X._honorsTextMaxAngle(l,i,a,y,_))continue;const s={shaping:r,line:l,iconMosaicItem:t,anchor:i,symbolFeature:e,textColliders:[],iconColliders:[],textVertexRanges:[],iconVertexRanges:[]};f.push(s),this._processFeature(s,o,c)}}}f.sort(Q),this._addPlacedGlyphs(),this._symbolInstances=f}serialize(){let e=13;e+=this.layerUIDs.length,e+=3*this.markerPageMap.size,e+=3*this.glyphsPageMap.size,e+=X.symbolsSerializationLength(this._symbolInstances),e+=this._iconVertexBuffer.array.length,e+=this._iconIndexBuffer.array.length,e+=this._textVertexBuffer.array.length,e+=this._textIndexBuffer.array.length;let t=0;const r=new Uint32Array(e),i=new Int32Array(r.buffer),n=new Float32Array(r.buffer);r[t++]=this.type,r[t++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)r[t++]=this.layerUIDs[e];r[t++]=this._isIconSDF?1:0,r[t++]=this._iconVertexBuffer.isDataDriven()?1:0,r[t++]=this._textVertexBuffer.isDataDriven()?1:0,r[t++]=this.markerPageMap.size,this.markerPageMap.forEach((([e,i],n)=>{r[t++]=n,r[t++]=e,r[t++]=i})),r[t++]=this.glyphsPageMap.size,this.glyphsPageMap.forEach((([e,i],n)=>{r[t++]=n,r[t++]=e,r[t++]=i})),r[t++]=this._iconVertexBuffer.index/4,r[t++]=this._textVertexBuffer.index/4,t=X.serializeSymbols(r,i,n,t,this._symbolInstances),r[t++]=this._iconVertexBuffer.array.length;for(let e=0;e<this._iconVertexBuffer.array.length;e++)i[t++]=this._iconVertexBuffer.array[e];r[t++]=this._iconIndexBuffer.array.length;for(let e=0;e<this._iconIndexBuffer.array.length;e++)r[t++]=this._iconIndexBuffer.array[e];r[t++]=this._textVertexBuffer.array.length;for(let e=0;e<this._textVertexBuffer.array.length;e++)i[t++]=this._textVertexBuffer.array[e];r[t++]=this._textIndexBuffer.array.length;for(let e=0;e<this._textIndexBuffer.array.length;e++)r[t++]=this._textIndexBuffer.array[e];return r.buffer}static symbolsSerializationLength(e){let t=0;t+=1;for(const r of e||[]){t+=4,t+=1;for(const e of r.textColliders)t+=10;for(const e of r.iconColliders)t+=10;t+=1,t+=2*r.textVertexRanges.length,t+=1,t+=2*r.iconVertexRanges.length}return t}static serializeSymbols(e,t,r,i,n){n=n||[],t[i++]=n.length;for(const e of n){t[i++]=e.anchor.x,t[i++]=e.anchor.y,t[i++]=e.symbolFeature.hash,t[i++]=e.symbolFeature.priority,t[i++]=e.textColliders.length+e.iconColliders.length;for(const n of e.textColliders)t[i++]=n.xTile,t[i++]=n.yTile,t[i++]=n.dxPixels,t[i++]=n.dyPixels,t[i++]=n.hard?1:0,t[i++]=n.partIndex,r[i++]=n.minLod,r[i++]=n.maxLod,t[i++]=n.width,t[i++]=n.height;for(const n of e.iconColliders)t[i++]=n.xTile,t[i++]=n.yTile,t[i++]=n.dxPixels,t[i++]=n.dyPixels,t[i++]=n.hard?1:0,t[i++]=n.partIndex,r[i++]=n.minLod,r[i++]=n.maxLod,t[i++]=n.width,t[i++]=n.height;t[i++]=e.textVertexRanges.length;for(const[r,n]of e.textVertexRanges)t[i++]=r,t[i++]=n;t[i++]=e.iconVertexRanges.length;for(const[r,n]of e.iconVertexRanges)t[i++]=r,t[i++]=n}return i}_replaceKeys(e,t){return e.replace(/{([^{}]+)}/g,(function(e,r){return r in t?t[r]:""}))}_processFeature(e,t,r){const i=e.line,n=e.iconMosaicItem,s=e.shaping,a=e.anchor,l=!!n;let o=!0;l&&(o=t.optional||!n);const c=s&&s.length>0;let h,x,u=!0;if(c&&(u=r.optional||!s||0===s.length),l&&(h=this._placementEngine.getIconPlacement(a,n,t)),(h||o)&&(c&&(x=this._placementEngine.getTextPlacement(a,s,i,r)),x||u)){if(h&&x||(u||o?u||x?o||h||(x=null):h=null:(h=null,x=null)),x&&(this._storePlacedGlyphs(e,x.shapes,this.zoom,r.rotationAlignment),x.textColliders)){e.textColliders=x.textColliders;for(const e of x.textColliders){e.minLod=Math.max(this.zoom+_(e.minLod),0),e.maxLod=Math.min(this.zoom+_(e.maxLod),25);const t=e.angle;if(t){const r=Math.cos(t),i=Math.sin(t),n=e.dxPixels*r-e.dyPixels*i,s=e.dxPixels*i+e.dyPixels*r,a=(e.dxPixels+e.width)*r-e.dyPixels*i,l=(e.dxPixels+e.width)*i+e.dyPixels*r,o=e.dxPixels*r-(e.dyPixels+e.height)*i,c=e.dxPixels*i+(e.dyPixels+e.height)*r,h=(e.dxPixels+e.width)*r-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*r,u=Math.min(n,a,o,h),f=Math.max(n,a,o,h),d=Math.min(s,l,c,x),y=Math.max(s,l,c,x);e.dxPixels=u,e.dyPixels=d,e.width=f-u,e.height=y-d}}}if(h&&(this._addPlacedIcons(e,h.shapes,this.zoom,n.page,1===t.rotationAlignment),h.iconColliders)){e.iconColliders=h.iconColliders;for(const e of h.iconColliders){e.minLod=Math.max(this.zoom+_(e.minLod),0),e.maxLod=Math.min(this.zoom+_(e.maxLod),25);const t=e.angle;if(t){const r=Math.cos(t),i=Math.sin(t),n=e.dxPixels*r-e.dyPixels*i,s=e.dxPixels*i+e.dyPixels*r,a=(e.dxPixels+e.width)*r-e.dyPixels*i,l=(e.dxPixels+e.width)*i+e.dyPixels*r,o=e.dxPixels*r-(e.dyPixels+e.height)*i,c=e.dxPixels*i+(e.dyPixels+e.height)*r,h=(e.dxPixels+e.width)*r-(e.dyPixels+e.height)*i,x=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*r,u=Math.min(n,a,o,h),f=Math.max(n,a,o,h),d=Math.min(s,l,c,x),y=Math.max(s,l,c,x);e.dxPixels=u,e.dyPixels=d,e.width=f-u,e.height=y-d}}}}}_addPlacedIcons(e,t,r,i,n){const s=e.symbolFeature.ddIconValues,a=Math.max(r-1,0),l=this._iconVertexBuffer,o=this._iconIndexBuffer,c=this._markerMap;for(const h of t){const t=n?0:Math.max(r+_(h.minzoom),a),x=n?25:Math.min(r+_(h.maxzoom),25);if(x<=t)continue;const u=h.tl,f=h.tr,d=h.bl,y=h.br,p=h.mosaicRect,g=h.labelAngle,m=h.minAngle,V=h.maxAngle,I=h.anchor,B=l.index,D=p.x,w=p.y,b=D+p.width,v=w+p.height,P=l.index;l.add(I.x,I.y,u.x,u.y,D,w,g,m,V,t,x,s),l.add(I.x,I.y,f.x,f.y,b,w,g,m,V,t,x,s),l.add(I.x,I.y,d.x,d.y,D,v,g,m,V,t,x,s),l.add(I.x,I.y,y.x,y.y,b,v,g,m,V,t,x,s),e.iconVertexRanges.length>0&&e.iconVertexRanges[0][0]+e.iconVertexRanges[0][1]===P?e.iconVertexRanges[0][1]+=4:e.iconVertexRanges.push([P,4]),o.add(B+0,B+1,B+2),o.add(B+1,B+2,B+3),c.has(i)?c.get(i)[1]+=6:c.set(i,[this._iconIndexStart+this._iconIndexCount,6]),this._iconIndexCount+=6}}_addPlacedGlyphs(){const e=this._textVertexBuffer,t=this._textIndexBuffer,r=this._glyphMap;this._glyphBufferDataStorage.forEach(((i,n)=>{for(const s of i){const i=e.index,a=s.symbolInstance,l=a.symbolFeature.ddTextValues,o=e.index;e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.tl[0],s.tl[1],s.xmin,s.ymin,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,l),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.tr[0],s.tr[1],s.xmax,s.ymin,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,l),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.bl[0],s.bl[1],s.xmin,s.ymax,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,l),e.add(s.glyphAnchor[0],s.glyphAnchor[1],s.br[0],s.br[1],s.xmax,s.ymax,s.labelAngle,s.minAngle,s.maxAngle,s.minLod,s.maxLod,l),a.textVertexRanges.length>0&&a.textVertexRanges[0][0]+a.textVertexRanges[0][1]===o?a.textVertexRanges[0][1]+=4:a.textVertexRanges.push([o,4]),t.add(i+0,i+1,i+2),t.add(i+1,i+2,i+3),r.has(n)?r.get(n)[1]+=6:r.set(n,[this._textIndexStart+this._textIndexCount,6]),this._textIndexCount+=6}})),this._glyphBufferDataStorage.clear()}_storePlacedGlyphs(e,t,r,i){const n=Math.max(r-1,0),s=1===i;let a,l,o,c,h,x,u,f,d,y,p;for(const i of t){if(a=s?0:Math.max(r+_(i.minzoom),n),l=s?25:Math.min(r+_(i.maxzoom),25),l<=a)continue;o=i.tl,c=i.tr,h=i.bl,x=i.br,u=i.labelAngle,f=i.minAngle,d=i.maxAngle,y=i.anchor,p=i.mosaicRect,this._glyphBufferDataStorage.has(i.page)||this._glyphBufferDataStorage.set(i.page,[]);this._glyphBufferDataStorage.get(i.page).push({glyphAnchor:[y.x,y.y],tl:[o.x,o.y],tr:[c.x,c.y],bl:[h.x,h.y],br:[x.x,x.y],xmin:p.x,ymin:p.y,xmax:p.x+p.width,ymax:p.y+p.height,labelAngle:u,minAngle:f,maxAngle:d,minLod:a,maxLod:l,placementLod:n,symbolInstance:e})}}static _pushAnchors(e,t,r,i){r+=i;let n=0;const s=t.length-1;for(let e=0;e<s;e++)n+=M.distance(t[e],t[e+1]);let a=i||r;if(a*=.5,n<=a)return;const l=a/n;let o=0,c=-(r=n/Math.max(Math.round(n/r),1))/2;const h=t.length-1;for(let i=0;i<h;i++){const n=t[i],s=t[i+1],a=s.x-n.x,h=s.y-n.y,x=Math.sqrt(a*a+h*h);let u;for(;c+r<o+x;){c+=r;const t=(c-o)/x,f=m(n.x,s.x,t),d=m(n.y,s.y,t);void 0===u&&(u=Math.atan2(h,a)),e.push(new C(f,d,u,i,l))}o+=x}}static _pushCenterAnchor(e,t){let r=0;const i=t.length-1;for(let e=0;e<i;e++)r+=M.distance(t[e],t[e+1]);const n=r/2;let s=0;const a=t.length-1;for(let r=0;r<a;r++){const i=t[r],a=t[r+1],l=a.x-i.x,o=a.y-i.y,c=Math.sqrt(l*l+o*o);if(n<s+c){const t=(n-s)/c,h=m(i.x,a.x,t),x=m(i.y,a.y,t),u=Math.atan2(o,l);return void e.push(new C(h,x,u,r,0))}s+=c}}static _deviation(e,t,r){const i=(t.x-e.x)*(r.x-t.x)+(t.y-e.y)*(r.y-t.y),n=(t.x-e.x)*(r.y-t.y)-(t.y-e.y)*(r.x-t.x);return Math.atan2(n,i)}static _honorsTextMaxAngle(e,t,r,i,n){let s=0;const a=r/2;let l=new M(t.x,t.y),o=t.segment+1;for(;s>-a;){if(--o,o<0)return!1;s-=M.distance(e[o],l),l=e[o]}s+=M.distance(e[o],e[o+1]);const c=[];let h=0;const x=e.length;for(;s<a;){const t=e[o];let r,a=o;do{if(++a,a===x)return!1;r=e[a]}while(r.isEqual(t));let l,u=a;do{if(++u,u===x)return!1;l=e[u]}while(l.isEqual(r));const f=this._deviation(t,r,l);for(c.push({deviation:f,distToAnchor:s}),h+=f;s-c[0].distToAnchor>n;)h-=c.shift().deviation;if(Math.abs(h)>i)return!1;s+=M.distance(r,l),o=a}return!0}static _smoothVertices(e,t){if(t<=0)return e;let r=e.length;if(r<3)return e;const i=[];let n=0,s=0;i.push(0);for(let t=1;t<r;t++){const r=M.distance(e[t],e[t-1]);r>0&&(n+=r,i.push(n),s++,s!==t&&(e[s]=e[t]))}if(r=s+1,r<3)return e;t=Math.min(t,.2*n);const a=e[0].x,l=e[0].y,o=e[r-1].x,c=e[r-1].y,h=M.sub(e[0],e[1]);h.normalize(),e[0].x+=t*h.x,e[0].y+=t*h.y,h.assignSub(e[r-1],e[r-2]),h.normalize(),e[r-1].x+=t*h.x,e[r-1].y+=t*h.y,i[0]-=t,i[r-1]+=t;const x=[];x.push(new M(a,l));const u=1e-6,f=.5*t;for(let n=1;n<r-1;n++){let s=0,a=0,l=0;for(let r=n-1;r>=0;r--){const o=f+i[r+1]-i[n];if(o<0)break;const c=i[r+1]-i[r],h=i[n]-i[r]<f?1:o/c;if(h<u)break;const x=h*h,d=h*o-.5*x*c,y=h*c/t,p=e[r+1],g=e[r].x-p.x,_=e[r].y-p.y;s+=y/d*(p.x*h*o+.5*x*(o*g-c*p.x)-x*h*c*g/3),a+=y/d*(p.y*h*o+.5*x*(o*_-c*p.y)-x*h*c*_/3),l+=y}for(let o=n+1;o<r;o++){const r=f-i[o-1]+i[n];if(r<0)break;const c=i[o]-i[o-1],h=i[o]-i[n]<f?1:r/c;if(h<u)break;const x=h*h,d=h*r-.5*x*c,y=h*c/t,p=e[o-1],g=e[o].x-p.x,_=e[o].y-p.y;s+=y/d*(p.x*h*r+.5*x*(r*g-c*p.x)-x*h*c*g/3),a+=y/d*(p.y*h*r+.5*x*(r*_-c*p.y)-x*h*c*_/3),l+=y}x.push(new M(s/l,a/l))}return x.push(new M(o,c)),e[0].x=a,e[0].y=l,e[r-1].x=o,e[r-1].y=c,x}static _pushCentroid(e,t){const r=4096,i=4096,n=t.length-1;let s=0,a=0,l=0,o=t[0].x,c=t[0].y;o>r&&(o=r),o<0&&(o=0),c>i&&(c=i),c<0&&(c=0);for(let e=1;e<n;e++){let n=t[e].x,h=t[e].y,x=t[e+1].x,u=t[e+1].y;n>r&&(n=r),n<0&&(n=0),h>i&&(h=i),h<0&&(h=0),x>r&&(x=r),x<0&&(x=0),u>i&&(u=i),u<0&&(u=0);const f=(n-o)*(u-c)-(x-o)*(h-c);s+=f*(o+n+x),a+=f*(c+h+u),l+=f}s/=3*l,a/=3*l,isNaN(s)||isNaN(a)||e.push(new C(s,a))}}X._bidiEngine=new B;const $=new Float32Array(1),ee=new Uint32Array($.buffer);class te extends G{constructor(e){super(e?20:12),this._isDataDriven=e}isDataDriven(){return this._isDataDriven}add(e,t,r,i,n,s,a,l){const o=this.array;let c=G.i1616to32(e,t);o.push(c);if(c=G.i8888to32(Math.round(31*r),Math.round(31*i),Math.round(31*n),Math.round(31*s)),o.push(c),c=G.i1616to32(a,0),o.push(c),this._isDataDriven){if(!l)throw new Error("Expecting data driven values.");const e=l.color,t=e[3]*l.opacity*255;o.push(G.i8888to32(e[0]*t,e[1]*t,e[2]*t,t)),$[0]=l.size,o.push(ee[0])}}}class re extends G{constructor(e){super(e?8:4),this._isDataDriven=e}isDataDriven(){return this._isDataDriven}add(e,t,r){const i=this.array;if(i.push(G.i1616to32(e,t)),this._isDataDriven){if(!r)throw new Error("Expecting data driven values.");const e=r.color,t=e[3]*r.opacity*255;i.push(G.i8888to32(e[0]*t,e[1]*t,e[2]*t,t))}}}class ie extends G{constructor(e){super(e?12:8),this._isDataDriven=e}isDataDriven(){return this._isDataDriven}add(e,t,r,i,n,s,a){const l=this.array,o=this.index;let c=G.i1616to32(e,t);l.push(c);if(c=G.i8888to32(Math.round(15*r),Math.round(15*i),n,s),l.push(c),this._isDataDriven){if(!a)throw new Error("Expecting data driven values.");const e=a.color,t=e[3]*a.opacity*255;l.push(G.i8888to32(e[0]*t,e[1]*t,e[2]*t,t))}return o}}class ne extends G{constructor(e){super(e?24:16),this._isDataDriven=e}isDataDriven(){return this._isDataDriven}add(e,t,r,i,n,s,a,l,o,c,h,x){const u=this.array;let f=G.i1616to32(e,t);if(u.push(f),f=G.i1616to32(Math.round(8*r),Math.round(8*i)),u.push(f),f=G.i8888to32(n/4,s/4,l,o),u.push(f),f=G.i8888to32(0,y(a),10*c,Math.min(10*h,255)),u.push(f),this._isDataDriven){if(!x)throw new Error("Expecting data driven values.");const e=x.color,t=e[3]*x.opacity*255;u.push(G.i8888to32(e[0]*t,e[1]*t,e[2]*t,t)),$[0]=x.size,u.push(ee[0])}}}class se extends G{constructor(){super(16)}add(e,t,r,i,n,s,a,l,o,c,h){const x=this.array;let u=G.i1616to32(2*e+r,2*t+i);x.push(u);const f=s[3]*a*255;u=G.i8888to32(s[0]*f,s[1]*f,s[2]*f,f),x.push(u);const d=c[3]*h*255;u=G.i8888to32(c[0]*d,c[1]*d,c[2]*d,d),x.push(u),u=G.i8888to32(Math.min(32*l,255),Math.min(4*o,255),Math.min(n,255),0),x.push(u)}}var ae;!function(e){e[e.INITIALIZED=0]="INITIALIZED",e[e.NO_DATA=1]="NO_DATA",e[e.READY=2]="READY",e[e.MODIFIED=3]="MODIFIED",e[e.INVALID=4]="INVALID"}(ae||(ae={}));class le{constructor(e,t,r,i,n){if(this._pbfTiles={},this._tileClippers={},this._client=r,this._tile=t,n){this._styleLayerUIDs=new Set;for(const e of n)this._styleLayerUIDs.add(e)}this._styleRepository=i,this._layers=this._styleRepository.layers;const[s,a,l]=t.tileKey.split("/").map(parseFloat);this._level=s;const o=Math.max(8,Math.round(1*this._level)-8);for(const t of Object.keys(e)){const r=e[t];this._pbfTiles[t]=new c(new Uint8Array(r.protobuff),new DataView(r.protobuff));if(r.refKey){const[e]=r.refKey.split("/").map(parseFloat),i=s-e;if(i>0){const e=(1<<i)-1,r=a&e,n=l&e;this._tileClippers[t]=new k(i,r,n,8,o)}}this._tileClippers[t]||(this._tileClippers[t]=new T)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(e){const t=this._initialize(e),{returnedBuckets:r}=t;this._processLayers(t),this._linkReferences(t),this._filterFeatures(t);const s=new Set,a={};for(const e of r)3===e.type&&e.getResources(e.tileClipper,s,a);if(this._tile.status===ae.INVALID)return i([]);const l=this._fetchResources(s,a,e);return n(l).then((()=>this._processFeatures(t.returnedBuckets)))}_initialize(e){return{signal:e&&e.signal,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,layers:r,zoom:i,sourceNameToTileClipper:n,sourceNameToUniqueSourceLayerBuckets:s,sourceNameToUniqueSourceLayers:a,returnedBuckets:l,layerIdToBucket:o,referencerUIDToReferencedId:c}=e;for(let e=r.length-1;e>=0;e--){const h=r[e];if(!this._canParseStyleLayer(h.uid)||h.minzoom&&i<Math.floor(h.minzoom)||h.maxzoom&&i>=h.maxzoom||0===h.type)continue;if(!t[h.source]||!n[h.source])continue;const x=t[h.source],u=n[h.source],f=h.sourceLayer,d=x[f];if(d){let e=a[h.source];if(e||(e=a[h.source]=new Set),e.add(h.sourceLayer),h.refLayerId)c.set(h.uid,h.refLayerId);else{const e=this._createBucket(h);if(e){e.layerUIDs=[h.uid],e.layerExtent=d.extent,e.tileClipper=u;let t=s[h.source];t||(t=s[h.source]={});let r=t[f];r||(r=t[f]=[]),r.push(e),l.push(e),o[h.id.toLowerCase()]=e}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:r}=e;r.forEach(((e,r)=>{e=e.toLowerCase(),t[e]&&t[e].layerUIDs.push(r)}))}_filterFeatures(e){const{signal:t,sourceNameToTileData:r,sourceNameToUniqueSourceLayerBuckets:i,sourceNameToUniqueSourceLayers:n}=e,a=10*this._level,l=10*(this._level+1),o=[],c=[];for(const e of Object.keys(n)){n[e].forEach((t=>{o.push(t),c.push(e)}))}for(let e=0;e<o.length;e++){const n=c[e],h=o[e];if(!r[n]||!i[n])continue;const x=r[n][h],u=i[n][h];if(!u||0===u.length)continue;if(s(t))return;const f=x.getData();for(;f.nextTag(2);){const e=f.getMessage(),t=new U(e,x);e.release();const r=t.values;if(r){const e=r._minzoom;if(e&&e>=l)continue;const t=r._maxzoom;if(t&&t<=a)continue}for(const e of u)e.pushFeature(t)}}}_fetchResources(e,t,r){const i=[],n=this._tile.getWorkerTileHandler();let s,a;e.size>0&&(s=n.fetchSprites(e,this._client,r),i.push(s));for(const e in t){const s=t[e];s.size>0&&(a=n.fetchGlyphs(this._tile.tileKey,e,s,this._client,r),i.push(a))}return i}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()));for(const e of t)e.processFeatures(e.tileClipper);return t}_parseTileData(e){const t={};for(const r of Object.keys(e)){const i=e[r],n={};for(;i.next();)switch(i.tag()){case 3:{const e=i.getMessage(),t=new Z(e);e.release(),n[t.name]=t;break}default:i.skip()}t[r]=n}return t}_createBucket(e){switch(e.type){case 0:return null;case 1:return this._createFillBucket(e);case 2:return this._createLineBucket(e);case 4:return this._createCircleBucket(e);case 3:return this._createSymbolBucket(e)}}_createFillBucket(e){return new j(e,this._level,new re(e.hasDataDrivenFill),new q,new ie(e.hasDataDrivenOutline),new q)}_createLineBucket(e){return new K(e,this._level,new te(e.hasDataDrivenLine),new q)}_createCircleBucket(e){return new O(e,this._level,new se,new q)}_createSymbolBucket(e){const t=this._tile;return new X(e,this._level,new ne(e.hasDataDrivenIcon),new q,new ne(e.hasDataDrivenText),new q,t.placementEngine,t.getWorkerTileHandler())}}class oe{constructor(e,t,r,i){this.status=ae.INITIALIZED,this.placementEngine=new z,this.tileKey=e,this.refKeys=t,this._workerTileHandler=r,this._styleRepository=i}release(){this.tileKey="",this.refKeys=null,this.status=ae.INITIALIZED,this._workerTileHandler=null}async parse(e,r,i){const n=i&&i.signal;if(t(n)){const e=()=>{n.removeEventListener("abort",e),this.status=ae.INVALID};n.addEventListener("abort",e)}let s;try{s=await this._parse(e,i)}catch(e){if(a(e))throw e;return{result:[],transferList:[]}}this.status=ae.READY;const l=[];for(const e of s){const t=e.serialize();l.push(t)}return{result:l,transferList:l.length<=r&&l}}setObsolete(){this.status=ae.INVALID}getLayers(){return this._workerTileHandler.getLayers()}getWorkerTileHandler(){return this._workerTileHandler}async _parse(e,t){const r=e.sourceName2DataAndRefKey;if(0===Object.keys(r).length)return[];this.status=ae.MODIFIED;return new le(r,this,t.client,this._styleRepository,e.styleLayerUIDs).parse(t)}}export default class{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},i()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(e,t){const{key:r}=e,i={};for(const t of Object.keys(e.sourceName2DataAndRefKey)){const r=e.sourceName2DataAndRefKey[t];i[t]=r.refKey}const n=new oe(r,i,this,this._styleRepository);try{return await n.parse(e,this._vectorTileLayerMaxBuffers,t)}catch(e){if(n.setObsolete(),n.release(),!a(e))throw e;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const t=this._styleRepository;for(const r of e){const e=r.type,i=r.data;switch(e){case 0:t.setPaintProperties(i.layer,i.paint);break;case 1:t.setLayoutProperties(i.layer,i.layout);break;case 3:t.deleteStyleLayer(i.layerName);break;case 2:t.setStyleLayer(i.layer,i.index)}}}setStyle(e){this._styleRepository=new V(e.style),this._spriteInfo={},this._glyphInfo={},this._vectorTileLayerMaxBuffers=e.vectorTileLayerMaxBuffers}fetchSprites(e,t,r){const n=[],s=this._spriteInfo;return e.forEach((e=>{void 0===s[e]&&n.push(e)})),0===n.length?i():t.invoke("getSprites",n,{signal:r&&r.signal}).then((e=>{for(const t in e){const r=e[t];s[t]=r}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,r,n,s){const a=[];let l=this._glyphInfo[t];return l?r.forEach((e=>{l[e]||a.push(e)})):(l=this._glyphInfo[t]=[],r.forEach((e=>a.push(e)))),0===a.length?i():n.invoke("getGlyphs",{tileID:e,font:t,codePoints:a},s).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(l[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}
