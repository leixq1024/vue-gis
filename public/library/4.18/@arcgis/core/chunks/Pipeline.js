/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"./ArrayPool.js";import{h as t}from"./object.js";import"./deprecate.js";import"../core/lang.js";import"../config.js";import{L as s,u as r,i,b as o,k as a,c as n,m as u}from"./Logger.js";import"./string.js";import"./metadata.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"./PropertyOrigin.js";import"../core/scheduling.js";import{throwIfAborted as c,isAbortError as l,all as d,throwIfNotAbortError as p,ignoreAbortErrors as m,createResolver as g,after as f}from"../core/promiseUtils.js";import"./Message.js";import y from"../core/Error.js";import"./ensureType.js";import{subclass as _}from"../core/accessorSupport/decorators/subclass.js";import{E as b}from"./Evented.js";import"../core/Collection.js";import"./collectionUtils.js";import"./JSONSupport.js";import"./Promise.js";import"./Loadable.js";import"../core/urlUtils.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./enumeration.js";import"./reader.js";import"./writer.js";import"./resourceExtension.js";import"./persistableUrlUtils.js";import v,{g as x}from"../geometry/SpatialReference.js";import"./locale.js";import"./number.js";import"../intl.js";import"../kernel.js";import j from"../request.js";import"./assets.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import{e as I}from"./Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalUser.js";import"../portal/Portal.js";import"./mathUtils2.js";import"./vec3f64.js";import"./common.js";import"./vec3.js";import"./mathUtils.js";import"../Camera.js";import"./colorUtils.js";import"../Color.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./domains.js";import"./arcadeOnDemand.js";import"../layers/support/fieldUtils.js";import"../popup/content/Content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/CustomContent.js";import"./date.js";import"../popup/support/FieldInfoFormat.js";import"../popup/FieldInfo.js";import"../popup/content/FieldsContent.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/support/ChartMediaInfoValue.js";import"./chartMediaInfoUtils.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/MediaContent.js";import"../popup/content/TextContent.js";import"../popup/content.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/RelatedRecordsInfo.js";import"./Identifiable.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../PopupTemplate.js";import"../symbols/Symbol.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol3DLayer.js";import"./screenUtils.js";import"./opacityUtils.js";import"./materialUtils.js";import"../symbols/edges/Edges3D.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./utils.js";import"./Symbol3DMaterial.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/patterns/StylePattern3D.js";import"../symbols/FillSymbol3DLayer.js";import"./colors.js";import"./Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/Symbol3D.js";import"./Thumbnail.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"./Symbol3DVerticalOffset.js";import"../symbols/LabelSymbol3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"./urlUtils.js";import"../symbols/PictureFillSymbol.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../symbols/support/jsonUtils.js";import"./uid.js";import"../Graphic.js";import"../core/Handles.js";import"./unitUtils.js";import{d as w,h as S,a as F}from"./diffUtils.js";import"../geometry/support/normalizeUtils.js";import"./MemCache.js";import"./ItemCache.js";import"./timeUtils.js";import T from"../TimeExtent.js";import"../Viewpoint.js";import{whenFalseOnce as C}from"../core/watchUtils.js";import{d as q}from"./arcgisLayerUrl.js";import"./fieldType.js";import"./mat4.js";import"./pe.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformationStep.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/projection.js";import{HandleOwner as M}from"../core/HandleOwner.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"../core/workers/Connection.js";import"./Scheduler.js";import{openWithPorts as R}from"../core/workers/workers.js";import"./mat3.js";import"./vec2.js";import"../layers/support/LOD.js";import k from"../layers/support/TileInfo.js";import"./zscale.js";import"./queryZScale.js";import"../layers/support/Field.js";import"../tasks/support/FeatureSet.js";import"./defaultsJSON.js";import E from"../layers/support/FieldsIndex.js";import"./DataLayerSource.js";import P from"../tasks/support/Query.js";import"../tasks/support/StatisticDefinition.js";import"./QueryEngineCapabilities.js";import{a as D,b as L}from"./OptimizedGeometry.js";import{c as A,u as U,o as O,p as G,n as Q,q as z,s as N,t as V}from"./featureConversionUtils.js";import{P as B}from"./pbf.js";import{a as X,b as Y}from"./pbfQueryUtils.js";import{f as H,a as J}from"./query.js";import"./aaBoundingBox.js";import"./Queue.js";import"./json.js";import{c as W,p as Z}from"./projectionSupport.js";import"./geojson.js";import"./clientSideDefaults.js";import{e as $}from"./ogcFeatureUtils.js";import"./TileKey.js";import{j as K}from"./definitions.js";import"./quantizationUtils.js";import"./mat2d.js";import"./mat2df32.js";import"./vec2f32.js";import"./number2.js";import"./mat2df64.js";import"./vec2f64.js";import"./viewpointUtils.js";import"./mat3f32.js";import ee from"../views/2d/ViewState.js";import{Q as te}from"./QueueProcessor.js";import{T as se}from"./TileInfoView.js";import"./isWebGL2Context.js";import"./RenderingContext.js";import"./visualVariablesUtils.js";import"./enums.js";import"./Utils10.js";import"./centroid.js";import{F as re}from"./FeatureSetReader.js";import"./quickselect.js";import{r as ie}from"./rbush.js";import{Q as oe}from"./QueryEngine.js";import"./utils11.js";import{S as ae,F as ne}from"./FeatureStore2D.js";import{F as ue,T as he,C as ce,A as le,a as de}from"./TileStore.js";import{C as pe}from"./CircularArray.js";import{S as me,c as ge}from"./createConnection.js";import"./visualVariablesUtils2.js";class fe{constructor(){this.hasFeatures=!1,this.fieldIndexMap=new Map,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.dateFields=new Set,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}hasFieldIndex(e){return this.fieldIndexMap.has(e)}isDateField(e){return this.dateFields.has(e)}getFieldIndex(e){return this.fieldIndexMap.get(e)}}function ye(e){const t=e.getLength(),s=e.pos()+t,r={name:"",isDate:!1};for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:r.name=e.getString();break;case 2:"esriFieldTypeDate"===Y(e.getEnum())&&(r.isDate=!0);break;default:e.skip()}return r}const _e=s.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF");function be(e){for(;e.next();)switch(e.tag()){case 1:return e.getMessage();default:e.skip()}return null}class ve extends re{constructor(e,t,s,r){super(e),this._hasNext=!1,this._isPoints=!1,this._isPolygons=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=r,this._reader=t,this._header=s,this._hasNext=s.hasFeatures,this._isPoints="esriGeometryPoint"===r,this._isPolygons="esriGeometryPolygon"===r}static fromBuffer(e,t){const s=function(e){try{const t=2,s=new B(new Uint8Array(e),new DataView(e));for(;s.next();)switch(s.tag()){case t:return be(s.getMessage());default:s.skip()}}catch(e){const t=new y("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});_e.error(t)}return null}(e),r=function(e,t){const s=e.pos(),r=new fe;let i=0,o=0,a=null,n=null,u=null,h=!1;for(;e.next();)switch(e.tag()){case 1:a=e.getString();break;case 3:n=e.getString();break;case 12:u=e.processMessage(X);break;case 9:r.exceededTransferLimit=e.getBool(),r.exceededTransferLimit&&(r.offsets.geometry=new Int32Array(8e3),r.centroid=new Int32Array(16e3));break;case 13:{const t=ye(e),s=t.name.toLowerCase().trim(),o=i++;r.fieldIndexMap.set(t.name,o),r.fieldIndexMap.set(s,o),t.isDate&&(r.dateFields.add(t.name),r.dateFields.add(s));break}case 15:{const s=e.getLength(),a=e.pos()+s;if(!r.exceededTransferLimit){const e=r.offsets.geometry,t=r.centroid;e.push(0),t.push(268435455),t.push(268435455)}!h&&r.exceededTransferLimit&&(h=!0,r.offsets.attributes=new Uint32Array(8e3*i));let n=o*i;for(;e.pos()<a&&e.next();)switch(e.tag()){case 1:{h?r.offsets.attributes[n++]=e.pos():r.offsets.attributes.push(e.pos());const t=e.getLength();e.skipLen(t);break}case 2:if(t){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 3:{e.getUInt32();const t=e.getSInt32(),s=e.getSInt32();r.centroid[2*o]=t,r.centroid[2*o+1]=s;break}default:e.skip()}}else{r.offsets.geometry[o]=e.pos();const t=e.getLength();e.skipLen(t)}break;case 4:{const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 3:{e.getUInt32();const t=e.getSInt32(),s=e.getSInt32();r.centroid[2*o]=t,r.centroid[2*o+1]=s;break}default:e.skip()}break}default:e.skip()}o++,r.hasFeatures=!0;break}default:e.skip()}const c=a||n;if(!c)throw new y("FeatureSet has no objectId or globalId field name");return r.featureCount=o,r.fieldCount=i,r.objectIdFieldIndex=r.getFieldIndex(c),r.transform=u,r.displayIds=new Uint32Array(r.featureCount),r.groupIds=new Uint16Array(r.featureCount),e.move(s),r}(s,"esriGeometryPoint"===t),i=re.createInstance();return new ve(i,s,r,t)}get geometryType(){return this._geometryType}get size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getApproximateSize(){if(this._hasFilter){const e=Math.abs(this._xmax-this._xmin)*Math.abs(this._ymax-this._ymin),t=this.size*e/262144;return Math.max(Math.round(t),0)}return this.size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fieldIndexMap.forEach((t=>{e+=this._readAttributeAtIndex(t)+"."})),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(void 0===this._cache.legacyFeature){var e;const t=this.readCentroid(),s={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:null!=(e=t&&{x:t.coords[0],y:t.coords[1]})?e:null};return this._cache.legacyFeature=s,s}return this._cache.legacyFeature}readOptimizedFeature(){if(void 0===this._cache.optFeature){const e=new D(this.readGeometry(),this.readAttributes(),this.readCentroid());return this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrate(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return e*t.scale[0]+t.translate[0]}getYHydrate(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return t.translate[1]-e*t.scale[1]}readLegacyPointGeometry(){return{x:this._header.centroid[2*this._featureIndex]+this._tx,y:this._header.centroid[2*this._featureIndex+1]+this._ty}}readLegacyGeometry(){const e=this.readGeometry();return A(e,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,s]=e.coords;return{x:t,y:s}}readGeometryArea(){return this._cache.area||this.readGeometry(),this._cache.area}readUnquantizedGeometry(){if(void 0===this._cache.unquantGeometry){const e=this.readGeometry();if(!e)return this._cache.unquantGeometry=null,null;const t=e.clone(),s=t.lengths,r=t.coords;for(let e=0,t=2;e<s.length;e++,t+=2){const i=s[e];for(let e=1;e<i;e+=1,t+=2)r[t]+=r[t-2],r[t+1]+=r[t-1]}return this._cache.unquantGeometry=t,t}return this._cache.unquantGeometry}readHydratedGeometry(){const e=this.readGeometry();if(!e)return null;const t=e.clone();return this._isPoints&&(t.coords[0]-=this._tx,t.coords[1]-=this._ty),U(t,t,this.hasZ,this.hasM,this.getQuantizationTransform()),t}readGeometry(){if(void 0===this._cache.geometry){let e=null;if(this._isPoints){const t=this._header.centroid[2*this._featureIndex]+this._tx,s=this._header.centroid[2*this._featureIndex+1]+this._ty;e=new L([],[t,s])}else{const t=this._header.offsets.geometry[this._featureIndex],s=this._reader;if(0===t)return null;s.move(t);try{e=this._parseGeometry(s)}catch(e){return console.error("Failed to parse geometry!",e),null}}return this._cache.geometry=e,e}return this._cache.geometry}readCentroid(){if(void 0===this._cache.centroid){let e=null;const t=this._header.centroid[2*this._featureIndex]+this._tx,s=this._header.centroid[2*this._featureIndex+1]+this._ty;return 268435455===t?(e=this._computeCentroid(),e&&(this._header.centroid[2*this._featureIndex]=e.coords[0]-this._tx,this._header.centroid[2*this._featureIndex+1]=e.coords[1]-this._ty)):e=new L([],[t,s]),this._cache.centroid=e,e}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new ve(this.instance,e,this._header,this.geometryType);return this.copyInto(t),t}next(){if(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,!this._hasFilter)return++this._featureIndex<this.size;for(;++this._featureIndex<this.size&&!this._passesFilter(););return this._featureIndex<this.size}_readAttribute(e,t){const s=this._header.hasFieldIndex(e)?e:function(e){return e.toLowerCase().trim()}(e),r=this._header.getFieldIndex(s);if(null==r)return;const i=this._readAttributeAtIndex(r);if(!t)return i;return this._header.isDateField(s)?new Date(i):i}_readAttributes(){const e={};return this._header.fieldIndexMap.forEach(((t,s)=>{e[s]=this._readAttributeAtIndex(t)})),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_passesFilter(){if(!this._hasFilter)return!0;let e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];if(268435455===e){if(this._isPolygons&&!this.readCentroid())return!1;e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1]}return e>=this._xmin&&e<=this._xmax&&t>=this._ymin&&t<=this._ymax}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;return s.move(t),function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:{const t=e.getString();return""===t?null:t}case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(s)}_preprocessPolygon(e,t){let s=0,r=0,i=0,o=!1,a=!1,n=!1,u=-1;const h=[];let c=0,l=!1;for(let d=0;d<t.length;d++){const p=t[d];let m=e[2*s],g=e[2*s+1],f=0;for(let t=1;t<p;t++){const r=m,i=g,o=m+e[2*(s+t)],a=g+e[2*(s+t)+1];m=o,g=a,f+=.5*((o-r)*(a+i))}const y=f>0;if(y&&l&&(r+=p),y||(u++,l=!1),u>=1e6)break;c+=f,o&&y&&a&&(n=!0);{e[2*i]=e[2*r],e[2*i+++1]=e[2*r+++1];let t=1,s=e[2*r],o=e[2*r+++1];for(let a=2;a<p;a++){const a=e[2*r],n=e[2*r+++1];s*n-a*o==0?(s+=a,o+=n):(e[2*i]=s,e[2*i+++1]=o,t++,s=a,o=n)}e[2*i]=s,e[2*i+++1]=o,t++,h.push(t)}o=!1,a=!0,s+=p}return h.length?(this._cache.area=Math.abs(c),new L(h,e,n)):null}_parseGeometry(e){const t=e.getLength(),s=e.pos()+t,r=[],i=[];for(;e.pos()<s&&e.next();)switch(e.tag()){case 2:{const t=e.getUInt32(),s=e.pos()+t;for(;e.pos()<s;)i.push(e.getUInt32());break}case 3:{const t=e.getUInt32(),s=e.pos()+t;for(;e.pos()<s;)r.push(e.getSInt32()),r.push(e.getSInt32()),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();break}case 1:default:e.skip()}let o=0;for(const e of i)r[2*o]+=this._tx,r[2*o+1]+=this._ty,o+=e;return this._isPolygons?this._preprocessPolygon(r,i):new L(i,r)}}class xe{constructor(e){this.service=e}destroy(){}}function je(e){const{capabilities:t}=e;return(s=e.source)&&s.capabilities&&s.collectionId&&s.layerDefinition&&s.url?new Fe(e):function(e){return Array.isArray(e.source)}(e)?new Ie(e):t.query.supportsFormatPBF?new we(e):new Se(e);var s}class Ie extends xe{constructor(e){super(e),this._portsOpen=R(e.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return ue.fromFeatureSet(s,this.service.objectIdField)}}class we extends xe{async executeQuery(e,t){const{data:s}=await H(this.service.source,e,{...t,query:{...this.service.customParameters,...null==t?void 0:t.query}});return ve.fromBuffer(s,this.service.geometryType)}}class Se extends xe{async executeQuery(e,t){const{source:s,capabilities:i,spatialReference:o,objectIdField:a}=this.service;if(e.quantizationParameters&&!i.query.supportsQuantization){const r=e.clone();r.quantizationParameters=null;const{data:i}=await J(s,r,o,{...t,query:{...this.service.customParameters,...null==t?void 0:t.query}}),n=O(i,a);return G(t.transform,n),ue.fromOptimizedFeatureSet(n)}const{data:n}=await J(s,e,this.service.spatialReference,{...t,query:{...r(this.service.customParameters),...null==t?void 0:t.query}});return ue.fromFeatureSet(n,this.service.objectIdField)}}class Fe extends xe{async executeQuery(e,t){const{capabilities:s}=this.service;if(e.quantizationParameters&&!s.query.supportsQuantization){e.clone().quantizationParameters=null;const s=await $(this.service.source,e,t);return G(t.transform,s),ue.fromOptimizedFeatureSet(s)}const r=await $(this.service.source,e,t);return ue.fromOptimizedFeatureSet(r)}}class Te{constructor(e){this._abortController=new AbortController,this.requests={pending:new Array,done:new Array},this.tile=e}get signal(){return this._abortController.signal}add(e){this.requests.done.push(e),e.request.end&&(this.resolved=!0)}abort(){this._abortController.abort()}}class Ce{constructor(e){this.events=new b,this._subscriptions=new Map,this._serviceQueryInfo={outSpatialReference:e.outSR},this._serviceInfo=e.serviceInfo,this._onRequest=e.onRequest}async queryLastEditDate(){throw new Error("Service does not support query type")}async query(e,t){throw new Error("Service does not support query")}get geometryType(){return this._serviceInfo.geometryType}update(e){w(e,this._sourceQueryInfo)&&(this._sourceQueryInfo=e)}updateSubscriptions(){}setViewState(e){}subscribe(e){const t=new Te(e);this._subscriptions.set(e.id,t)}unsubscribe(e){const t=this.get(e.id);i(t)&&t.abort(),this._subscriptions.delete(e.id)}pause(){}resume(){}get(e){return this._subscriptions.has(e)?this._subscriptions.get(e):null}enableEvent(e,t){}}const qe=s.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource");class Me extends Ce{constructor(e){super(e),this.type="feature",this._adapter=je(e.serviceInfo),this._queue=new te({concurrency:8,process:async e=>{c(e);const s=e.tile.key.id,{tile:r,signal:i}=e,o={query:t("esri-tiles-debug")?{tile:s.replace(/\//g,"."),depth:e.depth}:void 0,signal:i,transform:r.transform};return this._adapter.executeQuery(e.query,o)}}),this._patchQueue=new te({concurrency:8,process:async e=>{c(e);const s=e.tile.key.id,{tile:r,signal:i}=e,o={query:t("esri-tiles-debug")?{tile:s.replace(/\//g,"."),depth:e.depth}:void 0,signal:i,transform:r.transform};return this._adapter.executeQuery(e.query,o)}})}destroy(){this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()}setViewState(e){}get updating(){return!!this._queue.length}subscribe(e){super.subscribe(e),this._fetchDataTile(e).catch((t=>{l(t)||qe.error(new y("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t}))}))}unsubscribe(e){super.unsubscribe(e)}pause(){this._queue.pause()}resume(){this._queue.resume()}async query(e,t){return this._adapter.executeQuery(e,t)}async queryLastEditDate(){const e=this._serviceInfo.source,t={...e.query,f:"json"};return(await j(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate}forEachRequest(e,t){const s=this._subscriptions.get(e),{requests:r,signal:i}=s;for(const e of r.done)t(e.request,{signal:i})}async _executePatchQuery(e,t,s,r){const o=t.clone();o.outFields=[this._serviceInfo.objectIdField,...s],o.returnCentroid=!1,o.returnGeometry=!1;const a=i(o.start)?o.start/8e3:0,n=r.signal;return this._patchQueue.push({tile:e,query:o,signal:n,depth:a})}async _resendRequest(e,t){const{query:s,request:r}=e,a=i(s.outFields)?s.outFields:[],n=this._sourceQueryInfo.outFields,u=n.filter((e=>-1===a.indexOf(e)));if(!o(r.features))if(u.length)try{const e=await this._executePatchQuery(r.tile,s,u,t);c(t),s.outFields=n,r.features.joinAttributes(e),this._onRequest({...r,end:r.end||t.end},"new",t)}catch(e){}else this._onRequest({...r,end:r.end||t.end},"new",t)}async resend({dataTileOnly:e}){let t=0,s=!1;const r=[];for(this._subscriptions.forEach((e=>{if(!e.requests.done.length){const t=e.tile;this._onRequest({tile:t,id:t.id,features:null,noData:!0,end:!1},"new",{dataTileOnly:!0})}}));!s;)s=!0,this._subscriptions.forEach((({requests:i,signal:o})=>{if(i.done.length>t){s=!1;const a=i.done.length===t+1;r.push(this._resendRequest(i.done[t],{signal:o,dataTileOnly:e,end:a}))}})),t++;await d(r)}_createQuery(e,t){const s=new P({...this._serviceQueryInfo,...this._sourceQueryInfo,...t});return this._serviceInfo.capabilities.query.supportsQuantization||(t.quantizationParameters=null,s.maxAllowableOffset=e.resolution),t.quantizationParameters&&"esriGeometryPolyline"===this.geometryType&&(s.maxAllowableOffset=e.resolution),s.resultType="tile",s.geometry=e.extent,s}}const Re=t("esri-featurelayer-webgl"),ke=t("esri-mobile"),Ee={maxDrillLevel:Re&&"object"==typeof Re&&null!=Re.maxDrillLevel?Re.maxDrillLevel:ke?1:4,maxRecordCountFactor:Re&&"object"==typeof Re&&null!=Re.maxRecordCountFactor?Re.maxRecordCountFactor:ke?1:3};class Pe extends Me{constructor(e){super(e)}async _fetchDataTile(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,s=this._subscriptions.get(e.key.id),r=s.signal,i=e.getQuantizationParameters();let o=0;const a=async(n,u)=>{const h=this._sourceQueryInfo,d=this._createQuery(n,{maxRecordCountFactor:t?Ee.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:i});o++;try{const t=await this._queue.push({tile:e,query:d,signal:r,depth:u});if(o--,c(r),!t)return;if(h!==this._sourceQueryInfo)return void a(n,u);if(t.exceededTransferLimit&&u<Ee.maxDrillLevel){for(const e of n.createChildTiles())a(e,u+1);return}const i={tile:e,id:e.id,features:t,end:0===o};s.requests.done.push({query:d,request:i}),this._onRequest(i,"new")}catch(t){l(t)||this._onRequest({tile:e,id:e.id,features:null,end:!0},"new")}};a(e,0)}}function De(e,t){const s=e.weakClone(),r=N(t,e.geometry.coords[0]),i=V(t,e.geometry.coords[1]);return s.geometry=new L([],[r,i]),s}function Le(e,t){const s=ie(9,function(e){switch(e){case"esriGeometryPoint":return e=>({minX:e.geometry.coords[0],minY:e.geometry.coords[1],maxX:e.geometry.coords[0],maxY:e.geometry.coords[1]});default:return e=>{let t=1/0,s=1/0,r=-1/0,i=-1/0;return e.geometry.forEachVertex(((e,o)=>{t=Math.min(t,e),s=Math.min(s,o),r=Math.max(r,e),i=Math.max(i,o)})),{minX:t,minY:s,maxX:r,maxY:i}}}}(t));return s.load(e),s}function Ae(e,t){return e.search({minX:t.bounds[0],minY:t.bounds[1],maxX:t.bounds[2],maxY:t.bounds[3]})}class Ue{constructor(e,t){this.onUpdate=e,this._geometryType=t,this._objectIdToFeature=new Map}get _features(){const e=[];return this._objectIdToFeature.forEach((t=>e.push(t))),e}add(e){this._objectIdToFeature.set(e.objectId,e),this._index=null}get(e){return this._objectIdToFeature.has(e)?this._objectIdToFeature.get(e):null}forEach(e){this._objectIdToFeature.forEach(e)}search(e){return this._index||(this._index=Le(this._features,this._geometryType)),Ae(this._index,e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),this._index=null,t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._objectIdToFeature.size}}class Oe extends Ce{constructor(e){super(e),this.type="geoevent",this._dataReceiveEventEnabled=!1,this._updateInfo={websocket:0,client:0};const{outSR:t}=e,{geometryType:s,objectIdField:r,timeInfo:i,purgeOptions:o,source:a,spatialReference:n,serviceFilter:u,maxReconnectionAttempts:h,maxReconnectionInterval:c,updateInterval:l}=e.serviceInfo,d=new Ue(this._onUpdate.bind(this),s),p=new me(d,r,i,o),m=ge(a,n,t,s,u,h,c);this._store=d,this._manager=p,this._connection=m,this._quantize=function(e){switch(e){case"esriGeometryPoint":return De;case"esriGeometryPolygon":case"esriGeometryPolyline":default:return(t,s)=>{const r=t.weakClone(),i=new L,o=z(i,t.geometry,!1,!1,e,s,!1,!1);return r.geometry=o,r}}}(s),this._handles=[this._connection.on("feature",(e=>this._onFeature(e))),this._connection.watch("connectionStatus",(e=>this.events.emit("connectionStatus",e))),this._connection.watch("errorString",(e=>this.events.emit("errorString",e)))];let g=performance.now();this._updateIntervalId=setInterval((()=>{const t=performance.now(),s=t-g;if(s>2500){g=t;const e=Math.round(this._updateInfo.client/(s/1e3)),r=Math.round(this._updateInfo.websocket/(s/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.events.emit("updateRate",{client:e,websocket:r})}e.canAcceptRequest()&&this._manager.checkForUpdates()}),l)}destroy(){clearInterval(this._updateIntervalId),this._handles.forEach((e=>e.remove())),this._connection.destroy()}_fetchDataTile(){}enableEvent(e,t){"data-received"===e&&(this._dataReceiveEventEnabled=t)}get updating(){return!1}subscribe(e){super.subscribe(e);const t=this._getTileFeatures(e);this._onRequest({tile:e,id:e.key.id,features:t,end:!0},"new")}unsubscribe(e){super.unsubscribe(e)}forEachRequest(e,t){const s=this._subscriptions.get(e),{tile:r,signal:i}=s;t({tile:r,id:e,features:this._getTileFeatures(r),end:!0},{signal:i})}async resend(e){this._subscriptions.forEach((t=>{const{tile:s}=t,r={tile:s,id:s.id,features:this._getTileFeatures(s),end:!0};this._onRequest(r,"update",e)}))}_getTileFeatures(e){const t=this._store.search(e).map((t=>this._quantize(t,e.transform)));return ue.fromOptimizedFeatures(t,this.geometryType,e.transform)}_onFeature(e){this._updateInfo.websocket++;try{this._dataReceiveEventEnabled&&this.events.emit("feature",e);const t=Q(e,this.geometryType,!1,!1,this._serviceInfo.objectIdField);this._manager.add(t)}catch(e){}}async _onUpdate(e,t){const s=a(e,(e=>Le(e,this.geometryType))),r=a(t,(e=>Le(e,this.geometryType)));i(e)&&(this._updateInfo.client+=e.length),this._subscriptions.forEach(((e,t)=>{const i=e.tile,o=a(s,(e=>Ae(e,i))),u=a(o,(e=>e.map((e=>this._quantize(e,i.transform))))),h=a(u,(e=>ue.fromOptimizedFeatures(e,this.geometryType,i.transform))),c=a(r,(e=>Ae(e,i))),l=a(c,(e=>e.map((e=>e.objectId))));this._onRequest({tile:i,id:t,features:h,remove:n(l,[]),end:!0},"update")}))}}const Ge=s.getLogger("esri.views.2d.layers.features.sources.FeatureSource");class Qe extends Me{constructor(e){super(e)}async _fetchDataTile(e){const t=this._subscriptions.get(e.key.id);let s=!1,r=0,i=0;const o=(r,o)=>{i--,c(t);const a=r.reader,n=r.query;if(!a.exceededTransferLimit){if(s=!0,0!==o&&!a.hasFeatures){const s={tile:e,id:e.id,features:a,end:0===i};return t.requests.done.push({request:s,query:n}),void this._onRequest(s,"new")}const r={tile:e,id:e.id,features:a,end:0===i};return t.requests.done.push({request:r,query:n}),void this._onRequest(r,"new")}const u={tile:e,id:e.id,features:a,end:s&&0===i};t.requests.done.push({request:u,query:n}),this._onRequest(u,"new")};let a=0,n=0;for(;!s&&n++<20;){let n;for(let u=0;u<a+1;u++){const a=r++;i++,n=this._fetchDataTilePage(e,a,t).then((e=>e&&o(e,a))).catch((t=>{s=!0,l(t)||(Ge.error(new y("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t})),this._onRequest({tile:e,id:e.id,features:null,end:s},"new"))}))}await n,c(t),a=Math.min(a+2,6)}}async _fetchDataTilePage(e,t,s){const r=this._sourceQueryInfo,i=this._createQuery(e,{start:8e3*t,num:8e3,maxRecordCountFactor:3,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()});try{const o=s.signal,a=await this._queue.push({tile:e,query:i,signal:o,depth:t});return c(s),a?r!==this._sourceQueryInfo?this._fetchDataTilePage(e,t,s):{reader:a,query:i}:null}catch(e){return p(e),null}}}function ze(e,t,s,r,i){const o=function(e,t,s,r,i){switch(e.type){case"stream":return{type:"geoevent",serviceInfo:e,onRequest:r,outSR:t,canAcceptRequest:i};case"memory":case"on-demand":return{type:"feature",serviceInfo:e,onRequest:r,outSR:t,origin:o(e.source),tileInfoView:s,canAcceptRequest:i}}function o(e){return Array.isArray(e)?"local":"path"in e&&q(e.path)?"hosted":"unknown"}}(e,t,s,r,i);switch(o.type){case"feature":switch(o.origin){case"hosted":case"local":return new Qe(o);case"unknown":return new Pe(o)}case"geoevent":return new Oe(o)}}function Ne(e,t,s){const r=function(e,t,s){const r=e.clone(),i=1<<r.level,o=r.col+t,a=r.row+s;o<0&&o!==r.col?(r.col=o+i,r.world-=1):o>=i?(r.col=o-i,r.world+=1):r.col=o;return r.row=a,r}(e.key,t,s);return new he(e.tileInfoView,r)}class Ve{constructor(){this.source=!1,this.targets={feature:!1,aggregate:!1},this.storage={filters:!1,data:!1},this.mesh=!1,this.queryFilter=!1,this.why={mesh:[],source:[]}}static create(e){const t=new Ve;for(const s in e){const r=e[s];if("object"==typeof r)for(const e in r){const i=r[e];t[s][e]=i}t[s]=r}return t}static empty(){return Ve.create({})}static all(){return Ve.create({source:!0,targets:{feature:!0,aggregate:!0},storage:{filters:!0,data:!0},mesh:!0})}any(){return this.source||this.mesh||this.storage.filters||this.storage.data||this.targets.feature||this.targets.aggregate||this.queryFilter}describe(){let e=0,t="";if(this.mesh){e+=20,t+="-> (20) Mesh needs update\n";for(const e of this.why.mesh)t+=`    + ${e}\n`}if(this.source){e+=10,t+="-> (10) The source needs update\n";for(const e of this.why.source)t+=`    + ${e}\n`}this.targets.feature&&(e+=5,t+="-> (5) Feature target parameters changed\n"),this.storage.filters&&(e+=5,t+="-> (5) Feature filter parameters changed\n"),this.targets.aggregate&&(e+=4,t+="-> (4) Aggregate target parameters changed\n"),this.storage.data&&(e+=1,t+="-> (1) Texture storage parameters changed");const s=e<5?"Fastest":e<10?"Fast":e<15?"Moderate":e<20?"Slow":"Very Slow";console.debug(`Applying ${s} update of cost ${e}/45 `),console.debug(t)}toJSON(){return{source:this.source,targets:this.targets,storage:this.storage,mesh:this.mesh,queryFilter:this.queryFilter}}}let Be=0;class Xe{constructor(e,t){this.didSend=!1,this.dataTileCount=0,this.update=Ve.all(),this._abortController=new AbortController,this.invalid=!1,this.displayTile=e,this._pixelBuffer=t,this.partitions=He(e,t)}setUpdate(e,t){this.update=e,this.dataTileCount=0,t!==this._pixelBuffer&&(this._pixelBuffer=t,this.partitions=He(this.displayTile,t)),e.mesh&&(this.didSend=!1)}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class Ye{constructor(e,t,s){this.resolved=!1,this.tile=t,this.offset=e,this.extent=s}reset(){this.resolved=!1}}function He(e,t){const s=[];if(s.push(new Ye([0,0],e,null)),0===t)return s;const r=Math.min(t,K),i=K;return s.push(new Ye([-i,-i],Ne(e,-1,-1),[i-r,i-r,i,i])),s.push(new Ye([0,-i],Ne(e,0,-1),[0,i-r,i,i])),s.push(new Ye([i,-i],Ne(e,1,-1),[0,i-r,r,i])),s.push(new Ye([-i,0],Ne(e,-1,0),[i-r,0,i,i])),s.push(new Ye([i,0],Ne(e,1,0),[0,0,r,i])),s.push(new Ye([-i,i],Ne(e,-1,1),[i-r,0,i,r])),s.push(new Ye([0,i],Ne(e,0,1),[0,0,i,r])),s.push(new Ye([i,i],Ne(e,1,1),[0,0,r,r])),s}class Je{constructor(e,t,s){this.type="remote",this._pendingEdits=new Set,this._queryInfo=null,this._subscriptions={display:new Map},this._invalid={outFields:!1,queryFilterParameters:!1};const r=this._onDataTileRequest.bind(this);this._source=ze(e,t,s,r,(()=>this.canAcceptPatch())),this._serviceInfo=e,this._geometryType=e.geometryType,this._outSR=t}destroy(){this._getSubscriptions().map((({displayTile:e})=>this.unsubscribe(e))),this._source.destroy()}get updating(){return this._source.updating||this._getSubscriptions().some((e=>!e.didSend))}get isStream(){return"geoevent"===this._source.type}get sourceEvents(){return"geoevent"===this._source.type?{type:"geoevent",events:this._source.events}:{type:"feature",events:this._source.events}}enableEvent(e,t){this._source.enableEvent(e,t)}setViewState(e){this._source.setViewState(e)}update(e,s){var r,i,o,a;const n=this._serviceInfo.fields.length,u=null!=(r=null==(i=this._schema)?void 0:i.outFields)?r:[],h=null!=(o=null==(a=this._schema)?void 0:a.pixelBuffer)?o:0,c=s.outFields.filter((e=>-1===u.indexOf(e))),l=[...u,...c],d=0===s.pixelBuffer?0:Math.max(s.pixelBuffer,h);s.pixelBuffer=d,s.outFields=l.length>=.75*n?["*"]:l,s.outFields.sort();const p=w(this._schema,s);if(this._subscriptions.display.forEach((t=>{t.invalid&&(e.queryFilter=!0)})),!p)return;const m=this._schema&&S(p,"outFields"),g=this._schema&&S(p,"pixelBuffer"),f=this._schema&&F(p,["definitionExpression","gdbVersion","historicMoment"]);t("esri-2d-update-debug")&&console.debug("Applying Update - Source:",p);const y={returnCentroid:"esriGeometryPolygon"===this._geometryType,returnGeometry:!0,outFields:s.outFields,outSpatialReference:this._outSR,orderByFields:[`${this._serviceInfo.objectIdField} ASC`],where:s.definitionExpression||"1=1",gdbVersion:s.gdbVersion,historicMoment:s.historicMoment?new Date(s.historicMoment):null,timeExtent:T.fromJSON(s.timeExtent)};e.source=!0,g&&(e.why.mesh.push("Pixel buffer changed"),e.mesh=!0),f&&(e.why.mesh.push("Layer filter changed"),e.why.source.push("Layer filter changed"),e.mesh=!0,e.queryFilter=!0,this._invalid.queryFilterParameters=!0),m&&(e.why.source.push("Layer required fields changed"),this._invalid.outFields=!0),this._schema=s,this._source.update(y),this._queryInfo=y}subscribe(e){this._subscriptions.display.has(e.id)||this._subscribeDisplayTile(e)}unsubscribe(e){if(!this._subscriptions.display.has(e.id))return;const t=this._subscriptions.display.get(e.id);this._subscriptions.display.delete(e.id),this._source.unsubscribe(e),t.abort()}forEachRequest(e,t){this._source.forEachRequest(e,t)}query(e){return this._source.query(e)}createQuery(){return new P({...this._queryInfo})}createTileQuery(e){if("stream"===this._serviceInfo.type)throw new Error("Service does not support tile  queries");const t=this.createQuery();return t.quantizationParameters=e.getQuantizationParameters(),t.resultType="tile",t.geometry=e.extent,"esriGeometryPolyline"===this._serviceInfo.geometryType&&(t.maxAllowableOffset=e.resolution),this._serviceInfo.capabilities.query.supportsQuantization||(t.quantizationParameters=null,t.maxAllowableOffset=e.resolution),t}invalidate(){this._subscriptions.display.forEach((e=>e.invalid=!0))}forEachPendingEdit(e){this._getSubscriptions().some((({invalid:e})=>e))?this._pendingEdits.forEach(e):this._pendingEdits.clear()}async onEdits(e){const t=e.addedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),s=e.updatedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),r=e.deletedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),i=[...t,...s];r.forEach((e=>{this._pendingEdits.has(e)&&this._pendingEdits.delete(e)})),i.forEach((e=>this._pendingEdits.add(e)));const o=this._getSubscriptions().map((({displayTile:e})=>e)).map((e=>{const t=this.createTileQuery(e);return t.objectIds=i,{tile:e,query:t}})).map((async({tile:e,query:t})=>({tile:e,result:await this._source.query(t)})));(await d(o)).forEach((({tile:e,result:t})=>{const i=this._subscriptions.display.get(e.key.id);if(!i)return;const o=i.signal,a=Ve.all();this.onDisplayTilePatch({type:"update",id:e.key.id,version:Be++,update:a,addOrUpdate:t,remove:[...s,...r],end:!0,noData:!1},{signal:o})})),this.invalidate()}async resubscribe(e,t=!1){const s=this._schema.pixelBuffer;this._subscriptions.display.forEach((t=>t.setUpdate(e,s)));let r=!1;if(this._subscriptions.display.forEach((e=>{e.invalid&&(r=!0)})),this._invalid.outFields&&(this._invalid.outFields=!1),t||this._invalid.queryFilterParameters||r){const e=this._getSubscriptions().map((({displayTile:e})=>e));e.forEach((e=>this.unsubscribe(e))),e.forEach((e=>this.subscribe(e))),this._source.resume(),this._invalid.queryFilterParameters=!1}else e.mesh?await this._source.resend({dataTileOnly:!1}):await this._source.resend({dataTileOnly:!0})}pause(){this._source.pause()}resume(){this._source.resume()}_getSubscriptions(){const e=[];return this._subscriptions.display.forEach((t=>{e.push(t)})),e}_subscribeDisplayTile(e){const t=new Xe(e,this._schema.pixelBuffer);this._subscriptions.display.set(e.id,t),this._source.subscribe(e);for(const s of t.partitions){const t=s.tile,r=this._source.get(t.id);if(i(r))for(const t of r.requests.done)this._onPartitionMessage(e.id,s,t.request,"new")}}_onDataTileRequest(e,t,s){const r=this._subscriptions.display.get(e.id);if(s&&s.dataTileOnly){for(const s of r.partitions)if(s.tile.id===e.id){this._onPartitionMessage(e.id,s,e,t);break}}else{for(const s of r.partitions)if(s.tile.id===e.id){this._onPartitionMessage(e.id,s,e,t);break}this._subscriptions.display.forEach(((s,r)=>{if(r!==e.id)for(const i of s.partitions)if(i.tile.id===e.id){this._onPartitionMessage(r,i,e,t);break}}))}}_onPartitionMessage(e,t,s,r){const n=a(s.features,(e=>function(e,t){if(o(t.extent))return e;const{offset:s,extent:r}=t,[i,a,n,u]=r,[h,c]=s;return e.extent(i,a,n,u).transform(h,c)}(e,t))),u=this._subscriptions.display.get(e),h=u.signal;let c=u.update;u.didSend||(r="replace"),i(n)&&!n.seen&&(c=Ve.all(),n.seen=!0);let l=!1;s.end&&(t.resolved=!0,l=e===t.tile.id),u.didSend=!0,this.onDisplayTilePatch({type:r,id:e,version:Be++,update:c,addOrUpdate:n,remove:s.remove||[],noData:s.noData,end:l},{signal:h})}}function We(e,t,s,r){r%2&&(r+=1);let i=0,o=0,a=-90,n=90,u=-180,h=180;for(let e=0;e<r/2;e++){for(let t=0;t<5;t++){const r=(u+h)/2,o=s>r?1:0;i|=o<<29-(t+5*e),u=(1-o)*u+o*r,h=(1-o)*r+o*h}for(let s=0;s<5;s++){const r=(a+n)/2,i=t>r?1:0;o|=i<<29-(s+5*e),a=(1-i)*a+i*r,n=(1-i)*r+i*n}}e.geohashX=i,e.geohashY=o}function Ze(e,t,s,r,i){i%2&&(i+=1);let o=0,a=0,n=-90,u=90,h=-180,c=180;for(let e=0;e<i/2;e++){for(let t=0;t<5;t++){const s=(h+c)/2,i=r>s?1:0;o|=i<<29-(t+5*e),h=(1-i)*h+i*s,c=(1-i)*s+i*c}for(let t=0;t<5;t++){const r=(n+u)/2,i=s>r?1:0;a|=i<<29-(t+5*e),n=(1-i)*n+i*r,u=(1-i)*r+i*u}}e[2*t]=o,e[2*t+1]=a}class $e{constructor(e=[],t=8096){this._nodes=0,this._root=new Ke(0,0,0),this._statisticFields=e,this._pool=t?new pe(8096):null}_acquire(e,t,s){this._nodes++;let r=null;return i(this._pool)&&(r=this._pool.dequeue()),i(r)?r.realloc(e,t,s):new Ke(e,t,s)}_release(e){this._nodes--,i(this._pool)&&this._pool.enqueue(e)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return u(this._pool,0,(e=>e.size))}get depth(){let e=0;return this._forEachNode((t=>e=Math.max(e,t.depth))),e}dropLevels(e){this._forEachNode((t=>{if(t.depth>=e)for(let e=0;e<t.children.length;e++){const s=t.children[e];t.children[e]=null,s&&this._release(s)}}))}clear(){this.dropLevels(0)}insert(e,t,s=0){const r=ue.fromOptimizedFeatures([e],"esriGeometryPoint").getCursor();r.next();const i=r.readGeometry();if(!i)return;const[o,a]=i.coords,n=e.geohashX,u=e.geohashY;this.insertCursor(r,e.displayId,o,a,n,u,t,s)}insertCursor(e,t,s,r,i,o,a,n=0){let u=this._root,h=0,c=0,l=0;for(;null!==u;){if(u.depth>=n&&(u.count+=1,u.xTotal+=s,u.yTotal+=r,u.xGeohashTotal+=i,u.yGeohashTotal+=o,u.displayId=t,this._updateStatisticsCursor(e,u,1)),h>=a)return void u.add(t);const d=Math.ceil((h+1)/2),p=Math.floor((h+1)/2),m=1-h%2,g=30-(3*d+2*p),f=30-(2*d+3*p),y=(i&7*m+3*(1-m)<<g)>>g,_=(o&3*m+7*(1-m)<<f)>>f,b=y+_*(8*m+4*(1-m));c=c<<3*m+2*(1-m)|y,l=l<<2*m+3*(1-m)|_,null==u.children[b]&&(u.children[b]=this._acquire(c,l,h+1)),h+=1,u=u.children[b]}}remove(e,t){const s=ue.fromOptimizedFeatures([e],"esriGeometryPoint").getCursor();s.next();const r=s.readGeometry();if(!r)return;const[i,o]=r.coords,a=e.geohashX,n=e.geohashY;this.removeCursor(s,i,o,a,n,t)}removeCursor(e,t,s,r,i,o){let a=this._root,n=0;for(;null!==a;){if(a.count-=1,a.xTotal-=t,a.yTotal-=s,a.xGeohashTotal-=r,a.yGeohashTotal-=i,this._updateStatisticsCursor(e,a,-1),n>=o)return void a.remove(e.getDisplayId());const u=Math.ceil((n+1)/2),h=Math.floor((n+1)/2),c=1-n%2,l=30-(3*u+2*h),d=30-(2*u+3*h),p=((r&7*c+3*(1-c)<<l)>>l)+((i&3*c+7*(1-c)<<d)>>d)*(8*c+4*(1-c)),m=a.children[p];1===m.count&&(this._release(m),a.children[p]=null),n+=1,a=m}}find(e,t,s){return this._root.find(e,t,s,0,0,0)}findSingleOccupancyNode(e,t,s,r,i){let o=this._root;for(;null!==o;){const a=o.depth,n=o.xNode,u=o.yNode,h=1-a%2,c=o.xGeohashTotal/o.count,l=o.yGeohashTotal/o.count;if(1===o.count&&e<c&&c<=s&&t<l&&l<=r)return o;if(a>=i){o=o.next;continue}const d=Math.ceil((a+1)/2),p=Math.floor((a+1)/2),m=30-(3*d+2*p),g=30-(2*d+3*p),f=~((1<<m)-1),y=~((1<<g)-1),_=(e&f)>>m,b=(t&y)>>g,v=(s&f)>>m,x=(r&y)>>g,j=n<<3*h+2*(1-h),I=u<<2*h+3*(1-h),w=j+8*h+4*(1-h),S=I+4*h+8*(1-h),F=Math.max(j,_),T=Math.max(I,b),C=Math.min(w,v),q=Math.min(S,x);let M=null,R=null;for(let e=T;e<=q;e++)for(let t=F;t<=C;t++){const s=t-j+(e-I)*(8*h+4*(1-h)),r=o.children[s];r&&(M||(M=r,M.next=o.next),R&&(R.next=r),R=r,r.next=o.next)}o=M||o.next}return null}getRegionDisplayIds(e,t,s,r,i){let o=this._root;const a=[];for(;null!==o;){const n=o.depth,u=o.xNode,h=o.yNode;if(n>=i){const i=o.xGeohashTotal/o.count,n=o.yGeohashTotal/o.count;e<=i&&i<=s&&t<=n&&n<=r&&o.displayIds.forEach((e=>a.push(e))),o=o.next;continue}const c=Math.ceil((n+1)/2),l=Math.floor((n+1)/2),d=1-n%2,p=30-(3*c+2*l),m=30-(2*c+3*l),g=~((1<<p)-1),f=~((1<<m)-1),y=(e&g)>>p,_=(t&f)>>m,b=(s&g)>>p,v=(r&f)>>m,x=u<<3*d+2*(1-d),j=h<<2*d+3*(1-d),I=x+8*d+4*(1-d),w=j+4*d+8*(1-d),S=Math.max(x,y),F=Math.max(j,_),T=Math.min(I,b),C=Math.min(w,v);let q=null,M=null;for(let e=F;e<=C;e++)for(let t=S;t<=T;t++){const s=t-x+(e-j)*(8*d+4*(1-d)),r=o.children[s];r&&(q||(q=r,q.next=o.next),M&&(M.next=r),M=r,r.next=o.next)}o=q||o.next}return a}getRegionStatistics(e,t,s,r,i){let o=this._root,a=0,n=0,u=0;const h={};let c=0;for(;null!==o;){const l=o.depth,d=o.xNode,p=o.yNode;if(l>=i){const i=o.xGeohashTotal/o.count,l=o.yGeohashTotal/o.count;e<i&&i<=s&&t<l&&l<=r&&(a+=o.count,n+=o.xTotal,u+=o.yTotal,1===o.count&&(c=o.displayId),this._aggregateStatistics(h,o.statistics)),o=o.next;continue}const m=Math.ceil((l+1)/2),g=Math.floor((l+1)/2),f=1-l%2,y=30-(3*m+2*g),_=30-(2*m+3*g),b=~((1<<y)-1),v=~((1<<_)-1),x=(e&b)>>y,j=(t&v)>>_,I=(s&b)>>y,w=(r&v)>>_,S=d<<3*f+2*(1-f),F=p<<2*f+3*(1-f),T=S+8*f+4*(1-f),C=F+4*f+8*(1-f),q=Math.max(S,x),M=Math.max(F,j),R=Math.min(T,I),k=Math.min(C,w);let E=null,P=null;for(let i=M;i<=k;i++)for(let l=q;l<=R;l++){const d=l-S+(i-F)*(8*f+4*(1-f)),p=o.children[d];if(p){if(i!==M&&i!==k&&l!==q&&l!==R){const i=p.xGeohashTotal/p.count,o=p.yGeohashTotal/p.count;e<i&&i<=s&&t<o&&o<=r&&(a+=p.count,n+=p.xTotal,u+=p.yTotal,1===p.count&&(c=p.displayId),this._aggregateStatistics(h,p.statistics));continue}E||(E=p,E.next=o.next),P&&(P.next=p),P=p,p.next=o.next}}o=E||o.next}return{count:a,attributes:this._normalizeStatistics(h,a),xTotal:n,yTotal:u,referenceId:c}}_forEachNode(e){let t=this._root;for(;null!==t;){const s=this._linkChildren(t)||t.next;e(t),t=s}}_linkChildren(e){let t=null,s=null;for(let r=0;r<=e.children.length;r++){const i=e.children[r];i&&(t||(t=i,t.next=e.next),s&&(s.next=i),s=i,i.next=e.next)}return t}_updateStatisticsCursor(e,t,s){for(const r of this._statisticFields){const i=r.name,o=r.inField?e.readAttribute(r.inField):e.getComputedNumericAtIndex(r.inFieldIndex);switch(r.statisticType){case"norm":{t.statistics[i]||(t.statistics[i]={});const a=r.inNormalizationField,n=e.readAttribute(a),u=t.statistics[i].onStatisticField||0,h=t.statistics[i].onStatisticNormalizationField||0;null==o||isNaN(o)||null==n||0===n||isNaN(n)||(t.statistics[i].onStatisticField=u+s*o,t.statistics[i].onStatisticNormalizationField=h+s*n);break}case"sum":case"avg":{t.statistics[i]||(t.statistics[i]={value:0,nanCount:0});const e=t.statistics[i].value,r=t.statistics[i].nanCount;null==o||isNaN(o)?t.statistics[i].nanCount=r+s:t.statistics[i].value=e+s*o;break}case"avg_angle":{t.statistics[i]||(t.statistics[i]={x:0,y:0,nanCount:0});const e=t.statistics[i].x,r=t.statistics[i].y,a=t.statistics[i].nanCount,n=Math.PI/180;null==o||isNaN(o)?t.statistics[i].nanCount=a+s:(t.statistics[i].x=e+s*Math.cos(o*n),t.statistics[i].y=r+s*Math.sin(o*n));break}case"mode":{t.statistics[i]||(t.statistics[i]={});const e=t.statistics[i][o]||0;t.statistics[i][o]=e+s;break}}}}_aggregateStatistics(e,t){for(const s of this._statisticFields){const r=s.name;switch(s.statisticType){case"sum":case"avg":case"avg_angle":case"mode":case"norm":e[r]||(e[r]={});for(const s in t[r]){const i=e[r][s]||0;e[r][s]=i+t[r][s]}}}}_normalizeStatistics(e,t){const s={};for(const r of this._statisticFields){const i=r.name;switch(r.statisticType){case"norm":{const r=e[i];if(t&&null==r.onStatisticNormalizationField)break;if(t&&r.onStatisticNormalizationField){s[i]=r.onStatisticField/r.onStatisticNormalizationField;break}s[i]=0;break}case"sum":{if(!t)break;const{value:r,nanCount:o}=e[i];if(!(t-o))break;s[i]=r;break}case"avg":{if(!t)break;const{value:r,nanCount:o}=e[i];if(!(t-o))break;s[i]=r/(t-o);break}case"avg_angle":{if(!t)break;const{x:r,y:o,nanCount:a}=e[i];if(!(t-a))break;const n=r/(t-a),u=o/(t-a),h=180/Math.PI,c=Math.atan2(u,n)*h;s[i]=c;break}case"mode":{const t=e[i];let r=0,o=null;for(const e in t){const s=t[e];s>r&&(r=s,o=e)}s[i]="null"===o?null:o;break}}}return s}}class Ke{constructor(e,t,s){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this.children=new Array(32);for(let e=0;e<this.children.length;e++)this.children[e]=null;this.xNode=e,this.yNode=t,this.depth=s}realloc(e,t,s){for(let e=0;e<this.children.length;e++)this.children[e]=null;return this.xNode=e,this.yNode=t,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}add(e){this.displayIds.add(e)}remove(e){this.displayIds.delete(e)}getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s);return function(e,t){let s=-90,r=90,i=-180,o=180;for(let a=0;a<t;a++){const t=Math.ceil((a+1)/2),n=Math.floor((a+1)/2),u=1-a%2,h=30-(3*t+2*n),c=30-(2*t+3*n),l=3*u+2*(1-u),d=2*u+3*(1-u),p=3*u+7*(1-u)<<c,m=(7*u+3*(1-u)<<h&e.geohashX)>>h,g=(p&e.geohashY)>>c;for(let e=l-1;e>=0;e--){const t=(i+o)/2,s=m&1<<e?1:0;i=(1-s)*i+s*t,o=(1-s)*t+s*o}for(let e=d-1;e>=0;e--){const t=(s+r)/2,i=g&1<<e?1:0;s=(1-i)*s+i*t,r=(1-i)*t+i*r}}return[i,s,o,r]}({geohashX:this.xNode<<r,geohashY:this.yNode<<i},this.depth)}find(e,t,s,r,i,o){if(r>=s)return this;const a=1-r%2,n=3*a+2*(1-a),u=2*a+3*(1-a),h=30-i-n,c=30-o-u,l=((e&7*a+3*(1-a)<<h)>>h)+((t&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),d=this.children[l];return null==d?null:d.find(e,t,s,r+1,i+n,o+u)}}class et extends D{constructor(e,t,s,r,i){super(new L([],[t,s]),r,null,e),this.geohashBoundsInfo=i}get count(){return this.attributes.cluster_count}static create(e,t,s,r,i,o,a,n){const u=new et(t,s,r,o,a);return u.displayId=e.createDisplayId(!0),u.referenceId=n,u.tileLevel=i,u}update(e,t,s,r,i,o){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=i,this.referenceId=null,this.referenceId=o,this}toJSON(){return{objectId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null,attributes:{...this.attributes,clusterId:this.objectId},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function tt(e){return 57.29577951308232*e}class st extends ae{constructor(e,t,s){super(e,s),this.events=new b,this._geohashLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=W(t,v.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}async updateSchema(e,s){const r=this._schema;try{await super.updateSchema(e,s),await this._projectionSupportCheck}catch(e){}const i=w(r,s);e.mesh&&(e.targets.aggregate=!0),s&&(!o(i)||e.source||e.storage.filters)&&((S(i,"params.fields")||!this._tree||e.source)&&(this._tree=new $e(this._statisticFields),this._rebuildTree(),t("esri-2d-update-debug")&&console.debug("Aggregate mesh needs update due to tree changing")),t("esri-2d-update-debug")&&console.debug("Applying Update - ClusterStore:",i),e.mesh=!0,e.targets[s.name]=!0,this._aggregateValueRanges={})}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepClusters(e,t,s){this._clusters.forEach(((r,i)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(i))}))}onTileData(e,t,s,r,i){if(!this._schema||o(t.addOrUpdate))return t;const a=this._tree,n=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,r,a)}if(!i)return t;const u=new Array,h=this._schema.params.clusterRadius;this._getClustersForTile(u,e,h,s,a,n),t.type="replace"===t.type?"replace":"update",t.addOrUpdate=ue.fromOptimizedFeatures(u,"esriGeometryPoint"),t.addOrUpdate._storage=s;{const r=t.addOrUpdate.getCursor();for(;r.next();){const t=r.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(s,r,t,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit("valueRangesChanged",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){let t=null;return this._clusters.forEach((s=>{s&&s.displayId===e&&(t=s.toJSON())})),t}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);if(!t)return[];const s=t.geohashBoundsInfo;return this._tree.getRegionDisplayIds(s.xLL,s.yLL,s.xTR,s.yTR,s.level)}getDisplayIdForReferenceId(e){let t;return this._clusters.forEach((s=>{s&&s.referenceId===e&&(t=s.displayId)})),t}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){this._clusters.forEach(((t,s)=>{t&&e(t,s)}))}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._bitsets.geohash.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrate(),r=e.getYHydrate(),i=this._geohashBuf[2*t],o=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,i,o,this._geohashLevel))}_update(e,t,s){const r=e.getDisplayId(),i=this._bitsets.inserted,o=t.isVisible(r);if(o===i.has(r))return;if(!o)return void this._remove(e);const a=e.getXHydrate(),n=e.getYHydrate();if(!this._setGeohash(r,a,n))return;const u=this._geohashBuf[2*r],h=this._geohashBuf[2*r+1];s.insertCursor(e,r,a,n,u,h,this._geohashLevel),i.set(r)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const i=tt(t/I.radius),o=i-360*Math.floor((i+180)/360);Ze(r,e,tt(Math.PI/2-2*Math.atan(Math.exp(-1*s/I.radius))),o,12)}else{const i=Z({x:t,y:s},this._spatialReference,v.WGS84);if(!i)return!1;Ze(r,e,i.y,i.x,12)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,s,r,n,u,h=!0){const c=this._schema.params.clusterPixelBuffer,l=2*s,d=this._getGeohashLevel(t.key.level),p=Math.ceil(Math.pow(2,t.key.level)*K/l),m=Math.ceil(c/l)+0,g=Math.ceil(K/l),{row:f,col:y}=t.key,_=y*K,b=f*K,v=Math.floor(_/l)-m,x=Math.floor(b/l)-m,j=v+g+2*m,I=x+g+2*m,w=t.tileInfoView.getLODInfoAt(t.key.level);for(let s=v;s<=j;s++)for(let c=x;c<=I;c++){let l=s;w.wrap&&(l=s<0?s+p:s%p);const m=w.wrap&&s<0,g=w.wrap&&s%p!==s,f=this._lookupCluster(r,w,t.key.level,l,c,d,n);if(i(f)){const t=a(u,(e=>m?e.left:g?e.right:e.tile));if(h&&o(t))continue;if(!f.count)continue;if(i(t)&&h){const s=f.geometry.clone();let r=f.attributes;s.coords[0]=N(t,s.coords[0]),s.coords[1]=V(t,s.coords[1]),1===f.count&&i(f.referenceId)&&(r={...f.attributes,referenceId:f.referenceId});const o=new D(s,r);o.displayId=f.displayId,e.push(o)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),12)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=1*(Math.floor(t/1)+1)-1;if(this._geohashLevel!==s)return this._geohashLevel=s,void this._rebuildTree()}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=x(t);if(!r)return{tile:s,left:null,right:null};const[i,o]=r.valid;return{tile:s,left:{...s,translate:[o,e.bounds[3]]},right:{...s,translate:[i-o+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,i=2*r;let o=s%2?t*i:t*i-r;const a=s*i;let n=o+i;const u=a-i,h=Math.pow(2,e.level)*K;e.wrap&&o<0&&(o=0),e.wrap&&n>h&&(n=h);const c=o/K,l=a/K,d=n/K,p=u/K;return[e.getXForColumn(c),e.getYForRow(l),e.getXForColumn(d),e.getYForRow(p)]}_lookupCluster(e,t,s,r,o,a,n){const u=this._getClusterId(s,r,o),h=this._clusters.get(u),[c,l,d,p]=this._getClusterBounds(t,r,o),m={x:c,y:l},g={x:d,y:p};let f=0,y=0,_=0,b=0;if(this._spatialReference.isWebMercator){{const e=tt(m.x/I.radius);f=e-360*Math.floor((e+180)/360),y=tt(Math.PI/2-2*Math.atan(Math.exp(-1*m.y/I.radius)))}{const e=tt(g.x/I.radius);_=e-360*Math.floor((e+180)/360),b=tt(Math.PI/2-2*Math.atan(Math.exp(-1*g.y/I.radius)))}}else{const e=Z(m,this._spatialReference,v.WGS84),t=Z(g,this._spatialReference,v.WGS84);if(!e||!t)return null;f=e.x,y=e.y,_=t.x,b=t.y}const x={geohashX:0,geohashY:0},j={geohashX:0,geohashY:0};We(x,y,f,a),We(j,b,_,a);const w=x.geohashX,S=x.geohashY,F=j.geohashX,T=j.geohashY,C={xLL:w,yLL:S,xTR:F,yTR:T,level:a},q=n.getRegionStatistics(w,S,F,T,a),{count:M,xTotal:R,yTotal:k,referenceId:E}=q,P=M?R/M:0,D=M?k/M:0;if(0===M)return this._clusters.set(u,null),null;const L={cluster_count:M,...q.attributes},A=i(h)?h.update(P,D,s,L,C,E):et.create(e,u,P,D,s,L,C,E);return 0===M&&(A.geometry.coords[0]=(c+d)/2,A.geometry.coords[1]=(l+p)/2),this._clusters.set(u,A),this._updateAggregateValueRangeForCluster(A,A.tileLevel),A}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,i=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(i,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&i===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(K/s),{row:i,col:o}=e.key,a=o*K,n=i*K,u=Math.floor(a/s),h=Math.floor(n/s);for(let t=u;t<u+r;t++)for(let s=h;s<h+r;s++)this._markForDeletion(e.key.level,t,s)}}function rt(e){if(!l(e)&&!function(e){return"worker:port-closed"===e.name}(e))throw e}let it=class extends M{constructor(){super(...arguments),this._storage=new ce,this._markedIdsBufId=this._storage.createBitset(),this._lastCleanup=performance.now(),this._cleanupNeeded=!1,this._invalidated=!1,this._tileToResolver=new Map,this.tileStore=null,this.config=null,this.processor=null,this.remoteClient=null,this.service=null,this._editing=!1}initialize(){this._initAttributeStore(),this._initStores(),this._initQueryEngine(),this._initSource(),this._updateQueue=new te({concurrency:4,process:(e,t)=>this._onDisplayTilePatch(e,{signal:t})}),this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),this.watch("updating",(e=>!e&&this.onIdle()))])}async startup(){this._initAttributeStore()}_initSource(){this._source=new Je(this.service,this.spatialReference,this.tileStore.tileScheme),this._source.onDisplayTilePatch=(e,t)=>(this._invalidated=!0,this._patchTile(e,t)),this._source.canAcceptPatch=()=>this._updateQueue.length<50;const e=this._source.sourceEvents;if("geoevent"===e.type){const t=e.events;this.handles.add([t.on("connectionStatus",(e=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:e}).catch(rt))),t.on("errorString",(e=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:e}).catch(rt))),t.on("feature",(e=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(rt))),t.on("updateRate",(e=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...e}}).catch(rt)))])}}_initAttributeStore(){this.attributeStore?this.attributeStore.invalidateResources():this.attributeStore=new le({type:"remote",initialize:(e,t)=>m(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.initialize",e,{signal:t}).catch(rt)),update:(e,t)=>m(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.requestUpdate",e,{signal:t}).catch(rt)),render:e=>m(this.remoteClient.invoke("tileRenderer.featuresView.requestRender",void 0,{signal:e}).catch(rt))},this.config)}_initStores(){const e={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new ne(e,this._storage),this.aggregateStore=new st(e,this.spatialReference,this._storage),this.handles.add(this.aggregateStore.events.on("valueRangesChanged",(e=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:e.valueRanges}}).catch(rt)})))}_initQueryEngine(){var e;const t=this;null==(e=this.queryEngine)||e.destroy(),this.queryEngine=new oe({definitionExpression:this.config.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds:e=>t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map((e=>t.getObjectId(e)))},timeInfo:this.service.timeInfo})}destroy(){this._updateQueue.destroy(),this._source.destroy(),this.queryEngine.destroy(),this.attributeStore&&this.attributeStore.destroy()}get fieldsIndex(){return new E(this.service.fields)}get hasAggregates(){return!!this.config.schema.targets.aggregate}get spatialReference(){return this.tileStore.tileScheme.spatialReference}get updating(){return this.isUpdating()}isUpdating(){return this._source.updating||!!this._updateQueue.length}enableEvent(e){this._source.enableEvent(e.name,e.value)}async invalidate(e){if(!e.any())return;t("esri-2d-update-debug")&&e.describe();const s=this.tileStore.tiles.map((({key:e})=>{const t=g();return this._tileToResolver.set(e.id,t),t.promise})),r=this._updateQueue.takeAll();this._updateQueue.resume(),this.hasAggregates&&e.mesh&&e.targets.aggregate&&!e.queryFilter?this._repushAggregateMeshTiles(e):(this._source.resubscribe(e),d(s).then((()=>{this._source.resume()})),e.mesh&&await C(this,"updating")),this.notifyChange("updating"),await d(s),this._updateQueue.pause();for(const e of r)this._patchTile(e);e.source&&(this._cleanupNeeded=!0)}resume(){return this._updateQueue.resume(),this._source.resume()}async update(e,t,s=!1){this._editing&&await C(this,"updating"),s&&(this._source.pause(),this._updateQueue.pause()),this._set("config",t),this._schema=t.schema,this._initQueryEngine(),await d([this._source.update(e,t.schema.source),this.featureStore.updateSchema(e,t.schema.targets.feature),this.attributeStore.update(e,t),this.attributeStore.updateFilters(e,this)]),await this.aggregateStore.updateSchema(e,t.schema.targets.aggregate)}async refresh(){this._source.resubscribe(Ve.all(),!0),this._cleanupNeeded=!0,this.notifyChange("updating"),await C(this,"updating",!0)}onTileUpdate(e){this.aggregateStore.onTileUpdate(e);for(const t of e.added)this._source.subscribe(t),this._level=t.level;for(const t of e.removed)this._source.unsubscribe(t),this._cleanupNeeded=!0,this._tileToResolver.has(t.id)&&(this._tileToResolver.get(t.id).resolve(),this._tileToResolver.delete(t.id));this.notifyChange("updating")}onIdle(){this.hasAggregates&&this._invalidated&&(this._repushAggregateMeshTiles(),this._invalidated=!1),this._markAndSweep()}async onEdits(e){if(this._editing)return await C(this,"updating"),await f(16),this.onEdits(e);this._editing=!0;try{await this._source.onEdits(e),await C(this,"updating")}catch(e){}this._editing=!1}queryExtent(e){return this.queryEngine.executeQueryForExtent(e)}queryFeatures(e){return this.queryEngine.executeQuery(e)}queryFeatureCount(e){return this.queryEngine.executeQueryForCount(e)}queryLatestObservations(e){return this.queryEngine.executeQueryForLatestObservations(e)}queryObjectIds(e){return this.queryEngine.executeQueryForIds(e)}async queryStatistics(){return{...this.featureStore.storeStatistics,displayedFeatureCount:0,displayedVertexCount:0,displayPreProcessTime:0}}getObjectId(e){return this.featureStore.lookupObjectId(e,this._storage)}getDisplayId(e){if(this._schema.targets.aggregate){const t=this.aggregateStore.getDisplayId(e);if(o(t)){const t=this.featureStore.lookupDisplayId(e);return this.aggregateStore.getDisplayIdForReferenceId(t)}return t}return this.featureStore.lookupDisplayId(e)}getFeature(e){const t=this.featureStore.lookupFeatureByDisplayId(e,this._storage);if(o(t))return null;const s=t.readHydratedGeometry(),r=A(s,t.geometryType,t.hasZ,t.hasM);return{attributes:t.readAttributes(),geometry:r}}getAggregate(e){return this.aggregateStore.getAggregate(e)}async setHighlight(e){const t=e.map((e=>this.getDisplayId(e)));return this.attributeStore.setHighlight(e,t)}_repushAggregateMeshTiles(e){for(const t of this.tileStore.tiles)this._patchTile({type:"replace",id:t.key.id,addOrUpdate:ue.fromOptimizedFeatures([],this.service.geometryType),remove:[],end:!0,noData:!1,update:e||Ve.create({mesh:!0,targets:{aggregate:!0}})})}_maybeForceCleanup(){performance.now()-this._lastCleanup>5e3&&this._markAndSweep()}_patchTile(e,t){const s=this._updateQueue.push(e,t).then((()=>{this.notifyChange("updating")})).catch((e=>{this.notifyChange("updating")}));return this.notifyChange("updating"),s}async _onDisplayTilePatch(e,t){c(t);const s=this.tileStore.get(e.id);if(!s)return;const r=e.update;e.remove.length&&(this._cleanupNeeded=!0);const i=[];for(const t of e.remove)i.push(this.featureStore.lookupDisplayId(t));e.remove=i;try{if(o(e.addOrUpdate))return this.processor.onTileData(s,{...e,addOrUpdate:null},t).catch((e=>{p(e)})),void this._finishedPatch(e);e.addOrUpdate._storage=this._storage;const i=e.addOrUpdate.hasFilter(),a=e.addOrUpdate.instance;e.addOrUpdate._arcadeSpatialReference=this.spatialReference,(!this.featureStore.hasInstance(a)||r.targets.feature&&!i)&&this.featureStore.onTileData(s,e,this._storage),!r.storage.data&&!r.storage.filters||i||(this.attributeStore.onTileData(s,e),this._source.isStream?await this.attributeStore.sendUpdates():this.attributeStore.sendUpdates()),this.hasAggregates&&r.targets.aggregate&&(this.aggregateStore.onTileData(s,e,this._storage,this.attributeStore,r.mesh),r.mesh&&(this.attributeStore.onTileData(s,e),await this.attributeStore.sendUpdates())),r.mesh&&await this.processor.onTileData(s,e,t),this._maybeForceCleanup(),this._finishedPatch(e)}catch(e){p(e)}}_finishedPatch(e){if((e.noData||e.end)&&this._tileToResolver.has(e.id)){this._tileToResolver.get(e.id).resolve(),this._tileToResolver.delete(e.id)}}_markAndSweep(){if(this._lastCleanup=performance.now(),!this._cleanupNeeded&&!this._source.isStream)return;this._cleanupNeeded=!1;const e=this._storage.getBitset(this._markedIdsBufId),t=new Set;e.clear();const s=s=>{const r=this.featureStore.lookupDisplayId(s),i=(4294901760&this._storage.getInstanceId(r))>>>16;r&&(t.add(i),e.set(r))};for(const e of this.tileStore.tiles)this._source.forEachRequest(e.key.id,(e=>{if(o(e.features))return;const t=e.features.getCursor();for(;t.next();){const e=t.getObjectId();s(e)}}));this._source.forEachPendingEdit((e=>s(e))),this._updateQueue.forEach((e=>{for(const t of e.remove)s(t)})),this.config.schema.targets.aggregate&&(this.aggregateStore.sweepFeatures(e,this.featureStore),this.aggregateStore.sweepClusters(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(e,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(t)}};e([h({constructOnly:!0})],it.prototype,"tileStore",void 0),e([h()],it.prototype,"config",void 0),e([h({readOnly:!0,dependsOn:["service"]})],it.prototype,"fieldsIndex",null),e([h()],it.prototype,"processor",void 0),e([h({constructOnly:!0})],it.prototype,"remoteClient",void 0),e([h({constructOnly:!0})],it.prototype,"service",void 0),e([h({dependsOn:["tileStore"]})],it.prototype,"spatialReference",null),e([h()],it.prototype,"updating",null),it=e([_("esri.views.2d.layers.features.controllers.FeatureController2D")],it);var ot=it;const at=new Set;function nt(){return at}let ut=class extends M{constructor(){super(...arguments),this.controller=null,this.processor=null,this.remoteClient=null,this.tileStore=null,this.service=null,this.viewState=null}initialize(){this.handles.add(this.watch("updating",(e=>{this.remoteClient.invoke("setUpdating",e).catch((e=>{}))})))}destroy(){var e,t,s;null==(e=this.controller)||e.destroy(),null==(t=this.processor)||t.destroy(),null==(s=this.tileStore)||s.destroy(),this.controller=this.processor=this.tileStore=this.remoteClient=null}get updating(){return!this.controller||this.controller.updating}async startup({service:e,config:t,tileInfo:s}){if(this.service=e,!this.tileStore){const e=new se(k.fromJSON(s));this.tileStore=new de(e)}await this._configure(t),this.tileStore.clear()}async updateTiles(e){this.tileStore.updateTiles(e)}async update({config:e,pause:t}){const s=Ve.empty();return await d([this.processor.update(s,e),this.controller.update(s,e,t)]),s.toJSON()}async invalidate(e){const t=Ve.create(e),s=this.controller.invalidate(t);return await this.remoteClient.invoke("setUpdating",this.updating),s}setViewState(e){const t=ee.fromJSON(e);this._set("viewState",t)}async _configure(e){await d([this._handleControllerConfig(e),this._handleProcessorConfig(e)]),this.controller.processor=this.processor,await this.update({config:e})}async _handleControllerConfig(e){const t=await this._createController(this.service,e);return await t.startup(),t}async _handleProcessorConfig(e){return this._createProcessor(this.service,e)}async _createController(e,t){this.controller&&this.controller.destroy();const{tileStore:s,remoteClient:r}=this,i=new ot({service:e,config:t,tileStore:s,remoteClient:r});return this.controller=i,i}async _createProcessor(e,t){const s=t.schema.processors[0].type,r=(await(i=s,"heatmap"===i?import("./HeatmapProcessor.js"):import("./SymbolProcessor.js"))).default;var i;const{remoteClient:o,tileStore:a}=this,n=new r({service:e,config:t,tileStore:a,remoteClient:o});return this.processor&&this.processor.destroy(),this.processor=n,n}};e([h()],ut.prototype,"controller",void 0),e([h()],ut.prototype,"processor",void 0),e([h({dependsOn:["controller.updating"]})],ut.prototype,"updating",null),e([h()],ut.prototype,"viewState",void 0),ut=e([_("esri.views.2d.layers.features.Pipeline")],ut);var ht=ut;export default ht;export{nt as getInstances};
