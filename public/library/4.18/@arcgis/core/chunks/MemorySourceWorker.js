/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import"./tslib.es6.js";import"./ArrayPool.js";import"./object.js";import"./deprecate.js";import"../core/lang.js";import"../config.js";import"./Logger.js";import"./string.js";import"./metadata.js";import"../core/accessorSupport/decorators/property.js";import"../core/Accessor.js";import"./PropertyOrigin.js";import"../core/scheduling.js";import{all as e}from"../core/promiseUtils.js";import"./Message.js";import t from"../core/Error.js";import"./ensureType.js";import"../core/accessorSupport/decorators/subclass.js";import"./Evented.js";import"./JSONSupport.js";import"../core/urlUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./jsonMap.js";import"./enumeration.js";import"./reader.js";import"./writer.js";import"./resourceExtension.js";import{W as i}from"../geometry/SpatialReference.js";import"../kernel.js";import"../request.js";import"./assets.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"./Ellipsoid.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Extent.js";import"./mathUtils2.js";import"./vec3f64.js";import"./common.js";import"./vec3.js";import"./zmUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import{getJsonType as s,isPoint as r}from"../geometry/support/jsonUtils.js";import"../geometry.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./domains.js";import"./arcadeOnDemand.js";import{getFieldDefaultValue as o}from"../layers/support/fieldUtils.js";import"./unitUtils.js";import"../geometry/support/normalizeUtils.js";import"./MemCache.js";import"./ItemCache.js";import"../core/watchUtils.js";import{k as n}from"./fieldType.js";import"./mat4.js";import"./pe.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformationStep.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/projection.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./Scheduler.js";import"./defaultsJSON.js";import a from"../layers/support/FieldsIndex.js";import"./QueryEngineCapabilities.js";import"./OptimizedGeometry.js";import{l,m as p,n as u}from"./featureConversionUtils.js";import"./aaBoundingBox.js";import"./json.js";import{c as d,p as m}from"./projectionSupport.js";import{b as c,c as y,a as f}from"./clientSideDefaults.js";import"./quantizationUtils.js";import"./centroid.js";import"./quickselect.js";import"./rbush.js";import{F as j}from"./FeatureStore.js";import"./optimizedFeatureQueryEngineAdapter.js";import{Q as h}from"./QueryEngine.js";import"./utils11.js";import{l as g,a as b,m as I,c as F,s as _}from"./sourceUtils.js";const E=i,x={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:i},T={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function q(e){return r(e)?null!=e.z:!!e.hasZ}function R(e){return r(e)?null!=e.m:!!e.hasM}export default class{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(e){const i=[],{features:s}=e,r=this._inferLayerProperties(s,e.fields),l=e.fields||[],p=null!=e.hasM?e.hasM:r.hasM,u=null!=e.hasZ?e.hasZ:r.hasZ,m=!e.spatialReference&&!r.spatialReference,g=m?E:e.spatialReference||r.spatialReference,b=m?x:null,I=e.geometryType||r.geometryType,F=!I;let _=e.objectIdField||r.objectIdField,q=e.timeInfo;if(!F&&(m&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!I))throw new t("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!_)throw new t("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(r.objectIdField&&_!==r.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${_}" doesn't match the field name "${r.objectIdField}", found in the provided fields`}),_=r.objectIdField),_&&!r.objectIdField){let e=null;l.some((t=>t.name===_&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):l.unshift({alias:_,name:_,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const e of l){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new t("feature-layer:invalid-field-name","field name is missing",{field:e});if(e.name===_&&(e.type="esriFieldTypeOID"),-1===n.jsonValues.indexOf(e.type))throw new t("feature-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e})}const R={};this._requiredFields=[];for(const e of l)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=o(e);e.nullable||void 0!==t?R[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new a(l),this._createDefaultAttributes=c(R,_),q){if(q.startTimeField){const e=this._fieldsIndex.get(q.startTimeField);e?(q.startTimeField=e.name,e.type="esriFieldTypeDate"):q.startTimeField=null}if(q.endTimeField){const e=this._fieldsIndex.get(q.endTimeField);e?(q.endTimeField=e.name,e.type="esriFieldTypeDate"):q.endTimeField=null}if(q.trackIdField){const e=this._fieldsIndex.get(q.trackIdField);e?q.trackIdField=e.name:(q.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:q}}))}q.startTimeField||q.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:q}}),q=null)}const D={warnings:i,featureErrors:[],layerDefinition:{...T,drawingInfo:y(I),templates:f(R),extent:b,geometryType:I,objectIdField:_,fields:l,hasZ:!!u,hasM:!!p,timeInfo:q},assignedObjectIds:{}};if(this._queryEngine=new h({fields:l,geometryType:I,hasM:p,hasZ:u,objectIdField:_,spatialReference:g,featureStore:new j({geometryType:I,hasM:p,hasZ:u}),timeInfo:q}),!s||!s.length)return this._nextObjectId=1,D;const O=s.reduce(((e,t)=>{const i=t.attributes&&t.attributes[_];return null==i||isNaN(i)||!isFinite(i)?e:Math.max(e,i)}),0);return this._nextObjectId=1+O,await d(s,g),this._loadInitialFeatures(D,s)}async applyEdits(t){const{spatialReference:i,geometryType:s}=this._queryEngine;return await e([g(i,s),d(t.adds,i),d(t.updates,i)]),this._applyEdits(t)}async queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}_inferLayerProperties(e,t){let i,r,o=null,n=null,a=null;for(const t of e){const e=t.geometry;if(e&&(o||(o=s(e)),n||(n=e.spatialReference),null==i&&(i=q(e)),null==r&&(r=R(e)),o&&n&&null!=i&&null!=r))break}if(t&&t.length){let e=null;t.some((t=>{const i="esriFieldTypeOID"===t.type,s=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,i||s}))&&(a=e.name)}return{geometryType:o,spatialReference:n,objectIdField:a,hasM:r,hasZ:i}}_loadInitialFeatures(e,t){const{geometryType:i,hasM:r,hasZ:o,objectIdField:n,spatialReference:a,featureStore:p}=this._queryEngine,u=[];for(const r of t){if(null!=r.uid&&(e.assignedObjectIds[r.uid]=-1),r.geometry&&i!==s(r.geometry)){e.featureErrors.push(b("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),o=I(this._fieldsIndex,this._requiredFields,t,r.attributes,!0,e.warnings);o?e.featureErrors.push(o):(this._assignObjectId(t,r.attributes,!0),r.attributes=t,null!=r.uid&&(e.assignedObjectIds[r.uid]=r.attributes[n]),r.geometry&&(r.geometry=m(r.geometry,r.geometry.spatialReference,a)),u.push(r))}if(p.addMany(l([],u,i,o,r,n)),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:i}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}_applyEdits(e){const{adds:t,updates:i,deletes:s}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),i&&i.length&&this._applyUpdateEdits(r,i),s&&s.length){for(const e of s)r.deleteResults.push(F(e));this._queryEngine.featureStore.removeManyById(s)}return{fullExtent:this._queryEngine.fullExtent,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:i}=e,{geometryType:r,hasM:o,hasZ:n,objectIdField:a,spatialReference:p,featureStore:u}=this._queryEngine,d=[];for(const o of t){if(o.geometry&&r!==s(o.geometry)){i.push(b("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=I(this._fieldsIndex,this._requiredFields,t,o.attributes);if(n)i.push(n);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,null!=o.uid){const t=o.attributes[a];e.uidToObjectId[o.uid]=t}o.geometry&&(o.geometry=m(_(o.geometry,p),o.geometry.spatialReference,p)),d.push(o),i.push(F(o.attributes[a]))}}u.addMany(l([],d,r,n,o,a))}_applyUpdateEdits({updateResults:e},t){const{geometryType:i,hasM:r,hasZ:o,objectIdField:n,spatialReference:a,featureStore:l}=this._queryEngine;for(const d of t){const{attributes:t,geometry:c}=d,y=t&&t[n];if(null==y){e.push(b(`Identifier field ${n} missing`));continue}if(!l.has(y)){e.push(b(`Feature with object id ${y} missing`));continue}const f=p(l.getFeature(y),i,o,r);if(c){if(i!==s(c)){e.push(b("Incorrect geometry type."));continue}f.geometry=m(_(c,a),c.spatialReference,a)}if(t){const i=I(this._fieldsIndex,this._requiredFields,f.attributes,t);if(i){e.push(i);continue}}l.add(u(f,i,o,r,n)),e.push(F(y))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&t&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}}
