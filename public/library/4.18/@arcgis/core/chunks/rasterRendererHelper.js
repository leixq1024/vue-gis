/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{i as e,u as r}from"./Logger.js";import{all as t,resolve as n}from"../core/promiseUtils.js";import o from"../core/Error.js";import a from"../Color.js";import i from"../tasks/support/MultipartColorRamp.js";import"./unitUtils.js";import"../renderers/support/ClassBreakInfo.js";import{P as s,c as l}from"./colorRampUtils.js";import c from"../renderers/RasterColormapRenderer.js";import u from"../renderers/RasterStretchRenderer.js";import m from"../renderers/support/UniqueValueInfo.js";import d from"../renderers/UniqueValueRenderer.js";import f from"../layers/support/PixelBlock.js";import h from"../renderers/VectorFieldRenderer.js";import"../rasterRenderers.js";import{open as p}from"../core/workers/workers.js";import w from"../layers/support/RasterInfo.js";import"./ClassBreaksDefinition.js";class b{constructor(){this._workerThread=null,this._destroyed=!1}async initialize(){const e=await p("RasterWorker");this._destroyed?e.close():this._workerThread=e}destroy(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)}async decode(e,r){if(!this._workerThread)throw new o("raster-jobhandler:no-connection","no available worker connection");const t=await this._workerThread.invoke("decode",e,r);return t?new f(t):null}async symbolize(e,r){if(!this._workerThread)throw new o("raster-jobhandler:no-connection","no available worker connection");const t={extent:e.extent&&e.extent.toJSON(),pixelBlock:e.pixelBlock.toJSON(),simpleStretchParams:e.simpleStretchParams,bandIds:e.bandIds},n=await this._workerThread.invoke("symbolize",t,r);return n?new f(n):null}async updateSymbolizer(e,r){var n;if(!this._workerThread)throw new o("raster-jobhandler:no-connection","no available worker connection");const a=null==e||null==(n=e.rendererJSON)?void 0:n.histograms;await t(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:e.toJSON(),histograms:a},r))}async stretch(e,r){if(!this._workerThread)throw new o("raster-jobhandler:no-connection","no available worker connection");if(null==e||!e.pixelBlock)return null;const t={srcPixelBlock:e.pixelBlock.toJSON(),stretchParams:e.stretchParams},n=await this._workerThread.invoke("stretch",t,r);return n?new f(n):null}async split(e,r){if(!this._workerThread)throw new o("raster-jobhandler:no-connection","no available worker connection");if(null==e||!e.pixelBlock)return null;const t={srcPixelBlock:e.pixelBlock.toJSON(),tileSize:e.tileSize,maximumPyramidLevel:e.maximumPyramidLevel},a=await this._workerThread.invoke("split",t,r);return a&&a.forEach(((e,r)=>{a.set(r,e?f.fromJSON(e):null)})),n(a)}async estimateStatisticsHistograms(e,r){if(!this._workerThread)throw new o("raster-jobhandler:no-connection","no available worker connection");if(null==e||!e.pixelBlock)return null;const t={srcPixelBlock:e.pixelBlock.toJSON()},a=await this._workerThread.invoke("estimateStatisticsHistograms",t,r);return n(a)}async mosaicAndTransform(e,r){var t;if(!this._workerThread)throw new o("raster-jobhandler:no-connection","no available worker connection");if(null==e||null==(t=e.srcPixelBlocks)||!t.length)return null;const n={...e,srcPixelBlocks:e.srcPixelBlocks.map((e=>e?e.toJSON():null))},a=await this._workerThread.invoke("mosaicAndTransform",n,r);return a?new f(a):null}}const k=i.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),v=i.fromJSON(s[0]);function g(t,n){const{attributeTable:o,colormap:i,dataType:s}=t;if("vector-uv"===s||"vector-magdir"===s)return new h;if(e(i)){const n=function(t){if(!_(t))return null;let n;const{attributeTable:o,colormap:a}=t;if(e(o)){const e=S(o,"value"),r=j(o);"string"===r.type&&(n={},o.features.forEach((t=>{const o=t.attributes;n[o[e.name]]=r?o[r.name]:o[e.name]})))}return c.createFromColormap(r(a),n)}(t);if(e(n))return n}if(e(o)){const r=function(e,r){if(!C(e,r))return null;const{attributeTable:t}=e,n=j(t,r),o=S(t,"red"),i=S(t,"green"),s=S(t,"blue"),c=[],u=new Set,f=!!(o&&i&&s);if(t.features.forEach((e=>{const r=e.attributes[n.name];u.has(e.attributes[n.name])||null==r||(u.add(r),c.push(new m({value:e.attributes[n.name],label:e.attributes[n.name],symbol:{type:"simple-fill",style:"solid",outline:null,color:new a(f?[e.attributes[o.name],e.attributes[i.name],e.attributes[s.name],1]:[0,0,0,0])}})))})),!f){const e=l(v,c.length);c.forEach(((r,t)=>r.symbol.color=new a(e[t].slice(1,4))))}return new d({field:n.name,uniqueValueInfos:c})}(t);if(e(r))return r}return function(t,n){var o,a,i,s;t=function(t,n){if(null==n)return t;let o=r(t.statistics),a=r(t.histograms);const{multidimensionalInfo:i}=t;if(n&&e(i)){const{statistics:e,histograms:r}=i.variables.find((e=>e.name===n));null!=e&&e.length&&(o=e),null!=r&&r.length&&(a=r)}return w.fromJSON({...t.toJSON(),statistics:o,histograms:a})}(t,null==n?void 0:n.variableName);const{bandCount:l}=t;let{bandIds:c,stretchType:m}=n||{};null!=(o=c)&&o.some((e=>e>=l))&&(c=null);let d=r(t.statistics),f=r(t.histograms);if(l>1){var h;c=null!=(h=c)&&h.length?c:x(t),d=null==d?null:c.map((e=>d[e])),f=null==f?null:c.map((e=>f[e]))}else c=[0];null==m&&(m=function(r){let t="percent-clip";const{pixelType:n,dataType:o,histograms:a,statistics:i}=r;"u8"!==n||"processed"!==o&&e(a)&&e(i)?"u8"===n||"elevation"===o||"scientific"===o?t="min-max":e(a)?t="percent-clip":e(i)&&(t="min-max",t="min-max"):t="none";return t}(t));let p=!1;switch(m){case"none":p=!1;break;case"percent-clip":p=!(null!=(a=f)&&a.length);break;default:p=!(null!=(i=d)&&i.length)}const b=1===(null==(s=c)?void 0:s.length)&&"scientific"===t.dataType?k:null,v=new u({stretchType:m,dynamicRangeAdjustment:p,colorRamp:b,outputMin:0,outputMax:255,gamma:1===c.length?[1]:[1,1,1],useGamma:!1});"percent-clip"===m?v.maxPercent=v.minPercent=.25:"standard-deviation"===m&&(v.numberOfStandardDeviations=2);p||("percent-clip"===m?v.histograms=f:"min-max"!==m&&"standard-deviation"!==m||(v.statistics=d));return v}(t,n)}function y(r){const t=["raster-stretch"];return _(r)&&t.push("raster-colormap"),C(r)&&t.push("unique-value"),function(r){const{attributeTable:t,bandCount:n}=r;return 1===n&&(e(t)||e(r.histograms))}(r)&&t.push("class-breaks"),function(e){return"elevation"===e.dataType}(r)&&t.push("raster-shaded-relief"),function(e){const{dataType:r}=e;return"vector-uv"===r||"vector-magdir"===r}(r)&&t.push("vector-field"),t}function T(e,r,t){const n=["nearest","bilinear","cubic","majority"].find((e=>e===(null==t?void 0:t.toLowerCase())));if("Map"===r)return null!=n?n:"bilinear";return"thematic"===e.dataType||e.attributeTable||e.colormap?"nearest"===n||"majority"===n?n:"nearest":null!=n?n:"bilinear"}function x(e){const r=e.bandCount;if(1===r)return null;if(2===r)return[0];const t=e.keyProperties&&e.keyProperties.BandProperties;let n;if(t&&t.length===r){const{red:e,green:r,blue:o,nir:a}=function(e){const r={};for(let n=0;n<e.length;n++){var t;const o=e[n],a=null==(t=o.BandName)?void 0:t.toLowerCase();if("red"===a)r.red=n;else if("green"===a)r.green=n;else if("blue"===a)r.blue=n;else if("nearinfrared"===a||"nearinfrared_1"===a||"nir"===a)r.nir=n;else if(o.WavelengthMax&&o.WavelengthMin){const e=o.WavelengthMin,t=o.WavelengthMax;null==r.blue&&e>=410&&e<=480&&t>=480&&t<=540?r.blue=n:null==r.green&&e>=490&&e<=560&&t>=560&&t<=610?r.green=n:null==r.red&&e>=595&&e<=670&&t>=660&&t<=730?r.red=n:null==r.nir&&e>=700&&e<=860&&t>=800&&t<=950&&(r.nir=n)}}return r}(t);null!=e&&null!=r&&null!=o?n=[e,r,o]:null!=a&&null!=e&&null!=r&&(n=[a,e,r])}return!n&&r>=3&&(n=[0,1,2]),n}function j(e,r){let t=e.fields.find((e=>"string"===e.type&&(r===e.name.toLowerCase()||e.name.toLowerCase().indexOf("class")>-1)));return t||(t=e.fields.find((e=>"string"===e.type)),t||(t=S(e,"value"))),t}function S(e,r){return e.fields.find((e=>e.name.toLowerCase()===r))}function C(r,t){const{attributeTable:n,bandCount:o}=r;if(!e(n)||o>1)return!1;if(t){if(null==n.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1}return!0}function _(r){const{bandCount:t,colormap:n}=r;return e(n)&&n.length&&1===t}export{b as R,x as a,T as b,g as c,y as g};
