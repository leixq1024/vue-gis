/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{i as e}from"./Logger.js";import{all as r}from"../core/promiseUtils.js";import t from"../geometry/SpatialReference.js";import"../geometry.js";let a;async function s(){return a||(a=(async()=>{const e=await import("./arcadeUtils.js").then((function(e){return e.aq}));return await e.arcade.load(),{arcade:e.arcade,arcadeUtils:e,Dictionary:e.Dictionary,Feature:e.arcadeFeature}})()),a}const i=(e,r,t)=>o.create(e,r,t,null,["$feature"]),c=(e,r,t)=>o.create(e,r,t,null,["$feature","$view"]),n=(e,r,t,a)=>o.create(e,r,t,a,["$feature","$view"]);class o{constructor(e,r,t,a,s,i,c,n){this.script=e,this.evaluate=s,this.fields=c,this._syntaxTree=a,this._arcade=r,this._arcadeDictionary=t,this._arcadeFeature=i,this._spatialReference=n,this._referencesGeometry=r.scriptTouchesGeometry(this._syntaxTree),this._referencesScale=this._arcade.referencesMember(this._syntaxTree,"scale")}static async create(a,i,c,n,l,u){const{arcade:p,Feature:f,Dictionary:d}=await s(),h=t.fromJSON(i),m=p.parseScript(a,u),y=l.reduce(((e,r)=>({...e,[r]:null})),{});let _=null;e(n)&&(_=new d(n),_.immutable=!0,y.$config=null);const F=p.scriptUsesGeometryEngine(m)&&p.enableGeometrySupport(),w=p.scriptUsesFeatureSet(m)&&p.enableFeatureSetSupport(),S=p.scriptIsAsync(m)&&p.enableAsyncSupport(),b={vars:y,spatialReference:h,useAsync:!!S},g=new d;g.immutable=!1,g.setField("scale",0);const $=p.compileScript(m,b);return await r([F,w,S]),new o(a,p,d,m,(e=>("$view"in e&&e.$view&&(g.setField("scale",e.$view.scale),e.$view=g),_&&(e.$config=_),$({vars:e,spatialReference:h}))),new f,c,h)}repurposeFeature(e){return e.geometry&&!e.geometry.spatialReference&&(e.geometry.spatialReference=this._spatialReference),this._arcadeFeature.repurposeFromGraphicLikeObject(e.geometry,e.attributes,{fields:this.fields}),this._arcadeFeature}repurposeAdapter(e){return this._arcadeFeature.repurposeFromAdapter(e,{fields:this.fields}),this._arcadeFeature}createDictionary(){return new this._arcadeDictionary}referencesMember(e){return this._arcade.referencesMember(this._syntaxTree,e)}referencesFunction(e){return this._arcade.referencesFunction(this._syntaxTree,e)}referencesGeometry(){return this._referencesGeometry}referencesScale(){return this._referencesScale}extractFieldLiterals(e){return this._arcade.extractFieldLiterals(this._syntaxTree,e)}}export{o as A,c as a,i as b,n as c,s as l};
