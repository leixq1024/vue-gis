/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"./object.js";import{i as r}from"./Logger.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import{reject as a,all as s,eachAlways as o}from"../core/promiseUtils.js";import i from"../core/Error.js";import"./ensureType.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"./resourceExtension.js";import{l}from"./arcadeOnDemand.js";import{c as m}from"./drapedUtils.js";import{a as u,g as c}from"./popupUtils.js";const n=n=>{let d=class extends n{async fetchPopupFeatures(e,t){const{layer:p}=this;if(!e)return a(new i("mapimagelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:p}));const l=this.get("view.scale"),n=[],d=async e=>{const a=0===e.minScale||l<=e.minScale,s=0===e.maxScale||l>=e.maxScale;if(e.visible&&a&&s)if(e.sublayers)e.sublayers.forEach(d);else if(e.popupEnabled){const a=c(e,{...t,defaultPopupTemplateEnabled:!1});r(a)&&n.push({sublayer:e,popupTemplate:a})}},y=p.sublayers.toArray().map(d);await s(y);const f=n.map((async({sublayer:a,popupTemplate:s})=>{await a.load().catch((()=>{}));const o=a.createQuery(),i=r(t)?t.event:null,p=m({renderer:a.renderer,event:i}),l=this.createFetchPopupFeaturesQueryGeometry(e,p);o.geometry=l,o.outFields=await u(a,s);const c=await this._loadArcadeModules(s);c&&c.arcadeUtils.hasGeometryOperations(s)||(o.maxAllowableOffset=l.width/p);return(await a.queryFeatures(o)).features}));return(await o(f)).reduce(((e,r)=>r.value?[...e,...r.value]:e),[]).filter((e=>null!=e))}canResume(){var e,r;return!!super.canResume()&&(null==(e=this.imageParameters)||null==(r=e.timeExtent)||!r.isEmpty)}_loadArcadeModules(e){if(e.get("expressionInfos.length"))return l()}};return e([t()],d.prototype,"imageParameters",void 0),e([t()],d.prototype,"layer",void 0),e([t({dependsOn:["imageParameters.timeExtent"]})],d.prototype,"suspended",void 0),d=e([p("esri.views.layers.MapImageLayerView")],d),d};export{n as M};
