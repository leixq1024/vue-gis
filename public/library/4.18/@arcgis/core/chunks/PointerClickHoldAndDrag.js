/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{c as t}from"../core/promiseUtils.js";import{c as e}from"./screenUtils.js";import{I as i}from"./InputManager.js";function n(t,e){return Math.abs(e.x-t.x)+Math.abs(e.y-t.y)}function r(t,i){if(i?(i.radius=0,i.center.x=0,i.center.y=0):i={radius:0,center:e()},0===t.length)return i;if(1===t.length)return i.center.x=t[0].x,i.center.y=t[0].y,i;if(2===t.length){const[e,n]=t,[r,o]=[n.x-e.x,n.y-e.y];return i.radius=Math.sqrt(r*r+o*o)/2,i.center.x=(e.x+n.x)/2,i.center.y=(e.y+n.y)/2,i}let n=0,r=0;for(let e=0;e<t.length;e++)n+=t[e].x,r+=t[e].y;n/=t.length,r/=t.length;const o=t.map((t=>t.x-n)),s=t.map((t=>t.y-r));let a=0,h=0,l=0,m=0,g=0,u=0,c=0;for(let t=0;t<o.length;t++){const e=o[t],i=s[t],n=e*e,r=i*i;a+=n,h+=r,l+=e*i,m+=n*e,g+=r*i,u+=e*r,c+=i*n}const d=.5*(m+u),p=.5*(g+c),v=a*h-l*l,D=(d*h-p*l)/v,_=(a*p-l*d)/v,f=e(D+n,_+r);return{radius:Math.sqrt(D*D+_*_+(a+h)/t.length),center:f}}const o={maximumClickDelay:300,movementUntilMouseDrag:1.5,movementUntilPenDrag:6,movementUntilTouchDrag:6,holdDelay:500};class s extends i{constructor(e=o.maximumClickDelay,i=o.movementUntilMouseDrag,n=o.movementUntilPenDrag,r=o.movementUntilTouchDrag,s=o.holdDelay,a=t){super(!1),this.maximumClickDelay=e,this.movementUntilMouseDrag=i,this.movementUntilPenDrag=n,this.movementUntilTouchDrag=r,this.holdDelay=s,this._clock=a,this._pointerState=new Map,this._pointerDrag=this.registerOutgoing("pointer-drag"),this._immediateClick=this.registerOutgoing("immediate-click"),this._pointerHold=this.registerOutgoing("hold"),this.registerIncoming("pointer-down",this._handlePointerDown.bind(this)),this.registerIncoming("pointer-up",(t=>{this._handlePointerLoss(t,"pointer-up")})),this.registerIncoming("pointer-capture-lost",(t=>{this._handlePointerLoss(t,"pointer-capture-lost")})),this.registerIncoming("pointer-cancel",(t=>{this._handlePointerLoss(t,"pointer-cancel")})),this._moveHandle=this.registerIncoming("pointer-move",this._handlePointerMove.bind(this)),this._moveHandle.pause()}onUninstall(){this._pointerState.forEach((t=>{null!=t.holdTimeout&&(t.holdTimeout.remove(),t.holdTimeout=null)})),super.onUninstall()}_handlePointerDown(t){const e=t.data,i=e.native.pointerId;let n=null;0===this._pointerState.size&&(n=this._clock.setTimeout((()=>{const e=this._pointerState.get(i);if(e){if(!e.isDragging){const i=e.previousEvent;this._pointerHold.emit(i,void 0,t.modifiers),e.holdEmitted=!0}e.holdTimeout=null}}),this.holdDelay));const r={startEvent:e,previousEvent:e,startTimestamp:t.timestamp,isDragging:!1,downButton:e.native.button,holdTimeout:n,modifiers:new Set};this._pointerState.set(i,r),this.startCapturingPointer(e.native),this._moveHandle.resume(),this._pointerState.size>1&&this.startDragging(t)}_createPointerDragData(t,e,i){return{action:t,startEvent:e.startEvent,previousEvent:e.previousEvent,currentEvent:i}}_handlePointerMove(t){const e=t.data,i=e.native.pointerId,n=this._pointerState.get(i);if(n){if(n.isDragging)this._pointerDrag.emit(this._createPointerDragData("update",n,e),void 0,n.modifiers);else{(function(t,e){const i=e.x-t.x,n=e.y-t.y;return Math.sqrt(i*i+n*n)})(e,n.startEvent)>this._getDragThreshold(e.native.pointerType)&&this.startDragging(t)}n.previousEvent=e}}_getDragThreshold(t){switch(t){case"touch":return this.movementUntilTouchDrag;case"pen":return this.movementUntilPenDrag;case"mouse":default:return this.movementUntilMouseDrag}}startDragging(t){const e=t.data,i=e.native.pointerId;this._pointerState.forEach((n=>{null!=n.holdTimeout&&(n.holdTimeout.remove(),n.holdTimeout=null),n.isDragging||(n.modifiers=t.modifiers,n.isDragging=!0,i===n.startEvent.native.pointerId?this._pointerDrag.emit(this._createPointerDragData("start",n,e)):this._pointerDrag.emit(this._createPointerDragData("start",n,n.previousEvent),t.timestamp))}))}_handlePointerLoss(t,e){const i=t.data,n=i.native.pointerId,r=this._pointerState.get(n);if(r){if(null!=r.holdTimeout&&(r.holdTimeout.remove(),r.holdTimeout=null),r.isDragging)this._pointerDrag.emit(this._createPointerDragData("end",r,"pointer-up"===e?i:r.previousEvent),void 0,r.modifiers);else if("pointer-up"===e&&r.downButton===i.native.button){t.timestamp-r.startTimestamp<=this.maximumClickDelay&&!r.holdEmitted&&this._immediateClick.emit(i)}this._pointerState.delete(n),this.stopCapturingPointer(i.native),0===this._pointerState.size&&this._moveHandle.pause()}}}export{o as D,s as P,r as f,n as m};
