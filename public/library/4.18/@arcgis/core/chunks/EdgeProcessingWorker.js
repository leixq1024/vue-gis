/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
import{g as t}from"../core/lang.js";import{R as e,h as n}from"../core/scheduling.js";import{d as o,b as s}from"./mathUtils2.js";import{c as r}from"./vec3f64.js";import{a,n as i,f as c,g as l,d as f,e as u,c as g,k as d}from"./vec3.js";import{d as m}from"./mathUtils.js";import{d as p}from"./deduplicate.js";import{v as h,e as w,a as v,b as y,d as A,u as I,w as b,s as S,B as V,f as N,t as x,c as E,g as j,q as U,l as k,h as B,j as D,o as L,m as W,k as _,i as F,n as M,y as z,z as O,x as P,r as R,A as C,C as T,D as q,p as $,E as G,F as H,G as J,H as K,I as Q,J as X}from"./BufferView.js";import{g as Y}from"./glUtil.js";import{n as Z}from"./InterleavedLayout.js";const tt=Z().vec3f("position").u16("componentIndex").u16("_padding"),et=Z().vec2u8("sideness"),nt=Y(et),ot=Z().vec3f("position0").vec3f("position1").u16("componentIndex").u8("variantOffset",{glNormalized:!0}).u8("variantStroke").u8("variantExtension",{glNormalized:!0}).u8("_padding",{glPadding:!0}).u16("_padding2",{glPadding:!0}),st=ot.clone().vec3f("normal"),rt=ot.clone().vec3f("normalA").vec3f("normalB"),at={position0:0,position1:1,componentIndex:2,variantOffset:4,variantStroke:5,variantExtension:6,normal:7,normalA:7,normalB:8,sideness:9};class it{updateSettings(t){this.settings=t}write(t,e,n){const o=function(t){const e=ct;e[0]=t.position0[0],e[1]=t.position0[1],e[2]=t.position0[2],e[3]=t.position1[0],e[4]=t.position1[1],e[5]=t.position1[2],ft[0]=5381;for(let t=0;t<lt.length;t++)ft[0]=31*ft[0]+lt[t];return ft[0]}(n);ut.seed=o;const s=ut.getIntRange(0,255),r=ut.getIntRange(0,this.settings.variants-1),a=ut.getFloat(),i=255*(.5*function(t,e){const n=t<0?-1:1;return Math.pow(Math.abs(t),e)*n}(-(1-Math.min(a/.7,1))+Math.max(0,a-.7)/(1-.7),1.2)+.5);t.position0.setVec(e,n.position0),t.position1.setVec(e,n.position1),t.componentIndex.set(e,n.componentIndex),t.variantOffset.set(e,s),t.variantStroke.set(e,r),t.variantExtension.set(e,i)}trim(t,e){return t.slice(0,e)}}const ct=new Float32Array(6),lt=new Uint32Array(ct.buffer),ft=new Uint32Array(1);const ut=new e;class gt{constructor(){this.commonWriter=new it}updateSettings(t){this.commonWriter.updateSettings(t)}allocate(t){return st.createBuffer(t)}write(t,e,n){this.commonWriter.write(t,e,n),a(mt,n.faceNormal0,n.faceNormal1),i(mt,mt),t.normal.setVec(e,mt)}trim(t,e){return this.commonWriter.trim(t,e)}}gt.Layout=st,gt.glLayout=Y(st,{divisor:1});class dt{constructor(){this.commonWriter=new it}updateSettings(t){this.commonWriter.updateSettings(t)}allocate(t){return rt.createBuffer(t)}write(t,e,n){this.commonWriter.write(t,e,n),t.normalA.setVec(e,n.faceNormal0),t.normalB.setVec(e,n.faceNormal1)}trim(t,e){return this.commonWriter.trim(t,e)}}dt.Layout=rt,dt.glLayout=Y(rt,{divisor:1});const mt=r();function pt(t,e){return e.push(t.buffer),{buffer:t.buffer,layout:wt(t.layout)}}function ht(t){return function(t){const e=Z();return e.stride=t.stride,e.fieldNames=t.fieldNames,t.fields.forEach((t=>e.fields.set(t[0],{...t[1],constructor:At(t[1].constructor)}))),e}(t.layout).createView(t.buffer)}function wt(t){const e=new Array;return t.fields.forEach(((t,n)=>{const o={...t,constructor:yt(t.constructor)};e.push([n,o])})),{stride:t.stride,fields:e,fieldNames:t.fieldNames}}const vt=[h,w,v,y,A,I,b,S,V,N,x,E,j,U,k,B,D,L,W,_,F,M,z,O,P,R,C,T,q,$,G,H,J,K,Q,X];function yt(t){return`${t.ElementType}_${t.ElementCount}`}function At(t){return It.get(t)}const It=new Map;function bt(t,e){const n=t.length/3,o=new Uint32Array(e+1),s=new Uint32Array(e+1),r=(t,e)=>{t<e?o[t+1]++:s[e+1]++};for(let e=0;e<n;e++){const n=t[3*e],o=t[3*e+1],s=t[3*e+2];r(n,o),r(o,s),r(s,n)}let a=0,i=0;for(let t=0;t<e;t++){const e=o[t+1],n=s[t+1];o[t+1]=a,s[t+1]=i,a+=e,i+=n}const c=new Uint32Array(6*n),l=o[e],f=(t,e,n)=>{if(t<e){const s=o[t+1]++;c[2*s]=e,c[2*s+1]=n}else{const o=s[e+1]++;c[2*l+2*o]=t,c[2*l+2*o+1]=n}};for(let e=0;e<n;e++){const n=t[3*e],o=t[3*e+1],s=t[3*e+2];f(n,o,e),f(o,s,e),f(s,n,e)}const u=(t,e)=>{const n=2*t,o=e-t;for(let t=1;t<o;t++){const e=c[n+2*t],o=c[n+2*t+1];let s=t-1;for(;s>=0&&c[n+2*s]>e;s--)c[n+2*s+2]=c[n+2*s],c[n+2*s+3]=c[n+2*s+1];c[n+2*s+2]=e,c[n+2*s+3]=o}};for(let t=0;t<e;t++)u(o[t],o[t+1]),u(l+s[t],l+s[t+1]);const g=new Int32Array(3*n),d=(e,n)=>e===t[3*n]?0:e===t[3*n+1]?1:e===t[3*n+2]?2:-1,m=(t,e)=>{const n=d(t,e);g[3*e+n]=-1},p=(t,e,n,o)=>{const s=d(t,e);g[3*e+s]=o;const r=d(n,o);g[3*o+r]=e};for(let t=0;t<e;t++){let e=o[t];const n=o[t+1];let r=s[t];const a=s[t+1];for(;e<n&&r<a;){const n=c[2*e],o=c[2*l+2*r];n===o?(p(t,c[2*e+1],o,c[2*l+2*r+1]),e++,r++):n<o?(m(t,c[2*e+1]),e++):(m(o,c[2*l+2*r+1]),r++)}for(;e<n;)m(t,c[2*e+1]),e++;for(;r<a;){m(c[2*l+2*r],c[2*l+2*r+1]),r++}}return g}vt.forEach((t=>It.set(yt(t),t)));function St(e,s,r,a=Ut){const m=e.vertices.position,p=e.vertices.componentIndex,h=o(a.anglePlanar),w=o(a.angleSignificantEdge),v=Math.cos(w),y=Math.cos(h),A=Et.edge,I=A.position0,b=A.position1,S=A.faceNormal0,V=A.faceNormal1,N=function(t){const e=t.faces.length/3,n=t.vertices.position,o=t.faces,s=jt.v0,r=jt.v1,a=jt.v2,c=new Float32Array(3*e);for(let t=0;t<e;t++){const e=o[3*t+0],l=o[3*t+1],f=o[3*t+2];n.getVec(e,s),n.getVec(l,r),n.getVec(f,a),g(r,r,s),g(a,a,s),u(s,r,a),i(s,s),c[3*t+0]=s[0],c[3*t+1]=s[1],c[3*t+2]=s[2]}return c}(e),x=function(t){const e=t.faces.length/3,n=t.faces,o=t.neighbors;let s=0;for(let t=0;t<e;t++){const e=o[3*t+0],r=o[3*t+1],a=o[3*t+2],i=n[3*t+0],c=n[3*t+1],l=n[3*t+2];s+=-1===e||i<c?1:0,s+=-1===r||c<l?1:0,s+=-1===a||l<i?1:0}const r=new Int32Array(4*s);let a=0;for(let t=0;t<e;t++){const e=o[3*t+0],s=o[3*t+1],i=o[3*t+2],c=n[3*t+0],l=n[3*t+1],f=n[3*t+2];(-1===e||c<l)&&(r[a++]=c,r[a++]=l,r[a++]=t,r[a++]=e),(-1===s||l<f)&&(r[a++]=l,r[a++]=f,r[a++]=t,r[a++]=s),(-1===i||f<c)&&(r[a++]=f,r[a++]=c,r[a++]=t,r[a++]=i)}return r}(e),E=x.length/4,j=s.allocate(E);let U=0;const k=E,B=r.allocate(k);let D=0,L=0,W=0;const _=n(0,E),F=new Float32Array(E);t(F,((t,e,n)=>{m.getVec(x[4*e+0],I),m.getVec(x[4*e+1],b),n[e]=d(I,b)})),_.sort(((t,e)=>F[e]-F[t]));const M=new Array,z=new Array;for(let t=0;t<E;t++){const e=_[t],n=F[e],o=x[4*e+0],a=x[4*e+1],i=x[4*e+2],u=x[4*e+3],g=-1===u;if(m.getVec(o,I),m.getVec(a,b),g)c(S,N[3*i+0],N[3*i+1],N[3*i+2]),l(V,S),A.componentIndex=p.get(o),A.cosAngle=f(S,V);else{if(c(S,N[3*i+0],N[3*i+1],N[3*i+2]),c(V,N[3*u+0],N[3*u+1],N[3*u+2]),A.componentIndex=p.get(o),A.cosAngle=f(S,V),Nt(A,y))continue;A.cosAngle<-.9999&&l(V,S)}L+=n,W++,g||Vt(A,v)?(s.write(j,U++,A),M.push(n)):xt(A,h)&&(r.write(B,D++,A),z.push(n))}const O=new Float32Array(M.reverse()),P=new Float32Array(z.reverse());return{regular:{instancesData:s.trim(j,U),lodInfo:{lengths:O}},silhouette:{instancesData:r.trim(B,D),lodInfo:{lengths:P}},averageEdgeLength:L/W}}function Vt(t,e){return t.cosAngle<e}function Nt(t,e){return t.cosAngle>e}function xt(t,e){const n=s(t.cosAngle),o=Et.fwd,r=Et.ortho;m(o,t.position1,t.position0);return n*(f(u(r,t.faceNormal0,t.faceNormal1),o)>0?-1:1)>e}const Et={edge:{position0:r(),position1:r(),faceNormal0:r(),faceNormal1:r(),componentIndex:0,cosAngle:0},ortho:r(),fwd:r()},jt={v0:r(),v1:r(),v2:r()},Ut={anglePlanar:4,angleSignificantEdge:35};function kt(t){const e=function(t,e,n){if(e&&n){return{faces:n,neighbors:bt(n,t.count),vertices:t}}{const e=p(t.buffer,t.stride/4,{originalIndices:n}),o=bt(e.indices,e.uniqueCount);return{faces:e.indices,neighbors:o,vertices:tt.createView(e.buffer)}}}(t.data,t.skipDeduplicate,t.originalIndices);return Bt.updateSettings(t.writerSettings),Dt.updateSettings(t.writerSettings),St(e,Bt,Dt)}const Bt=new gt,Dt=new dt;var Lt=Object.freeze({__proto__:null,wrappedWork:async function(t){const e=function(t){return{data:tt.createView(t.dataBuffer),originalIndices:"Uint32Array"===t.originalIndicesType?new Uint32Array(t.originalIndicesBuffer):"Uint16Array"===t.originalIndicesType?new Uint16Array(t.originalIndicesBuffer):void 0,writerSettings:t.writerSettings,skipDeduplicate:t.skipDeduplicate}}(t),n=kt(e),o=[e.data.buffer];return{result:function(t,e){e.push(t.regular.lodInfo.lengths.buffer),e.push(t.silhouette.lodInfo.lengths.buffer);return{regular:{instancesData:pt(t.regular.instancesData,e),lodInfo:{lengths:t.regular.lodInfo.lengths.buffer}},silhouette:{instancesData:pt(t.silhouette.instancesData,e),lodInfo:{lengths:t.silhouette.lodInfo.lengths.buffer}},averageEdgeLength:t.averageEdgeLength}}(n,o),transferList:o}},work:kt});export{at as E,gt as R,dt as S,et as V,tt as a,Lt as b,nt as g,ht as u,kt as w};
