// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../../core/maybe ../../../core/handleUtils ../../../core/Collection ../../../core/watchUtils ../../../chunks/vec2f64 ../../../chunks/vec2 ./Settings ./snappingUtils ../../3d/support/geometryUtils/vector2d ./SnappingConstraint ./IntersectionSnappingCandidate ./LineSnapper ./ParallelLineSnapper ./RightAngleSnapper ./RightAngleTriangleSnapper".split(" "),function(z,A,t,B,C,u,m,n,v,w,p,r,D,E,F,G){function x(q,h){let a=-1;for(let c=0;c<q.length;++c)if(h.constraint.objectEqual(q[c].constraint)){a=
c;break}return a}let I=function(){function q(a){this._snapper=new B;this._currentSnappingCandidate=null;this._visualElementHandles=t.makeHandle();this._optionsHandle=t.makeHandle();this._squaredMouseProximityTreshold=n.defaults.pointProximityThreshold*n.defaults.pointProximityThreshold;this._squaredTouchProximityThreshold=n.defaults.pointProximityThreshold*n.defaults.pointProximityThreshold*n.defaults.touchSensitivityMultiplier*n.defaults.touchSensitivityMultiplier;this._snapper.push(new E.ParallelLineSnapper({enabled:a.effectiveSelfEnabled}));
this._snapper.push(new D.LineSnapper({enabled:a.effectiveSelfEnabled}));this._snapper.push(new F.RightAngleSnapper({enabled:a.effectiveSelfEnabled}));this._snapper.push(new G.RightAngleTriangleSnapper({enabled:a.effectiveSelfEnabled}));this._optionsHandle=C.watch(a,"effectiveSelfEnabled",()=>{for(const c of this._snapper)c.enabled=a.effectiveSelfEnabled;this.doneSnapping()})}var h=q.prototype;h.snap=function(a,c){const b=[];for(const f of this._snapper.items)b.push(...f.snap(a,c));return this._aggregateSnappingCandidates(b,
a,c)};h.destroy=function(){this.doneSnapping();this._optionsHandle.remove()};h.doneSnapping=function(){this._visualElementHandles.remove();this._currentSnappingCandidate=null};h._aggregateSnappingCandidates=function(a,c,b){const f=a.length,g=b.geometry.data.coordinateHelper.fromPoint(c);if(A.isSome(this._currentSnappingCandidate)){if(this.isCurrentIntersectionConstraintStillActive(a)&&m.distance(g,this._currentSnappingCandidate.targetPoint)<this.squaredPointProximityThreshold(b.pointer))return b.geometry.data.coordinateHelper.createDehydratedPoint(this._currentSnappingCandidate.targetPoint);
var e=x(a,this._currentSnappingCandidate);this.doneSnapping();if(0<=e){c=a[e];var d=[];if(c.constraint instanceof p.LineLikeConstraint){for(var k=0;k<f;++k)if(k!==e){var l=a[k];if(l.constraint instanceof p.LineLikeConstraint&&(l=this._intersectRaysAndLines(c,l,b),A.isSome(l))){const y=v.squareDistance(v.anyMapPointToScreenPoint(g,b.geometry.data.coordinateHelper,b.elevationInfo,b.view),v.anyMapPointToScreenPoint(l.targetPoint,b.geometry.data.coordinateHelper,b.elevationInfo,b.view));d.push([l,y])}}if(0<
d.length&&(d.sort((y,H)=>y[1]-H[1]),d[0][1]<this.squaredPointProximityThreshold(b.pointer)))return this.updateSnappingCandidate(d[0][0],a,b)}return this.updateSnappingCandidate(c,a,b)}}if(0<f){e=0;c=m.distance(g,a[0].targetPoint);for(d=1;d<f;++d)k=m.distance(g,a[d].targetPoint),k<c&&(c=k,e=d);return this.updateSnappingCandidate(a[e],a,b)}return c};h._intersectRaysAndLines=function(a,c,b){const f=a.constraint.start;var g=a.constraint.end,e=c.constraint.start,d=c.constraint.end;g=m.subtract(u.create(),
g,f);const k=m.subtract(u.create(),d,e);d=w.cross(g,k);if(Math.abs(d)<=n.defaults.intersectionParallelLineThreshold)return null;const l=m.subtract(u.create(),f,e);e=w.cross(k,l)/d;d=w.cross(g,l)/d;b=b.geometry.data.coordinateHelper;if(0<=e){if(0<=d||c.constraint instanceof p.LineConstraint)return d=b.clone(a.targetPoint),m.scaleAndAdd(d,f,g,e),new r.IntersectionSnappingCandidate(b,d,a,c)}else if(a.constraint instanceof p.LineConstraint&&(0<=d||c.constraint instanceof p.LineConstraint))return d=b.clone(a.targetPoint),
m.scaleAndAdd(d,f,g,e),new r.IntersectionSnappingCandidate(b,d,a,c);return null};h.isCurrentIntersectionConstraintStillActive=function(a){if(this._currentSnappingCandidate instanceof r.IntersectionSnappingCandidate){const c=this._currentSnappingCandidate.right,b=x(a,this._currentSnappingCandidate.left);a=x(a,c);return 0<=b&&0<=a}return!1};h.updateSnappingCandidate=function(a,c,b){this._currentSnappingCandidate=a;const f=this._currentSnappingCandidate.targetPoint,g=[a.visualize(b.view,b.elevationInfo,
f)];for(const e of c){if(a instanceof r.IntersectionSnappingCandidate){if(e.constraint.objectEqual(a.left.constraint)||e.constraint.objectEqual(a.right.constraint))continue}else if(e.constraint.objectEqual(a.constraint))continue;e.constraint.check(f)&&g.push(e.visualizeReferenceHints(b.view,b.elevationInfo,f))}this._visualElementHandles=t.handlesGroup(g);return b.geometry.data.coordinateHelper.createDehydratedPoint(f)};h.squaredPointProximityThreshold=function(a){return"touch"===a?this._squaredTouchProximityThreshold:
this._squaredMouseProximityTreshold};return q}();z.SnappingEngine=I;Object.defineProperty(z,"__esModule",{value:!0})});