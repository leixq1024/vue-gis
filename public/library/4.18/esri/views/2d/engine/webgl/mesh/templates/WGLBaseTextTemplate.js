// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../../../../chunks/_rollupPluginBabelHelpers ../../../../../../core/maybe ../../../../../../core/screenUtils ../../../../../../layers/graphics/featureConversionUtils ../../definitions ../../number ./shapingUtils ../../enums ../../materialKey/MaterialKey ../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper".split(" "),function(v,l,w,r,x,m,y,z,t,A){return B=>function(u){function p(...a){a=u.call(this,...a)||this;a._isCIM=!1;a.geometryType=z.WGLGeometryType.TEXT;a._aux=m.i8888to32(0,
0,a._referenceSize,a._bitset);return a}v._inheritsLoose(p,u);var k=p.prototype;k.bindTextInfo=function(a,b){this._shapingInfo=a&&a.length?l.andThen(a,d=>y.shapeGlyphs(d,b,{scale:this._scale,angle:this._angle,xOffset:this._xOffset,yOffset:this._yOffset,hAlign:this._xAlignD,vAlign:this._yAlignD,maxLineWidth:Math.max(32,Math.min(this._lineWidth,512)),lineHeight:x.MAGIC_LABEL_LINE_HEIGHT*Math.max(.25,Math.min(this._lineHeight,4)),decoration:this._decoration,isCIM:this._isCIM})):null};k.writeMeshWithGeometry=
function(a,b,d,c,e,g){if(l.isSome(this._textPlacement))return d=null!=g?g:d.readLegacyGeometry(),this._writePlacedText(a,b,e,d);if(d=g?r.deltaDecodeGeometry(r.convertFromGeometry(g),2):"esriGeometryPolygon"===c?d.readCentroid():d.readUnquantizedGeometry()){if(d.isPoint){const [h,f]=d.coords;return this._writeGlyphs(a,b,e,{x:h,y:f})}d.forEachVertex((h,f)=>this._writeGlyphs(a,b,e,{x:h,y:f}))}};k._writePlacedText=function(a,b,d,c){const e=this._shapingInfo;if(!l.isNone(e)){var g=t.MaterialKeyBase.load(this._materialKey),
h=l.unwrap(this._textPlacement);if(c=A.CIMMarkerPlacementHelper.getPlacement(c,h,w.pt2px(1))){var f;for(f=c.next();null!=f;){h=m.i1616to32(Math.round(8*f.tx),Math.round(8*f.ty));f=f.getAngle();e.setRotation(f);for(const n of e.glyphs){g.textureBinding=n.textureBinding;const q=b.getVector("geometry").vertexCount,C=b.indexVector.length,D=this._writeIndices(b),E=this._writeVertex(b,d,h,n);a.writeDisplayRecord(this.geometryType,g.data,q,E,C,D)}e.setRotation(-f);f=c.next()}}}};k._writeGlyphs=function(a,
b,d,c){var e=this._shapingInfo;if(!l.isNone(e)){var g=t.MaterialKeyBase.load(this._materialKey);c=m.i1616to32(Math.round(8*c.x),Math.round(8*c.y));for(const h of e.glyphs){g.textureBinding=h.textureBinding;e=b.getVector("geometry").vertexCount;const f=b.indexVector.length,n=this._writeIndices(b),q=this._writeVertex(b,d,c,h);a.writeDisplayRecord(this.geometryType,g.data,e,q,f,n)}}};k._writeVertexCommon=function(a,b,d,c){c=this._color;const e=this._haloColor,g=m.i8888to32(0,0,this._referenceSize,this._bitset),
h=m.i8888to32(0,0,this._size,this._haloSize);a.push(d);a.push(b);a.push(c);a.push(e);a.push(h);a.push(g)};k._writeVertex=function(a,b,d,c){a=a.get("geometry");this._writeVertexCommon(a,b,d,c);a.push(c.offsets.upperLeft);a.push(c.texcoords.upperLeft);this._writeVertexCommon(a,b,d,c);a.push(c.offsets.upperRight);a.push(c.texcoords.upperRight);this._writeVertexCommon(a,b,d,c);a.push(c.offsets.lowerLeft);a.push(c.texcoords.lowerLeft);this._writeVertexCommon(a,b,d,c);a.push(c.offsets.lowerRight);a.push(c.texcoords.lowerRight);
return 4};k._writeIndices=function(a){const b=a.getVector("geometry").vertexCount;a=a.indexVector;a.push(b+0);a.push(b+1);a.push(b+2);a.push(b+1);a.push(b+3);a.push(b+2);return 6};return p}(B)});