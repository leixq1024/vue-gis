// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/Logger","./enums"],function(t,n,k){function p(g,f,a,...d){f<g.length?g.splice(f,a,...d):g.push(...d)}const u=n.getLogger("esri.views.2d.engine.webgl.WGLDisplayList");n=new Map;n.set(k.WGLDrawPhase.MAP,[k.WGLGeometryType.FILL,k.WGLGeometryType.LINE,k.WGLGeometryType.MARKER,k.WGLGeometryType.TEXT]);n.set(k.WGLDrawPhase.LABEL,[k.WGLGeometryType.LABEL]);n.set(k.WGLDrawPhase.LABEL_ALPHA,[k.WGLGeometryType.LABEL]);n=function(){function g(a=
!1){this.symbolLevels=[];this.unified=a}var f=g.prototype;f.replay=function(a,d,e){if(this.unified)for(const h of this.symbolLevels)for(const b of h.zLevels){var c=b.geometryDPInfo.unified;if(c)for(const l of c){c=a.painter.getGeometryBrush(l.geometryType);const m=d.getGeometry(l.geometryType);c.prepareState(a,d);c.drawGeometry(a,d,l,m,e)}}};f.clear=function(){this.symbolLevels.length=0};f.addToList=function(a,d){if(Array.isArray(a))for(const e of a)this._addToList(e,d);else this._addToList(a,d)};
f.removeFromList=function(a){Array.isArray(a)||(a=[a]);let d=null;for(const e of a)d=this._removeFromList(e);return d};f.byType=function(a,d){for(const e of this.symbolLevels)for(const c of e.zLevels){const h=c.geometryDPInfo,b=this.getDPInfoType(a);if(h[b])for(const l of h[b])d(l)}};f.clone=function(){const a=new g(this.unified);for(const d of this.symbolLevels)a.symbolLevels.push(d.clone());return a};f.splitAfter=function(a){const d=this._getDisplayList(a.symbolLevel,a.zOrder,a.geometryType),e=
d.length,c=a.indexFrom+a.indexCount;for(let h=0;h<e;++h){const b=d[h];if(b.geometryType===a.geometryType&&c>b.indexFrom&&c<=b.indexFrom+b.indexCount)return c<b.indexFrom+b.indexCount&&(a=new q,a.geometryType=b.geometryType,a.materialKey=b.materialKey,a.indexFrom=c,a.indexCount=b.indexFrom+b.indexCount-c,d.splice(h+1,0,a),b.indexCount=c-b.indexFrom),h}};f._addToList=function(a,d){const e=this._getDisplayList(a.symbolLevel,a.zOrder,a.geometryType);d=null!=d?d:e.length-1;var c=0<=d&&d<e.length?e[d]:
null;null===c||c.materialKey!==a.materialKey||c.indexFrom+c.indexCount!==a.indexFrom||this.unified&&c.geometryType!==a.geometryType?(c=new q,c.indexFrom=a.indexFrom,c.indexCount=a.indexCount,c.materialKey=a.materialKey,c.geometryType=a.geometryType,p(e,d+1,0,c)):c.indexCount+=a.indexCount};f._removeFromList=function(a){const d=this._getDisplayList(a.symbolLevel,a.zOrder,a.geometryType);var e=d.length;let c=void 0;for(var h=0;h<e;++h){var b=d[h];if(a.indexFrom+a.indexCount>b.indexFrom&&a.indexFrom<
b.indexFrom+b.indexCount&&(!this.unified||b.geometryType===a.geometryType)){c=h;break}}if(void 0!==c){e=d[c];if(a.indexFrom===e.indexFrom)return e.indexCount-=a.indexCount,e.indexFrom+=a.indexCount,0===e.indexCount&&p(d,c,1),c-1;if(a.indexFrom+a.indexCount===e.indexFrom+e.indexCount)return e.indexCount-=a.indexCount,0===e.indexCount?(p(d,c,1),c-1):c;{h=e.indexFrom;b=a.indexFrom-e.indexFrom;const l=a.indexCount;a=e.indexFrom+e.indexCount-(a.indexFrom+a.indexCount);e.indexCount=b;const m=new q;m.geometryType=
e.geometryType;m.materialKey=e.materialKey;m.indexFrom=h+b+l;m.indexCount=a;p(d,c+1,0,m);return c}}return null};f._getDisplayList=function(a,d,e){let c;var h=this.symbolLevels.length;for(let m=0;m<h;m++)if(this.symbolLevels[m].symbolLevel===a){c=this.symbolLevels[m];break}c||(c=new v,c.symbolLevel=a,this.symbolLevels.push(c));let b;a=c.zLevels.length;for(h=0;h<a;h++)if(c.zLevels[h].zLevel===d){b=c.zLevels[h];break}b||(b=new w,b.geometryDPInfo=new r,b.zLevel=d,c.zLevels.push(b));let l;if(this.unified)b.geometryDPInfo.unified||
(b.geometryDPInfo.unified=[]),l=b.geometryDPInfo.unified;else switch(e){case k.WGLGeometryType.FILL:b.geometryDPInfo.fill||(b.geometryDPInfo.fill=[]);l=b.geometryDPInfo.fill;break;case k.WGLGeometryType.LINE:b.geometryDPInfo.line||(b.geometryDPInfo.line=[]);l=b.geometryDPInfo.line;break;case k.WGLGeometryType.MARKER:b.geometryDPInfo.marker||(b.geometryDPInfo.marker=[]);l=b.geometryDPInfo.marker;break;case k.WGLGeometryType.TEXT:b.geometryDPInfo.text||(b.geometryDPInfo.text=[]);l=b.geometryDPInfo.text;
break;case k.WGLGeometryType.LABEL:b.geometryDPInfo.label||(b.geometryDPInfo.label=[]);l=b.geometryDPInfo.label;break;default:console.error("Trying to add a record with geometry type '"+e+"'.")}return l};f.getDPInfoType=function(a){if(this.unified)return"unified";switch(a){case k.WGLGeometryType.FILL:return"fill";case k.WGLGeometryType.LINE:return"line";case k.WGLGeometryType.MARKER:return"marker";case k.WGLGeometryType.TEXT:return"text";case k.WGLGeometryType.LABEL:return"label";default:u.error(`DisplayList: Tried to convert unknown geometryType: ${a}`)}};
t._createClass(g,[{key:"empty",get:function(){return!this.symbolLevels||0===this.symbolLevels.length}}]);return g}();let q=function(){function g(){this.materialKey=null;this.indexCount=this.indexFrom=0}g.prototype.clone=function(){const f=new g;f.geometryType=this.geometryType;f.materialKey=this.materialKey;f.indexFrom=this.indexFrom;f.indexCount=this.indexCount;return f};return g}(),r=function(){function g(){this.unified=this.label=this.text=this.marker=this.line=this.fill=null}g.prototype.clone=
function(){const f=new g;f.fill=this.fill&&this.fill.map(a=>a.clone());f.line=this.line&&this.line.map(a=>a.clone());f.marker=this.marker&&this.marker.map(a=>a.clone());f.text=this.text&&this.text.map(a=>a.clone());f.label=this.label&&this.label.map(a=>a.clone());f.unified=this.unified&&this.unified.map(a=>a.clone());return f};return g}(),w=function(){function g(){this.geometryDPInfo=new r}g.prototype.clone=function(){const f=new g;f.zLevel=this.zLevel;f.geometryDPInfo=this.geometryDPInfo.clone();
return f};return g}(),v=function(){function g(){this.zLevels=[]}g.prototype.clone=function(){const f=new g;f.symbolLevel=this.symbolLevel;for(const a of this.zLevels)f.zLevels.push(a.clone());return f};return g}();return n});