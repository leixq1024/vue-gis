// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/has ../../../../core/maybe ../../../../core/promiseUtils ../../../../request ../../../../core/MemCache ../../../../core/ItemCache ../../../../geometry/support/aaBoundingRect ../../../../core/workers/workers ../../tiling/TileKey ./TileIndex ./VectorTile ./GlyphMosaic ./GlyphSource ./SpriteMosaic ./decluttering/debugging".split(" "),function(u,C,p,m,k,v,D,q,E,F,r,w,G,x,y,z,H){const A=new q(10),n=new Map;q=function(){function t(a,
c,d,e){this._vectorTileLayer=a;this._styleRepository=c;this.devicePixelRatio=d;this._memCache=e;this._connection=this._glyphMosaic=this._spriteMosaic=null;this._ongoingTileRequests=new Map;this._ongoingRequestToController=new Map}var h=t.prototype;h.destroy=function(){this._ongoingTileRequests&&this.abortAll();this._connection&&(this._connection.close(),this._connection=null);this._vectorTileLayer=this._styleRepository=null;this._spriteMosaic&&(this._spriteMosaic=null);this._glyphMosaic&&(this._glyphMosaic=
null)};h.start=async function(a){const c=this._vectorTileLayer;var d=c.sourceNameToSource;const e=[];for(const b in d)e.push(this._fetchTileMap(d[b],a));this._spriteSourcePromise=this._vectorTileLayer.loadSpriteSource(this.devicePixelRatio,a);this._spriteSourcePromise.then(b=>{this._spriteMosaic=new z(1024,1024,250);this._spriteMosaic.setSpriteSource(b)});d=new y(this._styleRepository.glyphs);this._glyphMosaic=new x(1024,1024,d);this._broadcastPromise=F.open("WorkerTileHandler",{client:this,scheduler:a.scheduler,
signal:a.signal}).then(b=>{this._connection=b;return k.all(this._connection.broadcast("setStyle",{style:c.currentStyleInfo.style,vectorTileLayerMaxBuffers:p("vectortilelayer-max-buffers")},a))});return k.all(e)};h.updateStyle=async function(a){await this._broadcastPromise;return this._broadcastPromise=k.create((c,d)=>{k.all(this._connection.broadcast("updateStyle",a)).then(c,d)})};h.setStyle=async function(a,c){await this._broadcastPromise;this._styleRepository=a;const d=this._vectorTileLayer.sourceNameToSource,
e=[];for(const b in d)e.push(this._fetchTileMap(d[b],null));this._spriteSourcePromise=this._vectorTileLayer.loadSpriteSource(this.devicePixelRatio,null);this._spriteSourcePromise.then(b=>{this._spriteMosaic=new z(1024,1024,250);this._spriteMosaic.setSpriteSource(b)});a=new y(a.glyphs);this._glyphMosaic=new x(1024,1024,a);this._broadcastPromise=k.create((b,g)=>{k.all(this._connection.broadcast("setStyle",{style:c,vectorTileLayerMaxBuffers:p("vectortilelayer-max-buffers")})).then(b,g)});e.push(this._broadcastPromise);
return k.all(e)};h.getVectorTile=function(a,c,d,e){const b=new r(a,c,d,0);return m.isSome(this._memCache)&&(a=this._memCache.get(b.id),m.isSome(a))?(a.reference(),k.resolve(a)):this._getVectorTileData(b).then(g=>{k.throwIfAborted(e);if(m.isSome(this._memCache)){var f=this._memCache.get(b.id);if(m.isSome(f))return f.reference(),f}if(!this._vectorTileLayer)return null;f=this._vectorTileLayer.tileInfo.getTileBounds(E.create(),b);f=new G.VectorTile(b,this._styleRepository,f,[512,512]);g&&g.tileData?(f.setData(g.tileData),
m.isSome(this._memCache)&&(f.reference(),g=f.getMemoryUsage(),0<g&&this._memCache.put(f.key.id,f,g*f.referenced,D.MIN_PRIORITY))):f.setData(null);return f})};h.releaseVectorTile=function(a){m.isNone(this._memCache)||a.release()||this._memCache.updateSize(a.key.id,a,a.getMemoryUsage()*a.referenced)};h.fetchTileData=function(a,c){return this._getRefKeys(a,c).then(d=>{const e=this._vectorTileLayer.sourceNameToSource,b=[];for(const g in e)b.push(g);return this._getSourcesData(b,d,c)})};h.parseTileData=
function(a,c){const d=a&&a.data;if(!d)return k.resolve(null);const {sourceName2DataAndRefKey:e,transferList:b}=d;return 0===Object.keys(e).length?k.resolve(null):this._broadcastPromise.then(()=>this._connection.getAvailableClient().then(g=>g.invoke("createTileAndParse",{key:a.key.id,sourceName2DataAndRefKey:e,styleLayerUIDs:a.styleLayerUIDs},{...c,transferList:b}).then(f=>{if(p("esri-vector-tiles-debug")){const l={};for(const B in e)l[B]=e[B].refKey;return{tileData:f,refKeys:l}}return{tileData:f}})))};
h.abortAll=function(){this._ongoingRequestToController.forEach(a=>a.abort());this._ongoingRequestToController.clear();this._ongoingTileRequests.clear()};h.getSprites=async function(a){await this._spriteSourcePromise;return this._spriteMosaic.getSpriteItems(a)};h.getGlyphs=function(a){return this._glyphMosaic.getGlyphItems(a.font,a.codePoints)};h.perfReport=function({key:a,milliseconds:c}){H.perfAdd(a,c,"ms")};h._getTilePayload=async function(a,c,d){a=r.pool.acquire(a.id);const e=this._vectorTileLayer.sourceNameToSource[c].getSourceTileUrl(a.level,
a.row,a.col);r.pool.release(a);try{return{protobuff:(await v(e,{responseType:"array-buffer",...d})).data,sourceName:c}}catch(b){if(k.isAbortError(b))throw b;return{protobuff:null,sourceName:c}}};h._fetchTileMap=async function(a,c){if(a.capabilities.operations.supportsTileMap&&a.tileIndex)return k.resolve();if(a.tileMapURL){var d=A.get(a.tileMapURL);if(d)a.tileIndex=d;else if(n.has(a.tileMapURL))try{var e=await n.get(a.tileMapURL);a.tileIndex=new w(e.data)}catch(b){if(k.isAbortError(b))throw b;}else{c=
v(a.tileMapURL,c);n.set(a.tileMapURL,c);try{e=await c,n.delete(a.tileMapURL),A.put(a.tileMapURL,a.tileIndex),a.tileIndex=new w(e.data)}catch(b){if(n.delete(a.tileMapURL),k.isAbortError(b))throw b;}}}};h._getRefKeys=function(a,c){const d=this._vectorTileLayer.sourceNameToSource,e=[];for(const b in d){const g=d[b].getRefKey(a,c);e.push(g)}return k.eachAlways(e)};h._getSourcesData=function(a,c,d){const e=[];for(let b=0;b<c.length;b++)if(null==c[b].value||null==a[b])e.push(null);else{const g=this._getTilePayload(c[b].value,
a[b],d);e.push(g)}return k.eachAlways(e).then(b=>{const g={},f=[];for(let l=0;l<b.length;l++)b[l].value&&b[l].value&&b[l].value.protobuff&&0<b[l].value.protobuff.byteLength&&(g[b[l].value.sourceName]={refKey:c[l].value.id,protobuff:b[l].value.protobuff},f.push(b[l].value.protobuff));return{sourceName2DataAndRefKey:g,transferList:f}})};h._getVectorTileData=function(a){const c=a.id;if(this._ongoingTileRequests.has(c))return this._ongoingTileRequests.get(c);const d=new AbortController;a=this._getParsedVectorTileData(a,
{signal:d.signal}).then(e=>{this._ongoingTileRequests.delete(c);this._ongoingRequestToController.delete(c);return e}).catch(()=>{this._ongoingTileRequests.delete(c);this._ongoingRequestToController.delete(c);return null});this._ongoingTileRequests.set(c,a);this._ongoingRequestToController.set(c,d);return a};h._getParsedVectorTileData=function(a,c){return this.fetchTileData(a,c).then(d=>this.parseTileData({key:a,data:d},c))};C._createClass(t,[{key:"spriteMosaic",get:function(){return this._spriteSourcePromise.then(()=>
this._spriteMosaic)}},{key:"glyphMosaic",get:function(){return this._glyphMosaic}},{key:"updating",get:function(){return 0<this._ongoingTileRequests.size}}]);return t}();u.TileHandler=q;Object.defineProperty(u,"__esModule",{value:!0})});