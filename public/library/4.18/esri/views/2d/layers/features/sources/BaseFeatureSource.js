// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/has ../../../../../core/maybe ../../../../../core/Logger ../../../../../core/Error ../../../../../core/promiseUtils ../../../../../request ../../../../../tasks/support/Query ../../../../support/QueueProcessor ../controllers/support/sources ./DataTileSource".split(" "),function(q,r,t,n,p,v,h,w,x,u,y,z){const A=p.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource");p=function(k){function l(c){var a=k.call(this,
c)||this;a.type="feature";a._adapter=y.createSourceAdapter(c.serviceInfo);a._queue=new u.QueueProcessor({concurrency:8,process:async b=>{h.throwIfAborted(b);var d=b.tile.key.id;const {tile:e,signal:g}=b;d={query:t("esri-tiles-debug")?{tile:d.replace(/\//g,"."),depth:b.depth}:void 0,signal:g,transform:e.transform};return a._adapter.executeQuery(b.query,d)}});a._patchQueue=new u.QueueProcessor({concurrency:8,process:async b=>{h.throwIfAborted(b);var d=b.tile.key.id;const {tile:e,signal:g}=b;d={query:t("esri-tiles-debug")?
{tile:d.replace(/\//g,"."),depth:b.depth}:void 0,signal:g,transform:e.transform};return a._adapter.executeQuery(b.query,d)}});return a}r._inheritsLoose(l,k);var f=l.prototype;f.destroy=function(){this._adapter.destroy();this._queue.destroy();this._patchQueue.destroy()};f.setViewState=function(c){};f.subscribe=function(c){k.prototype.subscribe.call(this,c);this._fetchDataTile(c).catch(a=>{h.isAbortError(a)||A.error(new v("mapview-query-error","Encountered error when fetching tile",{tile:c,error:a}))})};
f.unsubscribe=function(c){k.prototype.unsubscribe.call(this,c)};f.pause=function(){this._queue.pause()};f.resume=function(){this._queue.resume()};f.query=async function(c,a){return this._adapter.executeQuery(c,a)};f.queryLastEditDate=async function(){const c=this._serviceInfo.source;return(await w(c.path,{query:{...c.query,f:"json"},responseType:"json"})).data.editingInfo.lastEditDate};f.forEachRequest=function(c,a){c=this._subscriptions.get(c);const {requests:b,signal:d}=c;for(const e of b.done)a(e.request,
{signal:d})};f._executePatchQuery=async function(c,a,b,d){a=a.clone();a.outFields=[this._serviceInfo.objectIdField,...b];a.returnCentroid=!1;a.returnGeometry=!1;b=n.isSome(a.start)?a.start/8E3:0;return this._patchQueue.push({tile:c,query:a,signal:d.signal,depth:b})};f._resendRequest=async function(c,a){const {query:b,request:d}=c,e=n.isSome(b.outFields)?b.outFields:[];c=this._sourceQueryInfo.outFields;const g=c.filter(m=>-1===e.indexOf(m));if(!n.isNone(d.features))if(g.length)try{const m=await this._executePatchQuery(d.tile,
b,g,a);h.throwIfAborted(a);b.outFields=c;d.features.joinAttributes(m);this._onRequest({...d,end:d.end||a.end},"new",a)}catch(m){}else this._onRequest({...d,end:d.end||a.end},"new",a)};f.resend=async function({dataTileOnly:c}){let a=0,b=!1;const d=[];for(this._subscriptions.forEach(e=>{e.requests.done.length||(e=e.tile,this._onRequest({tile:e,id:e.id,features:null,noData:!0,end:!1},"new",{dataTileOnly:!0}))});!b;)b=!0,this._subscriptions.forEach(({requests:e,signal:g})=>{e.done.length>a&&(b=!1,d.push(this._resendRequest(e.done[a],
{signal:g,dataTileOnly:c,end:e.done.length===a+1})))}),a++;await h.all(d)};f._createQuery=function(c,a){const b=new x({...this._serviceQueryInfo,...this._sourceQueryInfo,...a});this._serviceInfo.capabilities.query.supportsQuantization||(a.quantizationParameters=null,b.maxAllowableOffset=c.resolution);a.quantizationParameters&&"esriGeometryPolyline"===this.geometryType&&(b.maxAllowableOffset=c.resolution);b.resultType="tile";b.geometry=c.extent;return b};r._createClass(l,[{key:"updating",get:function(){return!!this._queue.length}}]);
return l}(z.DataTileSource);q.BaseFeatureSource=p;Object.defineProperty(q,"__esModule",{value:!0})});