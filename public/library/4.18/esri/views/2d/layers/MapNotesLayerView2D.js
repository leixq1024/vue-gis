// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/Collection ../../../Graphic ../../layers/LayerView ./graphics/GraphicsView2D ./LayerView2D".split(" "),function(p,
q,h,k,z,A,B,C,r,D,E,F,t,u,v,m,w){const x=Object.freeze({remove(){},pause(){},resume(){}});h=function(n){function l(){return n.apply(this,arguments)||this}p._inheritsLoose(l,n);var f=l.prototype;f.fetchPopupFeatures=async function(a){return(await Promise.all(Array.from(this.graphicsViews(),b=>b.searchFeatures(a).then(c=>c.filter(e=>!!e.popupTemplate))))).flat()};f.graphicsViews=function*(){k.isSome(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():k.isSome(this._graphicsViews)?
yield*this._graphicsViews:yield*[]};f.hitTest=async function(a,b){if(this.suspended)return null;const c=Array.from(this.graphicsViews(),async e=>{const d=await e.hitTest(a,b);return d?(d.layer=this.layer,d.sourceLayer=this.layer,k.isSome(this._graphicsViewsFeatureCollectionMap)&&(e=this._graphicsViewsFeatureCollectionMap.get(e),!d.popupTemplate&&e.popupTemplate&&(d.popupTemplate=e.popupTemplate)),d):null});return(await Promise.all(c)).filter(e=>!!e)[0]||null};f.highlight=function(a){let b;"number"===
typeof a?b=[a]:a instanceof u?b=[a.uid]:Array.isArray(a)&&0<a.length?b="number"===typeof a[0]?a:a.map(c=>c&&c.uid):t.isCollection(a)&&(b=a.map(c=>c&&c.uid).toArray());b=b.filter(c=>null!=c);if(!b.length)return x;for(const c of this.graphicsViews())c.addHighlight(b);return{remove:()=>{for(const c of this.graphicsViews())c.removeHighlight(b)}}};f.update=function(a){for(const b of this.graphicsViews())b.processUpdate(a)};f.attach=function(){var a;const b=this.view,c=()=>this.requestUpdate(),e=()=>this.notifyChange("updating");
if(null!=(a=this.layer.featureCollections)&&a.length){this._graphicsViewsFeatureCollectionMap=new Map;for(var d of this.layer.featureCollections){var g=new m({view:b,graphics:d.source,renderer:d.renderer,requestUpdateCallback:c});this._graphicsViewsFeatureCollectionMap.set(g,d);this.container.addChild(g.container);this.handles.add(g.watch("updating",e),"layerview-updating")}}else{d=[this.layer.polygonGraphics,this.layer.lineGraphics,this.layer.pointGraphics,this.layer.textGraphics].map(y=>new m({view:b,
graphics:y,requestUpdateCallback:c}));for(g of d)this.handles.add(g.watch("updating",e),"layerview-updating"),this.container.addChild(g.container);this._graphicsViews=d}};f.detach=function(){this.container.removeAllChildren();this.handles.remove("layerview-updating");for(const a of this.graphicsViews())a.destroy(),a.view=null,a.renderer=null;this._graphicsViewsFeatureCollectionMap=this._graphicsViews=null};f.moveStart=function(){};f.moveEnd=function(){};f.viewChange=function(){for(const a of this.graphicsViews())a.viewChange()};
f.isUpdating=function(){for(const a of this.graphicsViews())if(a.updating)return!0;return!1};return l}(w.LayerView2DMixin(v));return h=q.__decorate([r.subclass("esri.views.2d.layers.MapNotesLayerView2D")],h)});