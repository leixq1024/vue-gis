// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../core/Logger ../../../../core/mathUtils ../../../../core/screenUtils ../../../../chunks/vec3f64 ../../../../chunks/vec3 ../../../../chunks/vec2 ../../support/buffer/InterleavedLayout ../../support/geometryUtils ../lib/geometryDataUtils ../lib/Util ./renderers/utils ../lib/GLMaterial ../lib/Material ./VisualVariableMaterialParameters ../shaders/RibbonLineTechnique".split(" "),function(Z,aa,O,P,Q,K,y,l,ia,
ja,n,ka,la,ma,na,ba,oa,g){function R(C,v,c,a,b){for(let e=0;e<b;e++)c[a++]=C[v++];return a}function S(C,v,c){c=c?c[g.RibbonVertexAttributeConstants.POSITION]:null;return C.isClosed?c?2<c.length:6<v[g.RibbonVertexAttributeConstants.POSITION].data.length:!1}const pa=P.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");P=function(C){function v(a,b){a=C.call(this,b,a,qa)||this;a._vertexAttributeLocations=g.ribbonVertexAttributeLocations;a.techniqueConfig=new g.RibbonLineTechniqueConfiguration;
a.layout=a.createLayout();return a}aa._inheritsLoose(v,C);var c=v.prototype;c.isClosed=function(a,b){return this.params.isClosed?b?2<b.length:6<a.length:!1};c.dispose=function(){};c.getPassParameters=function(){return this.params};c.getTechniqueConfig=function(a,b){this.techniqueConfig.output=a;a=O.isSome(this.params.stipplePattern);this.techniqueConfig.stippleEnabled=a;this.techniqueConfig.stippleIntegerRepeatsEnabled=a&&this.params.stippleIntegerRepeats;this.techniqueConfig.stippleOffColorEnabled=
a&&O.isSome(this.params.stippleOffColor);this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled;this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees;this.techniqueConfig.roundJoins="round"===this.params.join;this.techniqueConfig.roundCaps="round"===this.params.cap;this.techniqueConfig.transparent=this.params.transparent;this.techniqueConfig.polygonOffset=this.params.polygonOffset;this.techniqueConfig.writeDepth=this.params.writeDepth;this.techniqueConfig.vvColor=this.params.vvColorEnabled;
this.techniqueConfig.vvOpacity=this.params.vvOpacityEnabled;this.techniqueConfig.vvSize=this.params.vvSizeEnabled;this.techniqueConfig.innerColorEnabled=0<this.params.innerWidth&&O.isSome(this.params.innerColor);this.techniqueConfig.falloffEnabled=0<this.params.falloff;this.techniqueConfig.occluder=8===this.params.renderOccluded;this.techniqueConfig.transparencyPassType=b?b.transparencyPassType:3;return this.techniqueConfig};c.intersect=function(a,b,e,f,d,k,h,m,t){t?this.intersectDrapedLineGeometry(a,
f,k,h):this.intersectLineGeometry(a,b,e,f,this.params.width,h)};c.intersectDrapedLineGeometry=function(a,b,e,f){if(b.options.selectionMode){b=a.getAttribute(g.RibbonVertexAttributeConstants.POSITION).data;var d=a.getAttribute(g.RibbonVertexAttributeConstants.SIZE),k=this.params.width;this.params.vvSizeEnabled?(d=a.getAttribute(g.RibbonVertexAttributeConstants.SIZEFEATUREATTRIBUTE).data[0],k*=Q.clamp(this.params.vvSizeOffset[0]+d*this.params.vvSizeFactor[0],this.params.vvSizeMinSize[0],this.params.vvSizeMaxSize[0])):
d&&(k*=d.data[0]);d=e[0];e=e[1];a=(k/2+4)*a.screenToWorldRatio;k=Number.MAX_VALUE;for(let q=0;q<b.length-5;q+=3){var h=b[q],m=b[q+1],t=d-h,u=e-m;h=b[q+3]-h;m=b[q+4]-m;const F=Q.clamp((h*t+m*u)/(h*h+m*m),0,1);t=h*F-t;u=m*F-u;u=t*t+u*u;u<k&&(k=u)}k<a*a&&f()}};c.intersectLineGeometry=function(a,b,e,f,d,k){if(f.options.selectionMode&&!ma.isInstanceHidden(b))if(la.isTranslationMatrix(e)){var h=a.data,m=h.getVertexAttr();a=m[g.RibbonVertexAttributeConstants.POSITION].data;this.params.vvSizeEnabled?d*=Q.clamp(this.params.vvSizeOffset[0]+
m[g.RibbonVertexAttributeConstants.SIZEFEATUREATTRIBUTE].data[0]*this.params.vvSizeFactor[0],this.params.vvSizeMinSize[0],this.params.vvSizeMaxSize[0]):m[g.RibbonVertexAttributeConstants.SIZE]&&(d*=m[g.RibbonVertexAttributeConstants.SIZE].data[0]);b=f.camera;var t=ra;ia.copy(t,f.point);d=d*b.pixelRatio/2+4*b.pixelRatio;l.set(N[0],t[0]-d,t[1]+d,0);l.set(N[1],t[0]+d,t[1]+d,0);l.set(N[2],t[0]+d,t[1]-d,0);l.set(N[3],t[0]-d,t[1]-d,0);for(var u=0;4>u;u++)if(!b.unprojectFromRenderScreen(N[u],G[u]))return;
n.plane.fromPoints(b.eye,G[0],G[1],T);n.plane.fromPoints(b.eye,G[1],G[2],U);n.plane.fromPoints(b.eye,G[2],G[3],V);n.plane.fromPoints(b.eye,G[3],G[0],W);u=Number.MAX_VALUE;h=S(this.params,m,h.indices)?a.length-2:a.length-5;for(m=0;m<h;m+=3){w[0]=a[m]+e[12];w[1]=a[m+1]+e[13];w[2]=a[m+2]+e[14];var q=(m+3)%a.length;x[0]=a[q]+e[12];x[1]=a[q+1]+e[13];x[2]=a[q+2]+e[14];if(!(0>n.plane.signedDistance(T,w)&&0>n.plane.signedDistance(T,x)||0>n.plane.signedDistance(U,w)&&0>n.plane.signedDistance(U,x)||0>n.plane.signedDistance(V,
w)&&0>n.plane.signedDistance(V,x)||0>n.plane.signedDistance(W,w)&&0>n.plane.signedDistance(W,x))){b.projectToRenderScreen(w,H);b.projectToRenderScreen(x,I);if(0>H[2]&&0<I[2])l.subtract(E,w,x),q=b.frustum,q=-n.plane.signedDistance(q.planes[4],w)/l.dot(E,n.plane.normal(q.planes[4])),l.scale(E,E,q),l.add(w,w,E),b.projectToRenderScreen(w,H);else if(0<H[2]&&0>I[2])l.subtract(E,x,w),q=b.frustum,q=-n.plane.signedDistance(q.planes[4],x)/l.dot(E,n.plane.normal(q.planes[4])),l.scale(E,E,q),l.add(x,x,E),b.projectToRenderScreen(x,
I);else if(0>H[2]&&0>I[2])continue;H[2]=0;I[2]=0;q=n.lineSegment.distance2(n.lineSegment.fromPoints(H,I,ca),t);q<u&&(u=q,l.copy(da,w),l.copy(ea,x))}}e=f.rayBeginPoint;f=f.rayEndPoint;u<d*d&&(a=Number.MAX_VALUE,n.lineSegment.closestLineSegmentPoint(n.lineSegment.fromPoints(da,ea,ca),n.lineSegment.fromPoints(e,f,sa),J)&&(l.subtract(J,J,e),a=l.length(J),l.scale(J,J,1/a),a/=l.distance(e,f)),k(a,J))}else pa.error("intersection assumes a translation-only matrix")};c.computeAttachmentOrigin=function(a,b){var e=
a.data;a="getVertexAttr"in e?e.getVertexAttr():"vertexAttr"in e?e.vertexAttr:null;if(!a)return null;const f=g.RibbonVertexAttributeConstants.POSITION;e="getVertexAttr"in e?e.indices:null;return ka.computeAttachmentOriginLines(a[f],e?e[f]:null,e&&S(this.params,a,e),b)};c.createLayout=function(){const a=ja.newLayout().vec3f(g.RibbonVertexAttributeConstants.POSITION).f32(g.RibbonVertexAttributeConstants.SUBDIVISIONFACTOR).vec2f(g.RibbonVertexAttributeConstants.UV0).vec3f(g.RibbonVertexAttributeConstants.AUXPOS1).vec3f(g.RibbonVertexAttributeConstants.AUXPOS2);
this.params.vvSizeEnabled?a.f32(g.RibbonVertexAttributeConstants.SIZEFEATUREATTRIBUTE):a.f32(g.RibbonVertexAttributeConstants.SIZE);this.params.vvColorEnabled?a.f32(g.RibbonVertexAttributeConstants.COLORFEATUREATTRIBUTE):a.vec4f(g.RibbonVertexAttributeConstants.COLOR);this.params.vvOpacityEnabled&&a.f32(g.RibbonVertexAttributeConstants.OPACITYFEATUREATTRIBUTE);return a};c.createBufferWriter=function(){return new ta(this.layout,this.params)};c.getGLMaterial=function(a){return 0===a.output||7===a.output||
4===a.output||1===a.output?new ua(a):void 0};c.validateParameterValues=function(a){"miter"!==a.join&&(a.miterLimit=0);this.requiresTransparent(a)&&(a.transparent=!0)};c.requiresTransparent=function(a){return!!(1>(a.color&&a.color[3])||0<a.innerWidth&&this.colorRequiresTransparent(a.innerColor)||a.stipplePattern&&this.colorRequiresTransparent(a.stippleOffColor)||0<a.falloff)};c.colorRequiresTransparent=function(a){return O.isSome(a)&&1>a[3]&&0<a[3]};return v}(ba.Material);let ua=function(C){function v(a){a=
C.call(this,a)||this;a.updateParameters();return a}aa._inheritsLoose(v,C);var c=v.prototype;c.updateParameters=function(a){this.technique=this.techniqueRep.acquireAndReleaseExisting(g.RibbonLineTechnique,this.material.getTechniqueConfig(this.output,a),this.technique)};c.beginSlot=function(a){return this.technique.configuration.occluder?3===a||10===a||11===a:0===this.output||7===this.output?(this.targetSlot=this.technique.configuration.writeDepth?5:8,a===this.targetSlot):3===a};c._updateOccludeeState=
function(a){a.hasOccludees!==this.material.params.sceneHasOcludees&&this.material.setParameterValues({sceneHasOcludees:a.hasOccludees})};c.ensureParameters=function(a){0!==this.output&&7!==this.output||this._updateOccludeeState(a);this.updateParameters(a)};c.bind=function(a,b){a.bindProgram(this.technique.program);this.technique.bindPass(a,this.material.getPassParameters(),b)};c.getPipelineState=function(a,b){return this.technique.getPipelineState(a,b)};return v}(na);const qa={width:0,color:[1,1,
1,1],join:"miter",cap:"butt",miterLimit:5,writeDepth:!0,polygonOffset:!1,stipplePattern:null,stippleIntegerRepeats:!1,stippleOffColor:null,slicePlaneEnabled:!1,vvFastUpdate:!1,transparent:!1,isClosed:!1,falloff:0,innerWidth:0,innerColor:null,sceneHasOcludees:!1,...ba.materialParametersDefaults,...oa.Default};let ta=function(){function C(c,a){this.params=a;this.numJoinSubdivisions=0;this.vertexBufferLayout=c;switch(this.params.join){case "miter":case "bevel":this.numJoinSubdivisions=a.stipplePattern?
1:0;break;case "round":this.numJoinSubdivisions=1}}var v=C.prototype;v.isClosed=function(c){return S(this.params,c.vertexAttr,c.indices)};v.numCapSubdivisions=function(c){if(this.isClosed(c))return 0;switch(this.params.cap){case "butt":return 0;case "square":return 1;case "round":return 3}};v.allocate=function(c){return this.vertexBufferLayout.createBuffer(c)};v.elementCount=function(c){var a=2*this.numCapSubdivisions(c)+2,b=c.indices[g.RibbonVertexAttributeConstants.POSITION].length/2+1;const e=
this.isClosed(c);a=e?2:2*a;var f=e?0:1;b=e?b:b-1;if(c.vertexAttr[g.RibbonVertexAttributeConstants.SUBDIVISIONS])for(c=c.vertexAttr[g.RibbonVertexAttributeConstants.SUBDIVISIONS].data;f<b;++f)a+=4+2*c[f];else a+=(b-f)*(2*this.numJoinSubdivisions+4);return a+2};v.write=function(c,a,b,e){const f=va,d=wa,k=xa;var h=a.vertexAttr[g.RibbonVertexAttributeConstants.POSITION].data,m=a.indices&&a.indices[g.RibbonVertexAttributeConstants.POSITION];const t=this.numCapSubdivisions(a);m&&m.length!==2*(h.length/
3-1)&&console.warn("RibbonLineMaterial does not support indices");m=null;a.vertexAttr[g.RibbonVertexAttributeConstants.SUBDIVISIONS]&&(m=a.vertexAttr[g.RibbonVertexAttributeConstants.SUBDIVISIONS].data);let u=1,q=0;this.params.vvSizeEnabled?q=a.vertexAttr[g.RibbonVertexAttributeConstants.SIZEFEATUREATTRIBUTE].data[0]:a.vertexAttr[g.RibbonVertexAttributeConstants.SIZE]&&(u=a.vertexAttr[g.RibbonVertexAttributeConstants.SIZE].data[0]);let F=[1,1,1,1],fa=0;this.params.vvColorEnabled?fa=a.vertexAttr[g.RibbonVertexAttributeConstants.COLORFEATUREATTRIBUTE].data[0]:
a.vertexAttr[g.RibbonVertexAttributeConstants.COLOR]&&(F=a.vertexAttr[g.RibbonVertexAttributeConstants.COLOR].data);let ha=0;this.params.vvOpacityEnabled&&(ha=a.vertexAttr[g.RibbonVertexAttributeConstants.OPACITYFEATUREATTRIBUTE].data[0]);const X=h.length/3;c=c.transformation;const r=new Float32Array(b.buffer);b=this.vertexBufferLayout.stride/4;let p=e*b;e=p;const z=(D,L,Y,ya,za,Aa,Ba)=>{r[p++]=L[0];r[p++]=L[1];r[p++]=L[2];r[p++]=ya;r[p++]=za;r[p++]=Aa;r[p++]=D[0];r[p++]=D[1];r[p++]=D[2];r[p++]=Y[0];
r[p++]=Y[1];r[p++]=Y[2];this.params.vvSizeEnabled?r[p++]=q:r[p++]=u;this.params.vvColorEnabled?r[p++]=fa:(D=Math.min(4*Ba,F.length-4),r[p++]=F[D+0],r[p++]=F[D+1],r[p++]=F[D+2],r[p++]=F[D+3]);this.params.vvOpacityEnabled&&(r[p++]=ha)};p+=b;l.set(d,h[0],h[1],h[2]);c&&l.transformMat4(d,d,c);if(a=this.isClosed(a)){var A=h.length-3;l.set(f,h[A],h[A+1],h[A+2]);c&&l.transformMat4(f,f,c)}else{l.copy(f,d);l.set(k,h[3],h[4],h[5]);c&&l.transformMat4(k,k,c);for(A=0;A<t;++A){var B=1-A/t;z(f,d,k,B,1,-4,0);z(f,
d,k,B,1,4,0)}z(f,d,k,0,0,-4,0);z(f,d,k,0,0,4,0);l.copy(f,d);l.copy(d,k)}B=a?0:1;for(A=a?X:X-1;B<A;B++){var M=(B+1)%X*3;l.set(k,h[M+0],h[M+1],h[M+2]);c&&l.transformMat4(k,k,c);z(f,d,k,0,1,-1,B);z(f,d,k,0,1,1,B);M=m?m[B]:this.numJoinSubdivisions;for(let D=0;D<M;++D){const L=(D+1)/(M+1);z(f,d,k,L,1,-2,B);z(f,d,k,L,1,2,B)}z(f,d,k,1,0,-2,B);z(f,d,k,1,0,2,B);l.copy(f,d);l.copy(d,k)}if(a)p=R(r,e+b,r,p,2*b);else for(z(f,d,k,0,1,-5,A),z(f,d,k,0,1,5,A),h=0;h<t;++h)m=(h+1)/t,z(f,d,k,m,1,-5,A),z(f,d,k,m,1,5,
A);R(r,e+b,r,e,b);p=R(r,p-b,r,p,b)};return C}();const w=y.create(),x=y.create(),E=y.create(),J=y.create(),ra=y.create(),H=K.createRenderScreenPointArray3(),I=K.createRenderScreenPointArray3(),da=y.create(),ea=y.create(),ca=n.lineSegment.create(),sa=n.lineSegment.create(),va=y.create(),wa=y.create(),xa=y.create(),N=[K.createRenderScreenPointArray3(),K.createRenderScreenPointArray3(),K.createRenderScreenPointArray3(),K.createRenderScreenPointArray3()],G=[y.create(),y.create(),y.create(),y.create()],
T=n.plane.create(),U=n.plane.create(),V=n.plane.create(),W=n.plane.create();Z.RibbonLineMaterial=P;Object.defineProperty(Z,"__esModule",{value:!0})});