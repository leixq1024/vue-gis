// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/compilerUtils ../../../../../core/maybe ../../../../../core/Logger ../../../../../geometry/Point ../../../../../geometry ../../../../../core/mathUtils ../../../../../core/screenUtils ../../../../../chunks/vec3f64 ../../../../../chunks/vec3 ../../../../../chunks/mat4 ../../../../../chunks/mat4f64 ../../../../../chunks/quat ../../../support/stack ../../../../../chunks/vector ../../../support/geometryUtils ../../../webgl-engine/lib/Util ../../../webgl-engine/lib/GeometryData ../../../webgl-engine/lib/GeometryUtil ../../../webgl-engine/lib/Geometry ../../../webgl-engine/materials/RibbonLineMaterial ../../../webgl-engine/materials/NativeLineMaterial ../../../webgl-engine/materials/ColorMaterial ../../Manipulator3D ../../manipulatorUtils ./sliceToolConfig ../../../webgl-engine/materials/ImageMaterial ../../../webgl-engine/materials/SlicePlaneMaterial".split(" "),
function(q,Y,D,Z,aa,ha,G,M,x,e,t,N,S,l,H,y,I,ba,A,z,T,O,J,F,ca,p,da,ea){function U(a,c,b,d,f,g){const h=e.dot(a,c),k=l.sv3d.get(),m=l.sv3d.get();switch(0===d?Math.abs(h)>p.VERTICAL_DOT_THRESHOLD?1:2:d){case 2:e.cross(k,Math.abs(h)<=p.SMALL_ANGLE_DOT_THRESHOLD?a:b.viewUp,c);e.copy(m,c);break;case 1:e.cross(k,b.viewUp,c);e.cross(m,c,k);break;case 3:e.cross(k,Math.abs(h)<=p.SMALL_ANGLE_DOT_THRESHOLD?c:b.viewUp,a),e.cross(m,a,k)}a=e.cross(l.sv3d.get(),k,m);0<e.dot(a,b.viewForward)&&e.scale(m,m,-1);e.normalize(f,
k);e.normalize(g,m)}function P(a,c){switch(c){case 0:return{basis:a.basis1,direction:1,position:e.add(l.sv3d.get(),a.origin,a.basis1),edge:c};case 1:return{basis:a.basis2,direction:1,position:e.add(l.sv3d.get(),a.origin,a.basis2),edge:c};case 2:return{basis:a.basis1,direction:-1,position:e.subtract(l.sv3d.get(),a.origin,a.basis1),edge:c};case 3:return{basis:a.basis2,direction:-1,position:e.subtract(l.sv3d.get(),a.origin,a.basis2),edge:c}}}function Q(a,c,b){const d=b.projectToRenderScreen(e.add(l.sv3d.get(),
a,c),M.castRenderScreenPointArray3(l.sv3d.get()));a=b.projectToRenderScreen(e.subtract(l.sv3d.get(),a,c),M.castRenderScreenPointArray3(l.sv3d.get()));return e.squaredLength(e.subtract(d,d,a))}function E(a){const c=e.length(a.basis1);a=e.length(a.basis2);return p.RESIZE_HANDLE_EDGE_PADDING_FRAC*Math.min(c,a)}function K(a){return 0!==a.direction[0]&&0!==a.direction[1]}function V(a,c,b){const d=f=>{const g=(f?c:a).slice(0);var h=e.subtract(l.sv3d.get(),g[0],g[1]);e.normalize(h,h);var k=e.subtract(l.sv3d.get(),
g[g.length-1],g[g.length-2]);e.normalize(k,k);if(0<b.padding){var m=e.scale(x.create(),k,-b.padding);g[g.length-1]=e.add(m,m,g[g.length-1]);b.bothEnds&&(m=e.scale(x.create(),h,-b.padding),g[0]=e.add(m,m,g[0]))}var n=f?b.tipFocusMultiplier:1;m=b.tipLength*(b.focusTipLength?n:1);const w=b.tipRadius*n;n=t.identity(l.sm4d.get());if(0<b.padding){var r=m/4,u=e.set(l.sv3d.get(),0,r,0);r=1+b.padding/r;t.translate(n,n,u);t.scale(n,n,e.set(l.sv3d.get(),r,r,r));t.translate(n,n,e.scale(u,u,-1/r))}r=t.identity(N.create());
u=x.fromValues(0,1,0);k=t.fromQuat(N.create(),S.rotationTo(l.sq4d.get(),u,k));k[12]=g[g.length-1][0];k[13]=g[g.length-1][1];k[14]=g[g.length-1][2];t.multiply(k,k,n);{f=b.tubeRadius*(f?b.tubeFocusMultiplier:1)+b.padding;var v=b.flat;const R=[];if(D.isSome(v))R.push([f,v.thickness/2],[-f,v.thickness/2],[-f,-v.thickness/2],[f,-v.thickness/2]);else for(v=0;12>v;v++){const W=v/12*2*Math.PI;R.push([Math.cos(W)*f,Math.sin(W)*f])}f=A.createPathExtrusionGeometry(R,g,[],[],!1)}f=[{part:"tube",geometry:new z(f,
"arrow-tube"),transform:r}];let B;D.isSome(b.flat)?r=new z(A.createExtrudedTriangle(m,w,w,b.flat.thickness),"arrow-tip"):(r=new z(A.createConeGeometry(m,w,24,!1,!1,!0),"arrow-tip"),B=new z(A.createConeGeometry(m,w,24,!1,!0,!1),"arrow-cap"));f.push({part:"tip",geometry:r,transform:k});B&&f.push({part:"cap",geometry:B,transform:k});b.bothEnds&&(h=t.fromQuat(N.create(),S.rotationTo(l.sq4d.get(),u,h)),h[12]=g[0][0],h[13]=g[0][1],h[14]=g[0][2],t.multiply(h,h,n),f.push({part:"tip",geometry:r,transform:h}),
B&&f.push({part:"cap",geometry:B,transform:h}));return f};return{normal:d(!1),focused:d(!0)}}function X(a,c){const b=e.subtract(x.create(),a[a.length-1],a[a.length-2]);e.normalize(b,b);e.scale(b,b,p.ROTATE_HEADING_TIP_LENGTH);e.add(b,b,a[a.length-1]);return c?(c=e.subtract(x.create(),a[0],a[1]),e.normalize(c,c),e.scale(c,c,p.ROTATE_HEADING_TIP_LENGTH),e.add(c,c,a[0]),[c,...a,b]):[...a,b]}const fa=Z.getLogger("esri.views.3d.interactive.analysisTools.slice.sliceToolUtils"),L=y.ray.create(),C=Math.PI/
2;q.DidPointerMoveRecentlyFlag=16;q.addArrowTips=X;q.calculateBoundedPlaneTranslateRotate=function(a,c){return ca.calculateTranslateRotateFromBases(a.basis1,a.basis2,a.origin,c)};q.calculateDiagonalResizeHandleScale=function(a){return E(a)};q.calculatePlaneHalfSize=function(a,c){return p.INITIAL_PLANE_HALF_SIZE_VIEW_PROPORTION*Math.min(c.width,c.height)*c.computeRenderPixelSizeAt(a)};q.calculateResizeHandlePadding=E;q.calculateScreenSpaceBasisLength2=Q;q.createArrowGeometry=V;q.createGridManipulator=
function(a){const c=new z(A.createSquareGeometry(),"slice-grid");var b=[...p.PLANE_BACKGROUND_COLOR];b=new ea.SlicePlaneMaterial({backgroundColor:b,gridColor:p.GRID_COLOR,gridWidth:4,renderOccluded:4},"slice-grid");return{manipulator:new F.Manipulator3D({view:a,renderObjects:[{geometry:c,material:b}],interactive:!1,autoScaleRenderObjects:!1,worldSized:!0}),material:b}};q.createOutlineManipulator=function(a){const c=new z(A.createPolylineGeometry([[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0],[-1,-1,0]]),"slice-outline");
var b=[...p.PLANE_OUTLINE_COLOR];b=new T.RibbonLineMaterial({color:b,writeDepth:!1,width:p.PLANE_OUTLINE_WIDTH,renderOccluded:4},"slice-outline");return{manipulator:new F.Manipulator3D({view:a,renderObjects:[{geometry:c,material:b}],interactive:!1,autoScaleRenderObjects:!1,worldSized:!0}),material:b}};q.createPlane=function(a,c,b,d,f,g,h,k){h=h.worldUpAtPosition(a,l.sv3d.get());U(c,h,f,g,k.basis1,k.basis2);e.scale(k.basis1,k.basis1,b);e.scale(k.basis2,k.basis2,d);e.copy(k.origin,a);y.plane.fromVectorsAndPoint(k.basis2,
k.basis1,k.origin,k.plane);return k};q.createResizeManipulator=function(a,c){const b=(c=K(c))?[x.fromValues(1,0,0),x.fromValues(0,0,0),x.fromValues(0,1,0)]:[x.fromValues(1,0,0),x.fromValues(-1,0,0)],d=new z(A.createPolylineGeometry(b),"slice-resize"),f=[...p.HANDLE_COLOR,1],g=n=>new T.RibbonLineMaterial({color:f,width:n,renderOccluded:4},"slice-resize"),h=()=>new O.NativeLineMaterial({color:f,renderOccluded:4},"slice-resize"),k=c?p.RESIZE_HANDLE_CORNER_WIDTH:p.RESIZE_HANDLE_EDGE_WIDTH,m=k*p.DISPLAY_FOCUS_MULTIPLIER;
return new F.Manipulator3D({view:a,renderObjects:[{geometry:d,material:1<k?g(k):h(),stateMask:1},{geometry:d,material:1<m?g(m):h(),stateMask:2}],collisionType:{type:"line",paths:[b]},autoScaleRenderObjects:!1,worldSized:!0,radius:c?p.RESIZE_HANDLE_CORNER_INPUT_RADIUS:p.RESIZE_HANDLE_EDGE_INPUT_RADIUS})};q.createRotateManipulator=function(a,c){var b=new da.ImageMaterial({transparent:!0,writeDepth:!1,textureId:c.id,renderOccluded:16},"slice-rotate");const d=p.ROTATE_HEADING_OFFSET_DISTANCE;c=p.ROTATE_HEADING_DISC_RADIUS;
const f=c*p.ROTATE_HEADING_DISC_RADIUS_FOCUS_MULTIPLIER,g=n=>{const w=new Uint32Array([0,1,2,2,3,0]);return new z(new ba.GeometryData({[I.VertexAttrConstants.POSITION]:{size:3,data:new Float32Array([d-n,-n,0,d+n,-n,0,d+n,n,0,d-n,n,0])},[I.VertexAttrConstants.UV0]:{size:2,data:new Float32Array([0,0,1,0,1,1,0,1])}},{[I.VertexAttrConstants.POSITION]:w,[I.VertexAttrConstants.UV0]:w}))},h=new z(A.createPolylineGeometry([[0,0,0],[d-c,0,0]]),"slice-rotate-heading"),k=new z(A.createPolylineGeometry([[0,0,
0],[d-f,0,0]]),"slice-rotate-heading"),m=new O.NativeLineMaterial({color:p.ROTATE_HEADING_CALLOUT_COLOR,renderOccluded:4},"slice-rotate-heading");b=[{geometry:g(c),material:b,stateMask:17},{geometry:h,material:m,stateMask:17},{geometry:g(f),material:b,stateMask:18},{geometry:k,material:m,stateMask:18}];return new F.Manipulator3D({view:a,renderObjects:b,autoScaleRenderObjects:!1,collisionType:{type:"disc",direction:[0,0,1],offset:[d,0,0]},collisionPriority:1,radius:c/2,state:16})};q.createRotatePlane=
function(a,c,b,d){c=c.worldUpAtPosition(a.origin,l.sv3d.get());const f=l.sv3d.get();switch(b){case 1:e.copy(f,c);break;case 2:e.copy(f,a.basis1)}return y.plane.fromPositionAndNormal(a.origin,f,d)};q.createShiftManipulator=function(a){const c=[x.fromValues(0,0,-p.SHIFT_RESTART_ARROW_LENGTH/2),x.fromValues(0,0,p.SHIFT_RESTART_ARROW_LENGTH/2)],b=X(c,!0);var d=(u,v)=>V(c,c,{tubeRadius:p.SHIFT_RESTART_TUBE_RADIUS,tipRadius:p.SHIFT_RESTART_TIP_RADIUS,tipLength:p.SHIFT_RESTART_TIP_LENGTH,tubeFocusMultiplier:p.SHIFT_RESTART_TUBE_FOCUS_MULTIPLIER,
tipFocusMultiplier:p.SHIFT_RESTART_TIP_FOCUS_MULTIPLIER,padding:u,bothEnds:!0,flat:null,focusTipLength:!0,addCap:v});const f=d(0,!1);d=d(p.SHIFT_RESTART_ARROW_OUTLINE_WIDTH,!0);const g=new J.ColorMaterial({color:p.SHIFT_RESTART_ARROW_TIP_COLOR,cullFace:2,renderOccluded:16},"slice-shift"),h=new J.ColorMaterial({color:p.SHIFT_RESTART_ARROW_CAP_COLOR,cullFace:2,renderOccluded:16},"slice-shift"),k=new J.ColorMaterial({color:p.SHIFT_RESTART_TUBE_COLOR,cullFace:2,renderOccluded:16},"slice-shift"),m=new J.ColorMaterial({color:p.SHIFT_RESTART_OUTLINE_COLOR,
transparent:!0,writeDepth:!1,cullFace:1,renderOccluded:2},"slice-shift"),n=new z(A.createPolylineGeometry([[0,0,0],[-p.SHIFT_RESTART_OFFSET_DISTANCE,0,0]]),"slice-rotate-heading"),w=new z(A.createPolylineGeometry([[0,0,0],[-p.SHIFT_RESTART_OFFSET_DISTANCE,0,0]]),"slice-rotate-heading"),r=new O.NativeLineMaterial({color:p.SHIFT_RESTART_CALLOUT_COLOR,renderOccluded:4},"slice-rotate-heading");return new F.Manipulator3D({view:a,renderObjects:[...f.normal.map(({part:u,geometry:v,transform:B})=>({geometry:v,
material:"tip"===u?g:"cap"===u?h:k,transform:B,stateMask:17})),...d.normal.map(({geometry:u,transform:v})=>({geometry:u,material:m,transform:v,stateMask:17})),{geometry:n,material:r,stateMask:49},...f.focused.map(({part:u,geometry:v,transform:B})=>({geometry:v,material:"tip"===u?g:"cap"===u?h:k,transform:B,stateMask:18})),...d.focused.map(({geometry:u,transform:v})=>({geometry:u,material:m,transform:v,stateMask:18})),{geometry:w,material:r,stateMask:50}],autoScaleRenderObjects:!1,collisionType:{type:"line",
paths:[b]},collisionPriority:1,radius:p.SHIFT_RESTART_TIP_RADIUS,state:16})};q.createShiftPlane=function(a,c,b,d){b=e.cross(l.sv3d.get(),c,b);e.cross(b,b,c);return y.plane.fromPositionAndNormal(a,b,d)};q.forceHorizontalOrVertical=function(a,c,b){var d=c.worldUpAtPosition(a.origin,l.sv3d.get());c=a.basis1;d=H.angleAroundAxis(d,a.basis2,a.basis1)+C;return y.boundedPlane.rotate(a,Math.round(d/C)*C-d,c,b)};q.isAlwaysDrapedLayer=function(a){switch(a.type){case "building-scene":case "csv":case "feature":case "geo-rss":case "geojson":case "graphics":case "group":case "integrated-mesh":case "kml":case "map-notes":case "ogc-feature":case "point-cloud":case "route":case "scene":case "stream":case "unknown":case "unsupported":case null:return!1;
case "base-dynamic":case "base-elevation":case "base-tile":case "bing-maps":case "elevation":case "imagery":case "imagery-tile":case "map-image":case "open-street-map":case "tile":case "vector-tile":case "wcs":case "web-tile":case "wms":case "wmts":return!0;default:return Y.neverReached(a.type),!1}};q.isDiagonalResizeHandle=K;q.normalToBases=U;q.planeToShape=function(a,c,b,d){if(D.isNone(a))return null;const f=D.isSome(d.position)?d.position:new aa;c.fromRenderCoords(a.origin,f,b);d.position=f;b=
c.worldUpAtPosition(a.origin,l.sv3d.get());c=c.worldBasisAtPosition(a.origin,1,l.sv3d.get());d.width=2*e.length(a.basis1);d.height=2*e.length(a.basis2);d.tilt=G.rad2deg(H.angleAroundAxis(b,a.basis2,a.basis1)+C);d.heading=G.rad2deg(H.angleAroundAxis(a.basis1,c,b)-C);return d};q.resizePlane=function(a,c,b,d,f,g){const h=e.copy(l.sv3d.get(),f.origin);e.add(h,h,e.scale(l.sv3d.get(),f.basis1,0>a.direction[0]?1:-1));e.add(h,h,e.scale(l.sv3d.get(),f.basis2,0>a.direction[1]?1:-1));var k=e.length(f.basis1);
const m=e.length(f.basis2);b=e.subtract(l.sv3d.get(),b,h);var n=e.subtract(l.sv3d.get(),c,h);let w=0;c=0;if(K(a)){var r=E(f);const u=E(g);w=k-.5*a.direction[0]*e.dot(f.basis1,n)/k;c=m-.5*a.direction[1]*e.dot(f.basis2,n)/m;n=u/r;w*=n;c*=n}n=.5*a.direction[0]*e.dot(f.basis1,b)/k;r=.5*a.direction[1]*e.dot(f.basis2,b)/m;b=w+n;c+=r;k=e.scale(l.sv3d.get(),f.basis1,b/k);f=e.scale(l.sv3d.get(),f.basis2,c/m);(0>=b||Q(g.origin,k,d)<=p.PLANE_MIN_BASIS_SCREEN_LEN2)&&e.copy(k,g.basis1);(0>=c||Q(g.origin,f,d)<=
p.PLANE_MIN_BASIS_SCREEN_LEN2)&&e.copy(f,g.basis2);d=e.copy(l.sv3d.get(),h);e.add(d,d,e.scale(l.sv3d.get(),k,0>a.direction[0]?-1:1));e.add(d,d,e.scale(l.sv3d.get(),f,0>a.direction[1]?-1:1));return y.boundedPlane.fromValues(d,k,f,g)};q.shapeToPlane=function(a,c,b){if(D.isNone(a)||D.isNone(a.position))return null;if(!c.toRenderCoords(a.position,b.origin))return fa.error(`Failed to project slice plane position, projection from ${a.position.spatialReference.wkid} is not supported`),null;c.worldBasisAtPosition(b.origin,
0,b.basis1);c.worldBasisAtPosition(b.origin,1,b.basis2);y.plane.fromVectorsAndPoint(b.basis2,b.basis1,b.origin,b.plane);y.boundedPlane.rotate(b,-G.deg2rad(a.heading),y.boundedPlane.normal(b),b);y.boundedPlane.rotate(b,G.deg2rad(a.tilt),b.basis1,b);e.scale(b.basis1,b.basis1,a.width/2);e.scale(b.basis2,b.basis2,a.height/2);y.boundedPlane.updateUnboundedPlane(b);return b};q.updateResizeHandle=function(a,c,b,d){var f=e.length(d.basis1);const g=e.length(d.basis2);var h=E(d);const k=E(d),m=e.set(l.sv3d.get(),
0,0,0);e.add(m,e.scale(l.sv3d.get(),d.basis1,c.direction[0]),e.scale(l.sv3d.get(),d.basis2,c.direction[1]));e.add(m,d.origin,m);d=0;let n=1;K(c)?(1===c.direction[0]&&-1===c.direction[1]?d=C:1===c.direction[0]&&1===c.direction[1]?d=Math.PI:-1===c.direction[0]&&1===c.direction[1]&&(d=3*Math.PI/2),n=k):(d=0!==c.direction[0]?1:2,f=1===d?g:f,d=1===d?C:0,n=f-h);h=t.identity(l.sm4d.get());t.rotateZ(h,h,d);t.scale(h,h,e.set(l.sv3d.get(),n,n,n));t.multiply(h,b,h);h[12]=0;h[13]=0;h[14]=0;a.modelTransform=h;
a.renderLocation=m};q.updateRotateHeadingHandle=function(a,c,b,d){d=d.worldUpAtPosition(b.origin,l.sv3d.get());const f=P(b,0),g=t.identity(l.sm4d.get());t.rotateZ(g,g,f.edge*Math.PI/2);t.rotateX(g,g,-(H.angleAroundAxis(d,b.basis2,b.basis1)+C));t.multiply(g,c,g);g[12]=0;g[13]=0;g[14]=0;a.modelTransform=g;a.renderLocation=f.position};q.updateRotateTiltHandle=function(a,c,b){b=P(b,1);const d=t.identity(l.sm4d.get());t.rotateZ(d,d,b.edge*Math.PI/2);t.rotateX(d,d,C);t.multiply(d,c,d);d[12]=0;d[13]=0;d[14]=
0;a.modelTransform=d;a.renderLocation=b.position};q.updateShiftRestartHandle=function(a,c,b,d){var f=P(b,2);const g=l.sm4d.get();t.rotateZ(g,c,f.edge*Math.PI/2);c=e.normalize(l.sv3d.get(),f.basis);c=e.scale(l.sv3d.get(),c,f.direction*d.computeScreenPixelSizeAt(f.position)*p.SHIFT_RESTART_OFFSET_DISTANCE);e.add(c,c,f.position);f=d.projectToRenderScreen(c,M.castRenderScreenPointArray3(l.sv3d.get()));{const [k,m,n,w]=d.viewport;var h=Math.min(n,w)/16;let r=!0;f[0]<k+h?(f[0]=k+h,r=!1):f[0]>k+n-h&&(f[0]=
k+n-h,r=!1);f[1]<m+h?(f[1]=m+h,r=!1):f[1]>m+w-h&&(f[1]=m+w-h,r=!1);h=r}y.ray.fromRender(d,f,L);e.normalize(L.direction,L.direction);d=l.sv3d.get();!h&&y.boundedPlane.intersectRay(b,L,d)&&(c=d);g[12]=0;g[13]=0;g[14]=0;a.modelTransform=g;a.renderLocation=x.clone(c);a.state=h?a.state|32:a.state&-33};Object.defineProperty(q,"__esModule",{value:!0})});