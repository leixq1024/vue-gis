// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/has ../../../../../core/maybe ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/property ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/urlUtils ../../../../../core/uuid ../../../../../portal/support/resourceExtension ../../../../../core/clock ../../../../../core/scheduling ../../../../../core/Collection ../../../../../core/screenUtils ../../../../../core/collectionUtils ../../../../../chunks/vec3f64 ../../../../../chunks/vec3 ../../../../../core/Handles ../../../../../layers/Layer ../../../../../core/watchUtils ../../../../../chunks/mat4 ../../../../../layers/buildingSublayers/BuildingComponentSublayer ../../../../interactive/interactiveToolUtils ../../../../support/screenUtils ../../../support/stack ../../../support/geometryUtils ../../../webgl-engine/lib/Intersector ../../../webgl-engine/lib/Texture ../../../../interactive/dragEventPipeline ../../../../interactive/InteractiveToolBase ../../editingTools/dragEventPipeline3D ../../manipulatorUtils ./sliceToolConfig ./sliceToolUtils ./images/heading-rotate-png ./images/tilt-rotate-png".split(" "),
function(H,r,q,e,O,da,t,ea,P,fa,ha,ia,Q,R,S,y,I,z,m,J,K,T,A,U,F,B,p,g,V,L,C,W,D,X,n,h,Y,Z){function M(v,x,d,a){d=h.createShiftPlane(d,g.boundedPlane.normal(a),v.direction,g.plane.create());a=z.create();return g.plane.intersectRay(d,v,a)?{type:"shift",creatingPointerId:x,shiftPlane:d,depth:0,startPoint:a}:null}function G(v){return"mouse"!==v.pointerType||0===v.button}const N=O.getLogger("esri.views.3d.interactive.analysisTools.slice.SliceTool");q=function(v){function x(a){var b=v.call(this,a)||this;
b.clock=Q["default"];b.deferCreation=!0;b.cursor=null;b.layersMode="none";b.shiftManipulator=null;b.rotateHeadingManipulator=null;b.rotateTiltManipulator=null;b.resizeManipulators=null;b.disableEngineLayers=!1;b._handles=new J;b._viewHandles=new J;b._frameTask=null;b._prevPointerMoveTimeout=null;b._previewOutlineManipulator=null;b._previewOutlineMaterial=null;b._outlineManipulator=null;b._gridManipulator=null;b._gridMaterial=null;b._startPlane=g.boundedPlane.create();b._previewPlane=null;b._activeKeyModifiers=
{};b._lastCursorPosition=y.createScreenPoint();b._baseOpacity=1;b._resizeHandles=[{direction:[1,0]},{direction:[1,1]},{direction:[0,1]},{direction:[-1,1]},{direction:[-1,0]},{direction:[-1,-1]},{direction:[0,-1]},{direction:[1,-1]}];b._intersector=new V.Intersector(a.view.state.mode);b._intersector.options.store=0;return b}H._inheritsLoose(x,v);var d=x.prototype;d.initialize=function(){this.rotateHeadingTexture=new L(Y,"slice-rotate-heading",{width:64,height:64,mipmap:!0,preMultiplyAlpha:!0});this.rotateTiltTexture=
new L(Z,"slice-rotate-tilt",{width:64,height:64,mipmap:!0,preMultiplyAlpha:!0});this.view._stage&&(this.view._stage.add(4,this.rotateHeadingTexture),this.view._stage.add(4,this.rotateTiltTexture));const a=T.init(this,"state",l=>{"ready"!==l&&this.create();"sliced"===l&&this.complete()},!0);this._handles.add([a,this.view.state.watch("camera",()=>this._onCameraChange()),this.excludedLayers.on("before-add",l=>{const u=l.item;null!=u&&(u instanceof K||u instanceof U)?u instanceof K&&h.isAlwaysDrapedLayer(u)?
(N.error("excludedLayers",`Layer '${u.title}, id:${u.id}' of type '${u.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),l.preventDefault()):this.excludedLayers.includes(u)&&l.preventDefault():(N.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),l.preventDefault())})]);const b=l=>{this.updateManipulatorsInteractive(l);l.grabbing||(e.isSome(this.plane)&&g.boundedPlane.copy(this.plane,this._startPlane),this.inputState=
null)};this.shiftManipulator=h.createShiftManipulator(this.view);this.manipulators.add(this.shiftManipulator);this.shiftManipulator.events.on("grab-changed",l=>{this._onShiftGrab(l);b(this.shiftManipulator)});this._handles.add(this._createShiftDragPipeline(this.shiftManipulator));this.rotateHeadingManipulator=h.createRotateManipulator(this.view,this.rotateHeadingTexture);this.manipulators.add(this.rotateHeadingManipulator);this.rotateHeadingManipulator.events.on("grab-changed",l=>{this._onRotateHeadingGrab(l);
b(this.rotateHeadingManipulator)});this._handles.add(this._createRotateHeadingDragPipeline(this.rotateHeadingManipulator));this.rotateTiltManipulator=h.createRotateManipulator(this.view,this.rotateTiltTexture);this.manipulators.add(this.rotateTiltManipulator);this.rotateTiltManipulator.events.on("grab-changed",l=>{this._onRotateTiltGrab(l);b(this.rotateTiltManipulator)});this._handles.add(this._createRotateTiltDragPipeline(this.rotateTiltManipulator));this.resizeManipulators=this._resizeHandles.map((l,
u)=>{const E=h.createResizeManipulator(this.view,l);E.events.on("grab-changed",aa=>{this._onResizeGrab(aa,u);b(E)});this._handles.add(this._createResizeDragPipeline(E));return E});this.manipulators.addMany(this.resizeManipulators);const {manipulator:c,material:f}=h.createOutlineManipulator(this.view);this._previewOutlineManipulator=c;this._previewOutlineMaterial=f;this.manipulators.add(this._previewOutlineManipulator,2);this._outlineManipulator=h.createOutlineManipulator(this.view).manipulator;this.manipulators.add(this._outlineManipulator,
1);const {manipulator:k,material:w}=h.createGridManipulator(this.view);this._gridManipulator=k;this._gridMaterial=w;this.manipulators.add(this._gridManipulator,2)};d.destroy=function(){this.view._stage&&(this.view._stage.remove(4,this.rotateHeadingTexture.id),this.view._stage.remove(4,this.rotateTiltTexture.id));this.detach();this._handles.destroy();this._handles=null;this._viewHandles.destroy();this._viewHandles=null;this._removeFrameTask();this._clearPointerMoveTimeout()};d.internalSetPlane=function(a){this._set("plane",
a);this.planeChanged()};d.planeChanged=function(){this.view&&(this._updateLayerViews(),this.visible&&this.attached&&(this.view.slicePlane=this.plane,this._updateManipulators()))};d.enterExcludeLayerMode=function(){this.created&&(this._set("layersMode","exclude"),F.setActive(this,!0))};d.exitExcludeLayerMode=function(){this.created&&(this._set("layersMode","none"),F.setActive(this,!1))};d.deactivate=function(){this._updateMouseCursor();this._set("layersMode","none");this._updatePreviewPlane(null)};
d.onDetach=function(){this.plane=null;this._set("layersMode","none")};d.onShow=function(){this._updateMouseCursor();this._updateLayerViews();this._updateManipulators();const a=this.view;a.slicePlane=this.plane;0===this._viewHandles.size&&this._viewHandles.add([a.allLayerViews.on("change",()=>this._updateLayerViews()),this.excludedLayers.on("change",()=>this._updateLayerViews())])};d.onHide=function(){this._updateMouseCursor();this._updateLayerViews();this.view.slicePlane=null;this._viewHandles.removeAll();
this._clearPointerMoveTimeout()};d.onInputEvent=function(a){switch(a.type){case "pointer-down":if(!G(a))break;this._onPointerDown(a)&&(a.stopPropagation(),this._updateMouseCursor());break;case "pointer-drag":if(!G(a))break;this._onPointerDrag(a)&&a.stopPropagation();break;case "pointer-move":this._onPointerMove(a);this._updateMouseCursor();break;case "pointer-up":this._onPointerUp(a)&&a.stopPropagation();break;case "click":if(!G(a))break;this._onClick(a)&&a.stopPropagation();break;case "drag":this.inputState&&
a.stopPropagation();break;case "key-down":this._onKeyDown(a)&&a.stopPropagation();break;case "key-up":this._onKeyUp(a)&&a.stopPropagation()}};d._updateLayerViews=function(){const a=!(!this.plane||!this.visible),b=[],c=f=>{"layers"in f?f.layers.forEach(c):b.push(f)};this.excludedLayers.forEach(c);this.view.allLayerViews.forEach(f=>{"slicePlaneEnabled"in f&&(f.slicePlaneEnabled=a&&0>b.indexOf(f.layer));"sublayerViews"in f&&f.sublayerViews.forEach(k=>{k.slicePlaneEnabled=a&&0>b.indexOf(k.sublayer)})});
this.view.basemapTerrain.slicePlaneEnabled=a&&!this.excludeGroundSurface};d._onPointerDown=function(a){if("exclude"===this.layersMode)return!0;if(this._isTargeting){var b=B.createScreenPointFromEvent(a);const c=g.boundedPlane.create();if(this._pickPlane(b,!1,this._activeKeyModifiers,c))return g.boundedPlane.copy(c,this._startPlane),b=this._calculatePickRay(b),this.inputState=M(b,a.pointerId,c.origin,c),this.internalSetPlane(c),!0}return!1};d._onPointerDrag=function(a){if(a.pointerId===this._creatingPointerId){const b=
B.createScreenPointFromEvent(a);this.shiftManipulator.events.emit("drag",{action:"start",pointerType:a.pointerType,start:b,screenPoint:b});return!0}return!1};d._onPointerMove=function(a){this._lastCursorPosition.x=a.x;this._lastCursorPosition.y=a.y;this._resetPointerMoveTimeout();"touch"!==a.pointerType&&this._updatePreviewPlane(B.createScreenPointFromEvent(a),this._activeKeyModifiers)};d._onCameraChange=function(){this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers);this._updateManipulators()};
d._onPointerUp=function(a){return a.pointerId===this._creatingPointerId&&e.isSome(this.plane)?(g.boundedPlane.copy(this.plane,this._startPlane),this.inputState=null,!0):!1};d._onClick=function(a){if("exclude"!==this.layersMode||!this.created)return!1;this.view.hitTest(B.createScreenPointFromEvent(a)).then(b=>{b.results.length?(b=(b=b.results[0])&&b.graphic)&&(b=b.sourceLayer||b.layer)&&this.excludedLayers.push(b):b.ground.layer?this.excludedLayers.push(b.ground.layer):this.excludeGroundSurface=!0});
this._set("layersMode","none");F.setActive(this,!1);return!0};d._onKeyDown=function(a){return a.key===n.forceVerticalModifier||a.key===n.forceHorizontalModifier?(this._activeKeyModifiers[a.key]=!0,e.isSome(this._previewPlane)&&this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),!0):!1};d._onKeyUp=function(a){return a.key!==n.forceVerticalModifier&&a.key!==n.forceHorizontalModifier||!this._activeKeyModifiers[a.key]?!1:(delete this._activeKeyModifiers[a.key],e.isSome(this._previewPlane)&&
this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),!0)};d._onShiftGrab=function(a){"start"!==a.action||e.isNone(this.plane)||(a=this._calculatePickRay(a.screenPoint),g.boundedPlane.copy(this.plane,this._startPlane),this.inputState=M(a,null,this.shiftManipulator.renderLocation,this.plane))};d._createShiftDragPipeline=function(a){return C.createManipulatorDragEventPipeline(a,(b,c)=>{(b=this.inputState)&&"shift"===b.type&&c.next(D.screenToRenderPlane(this.view,b.shiftPlane)).next(this._shiftDragAdjustSensitivity(b)).next(this._shiftDragUpdatePlane(b))})};
d._shiftDragAdjustSensitivity=function(a){return b=>{if(e.isNone(this.plane))return null;const c=Math.min((1-Math.abs(m.dot(g.boundedPlane.normal(this.plane),b.ray.direction)/m.length(b.ray.direction)))/.001,1),f=-g.plane.signedDistance(this._startPlane.plane,b.renderEnd),k=-g.plane.signedDistance(this._startPlane.plane,a.startPoint);a.depth=a.depth*(1-c)+f*c-k;return b}};d._shiftDragUpdatePlane=function(a){return()=>{if(!e.isNone(this.plane)){var b=m.copy(p.sv3d.get(),this._startPlane.origin),c=
m.copy(p.sv3d.get(),g.boundedPlane.normal(this._startPlane));m.scale(c,c,-a.depth);m.add(c,c,b);g.boundedPlane.fromValues(c,this.plane.basis1,this.plane.basis2,this.plane);this.planeChanged();this.notifyChange("plane")}}};d._onRotateHeadingGrab=function(a){if("start"===a.action&&!e.isNone(this.plane)){var b=h.createRotatePlane(this.plane,this.view.renderCoordsHelper,1,g.plane.create());a=this._calculatePickRay(a.screenPoint);var c=z.create();g.plane.intersectRay(b,a,c)&&(g.boundedPlane.copy(this.plane,
this._startPlane),this.inputState={type:"rotate",rotatePlane:b,startPoint:c})}};d._createRotateHeadingDragPipeline=function(a){return C.createManipulatorDragEventPipeline(a,(b,c)=>{(b=this.inputState)&&"rotate"===b.type&&c.next(D.screenToRenderPlane(this.view,b.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(b)).next(this._rotateDragUpdatePlaneFromRotate())})};d._onRotateTiltGrab=function(a){if("start"===a.action&&!e.isNone(this.plane)){var b=h.createRotatePlane(this.plane,this.view.renderCoordsHelper,
2,g.plane.create());a=this._calculatePickRay(a.screenPoint);var c=z.create();g.plane.intersectRay(b,a,c)&&(g.boundedPlane.copy(this.plane,this._startPlane),this.inputState={type:"rotate",rotatePlane:b,startPoint:c})}};d._createRotateTiltDragPipeline=function(a){return C.createManipulatorDragEventPipeline(a,(b,c)=>{(b=this.inputState)&&"rotate"===b.type&&c.next(D.screenToRenderPlane(this.view,b.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(b)).next(this._rotateDragUpdatePlaneFromRotate())})};
d._rotateDragRenderPlaneToRotate=function(a){return b=>{if(e.isNone(this.plane))return null;const c=g.plane.normal(a.rotatePlane),f=X.calculateInputRotationTransform(this.inputState.startPoint,b.renderEnd,this.plane.origin,c);return{...b,rotateAxis:c,rotateAngle:f}}};d._rotateDragUpdatePlaneFromRotate=function(){return a=>{if(!e.isNone(this.plane)){var b=A.identity(p.sm4d.get());A.rotate(b,b,a.rotateAngle,a.rotateAxis);a=m.transformMat4(p.sv3d.get(),this._startPlane.basis1,b);b=m.transformMat4(p.sv3d.get(),
this._startPlane.basis2,b);g.boundedPlane.fromValues(this.plane.origin,a,b,this.plane);this.planeChanged();this.notifyChange("plane")}}};d._onResizeGrab=function(a,b){if("start"===a.action&&!e.isNone(this.plane)){a=this._calculatePickRay(a.screenPoint);var c=p.sv3d.get();g.plane.intersectRay(this.plane.plane,a,c)&&(g.boundedPlane.copy(this.plane,this._startPlane),this.inputState={type:"resize",activeHandleIdx:b,startPoint:z.clone(c)})}};d._createResizeDragPipeline=function(a){return C.createManipulatorDragEventPipeline(a,
(b,c)=>{(b=this.inputState)&&"resize"===b.type&&!e.isNone(this.plane)&&c.next(D.screenToRenderPlane(this.view,this.plane.plane)).next(this._resizeDragUpdatePlane(b))})};d._resizeDragUpdatePlane=function(a){return b=>{e.isNone(this.plane)||(h.resizePlane(this._resizeHandles[a.activeHandleIdx],this.inputState.startPoint,b.renderEnd,this.view._stage.getCamera(),this._startPlane,this.plane),this.planeChanged(),this.notifyChange("plane"))}};d._updatePreviewPlane=function(a,b={}){let c=this._previewPlane;
this._previewPlane=null;if(e.isNone(a))this._removeFrameTask(),this._updateManipulators();else{if(!this.plane&&this.active){const f=e.isSome(c)?c:g.boundedPlane.create();c=e.isSome(c)?g.boundedPlane.copy(c,ba):null;this._pickPlane(a,!0,b,f)&&(a=n.PREVIEW_FADE_DOT_THRESHOLD,b=!1,e.isSome(c)&&(b=m.dot(c.plane,f.plane)<a||m.dot(m.normalize(p.sv3d.get(),c.basis1),m.normalize(p.sv3d.get(),f.basis1))<a),b&&(this._baseOpacity=0),this._previewPlane=f)}e.isSome(this._previewPlane)&&e.isNone(this._frameTask)&&
0===this._baseOpacity?this._frameTask=R.addFrameTask({update:({deltaTime:f})=>{this._baseOpacity=Math.min(this._baseOpacity+f/(1E3*n.PREVIEW_FADE_DURATION_SECONDS),1);this._updateManipulators();1===this._baseOpacity&&this._removeFrameTask()}}):e.isNone(this._previewPlane)&&e.isSome(this._frameTask)?this._removeFrameTask():e.isSome(this._previewPlane)&&this._updateManipulators()}};d._removeFrameTask=function(){e.isSome(this._frameTask)&&(this._frameTask.remove(),this._frameTask=null)};d._calculatePickRay=
function(a){const b=g.ray.create();a=y.screenPointObjectToArray(a,ca);g.ray.fromScreen(this.view.state.camera,a,b);m.normalize(b.direction,b.direction);return b};d._pickMinResult=function(a){a=y.screenPointObjectToArray(a,p.sv2d.get());this.view.sceneIntersectionHelper.intersectToolIntersectorScreen(a,this._intersector);return this._intersector.results.min};d._pickPlane=function(a,b,c,f){var k=this._pickMinResult(a);a=p.sv3d.get();if(!k.getIntersectionPoint(a))return!1;k=k.getTransformedNormal(p.sv3d.get());
const w=this.view._stage.getCamera();0<m.dot(k,w.viewForward)&&m.scale(k,k,-1);const l=h.calculatePlaneHalfSize(a,w);b=(b?1:-1)*l*n.INITIAL_DEPTH_OFFSET_FRAC;b=m.scale(p.sv3d.get(),k,b);m.add(b,b,a);a=this.tiltEnabled?3:0;h.createPlane(b,k,l,l,w,c[n.forceVerticalModifier]?2:c[n.forceHorizontalModifier]?1:a,this.view.renderCoordsHelper,f);return!0};d._updateMouseCursor=function(){this._set("cursor",null);this._isTargeting||"exclude"===this.layersMode?this._set("cursor","crosshair"):e.isSome(this._creatingPointerId)&&
this._set("cursor","grabbing")};d._clearPointerMoveTimeout=function(){this._prevPointerMoveTimeout&&(this._prevPointerMoveTimeout.remove(),this._prevPointerMoveTimeout=null)};d._resetPointerMoveTimeout=function(){this._clearPointerMoveTimeout();this.shiftManipulator.state|=h.DidPointerMoveRecentlyFlag;this.rotateHeadingManipulator.state|=h.DidPointerMoveRecentlyFlag;this.rotateTiltManipulator.state|=h.DidPointerMoveRecentlyFlag;this._prevPointerMoveTimeout=this.clock.setTimeout(()=>{this.shiftManipulator.state&=
~h.DidPointerMoveRecentlyFlag;this.rotateHeadingManipulator.state&=~h.DidPointerMoveRecentlyFlag;this.rotateTiltManipulator.state&=~h.DidPointerMoveRecentlyFlag},n.POINTER_MOVE_TIMER_MS)};d._updateManipulators=function(){if(!this.disableEngineLayers){var a=e.isSome(this.plane)?this.plane:e.isSome(this._previewPlane)?this._previewPlane:null,b=e.isSome(a)&&a===this.plane,c=e.isSome(a)&&a===this._previewPlane,f=e.isSome(a)?h.calculateBoundedPlaneTranslateRotate(a,p.sm4d.get()):null;this.shiftManipulator.available=
b;this.rotateHeadingManipulator.available=b;this.rotateTiltManipulator.available=b&&this.tiltEnabled;this.resizeManipulators.forEach(k=>{k.available=b});b&&(h.updateShiftRestartHandle(this.shiftManipulator,f,a,this.view._stage.getCamera()),h.updateRotateHeadingHandle(this.rotateHeadingManipulator,f,a,this.view.renderCoordsHelper),h.updateRotateTiltHandle(this.rotateTiltManipulator,f,a),this.resizeManipulators.forEach((k,w)=>{h.updateResizeHandle(k,this._resizeHandles[w],f,a)}));this._previewOutlineManipulator.available=
c;this._outlineManipulator.available=b;this._gridManipulator.available=e.isSome(a);if(e.isSome(a)){c=m.set(p.sv3d.get(),m.length(a.basis1),m.length(a.basis2),1);c=A.fromScaling(p.sm4d.get(),c);c=A.multiply(c,f,c);c[12]=0;c[13]=0;c[14]=0;const k=m.set(p.sv3d.get(),f[12],f[13],f[14]);this._previewOutlineManipulator.modelTransform=c;this._previewOutlineManipulator.renderLocation=k;this._outlineManipulator.modelTransform=c;this._outlineManipulator.renderLocation=k;this._gridManipulator.modelTransform=
c;this._gridManipulator.renderLocation=k;this._updateMaterials()}}};d._updateMaterials=function(){this._previewOutlineMaterial.setParameterValues({color:[n.PLANE_OUTLINE_COLOR[0],n.PLANE_OUTLINE_COLOR[1],n.PLANE_OUTLINE_COLOR[2],n.PLANE_OUTLINE_COLOR[3]*this._baseOpacity]});this._gridMaterial.setParameterValues({backgroundColor:[n.PLANE_BACKGROUND_COLOR[0],n.PLANE_BACKGROUND_COLOR[1],n.PLANE_BACKGROUND_COLOR[2],n.PLANE_BACKGROUND_COLOR[3]*this._baseOpacity],gridColor:this.inputState&&"resize"===this.inputState.type?
n.GRID_COLOR:[0,0,0,0]})};d.updateManipulatorsInteractive=function(a){a.grabbing?(this.shiftManipulator.interactive=this.shiftManipulator===a,this.rotateHeadingManipulator.interactive=this.rotateHeadingManipulator===a,this.rotateTiltManipulator.interactive=this.rotateTiltManipulator===a,this.resizeManipulators.forEach(b=>{b.interactive=b===a})):(this.shiftManipulator.interactive=!0,this.rotateHeadingManipulator.interactive=!0,this.rotateTiltManipulator.interactive=!0,this.resizeManipulators.forEach(b=>
{b.interactive=!0}))};H._createClass(x,[{key:"state",get:function(){const a=!!this.plane,b=!!this.inputState;return a?a&&b?"slicing":a&&!b?"sliced":"ready":"ready"}},{key:"isSupported",get:function(){return"3d"===this.get("view.type")}},{key:"plane",set:function(a){this.view?e.isSome(a)&&!this.tiltEnabled?this.internalSetPlane(h.forceHorizontalOrVertical(a,this.view.renderCoordsHelper,g.boundedPlane.create())):this.internalSetPlane(a):this._set("plane",a)}},{key:"excludedLayers",get:function(){return this._get("excludedLayers")||
new S},set:function(a){this._set("excludedLayers",I.referenceSetter(a,this._get("excludedLayers")))}},{key:"excludeGroundSurface",set:function(a){this._set("excludeGroundSurface",a);this.view&&this._updateLayerViews()}},{key:"tiltEnabled",set:function(a){a!==this._get("tiltEnabled")&&(this._set("tiltEnabled",a),this.view&&(this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),e.isSome(this.plane)&&!a&&(this.plane=g.boundedPlane.copy(this.plane)),this._updateManipulators()))}},
{key:"inputState",get:function(){return this._get("inputState")},set:function(a){this._set("inputState",a);this._updateMaterials()}},{key:"_isTargeting",get:function(){return!this.inputState&&!this.plane&&this.active}},{key:"_creatingPointerId",get:function(){return this.inputState&&"shift"===this.inputState.type?this.inputState.creatingPointerId:null}}]);return x}(W.InteractiveToolBase);r.__decorate([t.property()],q.prototype,"clock",void 0);r.__decorate([t.property({constructOnly:!0})],q.prototype,
"view",void 0);r.__decorate([t.property({dependsOn:["plane","inputState"],readOnly:!0})],q.prototype,"state",null);r.__decorate([t.property({dependsOn:["view.type"],readOnly:!0})],q.prototype,"isSupported",null);r.__decorate([t.property({readOnly:!0})],q.prototype,"cursor",void 0);r.__decorate([t.property({value:null})],q.prototype,"plane",null);r.__decorate([t.property({readOnly:!0})],q.prototype,"layersMode",void 0);r.__decorate([t.property({cast:I.castForReferenceSetter})],q.prototype,"excludedLayers",
null);r.__decorate([t.property({type:Boolean,value:!1})],q.prototype,"excludeGroundSurface",null);r.__decorate([t.property({type:Boolean,value:!1})],q.prototype,"tiltEnabled",null);r.__decorate([t.property({value:null})],q.prototype,"inputState",null);q=r.__decorate([P.subclass("esri.views.3d.interactive.analysisTools.slice.SliceTool")],q);const ba=g.boundedPlane.create(),ca=y.createScreenPointArray();return q});