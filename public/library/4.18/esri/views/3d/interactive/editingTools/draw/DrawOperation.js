// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/has ../../../../../core/maybe ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/property ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/urlUtils ../../../../../core/uuid ../../../../../portal/support/resourceExtension ../../../../../geometry/Point ../../../../../geometry ../../../../../core/Evented ../../../../../core/screenUtils ../../../../../core/Handles ../../../../../core/watchUtils ../coordinateHelper ./DrawManipulator ./drawSurfaces ../editGeometry/EditGeometry ../editGeometry/EditGeometryHelper ../../../../draw/DrawingMode ../../../../interactive/dragEventPipeline ../../../../interactive/snapping/SnappingAlgorithm ../../../../interactive/snapping/SnappingEngine".split(" "),
function(l,r,x,K,f,L,M,N,O,y,P,Q,R,z,S,A,B,C,D,E,F,G,t,H,I,q,u,J){l.DrawOperation=function(v){function m(b){var a=v.call(this)||this;a._manipulator=null;a._stagedVertex=null;a.geometryType=null;a.elevationInfo=null;a.snapToSceneEnabled=null;a._handles=new C;a._defaultZ=0;a._elevationDrawSurface=null;a._snappingDrawSurface=null;a._snappingEnabled=!1;a._createOperationCompleted=!1;a._pointerDownStates=new Set;a.view=b.view;a.drawingMode=f.unwrapOr(b.drawingMode,I.defaultDrawingMode);a.geometryType=
b.geometryType;a.elevationInfo=b.elevationInfo;a.coordinateHelper=E.createCoordinateHelper(b.hasZ,b.hasM,a.view.spatialReference,a.view.viewingMode);a._defaultZ=b.defaultZ;a.snapToSceneEnabled=b.snapToSceneEnabled;a.snappingEngine=new J.SnappingEngine(b.snappingOptions);a._snappingEnabled=b.snappingOptions.selfEnabled;a._handles.add(D.watch(b.snappingOptions,"selfEnabled",()=>{a._snappingEnabled=b.snappingOptions.selfEnabled}));a._snappingDrawSurface=f.unwrap(b.snappingDrawSurface);a._elevationDrawSurface=
new G.ElevationDrawSurface(a.elevationInfo,a._defaultZ,a.view);a._editGeometry=new H.EditGeometryHelper(new t.EditGeometry(a.coordinateHelper),"segment"===a.geometryType?"polyline":a.geometryType);a._activeComponent=new t.Component(a._editGeometry.data);a._editGeometry.data.components.push(a._activeComponent);a._editGeometry.on(["vertex-add","vertex-update","vertex-remove"],c=>{const k=c.vertices.map(n=>({componentIndex:0,vertexIndex:n.index,coordinates:a.coordinateHelper.toArray(n.pos)})),h=k.map(n=>
n.coordinates);switch(c.type){case "vertex-add":a.emit(c.type,{...c,added:h,vertices:k});break;case "vertex-update":a.emit(c.type,{...c,updated:h,vertices:k});break;case "vertex-remove":a.emit(c.type,{...c,removed:h,vertices:k})}});a._manipulator=new F.DrawManipulator({grabbableForEvent:c=>"click"!==a.drawingMode?!0:"touch"===c.pointerType&&a._snappingEnabled&&1===a._pointerDownStates.size});b.manipulators.add(a._manipulator);a._manipulator.grabbable="point"!==a.geometryType;const d=a.createManipulatorDragPipeline(a._manipulator),
e=a._manipulator.events.on("immediate-double-click",c=>{a._manipulator.dragging||"point"===a.geometryType||(a.complete(),c.stopPropagation())}),p=a._manipulator.events.on("immediate-click",c=>{if(!a._manipulator.dragging){var k=a._activeComponent,h=a._closeOnClickVertexIndex(c.screenPoint);if(f.isSome(h))a.discardStagedVertex(),a.complete();else if(h=a._screenToMap(c.screenPoint),f.isSome(h))switch(a.drawingMode){case "click":case "hybrid":a.hasStagedVertex?a.commitStagedVertex():a._editGeometry.appendVertex(a.coordinateHelper.fromPoint(h)),
("point"===a.geometryType||"segment"===a.geometryType&&2===k.vertices.length||"segment"===a.geometryType&&"hybrid"===a.drawingMode&&1===k.vertices.length)&&a.complete()}c.stopPropagation()}});a._handles.add([d,p,e]);return a}r._inheritsLoose(m,v);var g=m.prototype;g.createManipulatorDragPipeline=function(b){switch(this.drawingMode){case "click":return this.createManipulatorDragPipelineClick(b);case "freehand":return this.createManipulatorDragPipelineFreehand(b);case "hybrid":return this.createManipulatorDragPipelineHybrid(b)}};
g.createManipulatorDragPipelineClick=function(b){return q.createManipulatorDragEventPipeline(b,(a,d,e,p)=>{const c="touch"===p&&this._snappingEnabled;if(!this.isCompleted&&c){var k=null;d.next(this._screenToMapDragEventStep()).next(h=>{"start"===h.action&&(this.stagedVertex=h.mapStart,("segment"===this.geometryType||c&&0===this.vertices.length)&&this.commitStagedVertex());return h}).next(h=>{switch(h.action){case "start":case "update":"start"===h.action&&c&&(k=new u.SnappingContext(this._editGeometry,
this.view,this.elevationInfo,p));c&&(this.stagedVertex=this.snappingEngine.snap(h.mapEnd,f.unwrap(k)));break;case "end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete(),c&&(this.commitStagedVertex(),this.snappingEngine.doneSnapping())}return h});e.next(()=>{c&&this.snappingEngine.doneSnapping()})}})};g.createManipulatorDragPipelineFreehand=function(b){return q.createManipulatorDragEventPipeline(b,(a,d)=>{this.isCompleted||d.next(this._screenToMapDragEventStep()).next(e=>
{"start"===e.action&&(this.stagedVertex=e.mapStart,"segment"===this.geometryType&&this.commitStagedVertex());return e}).next(e=>{switch(e.action){case "start":case "update":this.stagedVertex=e.mapEnd;"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case "end":this.complete()}return e})})};g.createManipulatorDragPipelineHybrid=function(b){return q.createManipulatorDragEventPipeline(b,(a,d)=>{this.isCompleted||d.next(this._screenToMapDragEventStep()).next(e=>
{"start"===e.action&&(this.stagedVertex=e.mapStart,this.commitStagedVertex());return e}).next(e=>{switch(e.action){case "start":case "update":this.stagedVertex=e.mapEnd;"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case "end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e})})};g.destroy=function(){this._handles.destroy();this._handles=null};g.onInputEvent=function(b){switch(b.type){case "pointer-down":this._pointerDownStates.add(b.pointerId);
break;case "pointer-up":this._pointerDownStates.delete(b.pointerId)}switch(b.type){case "pointer-move":{if(this._manipulator.dragging||this._pointerDownStates.has(b.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)break;var a=B.createScreenPoint(b.x,b.y);const d=this._closeOnClickVertexIndex(a);f.isSome(d)?(this.discardStagedVertex(),a={componentIndex:0,vertexIndex:d,coordinates:this.coordinateHelper.toArray(this._activeComponent.vertices[d].pos)},this.emit("cursor-update",{updated:null,
vertices:[a],operation:"apply",type:"vertex-update"})):(a=this._screenToMap(a),f.isSome(a)?(this.stagedVertex=this.snappingEngine.snap(a,new u.SnappingContext(this._editGeometry,this.view,this.elevationInfo,b.pointerType)),this._manipulator.cursor="crosshair"):this._manipulator.cursor=null);b.stopPropagation();break}case "hold":"click"===this.drawingMode&&"touch"===b.pointerType&&this._snappingEnabled&&(this.stagedVertex=b.mapPoint),b.stopPropagation()}};g.redo=function(){this._editGeometry.redo()};
g.undo=function(){this.snappingEngine.doneSnapping();this._editGeometry.undo()};g.complete=function(b=!1){this.commitStagedVertex();this._createOperationCompleted=!0;this.snappingEngine.doneSnapping();this.emit("complete",{vertices:this.vertices.map((a,d)=>({componentIndex:0,vertexIndex:d,coordinates:a})),aborted:b,type:"complete"})};g.cancel=function(){this.complete(!0)};g.commitStagedVertex=function(){if(f.isSome(this._stagedVertex)){const b=this._stagedVertex;this._stagedVertex=null;this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(b))}};
g.discardStagedVertex=function(){this._stagedVertex=null};g._screenToMapDragEventStep=function(){let b=null;return a=>{"start"===a.action&&(b=this._screenToMap(a.screenStart));if(f.isNone(b))return null;const d=this._screenToMap(a.screenEnd);return f.isSome(d)?{...a,mapStart:b,mapEnd:d}:null}};g._screenToMap=function(b){return this._getDrawSurface().screenToMap(b)};g._mapToScreen=function(b){return this._getDrawSurface().mapToScreen(b)};g._getDrawSurface=function(){var b=null;if(this.coordinateHelper.hasZ){b=
this._defaultZ;let a=!1;f.isSome(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(a=!0);f.isSome(this.snapToSceneEnabled)&&(a=this.snapToSceneEnabled);f.isSome(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(a=!1);const d=this._activeComponent.vertices.length;("segment"===this.geometryType||"polygon"===this.geometryType)&&0<d&&(b=this.coordinateHelper.zFromArray(this._activeComponent.vertices[0].pos),a=!1);a?b=this._snappingDrawSurface:(this._elevationDrawSurface.defaultZ=
b,b=this._elevationDrawSurface)}else this._elevationDrawSurface.defaultZ=null,b=this._elevationDrawSurface;return b};g._vertexWithinPointerDistance=function(b,a){const d=this._mapToScreen(b);f.isSome(d)?(b=d.x-a.x,a=d.y-a.y,a=25>=b*b+a*a):a=!1;return a};g._closeOnClickVertexIndex=function(b){const a=this._activeComponent;if("polygon"===this.geometryType&&2<a.vertices.length){if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(a.vertices[0].pos,w),b))return 0;if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(a.vertices[a.vertices.length-
1].pos,w),b))return a.vertices.length-1}return null};r._createClass(m,[{key:"isCompleted",get:function(){return this._createOperationCompleted}},{key:"canRedo",get:function(){return this._editGeometry.canRedo}},{key:"canUndo",get:function(){return this._editGeometry.canUndo}},{key:"interactive",get:function(){return this._manipulator.interactive},set:function(b){this._manipulator.interactive=b}},{key:"numVertices",get:function(){return f.isSome(this._stagedVertex)?this._activeComponent.vertices.length+
1:this._activeComponent.vertices.length}},{key:"numCommittedVertices",get:function(){return this._activeComponent.vertices.length}},{key:"vertices",get:function(){const b=this._activeComponent.vertices.map(a=>this.coordinateHelper.toArray(a.pos));f.isSome(this._stagedVertex)&&b.push(this.coordinateHelper.pointToArray(this._stagedVertex));return b}},{key:"spatialReference",get:function(){return this.view.spatialReference}},{key:"hasStagedVertex",get:function(){return f.isSome(this._stagedVertex)}},
{key:"stagedVertex",get:function(){return this._stagedVertex},set:function(b){f.isNone(b)?this.discardStagedVertex():(this._stagedVertex=b,b={componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(b)},this.emit("cursor-update",{updated:null,vertices:[b],operation:"apply",type:"vertex-update"}))}}]);return m}(A);l.DrawOperation=x.__decorate([y.subclass("esri.views.3d.interactive.editingTools.draw3D.DrawOperation")],l.DrawOperation);const w=
new z({x:0,y:0,z:0});Object.defineProperty(l,"__esModule",{value:!0})});