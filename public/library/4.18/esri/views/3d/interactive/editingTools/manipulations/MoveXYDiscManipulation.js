// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/maybe ../../../../../Color ../../../../../chunks/vec3f64 ../../../../../chunks/vec3 ../../../../../core/Handles ../../../../../chunks/mat4 ../../../../../chunks/mat4f64 ../../../../../support/elevationInfoUtils ../../../support/stack ../../../webgl-engine/lib/GeometryUtil ../../../webgl-engine/lib/Geometry ../../../webgl-engine/materials/ColorMaterial ../../../../interactive/dragEventPipeline ../dragEventPipeline3D ../../Manipulator3D ../settings ./config ./Manipulation ./moveUtils ../snapping/SnapToScene".split(" "),
function(p,q,v,w,k,x,y,r,z,A,t,B,C,D,m,E,F,G,e,n,H,I){n=function(u){function l(a){var b=u.call(this)||this;b._handles=new y;b._snapToScene=new I.SnapToScene;b._discMaterial=b._createMaterial();b._discMaterialTransparent=b._createMaterial(.5);b._scale=1;b._radius=e.DISC_RADIUS;b._view=a.view;b._tool=a.tool;null!=a.snapToScene&&(b.snapToScene=a.snapToScene);null!=a.radius&&(b._radius=a.radius);b._createManipulator();b.forEachManipulator(d=>b._tool.manipulators.add(d));return b}q._inheritsLoose(l,u);
var c=l.prototype;c.destroy=function(){this._handles.destroy();this.forEachManipulator(a=>{this._tool.manipulators.remove(a);a.destroy()});this._manipulator=this._view=this._tool=null};c.forEachManipulator=function(a){a(this._manipulator,1)};c.createGraphicDragPipeline=function(a,b){const d=a.graphic,f=A.getGraphicEffectiveElevationInfo(d),g=v.unwrap(d.geometry).spatialReference;return H.createGraphicMoveDragPipeline(a,b,h=>this.createDragPipeline(h,f,g))};c.createDragPipeline=function(a,b,d){const f=
this._view;return m.createManipulatorDragEventPipeline(this._manipulator,(g,h,J,K,L)=>{h=h.next(m.dragAtLocation(f,g.elevationAlignedLocation)).next(E.screenToMapXYAtLocation(f,g.elevationAlignedLocation,b,d)).next(this._snapToScene.createDragEventPipelineStep(f,b),this._snapToScene.next).next(M=>({...M,manipulatorType:1})).next(m.addScreenDelta());a(g,h,J,K,L)})};c._updateManipulatorTransform=function(){const a=r.fromScaling(t.sm4d.get(),x.set(t.sv3d.get(),this.displayScale,this.displayScale,this.displayScale));
this._manipulator.modelTransform=a};c._createManipulator=function(){this._manipulator=new F.Manipulator3D({view:this._view,worldSized:!1,autoScaleRenderObjects:!1,focusMultiplier:1,touchMultiplier:1,collisionType:{type:"disc",direction:k.fromValues(0,0,1)},worldOriented:!0});this._updateManipulator()};c._updateManipulator=function(){const a=new C(B.createCylinderGeometry(e.DISC_HEIGHT,1,e.GEOMETRY_SEGMENTS,k.fromValues(0,0,1),k.fromValues(0,0,0)),"graphic-transform-disc"),b=r.fromScaling(z.create(),
k.fromValues(this._radius,this._radius,this._radius));this._manipulator.renderObjects=[{geometry:a,material:this._discMaterial,transform:b,stateMask:2},{geometry:a,material:this._discMaterialTransparent,transform:b,stateMask:1}];this._manipulator.radius=this._radius/e.DISC_RADIUS*e.DISC_COLLISION_RADIUS};c._createMaterial=function(a=1){const b=w.toUnitRGBA(G.colors.main);b[3]*=a;return new D.ColorMaterial({color:b,transparent:1!==a,cullFace:2,renderOccluded:2},"move-xy-disc")};q._createClass(l,[{key:"displayScale",
get:function(){return this._scale},set:function(a){this._scale=a;this._updateManipulatorTransform()}},{key:"snapToScene",get:function(){return this._snapToScene.enabled},set:function(a){this._snapToScene.enabled=a}},{key:"radius",get:function(){return this._radius},set:function(a){a!==this._radius&&(this._radius=a,this._updateManipulator())}},{key:"test",get:function(){return{discManipulator:this._manipulator}}}]);return l}(n.Manipulation);p.MoveXYDiscManipulation=n;Object.defineProperty(p,"__esModule",
{value:!0})});