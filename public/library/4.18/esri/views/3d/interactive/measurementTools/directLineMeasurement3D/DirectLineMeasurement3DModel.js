// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/has ../../../../../core/maybe ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/decorators/aliasOf ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/urlUtils ../../../../../core/uuid ../../../../../portal/support/resourceExtension ../../../../../core/Accessor ../../../../../geometry/Point ../../../../../geometry/Polyline ../../../../../intl/locale ../../../../../core/mathUtils ../../../../../intl/messages ../../../../../intl ../../../../../chunks/vec3f64 ../../../../../chunks/vec3 ../../../../../core/Handles ../../../../../geometry/projectionEllipsoid ../../../../../core/watchUtils ../../../../../geometry/projection ../../../../../core/Quantity ../../../../../geometry/support/geodesicUtils ../../../../../geometry/geometryEngine ../../../support/PropertiesPool ../support/UnitNormalizer ../../graphics/DirectLineMeasurement3D".split(" "),
function(y,d,c,q,R,S,e,z,T,G,U,V,W,H,B,I,J,n,C,X,r,D,K,w,L,m,t,A,M,N,O,P){c=function(E){function x(){var a=E.apply(this,arguments)||this;a._tempStartPosition=r.create();a._tempEndPosition=r.create();a._tempCornerPosition=r.create();a._unitNormalizer=new O;a._handles=new K;a._propertiesPool=new N.PropertiesPool({startPoint:B,endPoint:B},y._assertThisInitialized(a));a.model=new P.DirectLineMeasurement3D;a.cursorPoint=null;a.state="initial";a.mode="auto";a.active=!1;a.geodesicMeasurementDistanceThreshold=
1E5;return a}y._inheritsLoose(x,E);var k=x.prototype;k.initialize=function(){this._handles.add([this.model.watch("startPoint",()=>this._updateMeasurement(),!0),this.model.watch("endPoint",()=>this._updateMeasurement(),!0),this.model.watch("settings",()=>this._updateMeasurement(),!0)],"model");C.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a});this._handles.add(J.onLocaleChange(async()=>{this.messages=await C.fetchMessageBundle("esri/core/t9n/Units")}));this._handles.add(L.init(this.sceneView,
"spatialReference",a=>{var b=w.getSphericalPCPF(a);this._sphericalPCPF=b=b===w.SphericalECEFSpatialReference?w.WGS84ECEFSpatialReference:b;const g=m.canProjectWithoutEngine(a,b);this._unitNormalizer.spatialReference=g?b:a}),"scene-view");this.reset()};k.destroy=function(){this._handles.destroy();this._handles=null;this._propertiesPool.destroy();this._propertiesPool=null;this.model.destroy()};k.reset=function(){this.clearMeasurement()};k.clearMeasurement=function(){this.state="initial";this.cursorPoint=
this.endPoint=this.startPoint=null;this._clearOverride("measurementSurfaceLocation");this._updateMeasurement()};k.finishMeasurement=function(){if(!this._isOverridden("measurementSurfaceLocation")){const a=this.measurementSurfaceLocation;this._override("measurementSurfaceLocation","camera-dependent"===a?this.sceneView.state.camera.aboveGround?"above-the-surface":"below-the-surface":a)}this.state="measured"};k._fallbackGeodesicAngle=function(a,b){return a/w.getReferenceEllipsoid(b).metersPerDegree};
k._fallbackGeodesicDistance=function(a,b,g){if(m.projectPointToWGS84ComparableLonLat(a,u)){m.projectPointToWGS84ComparableLonLat(b,v);a=n.deg2rad(u[0]);b=n.deg2rad(u[1]);g=n.deg2rad(v[0]);const h=n.deg2rad(v[1]);a=n.acosClamped(Math.sin(b)*Math.sin(h)+Math.cos(b)*Math.cos(h)*Math.cos(Math.abs(g-a)));a=n.rad2deg(a);b={distance:0};A.inverseGeodeticSolver(b,[u[0],u[1]],[v[0],v[1]]);return{distance:b.distance,angle:a}}return{distance:g,angle:this._fallbackGeodesicAngle(g,a.spatialReference)}};k._exactGeodesicDistanceAndAngle=
function(a,b,g){const h=a.spatialReference;var f=new I({paths:[a,b],spatialReference:h});f=h.isGeographic&&A.isSupported(h)?A.geodesicLengths([f],"meters")[0]:h.isWebMercator?M.geodesicLength(f,"meters"):void 0;const {distance:p,angle:l}=f?{distance:f,angle:this._fallbackGeodesicAngle(f,h)}:this._fallbackGeodesicDistance(a,b,g);return{distance:new t(p,"meters"),angle:new t(l,"degrees")}};k._euclideanDistances=function(a,b){a.z>b.z&&(a=[a,a=b][0]);var g=a.clone();g.z=b.z;const h=this._tempStartPosition;
var f=this._tempEndPosition,p=this._tempCornerPosition,l=this.sceneView.spatialReference;const F=this._sphericalPCPF;l=m.canProjectWithoutEngine(l,F)?F:l;m.projectPointToVector(a,h,l);m.projectPointToVector(b,f,l);m.projectPointToVector(g,p,l);g=D.distance(h,f);f=D.distance(p,f);a=Math.abs(b.z-a.z);b=Q=>this._unitNormalizer.normalizeDistance(Q);p=b(g);f=b(f);a=b(a);return{direct:new t(p,"meters"),horizontal:new t(f,"meters"),vertical:new t(a,"meters")}};k._updateMeasurement=function(){if(q.isNone(this.startPoint)||
q.isNone(this.endPoint))this.model.measurement=null;else{var a=this._euclideanDistances(this.startPoint,this.endPoint),b=this._exactGeodesicDistanceAndAngle(this.startPoint,this.endPoint,a.horizontal.value);this.model.measurement={directDistance:a.direct,horizontalDistance:a.horizontal,verticalDistance:a.vertical,geodesicDistance:b.distance,geodesicAngle:b.angle}}};y._createClass(x,[{key:"startPointSurfaceLocation",set:function(a){this._set("startPointSurfaceLocation",a);this._updateMeasurement()}},
{key:"endPointSurfaceLocation",set:function(a){this._set("endPointSurfaceLocation",a);this._updateMeasurement()}},{key:"measurementSurfaceLocation",get:function(){const a=this.startPointSurfaceLocation,b=this.endPointSurfaceLocation;return null==a||null==b||"above-the-surface"===a&&"below-the-surface"===b||"below-the-surface"===a&&"above-the-surface"===b||"on-the-surface"===a&&"on-the-surface"===b?"camera-dependent":"above-the-surface"===a||"above-the-surface"===b?"above-the-surface":"below-the-surface"}},
{key:"validMeasurement",get:function(){return q.isSome(this.model.startPoint)&&q.isSome(this.model.endPoint)}},{key:"isMeasuring",get:function(){return!!this.startPoint}},{key:"geodesicDistanceExceeded",get:function(){return q.isSome(this.model.measurement)&&this.model.measurement.horizontalDistance&&this.model.measurement.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold}},{key:"measurementMode",get:function(){let a=this.mode;if("auto"===a){a="euclidean";if("degrees"===this.unit||
"degrees-minutes-seconds"===this.unit)a="geodesic";this.geodesicDistanceExceeded&&(a="geodesic")}return a}}]);return x}(H);d.__decorate([e.property()],c.prototype,"messages",void 0);d.__decorate([e.property({constructOnly:!0})],c.prototype,"sceneView",void 0);d.__decorate([e.property()],c.prototype,"model",void 0);d.__decorate([z.aliasOf("model.startPoint")],c.prototype,"startPoint",void 0);d.__decorate([e.property({value:null})],c.prototype,"startPointSurfaceLocation",null);d.__decorate([z.aliasOf("model.endPoint")],
c.prototype,"endPoint",void 0);d.__decorate([e.property({value:null})],c.prototype,"endPointSurfaceLocation",null);d.__decorate([e.property({dependsOn:["startPointSurfaceLocation","endPointSurfaceLocation"]})],c.prototype,"measurementSurfaceLocation",null);d.__decorate([e.property()],c.prototype,"cursorPoint",void 0);d.__decorate([e.property()],c.prototype,"state",void 0);d.__decorate([e.property()],c.prototype,"mode",void 0);d.__decorate([z.aliasOf("model.settings.unit")],c.prototype,"unit",void 0);
d.__decorate([e.property()],c.prototype,"active",void 0);d.__decorate([e.property({readOnly:!0,dependsOn:["model.startPoint","model.endPoint"]})],c.prototype,"validMeasurement",null);d.__decorate([e.property({readOnly:!0,dependsOn:["startPoint"]})],c.prototype,"isMeasuring",null);d.__decorate([e.property()],c.prototype,"geodesicMeasurementDistanceThreshold",void 0);d.__decorate([e.property({readOnly:!0,dependsOn:["model.measurement","geodesicMeasurementDistanceThreshold"]})],c.prototype,"geodesicDistanceExceeded",
null);d.__decorate([e.property({readOnly:!0,dependsOn:["unit","geodesicDistanceExceeded"]})],c.prototype,"measurementMode",null);c=d.__decorate([G.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],c);const u=r.create(),v=r.create();return c});