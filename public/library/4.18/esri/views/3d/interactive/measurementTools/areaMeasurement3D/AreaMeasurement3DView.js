// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/maybe ../../../../../core/screenUtils ../../../../../chunks/vec3f64 ../../../../../chunks/vec3 ../../../../../core/Handles ../../../../../geometry/projectionEllipsoid ../../../../../chunks/mat4 ../../../../../geometry/projection ../../../../../chunks/mat4f64 ../../../support/stack ../../../webgl-engine/lib/GeometryData ../../../webgl-engine/lib/GeometryUtil ../../../webgl-engine/lib/Object3D ../../../webgl-engine/lib/Intersector ../../../webgl-engine/lib/Geometry ../../../webgl-engine/lib/Layer ../../../webgl-engine/materials/RibbonLineMaterial ../../../webgl-engine/materials/lineStippleUtils ../../../support/LaserLineRenderer ../../../../interactive/ManipulatorCollection ../../editingTools/dragEventPipeline3D ../../manipulatorUtils ../support/Label ../support/viewUtils ../support/LabelSegment ../support/labelUtils ../support/PathSegmentInterpolator ../../../webgl-engine/materials/CheckerBoardMaterial".split(" "),
function(Q,F,R,m,A,S,T,K,U,V,u,W,G,H,X,B,Y,v,Z,aa,ba,ca,L,C,n,I,D,M,da){const ea={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,
.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};let E=function(){function p(a,b=new ba.ManipulatorCollection,c={}){this._model=a;this._manipulators=b;this.vertexManipulators=[];this._visible=!1;this._cursorManipulator=this._laserLineRenderer=null;this._pathSegmentObjects=[];this._perimeterSegmentObjects=[];this._projectionLineObjects=[];this._areaLabel=new C(16);this._pathLengthLabel=
new C(12);this._cursorSegmentLengthLabel=new C(12);this._perimeterLengthLabel=new C(12);this._pathLabelSegments=[];this._perimeterLabelSegments=[];this._cursorSegmentLengthLabelSegment=new I;this._listenerHandles=null;this._origin=m.create();this._originTransform=V.create();this._tempStartPosition=m.create();this._tempEndPosition=m.create();this._tempHandlePosition=m.create();this._sceneView=this._model.sceneView;this._params=n.copyParameter(ea,c);this._layer=new Y("path-measurement-tool",{isPickable:!1});
this._createMaterials();this._createObjects();this._intersector=new X.Intersector(this._sceneView.state.mode);this._intersector.options.store=0;a=L.createSphereManipulator(this._sceneView,this._params.handleColor,this._params.handleOpacity);a.available=!1;a.radius=this._params.handleRadius;a.interactive=!1;this._manipulators.add(a);this._cursorManipulator=a}var d=p.prototype;d.destroy=function(){this.hide()};d.show=function(){if(!this._visible){this._visible=!0;var a=this._sceneView._stage;this._laserLineRenderer=
new aa.LaserLineRenderer(this._sceneView.renderCoordsHelper,{glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,globalAlpha:this._params.laserLineGlobalAlpha});a.addRenderPlugin(this._laserLineRenderer.renderSlots,this._laserLineRenderer);this._addToStage(a);this._areaLabel.addToView(this._sceneView);this._pathLengthLabel.addToView(this._sceneView);
this._cursorSegmentLengthLabel.addToView(this._sceneView);this._perimeterLengthLabel.addToView(this._sceneView);this._initializeListeners();this._updateAll(this._model.viewData)}};d.hide=function(){if(this._visible){this._visible=!1;var a=this._sceneView._stage;a.removeRenderPlugin(this._laserLineRenderer);this._laserLineRenderer=null;this._destroyListeners();this._updatePathLength(0);this._removeFromStage(a);this._areaLabel.removeFromView(this._sceneView);this._pathLengthLabel.removeFromView(this._sceneView);
this._cursorSegmentLengthLabel.removeFromView(this._sceneView);this._perimeterLengthLabel.removeFromView(this._sceneView);this._sceneView.cursor=null}};d.vertexHandleAt=function(a,b){a=this._manipulators.intersect(a,b);return F.isSome(a)?this.manipulatorIdToVertexId(a):null};d.manipulatorIdToVertexId=function(a){for(let b=0;b<this.vertexManipulators.length;b++){const {id:c}=this.vertexManipulators[b];if(a===c)return b}return null};d.pick=function(a){var b=this._sceneView.spatialReference;a=R.screenPointObjectToArray(a.screenPoint);
this._sceneView.sceneIntersectionHelper.intersectToolIntersectorScreen(a,this._intersector);a=this._intersector.results.min;const c=m.create();if(!a.getIntersectionPoint(c))return new p.PickResult;b=this._sceneView.renderCoordsHelper.fromRenderCoords(c,b);return new p.PickResult("TerrainRenderer"===a.intersector?"surface":"feature",c,b)};d.overlappingHandles=function(a,b){return n.pointToPointScreenDistance(a,b,this._sceneView)<=this._params.handleRadius};d.screenToMap3D=function(){return ca.screenToMap3D(this._sceneView)};
d._createMaterials=function(){this._pathLineMaterial=new v.RibbonLineMaterial({width:this._params.pathLineWidth,color:this._params.pathLineColor,polygonOffset:!0,renderOccluded:4},"path-line");this._intersectingPathLineMaterial=new v.RibbonLineMaterial({width:this._params.pathLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4},"intersecting-path-line");this._perimeterLineMaterial=new v.RibbonLineMaterial({width:this._params.perimeterLineWidth,color:this._params.perimeterLineColor,
polygonOffset:!0,renderOccluded:4},"perimeter-line");this._intersectingPerimeterLineMaterial=new v.RibbonLineMaterial({width:this._params.perimeterLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4},"intersecting-perimeter-line");this._projectionLineMaterial=new v.RibbonLineMaterial({width:this._params.projectionLineWidth,color:this._params.projectionLineColor,polygonOffset:!0,stipplePattern:Z.createStipplePatternSimple(this._params.projectionLineStippleSize),stippleIntegerRepeats:!1,
renderOccluded:4},"projection-line");this._checkerBoardMaterial=new da.CheckerBoardMaterial({color1:this._params.areaColor1,color2:this._params.areaColor2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:4},"checker-board")};d._createObjects=function(){this._cursorSegmentObject=new H;this._areaObject=new H};d._addToStage=function(a){a.add(0,this._layer);a.add(3,this._pathLineMaterial);a.add(3,this._intersectingPathLineMaterial);a.add(3,this._perimeterLineMaterial);a.add(3,this._intersectingPerimeterLineMaterial);
a.add(3,this._projectionLineMaterial);a.add(3,this._checkerBoardMaterial);a.addToViewContent([this._layer.id])};d._removeFromStage=function(a){a.removeFromViewContent([this._layer.id]);a.remove(0,this._layer.id);a.remove(3,this._pathLineMaterial.id);a.remove(3,this._intersectingPathLineMaterial.id);a.remove(3,this._perimeterLineMaterial.id);a.remove(3,this._intersectingPerimeterLineMaterial.id);a.remove(3,this._projectionLineMaterial.id);a.remove(3,this._checkerBoardMaterial.id)};d._syncViewData=
function(a){if(!this._visible)return"none";const b=a.pathChanges;"full"===b.change?this._updateAll(a):"incremental"===b.change&&(b.updatedVertices.forEach(e=>{const g=(e-1+this._model.path.length)%this._model.path.length;this._updatePathSegment(a,e);this._updatePathSegment(a,g);this._updateVertexHandle(a,e);this._updateArea(a);this._updatePerimeterSegments(a);this._updateProjectionLines(a);this._updateLaserLine();this._updateLabels(a)}),b.updatedVertices.has(this._model.path.length-1)&&this._updateCursorSegment());
const c=b.change;b.clear();return c};d._updateAfterSyncViewData=function(a){const b=this._model.viewData;"full"!==this._syncViewData(b)&&a&&a(b)};d._updateOrigin=function(a){n.midpoint(a.positionsRenderCoords,this._origin);K.identity(this._originTransform);K.translate(this._originTransform,this._originTransform,this._origin)};d._updateAll=function(a){this._updateOrigin(a);this._updatePathLength(a.path.length);this._updatePathSegments(a);this._updatePerimeterSegments(a);this._updateHandles(a);this._updateArea(a);
this._updateProjectionLines(a);this._updateLabels(a);this._updateLaserLine()};d._updateCameraDependent=function(a){this._updateHandles(a);this._updateProjectionLines(a);this._updateLabels(a)};d._updatePathLength=function(a){this._resizeObject3DArray(this._pathSegmentObjects,a);this._resizeObject3DArray(this._perimeterSegmentObjects,a);this._resizeManipulatorArray(this.vertexManipulators,a);n.resizeArray(this._pathLabelSegments,a,()=>new I);n.resizeArray(this._perimeterLabelSegments,a,()=>new I)};
d._updatePathSegments=function(a){for(let b=0;b<this._pathSegmentObjects.length;++b)this._updatePathSegment(a,b);this._updateCursorSegment()};d._updatePathSegment=function(a,b){const c=a.path,e=this._pathSegmentObjects[b];a.validMeasurement||b<c.length-1?(this._createInterpolatedLineGeometry(e,a.intersectingSegments.has(b)?this._intersectingPathLineMaterial:this._pathLineMaterial,"path-segment",a.positionsRenderCoords[b],a.positionsRenderCoords[(b+1)%c.length],this._origin,this._originTransform,this._model.measurementMode,
this._pathLabelSegments[b],a.validMeasurement?"center":"end"),this._addObject3D(e)):(e.removeAllGeometries(),this._removeObject3D(e))};d._updateCursorSegment=function(){const a=this._sceneView.renderCoordsHelper,b=this._model.path,c=this._cursorSegmentObject;0<b.length&&"drawing"===this._model.state&&this._model.cursorPoint?(a.toRenderCoords(b.back,this._tempStartPosition),a.toRenderCoords(this._model.cursorPoint,this._tempEndPosition),this._createInterpolatedLineGeometry(c,this._pathLineMaterial,
"path-segment",this._tempStartPosition,this._tempEndPosition,this._origin,this._originTransform,this._model.measurementMode,this._cursorSegmentLengthLabelSegment,"end"),this._addObject3D(c)):(c.removeAllGeometries(),this._removeObject3D(c))};d._updatePerimeterSegments=function(a){for(let b=0;b<this._perimeterSegmentObjects.length;++b)this._updatePerimeterSegment(a,b)};d._updatePerimeterSegment=function(a,b){const c=a.path,e=this._perimeterSegmentObjects[b];a.validMeasurement&&"geodesic"!==this._model.measurementMode?
(this._updatePerimeterSegmentObject(e,a.positionsFittedRenderCoords[b],a.positionsFittedRenderCoords[(b+1)%c.length],this._origin,this._originTransform,a.intersectingSegments.has(b),this._perimeterLabelSegments[b]),this._addObject3D(e)):(e.removeAllGeometries(),this._removeObject3D(e))};d._updatePerimeterSegmentObject=function(a,b,c,e,g,h,l){this._createInterpolatedLineGeometry(a,h?this._intersectingPerimeterLineMaterial:this._perimeterLineMaterial,"perimeter-segment",b,c,e,g,this._model.measurementMode,
l)};d._updateHandles=function(a){for(let b=0;b<this.vertexManipulators.length;++b)this._updateVertexHandle(a,b);this._updateCursorHandle()};d._updateVertexHandle=function(a,b){const {manipulator:c}=this.vertexManipulators[b];c.renderLocation=a.positionsRenderCoords[b]};d._updateCursorHandle=function(){const a=this._cursorManipulator;"drawing"===this._model.state&&this._model.cursorPoint?(a.available=!0,a.location=this._model.cursorPoint):a.available=!1};d._updateArea=function(a){switch(this._model.measurementMode){case "euclidean":this._updateAreaEuclidean(a);
break;case "geodesic":this._updateAreaGeodesic()}};d._updateAreaEuclidean=function(a){const b=this._areaObject;if(a.validMeasurement&&0===a.intersectingSegments.size&&a.triangleIndices){const e=[],g=m.create();a.positionsFittedRenderCoords.forEach(l=>{A.subtract(g,l,this._origin);e.push(g[0],g[1],g[2])});const h=[];a.positionsProjected.forEach(l=>{h.push(l[0],l[1])});var c=new W.GeometryData({position:{size:3,data:e},uv0:{size:2,data:h}},{position:a.triangleIndices,uv0:a.triangleIndices});c=new B(c,
"area");b.removeAllGeometries();b.addGeometry(c,this._checkerBoardMaterial,this._originTransform);this._addObject3D(b);this._checkerBoardMaterial.setParameterValues({size:[a.checkerSize,a.checkerSize]})}else b.removeAllGeometries(),this._removeObject3D(b)};d._updateAreaGeodesic=function(){const a=this._areaObject;a.removeAllGeometries();this._removeObject3D(a)};d._updateProjectionLines=function(a){const b=a.path;this._resizeObject3DArray(this._projectionLineObjects,b.length);for(let c=0;c<b.length;++c)this._updateProjectionLine(a,
c)};d._updateProjectionLine=function(a,b){const c=this._projectionLineObjects[b];c.removeAllGeometries();if(a.validMeasurement&&"euclidean"===this._model.measurementMode){a=m.create();A.subtract(a,this._model.viewData.positionsRenderCoords[b],this._origin);const e=m.create();A.subtract(e,this._model.viewData.positionsFittedRenderCoords[b],this._origin);b=new B(G.createPolylineGeometry([a,e]),"projected-line");c.addGeometry(b,this._projectionLineMaterial,this._originTransform);this._addObject3D(c)}else this._removeObject3D(c)};
d._updateLabels=function(a){const b=this._sceneView.state.camera,c=this._params.labelDistance,e=this._model,g="geodesic"===e.measurementMode;var h="drawing"===e.state;const l=(r,w)=>r.visible&&w.visible&&this._sceneView.overlay.overlaps(r.textItem,w.textItem);var f=this._areaLabel,k=D.positionLabelOnPoint(f,a.areaCentroid,b);f.text=e.areaLabel;f.visible=k&&a.validMeasurement&&0===a.intersectingSegments.size&&null!=e.areaLabel;f=this._pathLengthLabel;k=D.positionLabelOnCorner(f,this._pathLabelSegments[a.pathLengthLabelSegmentIndex],
this._cursorSegmentLengthLabelSegment,c,b);f.text=e.pathLengthLabel;f.visible=k&&h&&0<e.path.length;f=this._cursorSegmentLengthLabel;k=D.positionLabelOnSegment(f,this._cursorSegmentLengthLabelSegment,c,"bottom",b);f.text=e.cursorSegmentLengthLabel;f.visible=k&&h&&e.cursorSegmentLength&&0!==e.cursorSegmentLength.value;l(this._cursorSegmentLengthLabel,this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1);l(this._pathLengthLabel,this._areaLabel)&&(this._pathLengthLabel.visible=!1);h=this._perimeterLengthLabel;
if(e.validMeasurement&&0===a.intersectingSegments.size)for(f=0;f<a.path.length;++f)if(k=(a.perimeterLengthLabelSegmentIndex+f)%a.path.length,k=D.positionLabelOnSegment(h,g?this._pathLabelSegments[k]:this._perimeterLabelSegments[k],c,"top",b),h.text=e.perimeterLengthLabel,h.visible=k,l(h,this._areaLabel))h.visible=!1;else break;else h.visible=!1};d._getFocusPoint=function(){const a=this._model,b=this._model.lastDraggedVertex;switch(a.state){case "drawing":return a.cursorPoint?a.cursorPoint:a.path.vertex(F.isSome(b)?
b:a.path.length-1);case "editing":return F.isSome(b)?a.path.vertex(b):null;default:return a.cursorPoint}};d._updateLaserLine=function(){var a=this._model,b=this._params.laserLineEnabled&&"measured"!==a.state&&a.active;this._laserLineRenderer.pointDistanceEnabled=!1;this._laserLineRenderer.lineVerticalPlaneEnabled=!1;a=this._getFocusPoint();b&&a?(b=this._tempHandlePosition,this._sceneView.renderCoordsHelper.toRenderCoords(a,b),this._laserLineRenderer.heightManifoldTarget=b,this._laserLineRenderer.heightManifoldEnabled=
!0):this._laserLineRenderer.heightManifoldEnabled=!1};d._addObject3D=function(a){a.parentLayer||(this._layer.addObject(a),this._sceneView._stage.add(1,a))};d._removeObject3D=function(a){a.parentLayer&&(this._layer.removeObject(a),this._sceneView._stage.remove(1,a.id))};d._resizeObject3DArray=function(a,b){n.resizeArray(a,b,()=>new H,c=>{this._removeObject3D(c)})};d._resizeManipulatorArray=function(a,b){n.resizeArray(a,b,()=>{const c=L.createSphereManipulator(this._sceneView,this._params.handleColor,
this._params.handleOpacity);c.radius=this._params.handleRadius;return{id:this._manipulators.add(c),manipulator:c}},({manipulator:c})=>{this._manipulators.remove(c)})};d._createInterpolatedLineGeometry=function(a,b,c,e,g,h,l,f,k,r){const w=this._sceneView.renderCoordsHelper,N=[],O=[],J=(x,y)=>{const q=u.sv3d.get();A.subtract(q,x,h);N.push(q);O.push(y)};if("euclidean"===f){f=u.sv3d.get();n.midpoint([e,g],f);var t=u.sv3d.get();w.worldUpAtPosition(f,t);J(e,t);J(g,t);k&&k.update(e,g,r)}else{e=this._getSegmentInterpolator(e,
g);g=this._params.lineSubdivisions+1&-2;t=f=null;let x=g/2-1,y=g/2;"start"===r?(x=0,y=1):"end"===r&&(x=g-2,y=g-1);for(let q=0;q<g;++q){const fa=q/(g-1),z=u.sv3d.get(),P=u.sv3d.get();e.eval(fa,z);w.worldUpAtPosition(z,P);q===x&&(f=z);q===y&&(t=z);J(z,P)}k&&k.update(f,t,r)}c=new B(G.createPolylineGeometry(N,O),c);a.removeAllGeometries();a.addGeometry(c,b,l)};d._getSegmentInterpolator=function(a,b){var c=this._sceneView.spatialReference;return U.canProjectWithoutEngine(c,T.getSphericalPCPF(c))?(c=this._sceneView.renderCoordsHelper.spatialReference,
new M.Spherical(a,b,c,c)):new M.Linear(a,b)};d._initializeListeners=function(){this._listenerHandles=new S;this._listenerHandles.add([this._model.watch(["state","lastDraggedVertex"],()=>this._updateLaserLine()),this._model.watch("cursorPoint",()=>this._updateAfterSyncViewData(a=>{this._updateCursorSegment();this._updateCursorHandle();"drawing"===this._model.state&&this._updateLabels(a);this._updateLaserLine()})),this._sceneView.state.watch("camera",()=>this._updateAfterSyncViewData(()=>this._updateCameraDependent(this._model.viewData))),
this._model.watch(["unit","measurementMode"],()=>this._updateAll(this._model.viewData)),this._model.watch(["areaLabel","cursorSegmentLengthLabel","pathLengthLabel","perimeterLengthLabel"],()=>{this._updateLabels(this._model.viewData)}),this._model.watch(["active"],()=>{this._updateLaserLine();this._syncViewData(this._model.viewData)}),this._model.watch("viewData",a=>this._syncViewData(a))])};d._destroyListeners=function(){this._listenerHandles.destroy();this._listenerHandles=null};Q._createClass(p,
[{key:"requiresCursorPoint",get:function(){return("initial"===this._model.state||"drawing"===this._model.state)&&this._model.active}},{key:"visible",get:function(){return this._visible},set:function(a){a?this.show():this.hide()}},{key:"testData",get:function(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel},laserLineRenderer:this._laserLineRenderer}}}]);return p}();E._handleGeometry=
new B(G.createSphereGeometry(1,32,32),"handle");(function(p){p.PickRequest=function(){};p.PickResult=function(d=null,a=null,b=null){this.type=d;this.scenePoint=a;this.mapPoint=b}})(E||(E={}));return E});