// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/has ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/property ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/urlUtils ../../../../../core/uuid ../../../../../portal/support/resourceExtension ../../../../../core/Accessor ../../../../../intl/locale ../../../../../core/mathUtils ../../../../../intl/messages ../../../../../intl ../../../../../core/Handles ../../../../../geometry/projectionEllipsoid ../../../../../core/unitUtils ../../../../../core/watchUtils ../../../../../geometry/projection ../../../../../core/Quantity ../../../../../core/quantityFormatUtils ../../graphics/AreaMeasurement3D ../support/measurementUtils ./MeasurementData ../support/setUtils ./PathChanges ../support/Path ../support/UnitNormalizer".split(" "),
function(p,d,c,I,J,e,K,x,L,M,N,y,z,A,q,O,B,n,h,C,D,r,t,E,k,F,u,v,G,H){c=function(w){function l(){var a=w.apply(this,arguments)||this;a._unitNormalizer=new H;a._measurementData=new F;a._measurementDataChanges=new v;a._viewDataChanges=new v;a._handles=new B;a.dataObject=new E.AreaMeasurement3D;a.path=new G;a.pathVersion=0;a.cursorPoint=null;a.state="initial";a.lastDraggedVertex=null;a.mode="auto";a.unit="metric";a.active=!1;a.maxRelativeErrorCoplanar=.005;a.maxRelativeErrorAlmostCoplanar=.01;a.verticalAngleThreshold=
80;a.geodesicMeasurementDistanceThreshold=1E5;return a}p._inheritsLoose(l,w);var g=l.prototype;g.initialize=function(){q.fetchMessageBundle("esri/core/t9n/Units").then(b=>{this.messages=b});this._handles.add(z.onLocaleChange(async()=>{this.messages=await q.fetchMessageBundle("esri/core/t9n/Units")}));this._handles.add(C.whenTrue(this.sceneView,"ready",()=>{var {spatialReference:b}=this.sceneView,f=n.getSphericalPCPF(b);f=f===n.SphericalECEFSpatialReference?n.WGS84ECEFSpatialReference:f;this._worldSpatialReference=
b=!b||D.canProjectWithoutEngine(b,f)?f:b;this._unitNormalizer.spatialReference=b}),"scene-view");this.reset();const a=()=>{this._set("pathVersion",this.pathVersion+1)};this._handles.add(this.path.on("cleared",()=>{this._measurementDataChanges.fullChange();this._set("pathVersion",0);this.dataObject.geometry=null}));this._handles.add(this.path.on("vertex-added",()=>{this._measurementDataChanges.fullChange();a();this.dataObject.geometry=this.path.toPolygon()}));this._handles.add(this.path.on("vertex-removed",
()=>{this._measurementDataChanges.fullChange();a();this.dataObject.geometry=this.path.toPolygon()}));this._handles.add(this.path.on("vertex-updated",b=>{this._measurementDataChanges.incrementalChange(b.index);a();this.dataObject.geometry=this.path.toPolygon()}));this._handles.add(this.dataObject.watch("geometry",()=>{const b=this.measurementData;this.dataObject.result={area:b.area,geodesicArea:b.geodesicArea,pathLength:b.pathLength,geodesicPathLength:b.geodesicPathLength,perimeterLength:b.perimeterLength}}))};
g.destroy=function(){this._handles.destroy();this._handles=null};g.reset=function(){this.clearMeasurement()};g.clearMeasurement=function(){this.path.clear();this.state="initial";this.cursorPoint=null};g.finishMeasurement=function(){3>this.path.length?this.clearMeasurement():(this._measurementDataChanges.fullChange(),this.state="measured")};g._preferredAreaUnit=function(a,b){switch(b){case "metric":return h.preferredMetricAreaUnit(a.value,a.unit);case "imperial":return h.preferredImperialAreaUnit(a.value,
a.unit);default:return b}};g._preferredLengthUnit=function(a,b){b=this._deriveLengthUnitFromAreaUnit(b);switch(b){case "metric":return h.preferredMetricLengthUnit(a.value,a.unit);case "imperial":return h.preferredImperialLengthUnit(a.value,a.unit);default:return b}};g._toPreferredAreaUnit=function(a,b){return a.toUnit(this._preferredAreaUnit(a,b))};g._toPreferredLengthUnit=function(a,b){return a.toUnit(this._preferredLengthUnit(a,b))};g._formatAreaLabel=function(a,b,f){return a&&b&&t.formatDecimal(a,
b,this._preferredAreaUnit(b,f))};g._formatLengthLabel=function(a,b,f){return a&&b&&t.formatDecimal(a,b,this._preferredLengthUnit(b,f))};g._deriveLengthUnitFromAreaUnit=function(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";
case "square-decimeters":return"decimeters";case "square-meters":return"meters";case "square-kilometers":return"kilometers";case "acres":return"imperial";case "ares":case "hectares":return"metric"}throw Error("unhandled area unit");};p._createClass(l,[{key:"validMeasurement",get:function(){return 3<=this.path.length&&"measured"===this.state||"editing"===this.state}},{key:"isMeasuring",get:function(){return 1<=this.path.length}},{key:"measurementData",get:function(){this._viewDataChanges.merge(this._measurementDataChanges);
this._measurementDataChanges.clear();const a=u.clone(this._measurementData.intersectingSegments),b=u.clone(this._measurementData.geodesicIntersectingSegments);this._measurementData.update(this.path,this.sceneView,this._unitNormalizer,this.validMeasurement,this.sceneView.renderSpatialReference,this._worldSpatialReference,{maxRelativeErrorCoplanar:this.maxRelativeErrorCoplanar,maxRelativeErrorAlmostCoplanar:this.maxRelativeErrorAlmostCoplanar,verticalAngleThreshold:this.verticalAngleThreshold});k.compareSets(this._measurementData.intersectingSegments,
a)||this._viewDataChanges.fullChange();k.compareSets(this._measurementData.geodesicIntersectingSegments,b)||this._viewDataChanges.fullChange();return this._measurementData}},{key:"area",get:function(){return this.measurementData.area}},{key:"geodesicArea",get:function(){return this.measurementData.geodesicArea}},{key:"areaLabel",get:function(){return this._formatAreaLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicArea:this.measurementData.area,this.unit)}},{key:"pathLength",
get:function(){return this.measurementData.pathLength}},{key:"geodesicPathLength",get:function(){return this.measurementData.geodesicPathLength}},{key:"pathLengthLabel",get:function(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.pathLength,this.unit)}},{key:"perimeterLength",get:function(){return this.measurementData.perimeterLength}},{key:"geodesicPerimeterLength",get:function(){return this.measurementData.geodesicPathLength}},
{key:"perimeterLengthLabel",get:function(){return this.measurementData.perimeterLength&&this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.measurementData.geodesicPathLength:this.measurementData.perimeterLength,this.unit)}},{key:"cursorSegmentLength",get:function(){return this.path.back&&this.cursorPoint&&new r(this._unitNormalizer.normalizeDistance(k.segmentLengthEuclidean(this.path.back,this.cursorPoint,this._worldSpatialReference)),"meters")}},{key:"geodesicCursorSegmentLength",
get:function(){return this.path.back&&this.cursorPoint&&new r(k.segmentLengthGeodesic(this.path.back,this.cursorPoint),"meters")}},{key:"cursorSegmentLengthLabel",get:function(){return this._formatLengthLabel(this.messages,"geodesic"===this.measurementMode?this.geodesicCursorSegmentLength:this.cursorSegmentLength,this.unit)}},{key:"viewData",get:function(){const a=this.measurementData,b="geodesic"===this.measurementMode;var f=b?this.geodesicArea:this.area;let m=1;f&&(f=this._toPreferredAreaUnit(f,
this.unit),m=A.nextHighestPowerOfTen(Math.sqrt(f.value)/Math.sqrt(300)),m*=Math.sqrt(h.convertUnit(1,f.unit,"square-meters")),m/=this._unitNormalizer.normalizeDistance(1));return{validMeasurement:this.validMeasurement,path:this.path,pathChanges:this._viewDataChanges,positionsGeographic:a.positionsGeographic,positionsRenderCoords:a.positionsRenderCoords,positionsProjected:a.positionsProjectedWorldCoords,positionsFittedRenderCoords:a.positionsFittedRenderCoords,intersectingSegments:b?a.geodesicIntersectingSegments:
a.intersectingSegments,triangleIndices:b?a.geodesicTriangleIndices:a.triangleIndices,fittingMode:a.fittingMode,areaCentroid:b?a.geodesicAreaCentroidRenderCoords:a.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:this.validMeasurement?0:this.path.length-2,perimeterLengthLabelSegmentIndex:0,checkerSize:m}}},{key:"measurementMode",get:function(){let a=this.mode;"auto"===a&&(a="euclidean",(this.geodesicPathLength?this.geodesicPathLength.value:0)+(!this.validMeasurement&&this.geodesicCursorSegmentLength?
this.geodesicCursorSegmentLength.value:0)>this.geodesicMeasurementDistanceThreshold&&(a="geodesic"));null==this.geodesicPathLength&&(a="euclidean");return a}}]);return l}(y);d.__decorate([e.property()],c.prototype,"messages",void 0);d.__decorate([e.property()],c.prototype,"dataObject",void 0);d.__decorate([e.property({constructOnly:!0})],c.prototype,"sceneView",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"path",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"pathVersion",
void 0);d.__decorate([e.property()],c.prototype,"cursorPoint",void 0);d.__decorate([e.property()],c.prototype,"state",void 0);d.__decorate([e.property()],c.prototype,"lastDraggedVertex",void 0);d.__decorate([e.property()],c.prototype,"mode",void 0);d.__decorate([e.property()],c.prototype,"unit",void 0);d.__decorate([e.property()],c.prototype,"active",void 0);d.__decorate([e.property({readOnly:!0,dependsOn:["path.length","state"]})],c.prototype,"validMeasurement",null);d.__decorate([e.property({readOnly:!0,
dependsOn:["path.length"]})],c.prototype,"isMeasuring",null);d.__decorate([e.property({readOnly:!0,dependsOn:["pathVersion","validMeasurement","maxRelativeErrorCoplanar","maxRelativeErrorAlmostCoplanar","verticalAngleThreshold"],autoTracked:!1})],c.prototype,"measurementData",null);d.__decorate([e.property({readOnly:!0,dependsOn:["measurementData"]})],c.prototype,"area",null);d.__decorate([e.property({readOnly:!0,dependsOn:["measurementData"]})],c.prototype,"geodesicArea",null);d.__decorate([e.property({readOnly:!0,
dependsOn:["messages","measurementData","unit","measurementMode"]})],c.prototype,"areaLabel",null);d.__decorate([e.property({readOnly:!0,dependsOn:["measurementData"]})],c.prototype,"pathLength",null);d.__decorate([e.property({readOnly:!0,dependsOn:["measurementData"]})],c.prototype,"geodesicPathLength",null);d.__decorate([e.property({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],c.prototype,"pathLengthLabel",null);d.__decorate([e.property({readOnly:!0,dependsOn:["measurementData"]})],
c.prototype,"perimeterLength",null);d.__decorate([e.property({readOnly:!0,dependsOn:["measurementData"]})],c.prototype,"geodesicPerimeterLength",null);d.__decorate([e.property({readOnly:!0,dependsOn:["messages","measurementData","unit","measurementMode"]})],c.prototype,"perimeterLengthLabel",null);d.__decorate([e.property({readOnly:!0,dependsOn:["path.back","cursorPoint"]})],c.prototype,"cursorSegmentLength",null);d.__decorate([e.property({readOnly:!0,dependsOn:["path.back","cursorPoint"]})],c.prototype,
"geodesicCursorSegmentLength",null);d.__decorate([e.property({readOnly:!0,dependsOn:["messages","unit","measurementMode","cursorSegmentLength","geodesicCursorSegmentLength"]})],c.prototype,"cursorSegmentLengthLabel",null);d.__decorate([e.property({readOnly:!0,dependsOn:["unit","measurementMode","measurementData"]})],c.prototype,"viewData",null);d.__decorate([e.property()],c.prototype,"maxRelativeErrorCoplanar",void 0);d.__decorate([e.property()],c.prototype,"maxRelativeErrorAlmostCoplanar",void 0);
d.__decorate([e.property()],c.prototype,"verticalAngleThreshold",void 0);d.__decorate([e.property()],c.prototype,"geodesicMeasurementDistanceThreshold",void 0);d.__decorate([e.property({readOnly:!0,dependsOn:["mode","validMeasurement","geodesicPathLength","geodesicCursorSegmentLength","geodesicMeasurementDistanceThreshold"]})],c.prototype,"measurementMode",null);return c=d.__decorate([x.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DModel")],c)});