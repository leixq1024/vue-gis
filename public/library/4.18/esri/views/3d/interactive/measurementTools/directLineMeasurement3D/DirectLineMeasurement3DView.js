// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/maybe ../../../../../core/mathUtils ../../../../../core/screenUtils ../../../../../chunks/vec3f64 ../../../../../chunks/vec3 ../../../../../core/Handles ../../../../../geometry/projectionEllipsoid ../../../../../core/unitUtils ../../../../../chunks/mat4 ../../../../../core/quantityFormatUtils ../../../../../chunks/mat4f64 ../../../../../chunks/vec2 ../../../support/ElevationProvider ../../../support/stack ../../../support/geometryUtils ../../../webgl-engine/lib/Intersector ../../../webgl-engine/materials/lineStippleUtils ../../../../../chunks/vec4f32 ../../visualElements/LaserlineVisualElement ../../visualElements/RightAngleQuadVisualElement ../../manipulatorUtils ../support/viewUtils ../support/labelUtils ../../visualElements/LabelVisualElement ../../visualElements/LineVisualElement ../../visualElements/MeasurementArrowVisualElement ../../visualElements/support/Segment".split(" "),
function(g,M,n,t,x,u,y,D,N,E,F,p,O,G,P,q,H,Q,B,R,S,T,U,v,I,C,z,V,r){const A=R.fromValues(1,.5,0,.75),W={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:A,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,
1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:A,guideLineWidth:2,guideLineColor:A,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12};g.DirectLineMeasurement3DView=function(){function m(a,b={}){this._visible=!1;this._laserLine=this._geodesicEndHint=this._geodesicStartHint=this._projectedGeodesicLine=this._horizontalSegmentLabel=this._verticalSegmentLabel=
this._directSegmentLabel=this._rightAngleQuad=this._horizontalAndVerticalSegmentLines=this._measurementArrow=null;this._directSegmentLabelMeasurement="directDistance";this._horizontalSegmentLabelMeasurement="horizontalDistance";this._verticalSegmentLabelMeasurement="verticalDistance";this._handles=new D;this._listenerHandles=null;this._cursorPosition=u.create();this._startPosition=u.create();this._endPosition=u.create();this._cornerPosition=u.create();this._origin=u.create();this._originTransform=
O.create();this._lastDraggedHandle=null;this._viewMode=g.ViewMode.None;this._viewModeDirty=!0;this._triangleCollapseRatioThreshold=.03;this._model=a;this._view=a.sceneView;this._params=v.copyParameter(W,b);this._measurementArrow=new V.MeasurementArrowVisualElement({attached:!0,view:this._view,geometry:null,renderOccluded:4});this._horizontalAndVerticalSegmentLines=new z.LineVisualElement({attached:!0,view:this._view,width:this._params.triangleLineWidth,color:this._params.triangleColor,renderOccluded:4});
this._rightAngleQuad=new T.RightAngleQuadVisualElement({attached:!0,view:this._view,color:A,renderOccluded:4});this._directSegmentLabel=new C.LabelVisualElement({attached:!0,view:this._view,fontSize:this._params.direcLabelFontSize});this._verticalSegmentLabel=new C.LabelVisualElement({attached:!0,view:this._view,fontSize:this._params.verticalLabelFontSize});this._horizontalSegmentLabel=new C.LabelVisualElement({attached:!0,view:this._view,fontSize:this._params.horizontalLabelFontSize});this._projectedGeodesicLine=
new z.LineVisualElement({attached:!0,view:this._view,width:this._params.geodesicProjectionLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:B.createStipplePatternSimple(this._params.guideStippleLengthPixels),stippleIntegerRepeats:!1,renderOccluded:4});this._geodesicStartHint=new z.LineVisualElement({attached:!0,view:this._view,width:this._params.guideLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:B.createStipplePatternSimple(this._params.guideStippleLengthPixels),
stippleIntegerRepeats:!1,renderOccluded:4});this._geodesicEndHint=new z.LineVisualElement({attached:!0,view:this._view,width:this._params.guideLineWidth,color:this._params.geodesicProjectionLineColor,polygonOffset:!0,stipplePattern:B.createStipplePatternSimple(this._params.guideStippleLengthPixels),stippleIntegerRepeats:!1,renderOccluded:4});this._laserLine=new S.LaserlineVisualElement({view:this._view,attached:!0});this._intersector=new Q.Intersector(this._view.state.mode);this._intersector.options.store=
0;this._initializeListeners()}var f=m.prototype;f.destroy=function(){this.hide();this._destroyListeners();this._handles.destroy();this._handles=null;this._measurementArrow.destroy();this._measurementArrow=null;this._horizontalAndVerticalSegmentLines.destroy();this._horizontalAndVerticalSegmentLines=null;this._rightAngleQuad.destroy();this._rightAngleQuad=null;this._directSegmentLabel.destroy();this._directSegmentLabel=null;this._verticalSegmentLabel.destroy();this._verticalSegmentLabel=null;this._horizontalSegmentLabel.destroy();
this._horizontalSegmentLabel=null;this._projectedGeodesicLine.destroy();this._projectedGeodesicLine=null;this._geodesicStartHint.destroy();this._geodesicStartHint=null;this._geodesicEndHint.destroy();this._geodesicEndHint=null};f._computeViewMode=function(){this._viewModeDirty=!1;var a=this._model;const b=a.model,c=b.measurement;a="geodesic"===a.measurementMode;if(n.isNone(b.startPoint)||n.isNone(b.endPoint)||b.startPoint.equals(b.endPoint))return g.ViewMode.None;if(a){if(!this._model.geodesicDistanceExceeded)return g.ViewMode.Direct;
if(this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition))return g.ViewMode.ProjectedGeodesic}return n.isNone(c)?g.ViewMode.Direct:Math.min(c.verticalDistance.value/c.horizontalDistance.value,c.horizontalDistance.value/c.verticalDistance.value)<this.triangleCollapseRatioThreshold?g.ViewMode.Direct:g.ViewMode.Triangle};f.createManipulators=function(){const a=()=>{const e=U.createSphereManipulator(this._view,this._params.handleColor,this._params.handleOpacity);
e.available=!1;e.radius=this._params.handleRadius;return e},b=a(),c=a();this._model.startPoint&&(b.location=n.unwrap(this._model.startPoint),b.available=!0);this._model.endPoint&&(c.location=n.unwrap(this._model.endPoint),c.available=!0);const l=()=>{let e=this._lastDraggedHandle;b.grabbing&&!c.grabbing&&(e="start");c.grabbing&&!b.grabbing&&(e="end");b.grabbing||c.grabbing||(e=null);const h=e!==this._lastDraggedHandle;this._lastDraggedHandle=e;h&&this.visible&&this._updateLaserLine()};this._handles.add([b.events.on("grab-changed",
()=>{l()}),c.events.on("grab-changed",()=>{l()})]);return{start:b,end:c}};f.show=function(){this._visible||(this._visible=!0,this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha},this._viewModeDirty=this._laserLine.visible=!0,this._updateCursorPosition(),this._updateStartPosition(),
this._updateEndPosition(),this._updateLaserLine(),this._geometryChanged())};f.hide=function(){this._visible&&(this._visible=!1,this._measurementArrow.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._rightAngleQuad.visible=!1,this._directSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1,this._horizontalSegmentLabel.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,this._laserLine.visible=!1,this._view.cursor=
null)};f.pick=function(a){var b=this._view.spatialReference;a=x.screenPointObjectToArray(a.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(a,this._intersector);a=this._intersector.results.min;const c=u.create();if(!a.getIntersectionPoint(c))return new m.PickResult;b=this._view.renderCoordsHelper.fromRenderCoords(c,b);return new m.PickResult("TerrainRenderer"===a.intersector?"ground":"feature",c,b)};f.getElevation=function(a){return this._view.basemapTerrain.ready?P.getElevationAtPoint(this._view.elevationProvider,
a)||0:0};f.overlappingHandles=function(a,b){return v.pointToPointScreenDistance(a,b,this._view)<=this._params.handleRadius};f._getLabelPositions=function(a,b,c,l,e){var h=this._viewMode!==g.ViewMode.Triangle,d=x.castRenderScreenPointArray3(q.sv3d.get()),k=x.castRenderScreenPointArray3(q.sv3d.get());e.projectToRenderScreen(c,d);e.projectToRenderScreen(b,k);d={direct:h?"top":"bottom",horizontal:"top",vertical:d[0]<k[0]?"left":"right"};h||(k=q.sv2d.get(),h=q.sv2d.get(),v.screenSpaceTangent(a,c,k,e),
v.screenSpaceTangent(a,b,h,e),G.dot(k,h)>=J?d.direct=t.sign(k[1])===t.sign(h[1])?I.mirrorPosition(d.vertical):d.vertical:(a=x.castRenderScreenPointArray(q.sv2d.get()),v.screenSpaceTangent(c,b,a,e),G.dot(a,h)>=J&&(d.direct=t.sign(a[0])===t.sign(h[0])?I.mirrorPosition(d.horizontal):d.horizontal)));"below-the-surface"===l&&(d.direct="top"===d.direct?"bottom":"top",d.horizontal="top"===d.horizontal?"bottom":"top",d.vertical="top"===d.vertical?"bottom":"top");return d};f._updateLabelText=function(){var a=
this._model.model.measurement;if(!n.isNone(a)&&this._model.messages){var b={verticalDistance:"",horizontalDistance:"",directDistance:"",geodesicDistance:""},c=this._model.messages,l=a.directDistance,e=a.horizontalDistance,h=a.verticalDistance,d=a.geodesicDistance;a=a.geodesicAngle;switch(this._model.unit){case "metric":b.directDistance=l&&p.formatMetricLength(c,l);b.horizontalDistance=e&&p.formatMetricLength(c,e);b.verticalDistance=h&&p.formatMetricVerticalLength(c,h);b.geodesicDistance=d&&p.formatMetricLength(c,
d);break;case "imperial":b.directDistance=l&&p.formatImperialLength(c,l);b.horizontalDistance=e&&p.formatImperialLength(c,e);b.verticalDistance=h&&p.formatImperialVerticalLength(c,h);b.geodesicDistance=d&&p.formatImperialLength(c,d);break;case "degrees":c=a&&p.formatDecimal(c,a,"degrees");b.directDistance=c;b.horizontalDistance=c;b.geodesicDistance=c;break;case "degrees-minutes-seconds":b.horizontalDistanceText=a&&p.formatDMS(a);break;default:b.directDistance=l&&p.formatDecimal(c,l,this._model.unit),
b.horizontalDistance=e&&p.formatDecimal(c,e,this._model.unit),b.verticalDistance=h&&p.formatDecimal(c,h,this._model.unit),b.geodesicDistance=d&&p.formatDecimal(c,d,this._model.unit)}this._directSegmentLabel.text=b[this._directSegmentLabelMeasurement];this._horizontalSegmentLabel.text=b[this._horizontalSegmentLabelMeasurement];this._verticalSegmentLabel.text=b[this._verticalSegmentLabelMeasurement]}};f._geometryChanged=function(){var a=this._view,b=a.state.camera,c=this._model;const l=c.measurementMode;
var e=a.renderCoordsHelper;const h=this.viewMode;if(h===g.ViewMode.None)this._rightAngleQuad.visible=!1,this._horizontalAndVerticalSegmentLines.visible=!1,this._directSegmentLabel.visible=!1,this._horizontalSegmentLabel.visible=!1,this._verticalSegmentLabel.visible=!1,this._measurementArrow.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1;else{var d=this._startPosition,k=this._endPosition,K="camera-dependent"===c.measurementSurfaceLocation?
this._view.state.camera.aboveGround?"above-the-surface":"below-the-surface":c.measurementSurfaceLocation,w="above-the-surface"===K?1:-1,L=w*(a.renderCoordsHelper.getAltitude(k)-a.renderCoordsHelper.getAltitude(d));0>L&&(d=this._endPosition,k=this._startPosition);c=this._cornerPosition;a.renderCoordsHelper.worldUpAtPosition(d,c);y.scale(c,c,w*Math.abs(L));y.add(c,c,d);w=(a="geodesic"===l)?new r.GeodesicSegment(this._startPosition,this._endPosition,this._view.renderCoordsHelper.spatialReference):new r.EuclideanSegment(this._startPosition,
this._endPosition);b=this._getLabelPositions(d,k,c,K,b);v.midpoint([d,k,c],this._origin);F.identity(this._originTransform);F.translate(this._originTransform,this._originTransform,this._origin);this._measurementArrow.geometry=w;this._measurementArrow.stripeLength=this._computeMeasurementArrowStripeLength(this._model.model);this._measurementArrow.visible=!0;this._directSegmentLabel.anchor=b.direct;this._directSegmentLabel.geometry=w;this._directSegmentLabel.visible=!0;this._directSegmentLabelMeasurement=
"geodesic"===l?"geodesicDistance":"directDistance";switch(h){case g.ViewMode.Direct:this._horizontalSegmentLabelMeasurement=a?"geodesicDistance":"horizontalDistance";this._rightAngleQuad.visible=!1;this._horizontalAndVerticalSegmentLines.visible=!1;this._horizontalSegmentLabel.visible=!1;this._verticalSegmentLabel.visible=!1;this._projectedGeodesicLine.visible=!1;this._geodesicStartHint.visible=!1;this._geodesicEndHint.visible=!1;break;case g.ViewMode.ProjectedGeodesic:d=y.copy(q.sv3d.get(),this._startPosition);
k=y.copy(q.sv3d.get(),this._endPosition);e.setAltitude(0,d);e.setAltitude(0,k);e=new r.GeodesicSegment(d,k,this._view.renderCoordsHelper.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(e);this._projectedGeodesicLine.visible=!0;this._geodesicStartHint.setGeometryFromSegment(new r.EuclideanSegment(d,this._startPosition));this._geodesicStartHint.visible=!0;this._geodesicEndHint.setGeometryFromSegment(new r.EuclideanSegment(k,this._endPosition));this._geodesicEndHint.visible=!0;this._directSegmentLabel.geometry=
e;this._directSegmentLabelMeasurement="geodesicDistance";this._rightAngleQuad.visible=!1;this._horizontalAndVerticalSegmentLines.visible=!1;this._horizontalSegmentLabel.visible=!1;this._verticalSegmentLabel.visible=!1;break;case g.ViewMode.Triangle:this._horizontalAndVerticalSegmentLines.geometry=[[[d[0],d[1],d[2]],[c[0],c[1],c[2]],[k[0],k[1],k[2]]]],this._horizontalAndVerticalSegmentLines.visible=!0,e=new r.EuclideanSegment(d,c),this._verticalSegmentLabel.visible=!0,this._verticalSegmentLabel.geometry=
e,this._verticalSegmentLabel.anchor=b.vertical,this._verticalSegmentLabelMeasurement="verticalDistance",e=new r.EuclideanSegment(c,k),this._horizontalSegmentLabel.visible=!0,this._horizontalSegmentLabel.geometry=e,this._horizontalSegmentLabel.anchor=b.horizontal,this._horizontalSegmentLabelMeasurement="horizontalDistance",this._rightAngleQuad.geometry={previous:d,center:c,next:k},this._rightAngleQuad.visible=!0,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=
!1}this._updateLabelText()}};f._computeMeasurementArrowStripeLength=function(a){var b=null;if(n.isSome(a.measurement))switch(b=a.measurement.directDistance,this._model.model.settings.unit){case "metric":b=b&&b.toUnit("meters");break;case "imperial":b=b&&b.toUnit(E.preferredImperialLengthUnit(b.value,b.unit));break;case "degrees":case "degrees-minutes-seconds":b=(a=a.measurement.geodesicAngle)&&a.toUnit("degrees");break;default:b=b&&b.toUnit(this._model.model.settings.unit)}a=1;b&&(a=t.nextHighestPowerOfTen(b.value/
30),a*="degrees"===b.unit?N.getReferenceEllipsoid(this._view.spatialReference).metersPerDegree:E.convertUnit(1,b.unit,"meters"));return a};f._requiresGeodesicGuideAt=function(a){if(!this._view.state)return!1;const b=this._view.renderCoordsHelper,c=this._view.state.camera.computeScreenPixelSizeAt(a);return 10<=b.getAltitude(a)/c};f._updateCursorPosition=function(){this._model.cursorPoint&&this._view.renderCoordsHelper.toRenderCoords(this._model.cursorPoint,this._cursorPosition)};f._updateStartPosition=
function(){n.isSome(this._model.startPoint)&&this._view.renderCoordsHelper.toRenderCoords(this._model.startPoint,this._startPosition)};f._updateEndPosition=function(){n.isSome(this._model.endPoint)&&this._view.renderCoordsHelper.toRenderCoords(this._model.endPoint,this._endPosition)};f._getFocusPosition=function(){const a=this._model,b=this.viewMode===g.ViewMode.Direct&&"euclidean"===a.measurementMode;switch(a.state){case "drawing":return b?this._startPosition:a.endPoint?this._endPosition:this._startPosition;
case "editing":return b?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return a.cursorPoint?this._cursorPosition:null}};f._getFocusSpherePosition=function(){return"drawing"===this._model.state||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition};f._updateLaserLine=function(){const a=this._model,b=this._getFocusPosition(),c=this.viewMode,l=this._params.laserLineEnabled&&!!b&&
"measured"!==a.state&&a.active;l?(this._laserLine.heightManifoldTarget=l&&"euclidean"===a.measurementMode?b:null,this._laserLine.pointDistanceLine=l&&a.startPoint&&"geodesic"===a.measurementMode?{origin:this._getFocusSpherePosition(),target:b}:null,this._laserLine.lineVerticalPlaneSegment=l&&c===g.ViewMode.Triangle?H.lineSegment.fromPoints(this._startPosition,this._endPosition,X):null):(this._laserLine.heightManifoldTarget=null,this._laserLine.pointDistanceLine=null,this._laserLine.lineVerticalPlaneSegment=
null)};f._initializeListeners=function(){this._listenerHandles=new D;this._listenerHandles.add([this._model.watch("state",()=>{this._visible&&this._updateLaserLine()},!0),this._model.watch("measurementMode",()=>{this._viewModeDirty=!0;this._visible&&this._updateLaserLine()},!0),this._model.watch("hoveredHandle",()=>{this._visible&&this._geometryChanged()},!0),this._model.watch("cursorPoint",()=>{this._updateCursorPosition();this._visible&&this._updateLaserLine()},!0),this._model.model.watch("startPoint",
()=>{this._updateStartPosition();this._viewModeDirty=!0;this._visible&&(this._updateLaserLine(),this._geometryChanged())},!0),this._model.model.watch("endPoint",()=>{this._updateEndPosition();this._viewModeDirty=!0;this._visible&&(this._updateLaserLine(),this._geometryChanged())},!0),this._model.watch("messages",()=>{this._viewModeDirty=!0;this._visible&&this._geometryChanged();this._updateLabelText()},!0),this._model.watch("unit",()=>{this._viewModeDirty=!0;this._visible&&this._geometryChanged()},
!0),this._model.watch("active",()=>{this._visible&&(this._updateLaserLine(),this._geometryChanged())},!0),this._view.state.watch("camera",()=>{this._visible&&this._geometryChanged()},!0),this._model.model.watch("measurement",()=>{this._viewModeDirty=!0;this._visible?this._geometryChanged():this._updateLabelText()},!0)])};f._destroyListeners=function(){this._listenerHandles.destroy();this._listenerHandles=null};M._createClass(m,[{key:"requiresCursorPoint",get:function(){return"initial"===this._model.state&&
this._model.active}},{key:"cameraAboveGround",get:function(){return this._view.state.camera.aboveGround}},{key:"visible",get:function(){return this._visible},set:function(a){a?this.show():this.hide()}},{key:"viewMode",get:function(){this._viewModeDirty&&(this._viewMode=this._computeViewMode());return this._viewMode}},{key:"triangleCollapseRatioThreshold",get:function(){return this._triangleCollapseRatioThreshold},set:function(a){this._triangleCollapseRatioThreshold=a;this._viewModeDirty=!0;this._geometryChanged()}},
{key:"testData",get:function(){const a=this._laserLine.testData,b="geodesic"===this._model.measurementMode;return{labels:{direct:b?this._horizontalSegmentLabel:this._directSegmentLabel,horizontal:b?this._directSegmentLabel:this._horizontalSegmentLabel,vertical:this._verticalSegmentLabel},laserLineRenderer:{heightManifoldEnabled:n.isSome(a)?a.heightManifoldEnabled:!1,heightManifoldTarget:n.isSome(a)?a.heightManifoldTarget:null,pointDistanceEnabled:n.isSome(a)?a.pointDistanceEnabled:!1,pointDistanceOrigin:n.isSome(a)?
a.pointDistanceOrigin:null,pointDistanceTarget:n.isSome(a)?a.pointDistanceTarget:null,lineVerticalPlaneEnabled:n.isSome(a)?a.lineVerticalPlaneEnabled:!1},stripeLength:this._computeMeasurementArrowStripeLength(this._model.model)}}},{key:"directLabelText",get:function(){return this._directSegmentLabel.text}},{key:"horizontalLabelText",get:function(){return this._horizontalSegmentLabel.text}},{key:"verticalLabelText",get:function(){return this._verticalSegmentLabel.text}}]);return m}();(function(m){m.PickRequest=
function(){};m.PickResult=function(f=null,a=null,b=null){this.type=f;this.scenePoint=a;this.mapPoint=b}})(g.DirectLineMeasurement3DView||(g.DirectLineMeasurement3DView={}));(function(m){m[m.Triangle=0]="Triangle";m[m.ProjectedGeodesic=1]="ProjectedGeodesic";m[m.Direct=2]="Direct";m[m.None=3]="None"})(g.ViewMode||(g.ViewMode={}));const J=Math.cos(t.deg2rad(12)),X=H.lineSegment.create();g.default=g.DirectLineMeasurement3DView;Object.defineProperty(g,"__esModule",{value:!0})});