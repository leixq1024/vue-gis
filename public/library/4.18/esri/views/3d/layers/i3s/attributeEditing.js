// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/lang","../../../../core/maybe","../support/attributeUtils"],function(w,B,x,y){function C(a,c){const d=c.edits.updateFeatures;if(!d||0===d.length)return new z;const t=D(c),e=new z;c=new Map;for(let b=0;b<a.attributeStorageInfo.length;b++)c.set(a.attributeStorageInfo[b].name,b);const n=a.fieldsIndex,p=a.objectIdField,q=d.filter(b=>{b=y.attributeLookup(n,b.attributes,p);return t.has(b)});a.forEachNode((b,l)=>{const u=new Set(l);for(const m of q){const r=y.attributeLookup(n,
m.attributes,p);if(!u.has(r))continue;const v=l.indexOf(r);for(const A in m.attributes){var h=a.fieldsIndex.normalizeFieldName(A);var k=e;var f=b.index,g=k.get(f);g?k=g:(g=new E,k.set(f,g),k=g);(f=k.get(h))?h=f:(f=[],k.set(h,f),h=f);h.push({featureIndex:v,featureId:r,value:m.attributes[A]})}}});return e}function D(a){const c=new Set;if(!a.updatedFeatures)return c;for(const d of a.updatedFeatures)null!=d.objectId&&null==d.error&&c.add(d.objectId);return c}const F={setAttribute(){},rollback(){},commit(){}},
E=Map,z=Map;w.createInteractiveEditSession=function(a,c){const d=B.clone(c.attributes),t=new Set,e=d[a.objectIdField];if(null==e)return F;const n=a.attributeOverrides.createInteractiveEditSession(e),p=new Map;let q=0;return{setAttribute(b,l){if(0===q){var u=a.fieldsIndex.get(b);if(!x.isNone(u)){var h=a.attributeStorageInfo.findIndex(g=>g.name===u.name);if(!(0>h)){n.set(h,l);var k=a.attributeStorageInfo[h],f=!1;t.add(b);a.forEachNode((g,m)=>{var r=p.get(g);null==r?(m=m.indexOf(e),p.set(g,m)):m=r;if(-1!==
m&&(r=a.getAttributeData(g.index))){const v=r[k.name];v&&(v[m]=l,a.setAttributeData(g.index,r,c),f=!0)}});f&&a.clearMemCache()}}}},rollback(){if(0===q){for(const b of t)this.setAttribute(b,d[b]);n.rollback();q=1}},commit(){n.commit();q=2}}};w.processAttributeEdits=function(a,c){c=C(a,c);if(0!==c.size){var d=new Map;for(let e=0;e<a.attributeStorageInfo.length;e++)d.set(a.attributeStorageInfo[e].name,e);var t=!1;c.forEach((e,n)=>{const p=a.getAttributeData(n);let q=!1;e.forEach((b,l)=>{const u=x.isSome(p)?
p[l]:null;l=d.get(l);for(const {featureIndex:h,value:k,featureId:f}of b)u&&(u[h]=k,t=q=!0),a.attributeOverrides.updateValue(f,l,k)});q&&a.setAttributeData(n,p,null)});t&&a.clearMemCache()}};Object.defineProperty(w,"__esModule",{value:!0})});