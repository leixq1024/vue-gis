// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../Color ../../chunks/vec3 ../../core/Handles ../../geometry/projectionEllipsoid ../../core/unitUtils ../../core/watchUtils ../../chunks/vec4f64 ../../views/3d/support/geometryUtils ../../views/3d/webgl-engine/lib/Intersector ./ElevationProfileLine ../../layers/support/ElevationQuery".split(" "),
function(x,h,e,n,L,M,k,N,E,O,P,Q,y,z,F,G,H,p,A,B,I,J,K){function C(f){if(f.layer&&"objectIdField"in f.layer){const m=f.attributes[f.layer.objectIdField];if(m)return`o-${f.layer.id}-${m}`}return`u-${f.uid}`}e=function(f){function m(a){a=f.call(this,a)||this;a.type="view";a.color=new y([191,76,245]);a.include=null;a.exclude=null;a.numSamplesForPreview=50;a.numSamplesPerChunk=100;a._vecA=A.create();a._vecB=A.create();a._ray=B.ray.create();return a}x._inheritsLoose(m,f);var u=m.prototype;u.queryElevation=
async function(a,{noDataValue:c,signal:b}){const d=this._view;if(n.isNone(d))throw Error("can only query SceneView");var l=this._viewModel.input;const t=n.isSome(l)?C(l):null;l=this._intersector;const v=this._maxIntersectionDistance,w=d.spatialReference;a=await K.GeometryDescriptor.fromGeometry(a).project(w,b);for(const q of a.coordinates){var D;b=this._vecA;var g=this._vecB;z.set(g,q.x,q.y,null!=(D=q.z)?D:0);d.renderCoordsHelper.toRenderCoords(g,w,g);z.copy(b,g);d.renderCoordsHelper.setAltitude(2E5,
b);b=B.ray.fromPoints(b,g,this._ray);d.sceneIntersectionHelper.computeIntersection(b,l,this._intersectOptions);(b=l.results.all.find(r=>{if(r.distanceInRenderSpace>v)return!1;r=r.toGraphic(d);return n.isNone(r)||C(r)!==t}))?(g=this._vecA,b.getIntersectionPoint(g),d.renderCoordsHelper.fromRenderCoords(g,g,w),q.z=g[2]):q.z=c}return{geometry:a.export(),noDataValue:c}};u.attach=function(a){const c=new F;c.add(f.prototype.attach.call(this,a));const b=()=>{this.notifyChange("_intersectOptions")},d=()=>
{this._watchLayerVisibilities(c,a.view,this._onChange);this._onChange()};c.add([p.init(this,"_intersectOptions",this._onChange),p.on(this,"include","change",b,b,b),p.on(this,"exclude","change",b,b,b),p.when(a,"view.stationary",()=>this._onChange()),p.on(a,"view.elevationProvider","elevation-change",this._onChange),p.on(a,"view.map.allLayers","change",d,d,d)]);return c};u._watchLayerVisibilities=function(a,c,b){var d,l,t;a.remove("layer-visibilities");c=null!=(d=null==(l=c.map)?void 0:null==(t=l.allLayers)?
void 0:t.toArray())?d:[];a.add(c.map(v=>v.watch("visible",b)),"layer-visibilities")};x._createClass(m,[{key:"minDemResolution",get:function(){var a,c,b;const d=null==(a=this._viewModel)?void 0:a.view;return d&&"3d"===d.type?(a=null==(c=d.pointsOfInterest)?void 0:null==(b=c.focus)?void 0:b.renderLocation)?d.state.camera.computeRenderPixelSizeAt(a)*H.getMetersPerVerticalUnitForSR(d.spatialReference):null:null}},{key:"_intersectOptions",get:function(){const a=this._view;return n.isSome(a)?a.externalToInternalIntersectOptions({include:this.include,
exclude:this.exclude}):{}}},{key:"_view",get:function(){const a=this._viewModel.view;return"3d"===(null==a?void 0:a.type)?a:null}},{key:"_maxIntersectionDistance",get:function(){const a=this._view;return n.isNone(a)?Number.POSITIVE_INFINITY:G.getReferenceEllipsoid(a.spatialReference).radius/a.renderCoordsHelper.unitInMeters}},{key:"_intersector",get:function(){var a=this._view;if(n.isNone(a))return null;a=new I.Intersector(a.state.mode);const c=a.options;c.hud=!1;c.invisibleTerrain=!1;c.backfacesTerrain=
!1;c.selectionMode=!1;c.store=2;return a}}]);return m}(J.ElevationProfileLine);h.__decorate([k.property({type:y,nonNullable:!0})],e.prototype,"color",void 0);h.__decorate([k.property()],e.prototype,"include",void 0);h.__decorate([k.property()],e.prototype,"exclude",void 0);h.__decorate([k.property({readOnly:!0})],e.prototype,"minDemResolution",null);h.__decorate([k.property()],e.prototype,"_intersectOptions",null);h.__decorate([k.property()],e.prototype,"_view",null);h.__decorate([k.property()],e.prototype,
"_maxIntersectionDistance",null);h.__decorate([k.property()],e.prototype,"_intersector",null);return e=h.__decorate([E.subclass("esri.widgets.ElevationProfile.ElevationProfileLineView")],e)});