// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/handleUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/aliasOf ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/promiseUtils ../../core/Accessor ../../symbols/CIMSymbol ../../core/Handles ../../core/watchUtils ../../layers/GraphicsLayer ../../views/DOMContainer ../Sketch/SketchViewModel ./support/geometryUtils".split(" "),
function(c,u,k,e,h,K,L,v,q,y,M,z,N,O,P,r,A,B,C,w,D,E,F,x){(function(f){f.Ready="ready";f.Creating="creating";f.Reshaping="reshaping";f.Selecting="selecting";f.Selected="selected"})(c.State||(c.State={}));e=function(f){function m(a){a=f.call(this,a)||this;a.state=c.State.Ready;a._handles=new C;a._prevInput=null;a._hasPrevInput=!1;a._prevInputIsInternal=!1;a._toolPromise=r.resolve();return a}u._inheritsLoose(m,f);var d=m.prototype;d.initialize=function(){const a=this.parentViewModel.view;this._graphicsLayer=
new D({listMode:"hide",elevationInfo:{mode:"on-the-ground",offset:null}});var b="2d"===a.type?new B({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[5,4],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:1.5,color:[0,0,0,255]},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:1.5,color:[255,255,255,255]}]}}}):
null;this._sketchVM=new F({layer:this._graphicsLayer,view:a,defaultCreateOptions:{mode:"click",hasZ:!1},updateOnGraphicClick:!1,defaultUpdateOptions:{enableMidpoints:!0,enableRotation:!1,enableScaling:!1,enableMoveAllGraphics:!1,enableZ:!1,multipleSelectionEnabled:!1,toggleToolOnClick:!1,enableMoveGraphic:!1,tool:"reshape"},polylineSymbol:b,activeLineSymbol:b,updatePolylineSymbol:b});this._handles.add([w.init(this.parentViewModel,["input"],()=>this._update(),!0),w.init(a,"map",g=>{null==g?void 0:
g.add(this._graphicsLayer);this._update()}),this._sketchVM.on("create",g=>this._onSketchViewModelCreate(g)),this._sketchVM.on("update",g=>this._onSketchViewModelUpdate(g))])};d.destroy=function(){var a,b;this._handles.destroy();this._handles=null;null==(a=this.parentViewModel.view)?void 0:null==(b=a.map)?void 0:b.remove(this._graphicsLayer);this._sketchVM.destroy();this._sketchVM=null;this._graphicsLayer.destroy();this._graphicsLayer=null};d.start=function(a={mode:"sketch"}){this._sketchVM.cancel();
this._stopSelectionInteraction();this._prevInput||this._storePreviousInput(this._input);this._input=null;this._graphicsLayer.removeAll();"sketch"===a.mode?(this._set("state",c.State.Creating),this._toolPromise=this._sketchVM.create("polyline")):(this._set("state",c.State.Selecting),this._startSelectionInteraction())};d.stop=function(){switch(this.state){case c.State.Creating:this._stopCreationInteraction();this._afterInteraction();break;case c.State.Selecting:this._stopSelectionInteraction(),this._afterInteraction()}};
d.cancel=function(){switch(this.state){case c.State.Creating:this._sketchVM.cancel();this._restorePreviousInput();this._afterInteraction();break;case c.State.Selecting:this._stopSelectionInteraction(),this._restorePreviousInput(),this._afterInteraction()}};d.clear=function(){this._sketchVM.cancel();this._set("state",c.State.Ready);this._clearPreviousInput();this._input=null};d._stopCreationInteraction=function(){const a=this._input,b=this.canStopCreating;this._sketchVM.cancel();h.isNone(a)||!b?this._input=
null:(this._removeLastPoint(a),this._graphicsLayer.removeAll(),this._graphicsLayer.add(a),this._input=a)};d._startSelectionInteraction=function(){this._stopSelectionInteraction();const a=this.parentViewModel.view,b=a.cursor;a.cursor="crosshair";const g=v.makeHandle(()=>a.cursor=b);let n=null;const G=v.makeHandle(()=>{h.isSome(n)&&(n.abort(),n=null)}),I=a.on("immediate-click",l=>{l.preventDefault();l.stopPropagation();n=r.createTask(async t=>{const {results:H}=await a.hitTest(l);r.throwIfAborted(t);
if(t=H.map(p=>p.graphic).find(p=>h.isSome(p.geometry)&&"polyline"===p.geometry.type))this._input=t,this._clearPreviousInput(),this._set("state",c.State.Selected),this._stopSelectionInteraction()})}),J=a.on("key-down",l=>{"Escape"===l.key&&this.cancel()});this._handles.add([I,J,G,g],"selection-interaction");a.ready&&E.isDOMContainer(a)&&a.focus()};d._stopSelectionInteraction=function(){this._handles.remove("selection-interaction")};d._update=function(){const a=this.state,{input:b}=this.parentViewModel;
a===c.State.Selecting?this.stop():a===c.State.Creating||a===c.State.Reshaping&&this._isInternalGraphic(b)||(this._sketchVM.cancel(),h.isNone(b)?(this._graphicsLayer.removeAll(),this._set("state",c.State.Ready)):this._isInternalGraphic(b)?(this._set("state",c.State.Reshaping),this._toolPromise=this._sketchVM.update(b,{tool:"reshape"})):(this._graphicsLayer.removeAll(),this._set("state",c.State.Selected)))};d._afterInteraction=function(){this._toolPromise=null;this._clearPreviousInput();this._set("state",
c.State.Ready);this._update()};d._onSketchViewModelCreate=function(a){if("polyline"===a.tool)switch(a.state){case "complete":this._input=a.graphic;this._afterInteraction();break;case "cancel":this.cancel();break;case "active":case "start":this._input=a.graphic}};d._onSketchViewModelUpdate=function(a){switch(a.state){case "complete":this._afterInteraction();break;case "active":case "start":this._input=a.graphics[0]}};d._removeLastPoint=function(a){var b=a.geometry;x.isPolyline(b)&&(b=b.clone(),b.paths=
[b.paths[0].slice(0,-1)],a.geometry=b)};d._storePreviousInput=function(a){this._hasPrevInput=!0;this._prevInput=a;this._prevInputIsInternal=this._isInternalGraphic(a)};d._restorePreviousInput=function(){if(this._hasPrevInput){var a=this._prevInput;h.isSome(a)&&this._prevInputIsInternal&&(this._graphicsLayer.removeAll(),this._graphicsLayer.add(a));this._input=a;this._clearPreviousInput()}};d._clearPreviousInput=function(){this._prevInput=this._hasPrevInput=null;this._prevInputIsInternal=!1};d._isInternalGraphic=
function(a){return h.isSome(a)&&this._graphicsLayer.graphics.includes(a)};u._createClass(m,[{key:"canStopCreating",get:function(){const a=h.applySome(this.parentViewModel.input,b=>b.geometry);return x.isPolyline(a)&&0<a.paths.length&&2<a.paths[0].length}},{key:"test",get:function(){return{sketchVM:this._sketchVM,toolPromise:this._toolPromise}}}]);return m}(A);k.__decorate([q.property({nonNullable:!0})],e.prototype,"state",void 0);k.__decorate([q.property({nonNullable:!0})],e.prototype,"parentViewModel",
void 0);k.__decorate([q.property()],e.prototype,"canStopCreating",null);k.__decorate([y.aliasOf("parentViewModel.input")],e.prototype,"_input",void 0);e=k.__decorate([z.subclass("esri.widgets.ElevationProfile.ElevationProfileInteraction")],e);c.default=e;Object.defineProperty(c,"__esModule",{value:!0})});