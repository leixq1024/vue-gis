// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/Error ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/promiseUtils ../../../core/Accessor ../../../geometry/support/spatialReferenceUtils ../../../geometry/SpatialReference ../../../geometry/support/webMercatorUtils ../../../geometry ../../../geometry/projection ../../../geometry/coordinateFormatter ./coordinateConversionUtils".split(" "),
function(u,h,e,B,C,l,D,y,q,E,F,G,f,z,A,r,v,H,w,m,k){e=function(x){function p(a){a=x.call(this,a)||this;a.conversionInfo=null;a.coordinateSegments=null;a.defaultPattern=null;a.name=null;a.viewModel=null;return a}u._inheritsLoose(p,x);var n=p.prototype;n.convert=function(a,b){if(!k.isValidPoint(a))return f.reject(new q("format:invalid-point","Could not convert invalid point.",{point:a}));const c=this.get("conversionInfo.convert");return c?f.resolve().then(()=>c(a)):this._project(a,this.spatialReference,
b).then(g=>this._getCoordinate(g).then(d=>({location:g,coordinate:d})))};n.getConversionStrategy=function(){const a=this._viewSpatialReference;return this.get("conversionInfo.convert")||this.get("viewModel.formatterAvailable")||"xy"===this.name&&(a.isWebMercator||a.isWGS84)||"basemap"===this.name?"client":"server"};n.getDisplayCoordinate=function(a){if(!a)return null;if(!this.coordinateSegments||!this.currentPattern)return a;let b=this.currentPattern;a=this._getSegmentMatches(a,!1);for(let c=this.coordinateSegments.length-
1;0<=c;c--)b=b.replace(this.coordinateSegments[c].alias,a[c]);return b};n.parseUserInput=function(a){let b=this.defaultPattern.replace(this._additionalCharactersPattern,"");a=a.replace(this._additionalCharactersPattern,"");a=this._getSegmentMatches(a,!0);for(let c=this.coordinateSegments.length-1;0<=c;c--)b=b.replace(this.coordinateSegments[c].alias,a[c]);return b};n._getSegmentMatches=function(a,b){const c=[];for(let t=0;t<this.coordinateSegments.length;t++){var g=this.coordinateSegments[t],d=a.match(g.searchPattern);
d?(d=d[0],a=a.replace(d,"").trim(),g.substitution&&(g=b?g.substitution.input(d):g.substitution.output(d))&&(d=g),c.push(d)):c.push("")}return c};n.reverseConvert=function(a){const b=this.parseUserInput(a),c=this.get("conversionInfo.reverseConvert"),g=k.isSupportedNotation(this.name);let d;if(c)d=c(b);else if("xy"===this.name||"basemap"===this.name)d=k.fromXY(b,this.spatialReference);else if(this.viewModel.formatterAvailable)switch(this.name){case "dd":case "ddm":case "dms":d=m.fromLatitudeLongitude(b,
this.spatialReference);break;case "mgrs":d=m.fromMgrs(b,this.spatialReference,"automatic");break;case "utm":d=m.fromUtm(b,this.spatialReference,"latitude-band-indicators");break;case "usng":d=m.fromUsng(b,this.spatialReference);break;default:d=null}else if(g)return k.fromGeoCoordinateString({coordinate:b,spatialReference:this.spatialReference,formatName:this.name,geometryServicePromise:this.get("viewModel.geometryServicePromise")});return d?this._project(d,this._viewSpatialReference):f.reject(new q("format:invalid-input",
"Could not parse input into point.",{userInput:a}))};n._getCoordinate=function(a){var b=this.get("viewModel.view.scale");if(!k.isValidPoint(a))return f.reject(new q("format:invalid-point","Could not transform invalid point into coordinate.",{point:a}));if(this.get("viewModel.formatterAvailable")||"basemap"===this.name||"xy"===this.name)switch(this.name){case "dd":case "ddm":case "dms":return b=k.getDegreePrecision(b),f.resolve(m.toLatitudeLongitude(a,this.name,b));case "mgrs":return f.resolve(m.toMgrs(a,
"automatic",5,!1));case "usng":return f.resolve(m.toUsng(a,5,!1));case "utm":return f.resolve(m.toUtm(a,"latitude-band-indicators",!0));default:return f.resolve(k.pointToCoordinate(a,b))}return k.isSupportedNotation(this.name)?k.toGeoCoordinateString({formatName:this.name,location:a,geometryServicePromise:this.get("viewModel.geometryServicePromise")}):f.resolve(k.pointToCoordinate(a,b))};n._project=function(a,b,c){return A.equals(a.spatialReference,b)||!b?f.resolve(a):this.get("viewModel.formatterAvailable")&&
w.isLoaded()?f.resolve(w.project(a,b)):this.get("viewModel.formatterAvailable")?null:v.canProject(a,b)?f.resolve(v.project(a,b)):k.project({location:a,spatialReference:b,geometryServicePromise:this.get("viewModel.geometryServicePromise"),scale:this.get("viewModel.view.scale")},c).then(g=>g.location)};u._createClass(p,[{key:"currentPattern",get:function(){return this._get("currentPattern")||this._get("defaultPattern")},set:function(a){this._set("currentPattern",a)}},{key:"hasDisplayProperties",get:function(){return!(!this.defaultPattern||
!this.coordinateSegments)}},{key:"spatialReference",get:function(){const a=this.get("conversionInfo.spatialReference")||r.WGS84;return"basemap"===this.name?this._viewSpatialReference:a},set:function(a){void 0===a&&this._clearOverride("spatialReference");this._override("spatialReference",a)}},{key:"_viewSpatialReference",get:function(){return this.get("viewModel.view.spatialReference")||r.WGS84}},{key:"_additionalCharactersPattern",get:function(){var a=this.get("coordinateSegments");if(!a)return null;
a=a.map(b=>b.alias);a=this.currentPattern.replace(new RegExp(`["nsew${a.join()}]`,"gi"),"").replace(/ /g,"");return new RegExp(`[${a}]`,"g")}}]);return p}(z);h.__decorate([l.property()],e.prototype,"conversionInfo",void 0);h.__decorate([l.property()],e.prototype,"coordinateSegments",void 0);h.__decorate([l.property()],e.prototype,"currentPattern",null);h.__decorate([l.property()],e.prototype,"defaultPattern",void 0);h.__decorate([l.property({readOnly:!0,dependsOn:["defaultPattern","coordinateSegments"]})],
e.prototype,"hasDisplayProperties",null);h.__decorate([l.property()],e.prototype,"name",void 0);h.__decorate([l.property({dependsOn:["_viewSpatialReference","name"],type:r})],e.prototype,"spatialReference",null);h.__decorate([l.property()],e.prototype,"viewModel",void 0);h.__decorate([l.property({dependsOn:["viewModel.view.spatialReference"],readOnly:!0})],e.prototype,"_viewSpatialReference",null);h.__decorate([l.property({readOnly:!0,dependsOn:["currentPattern"]})],e.prototype,"_additionalCharactersPattern",
null);return e=h.__decorate([y.subclass("esri.widgets.CoordinateConversion.support.Format")],e)});