// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/Error ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/promiseUtils ../../geometry/support/webMercatorUtils ../../geometry/Point ../../geometry ../../core/Collection ../../support/actions/ActionBase ../../support/actions/ActionButton ../../support/actions/ActionToggle ../../core/Handles ../../layers/Layer ../../core/watchUtils ../../views/input/InputManager ../Feature/FeatureViewModel ../support/AnchorElementViewModel ../../views/support/layerViewUtils ./actions ../support/GoTo".split(" "),
function(z,h,f,A,C,S,k,T,D,u,U,V,W,t,E,F,X,G,H,I,J,K,L,n,M,N,O,P,p,Q){const y=G.ofType({key:"type",defaultKeyValue:"button",base:H,typeMap:{button:I,toggle:J}}),v=C.getLogger("esri.widgets.Popup.PopupViewModel");f=function(B){function w(a){a=B.call(this,a)||this;a._handles=new K;a._pendingPromises=new Set;a._zoomToLocation=null;a._fetchFeaturesController=null;a.actions=new y([p.zoomToFeature.clone()]);a.defaultPopupTemplateEnabled=!1;a.autoCloseEnabled=!1;a.autoOpenEnabled=!0;a.content=null;a.featureViewModels=
[];a.highlightEnabled=!0;a.title=null;a.updateLocationEnabled=!1;a.view=null;a.visible=!1;a.zoomFactor=4;return a}z._inheritsLoose(w,B);var g=w.prototype;g.initialize=function(){this._handles.add([n.init(this,["autoOpenEnabled","view"],()=>this._autoOpenEnabledChange()),this.on("view-change",()=>this._autoClose()),n.watch(this,["highlightEnabled","selectedFeature","visible","view"],()=>this._highlightFeature()),n.watch(this,"view.animation.state",a=>this._animationStateChange(a)),n.watch(this,"location",
a=>this._locationChange(a)),n.watch(this,"selectedFeature",a=>this._selectedFeatureChange(a)),this.on("trigger-action",a=>p.triggerAction({event:a,view:this.view})),n.whenFalse(this,"waitingForResult",()=>this._waitingForResultChange()),n.watch(this,["features","view","view.map","view.spatialReference"],()=>this._updateFeatureVMs())])};g.destroy=function(){this._cancelFetchingFeatures();this._handles.destroy();this._handles=null;this._pendingPromises.clear();this.view=null};g.centerAtLocation=function(){var {view:a}=
this;const b=this._getSelectedTarget();return b?this.callGoTo({target:{target:b,scale:a.scale}}):(a=new u("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:b,view:a}),v.error(a),t.reject(a))};g.clear=function(){this.set({promises:[],features:[],content:null,title:null,location:null})};g.fetchFeatures=function(a,b){const {view:c}=this;return c&&a?c.fetchPopupFeatures(a,{event:b&&b.event,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,
signal:b&&b.signal}):(a=new u("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:a,view:c}),v.error(a),t.reject(a))};g.open=function(a){a={updateLocationEnabled:!1,promises:[],fetchFeatures:!1,...a,visible:!0};const {fetchFeatures:b}=a;delete a.fetchFeatures;b&&this._setFetchFeaturesPromises(a.location);this.set(a)};g.triggerAction=function(a){(a=this.allActions.getItemAt(a))&&!a.disabled&&this.emit("trigger-action",{action:a})};g.next=
function(){this.selectedFeatureIndex+=1;return this};g.previous=function(){--this.selectedFeatureIndex;return this};g.zoomToLocation=function(){const {location:a,selectedFeature:b,view:c,zoomFactor:d}=this;var e=this._getSelectedTarget();if(!e)return e=new u("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:e,view:c}),v.error(e),t.reject(e);const m=c.scale/d,l=this.get("selectedFeature.geometry")||a,q=l&&"point"===l.type&&this._isZoomScreenSize(b);p.zoomToFeature.active=
!0;p.zoomToFeature.disabled=!0;return this._zoomToLocation=e=this.callGoTo({target:{target:e,scale:q?m:void 0}}).catch(()=>{p.zoomToFeature.active=!1;p.zoomToFeature.disabled=!1;this._zoomToLocation=null}).then(()=>{q&&(this.location=l)})};g._animationStateChange=function(a){this._zoomToLocation||(p.zoomToFeature.disabled="waiting-for-target"===a)};g._locationChange=function(a){const {selectedFeature:b,updateLocationEnabled:c}=this;c&&a&&(!b||b.geometry)&&this.centerAtLocation()};g._selectedFeatureChange=
function(a){if(a){var {location:b,updateLocationEnabled:c,view:d}=this;!c&&b||!a.geometry?c&&!a.geometry&&this.centerAtLocation().then(()=>{this.location=d.center.clone()}):this.location=A.unwrap(this._getPointFromGeometry(a.geometry))}};g._waitingForResultChange=function(){!this.featureCount&&this.promises&&(this.visible=!1)};g._setFetchFeaturesPromises=function(a){return this._fetchFeaturesWithController(this._getScreenPoint(a||this.location)).then(b=>{const {clientOnlyGraphics:c,promisesPerLayerView:d}=
b;b=t.resolve(c);const e=d.map(m=>m.promise);this.promises=[b,...e]})};g._destroyFeatureVMs=function(){this.featureViewModels.forEach(a=>a&&!a.destroyed&&a.destroy());this._set("featureViewModels",[])};g._updateFeatureVMs=function(){const {features:a,featureViewModels:b}=this;this._destroyFeatureVMs();if(a&&a.length){var c=b.slice(0),d=[];a.forEach((e,m)=>{if(e){var l=null;c.some((r,R)=>{r&&r.graphic===e&&(l=r,c.splice(R,1));return!!l});if(l)d[m]=l;else{var q,x;const r=new N({defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,
graphic:e,spatialReference:null==(q=this.view)?void 0:q.spatialReference,map:null==(x=this.view)?void 0:x.map});d[m]=r}}});c.forEach(e=>e&&!e.destroyed&&e.destroy());this._set("featureViewModels",d)}};g._getScreenPoint=function(a){const {view:b}=this;return b&&a&&"function"===typeof b.toScreen?b.toScreen(a):null};g._getSelectedTarget=function(){const {selectedFeature:a,location:b,view:c}=this;return c?"3d"===c.type?a||b:this.get("selectedFeature.geometry")||b:null};g._autoOpenEnabledChange=function(){const {_handles:a,
autoOpenEnabled:b}=this;a.remove("auto-fetch-features");if(b&&this.view){const c=this.view.on("click",d=>{"mouse"===d.pointerType&&0!==d.button||this._fetchFeaturesAndOpen(d)},M.ViewEventPriorities.WIDGET);a.add(c,"auto-fetch-features")}};g._cancelFetchingFeatures=function(){const a=this._fetchFeaturesController;a&&a.abort();this._fetchFeaturesController=null;this.notifyChange("waitingForResult")};g._fetchFeaturesWithController=function(a,b){this._cancelFetchingFeatures();const c=t.createAbortController(),
{signal:d}=c;this._fetchFeaturesController=c;this.notifyChange("waitingForResult");a=this.fetchFeatures(a,{signal:d,event:b});a.catch(()=>{}).then(()=>{this._fetchFeaturesController=null;this.notifyChange("waitingForResult")});return a};g._fetchFeaturesAndOpen=function(a){const {screenPoint:b,mapPoint:c}=a,{view:d}=this;this._fetchFeaturesWithController(b,a).then(e=>{const {clientOnlyGraphics:m,promisesPerLayerView:l,location:q}=e,x=[t.resolve(m),...l.map(r=>r.promise)];d.popup.open({location:q||
c,promises:x});return e})};g._updatePendingPromises=function(a){a&&this._pendingPromises.has(a)&&(this._pendingPromises.delete(a),this.notifyChange("pendingPromisesCount"))};g._autoClose=function(){this.autoCloseEnabled&&(this.visible=!1)};g._isZoomScreenSize=function(a){var {view:b}=this;if("3d"!==b.type||!a||"esri.Graphic"!==a.declaredClass)return!0;if((b=b.getViewForGraphic(a))&&"whenGraphicBounds"in b){let c=!1;b.whenGraphicBounds(a,{useViewElevation:!0}).then(d=>{c=!d||!d.boundingBox||d.boundingBox[0]===
d.boundingBox[3]&&d.boundingBox[1]===d.boundingBox[4]&&d.boundingBox[2]===d.boundingBox[5]}).catch(()=>{const d=new u("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:a});v.error(d)});return c}return!0};g._getPointFromGeometry=function(a){return A.isNone(a)?null:"point"===a.type?a:"extent"===a.type?a.center:"polygon"===a.type?a.centroid:"multipoint"===a.type||"polyline"===a.type?a.extent.center:null};g._getLayerView=async function(a,b){await a.when();return a.whenLayerView(b)};
g._highlightFeature=async function(){this._handles.remove("highlight");const {selectedFeature:a,highlightEnabled:b,view:c,visible:d}=this;if(a&&c&&b&&d){var {layer:e}=a;if(e&&e instanceof L){var m=this._getLayerView(c,e);this._highlightPromise=m;var l=await m;l&&P.highlightsSupported(l)&&this._highlightPromise===m&&this.selectedFeature&&this.highlightEnabled&&this.visible&&(e="objectIdField"in e&&e.objectIdField,m=a.attributes,l=l.highlight(m&&e&&m[e]||a),this._handles.add(l,"highlight"))}}};g._updateFeatures=
function(a){const {features:b}=this;a&&a.length&&(b.length?(a=a.filter(c=>-1===b.indexOf(c)),this.features=b.concat(a)):this.features=a)};z._createClass(w,[{key:"active",get:function(){return!(!this.visible||this.waitingForResult)}},{key:"allActions",get:function(){const a=this._get("allActions")||new y;a.removeAll();var b=this.selectedFeature&&("function"===typeof this.selectedFeature.getEffectivePopupTemplate&&this.selectedFeature.getEffectivePopupTemplate(this.defaultPopupTemplateEnabled)||this.selectedFeature.popupTemplate);
const c=b&&b.actions;(b=b&&b.overwriteActions?c:c?c.concat(this.actions):this.actions)&&b.filter(Boolean).forEach(d=>a.add(d));return a}},{key:"featureCount",get:function(){return this.features.length}},{key:"features",get:function(){return this._get("features")||[]},set:function(a){a=a||[];this._set("features",a);const {pendingPromisesCount:b,promiseCount:c,selectedFeatureIndex:d}=this,e=c&&a.length;e&&b&&-1===d?this.selectedFeatureIndex=0:e&&-1!==d||(this.selectedFeatureIndex=a.length?0:-1)}},{key:"location",
get:function(){return this._get("location")||null},set:function(a){const b=this.get("view.spatialReference.isWebMercator");a&&a.get("spatialReference.isWGS84")&&b&&(a=E.geographicToWebMercator(a));this._set("location",a)}},{key:"pendingPromisesCount",get:function(){return this._pendingPromises.size}},{key:"waitingForResult",get:function(){return!(!(this._fetchFeaturesController||0<this.pendingPromisesCount)||0!==this.featureCount)}},{key:"promiseCount",get:function(){return this.promises.length}},
{key:"promises",get:function(){return this._get("promises")||[]},set:function(a){this._pendingPromises.clear();this.features=[];Array.isArray(a)&&a.length?(this._set("promises",a),a=a.slice(0),a.forEach(b=>{this._pendingPromises.add(b);b.then(c=>{this._pendingPromises.has(b)&&this._updateFeatures(c);this._updatePendingPromises(b)},()=>this._updatePendingPromises(b))})):this._set("promises",[]);this.notifyChange("pendingPromisesCount")}},{key:"selectedFeature",get:function(){const {features:a,selectedFeatureIndex:b}=
this;return-1===b?null:a[b]||null}},{key:"selectedFeatureIndex",get:function(){const a=this._get("selectedFeatureIndex");return"number"===typeof a?a:-1},set:function(a){const {featureCount:b}=this;a=isNaN(a)||-1>a||!b?-1:(a+b)%b;this._set("selectedFeatureIndex",a)}},{key:"selectedFeatureViewModel",get:function(){return this.featureViewModels[this.selectedFeatureIndex]||null}},{key:"state",get:function(){return this.get("view.ready")?"ready":"disabled"}}]);return w}(Q.GoToMixin(O));h.__decorate([k.property({type:y})],
f.prototype,"actions",void 0);h.__decorate([k.property({readOnly:!0,dependsOn:["visible","waitingForResult"]})],f.prototype,"active",null);h.__decorate([k.property({dependsOn:["actions.length","selectedFeature.sourceLayer.popupTemplate.actions.length","selectedFeature.sourceLayer.popupTemplate.overwriteActions","selectedFeature.popupTemplate.actions.length","selectedFeature.popupTemplate.overwriteActions"],readOnly:!0})],f.prototype,"allActions",null);h.__decorate([k.property({type:Boolean})],f.prototype,
"defaultPopupTemplateEnabled",void 0);h.__decorate([k.property()],f.prototype,"autoCloseEnabled",void 0);h.__decorate([k.property()],f.prototype,"autoOpenEnabled",void 0);h.__decorate([k.property()],f.prototype,"content",void 0);h.__decorate([k.property({readOnly:!0,dependsOn:["features"]})],f.prototype,"featureCount",null);h.__decorate([k.property()],f.prototype,"features",null);h.__decorate([k.property({readOnly:!0})],f.prototype,"featureViewModels",void 0);h.__decorate([k.property()],f.prototype,
"highlightEnabled",void 0);h.__decorate([k.property({type:F})],f.prototype,"location",null);h.__decorate([k.property({readOnly:!0,dependsOn:["promises"]})],f.prototype,"pendingPromisesCount",null);h.__decorate([k.property({readOnly:!0,dependsOn:["featureCount","pendingPromisesCount"]})],f.prototype,"waitingForResult",null);h.__decorate([k.property({readOnly:!0,dependsOn:["promises"]})],f.prototype,"promiseCount",null);h.__decorate([k.property()],f.prototype,"promises",null);h.__decorate([k.property({value:null,
readOnly:!0,dependsOn:["features","selectedFeatureIndex","updateLocationEnabled"]})],f.prototype,"selectedFeature",null);h.__decorate([k.property({value:-1})],f.prototype,"selectedFeatureIndex",null);h.__decorate([k.property({readOnly:!0,dependsOn:["featureViewModels","selectedFeatureIndex"]})],f.prototype,"selectedFeatureViewModel",null);h.__decorate([k.property({readOnly:!0,dependsOn:["view.ready"]})],f.prototype,"state",null);h.__decorate([k.property()],f.prototype,"title",void 0);h.__decorate([k.property()],
f.prototype,"updateLocationEnabled",void 0);h.__decorate([k.property()],f.prototype,"view",void 0);h.__decorate([k.property()],f.prototype,"visible",void 0);h.__decorate([k.property()],f.prototype,"zoomFactor",void 0);h.__decorate([k.property()],f.prototype,"centerAtLocation",null);h.__decorate([k.property()],f.prototype,"zoomToLocation",null);return f=h.__decorate([D.subclass("esri.widgets.Popup.PopupViewModel")],f)});