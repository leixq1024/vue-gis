// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/JSONSupport ../../core/colorUtils ./colorRampUtils ../../layers/support/RasterInfo ../../layers/support/rasterFunctions/pixelUtils ../../layers/support/rasterFunctions/surfaceUtils".split(" "),
function(E,y,v,w,F,M,z,N,G,O,P,Q,H,I,B,J,p,A){function K(x,u){const {attributeTable:l,bandCount:a}=x;return!w.isSome(l)||1<a||u&&null==l.fields.find(b=>b.name.toLowerCase()===u.toLowerCase())?!1:!0}function L(x){const {bandCount:u,colormap:l}=x;return w.isSome(l)&&l.length&&1===u}const C=F.getLogger("esri.renderers.support.RasterSymbolizer"),D={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-3.4*1E39,3.4*1E39],
f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};v=function(x){function u(a){return x.call(this,a)||this}E._inheritsLoose(u,x);var l=u.prototype;l.bind=function(){const {rendererJSON:a}=this;if(!a)return!1;this.lookup={rendererJSON:{}};let b;switch(a.type){case "uniqueValue":b=this._updateUVRenderer(a);break;case "rasterColormap":b=this._updateColormapRenderer(a);break;case "rasterStretch":b=this._updateStretchRenderer(a);break;case "classBreaks":b=this._updateClassBreaksRenderer(a);break;case "rasterShadedRelief":b=
this._updateShadedReliefRenderer(a)}return b};l.symbolize=function(a){let b=a&&a.pixelBlock;if(!this.isValidPixelBlock(b))return b;if(a.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(b,a.simpleStretchParams);try{3<b.pixels.length&&(b=p.extractBands(b,[0,1,2]));let e;switch(this.rendererJSON.type){case "uniqueValue":case "rasterColormap":e=this._symbolize_colormap(b);break;case "classBreaks":e=this._symbolize_classBreaks(b);break;case "rasterStretch":e=this._symbolize_stretch(b,
a.bandIds);break;case "rasterShadedRelief":({extent:a}=a),e=this._symbolize_shadedRelief(b,{isGCS:a.spatialReference.isGeographic,resolution:{x:(a.xmax-a.xmin)/b.width,y:(a.ymax-a.ymin)/b.height}})}return e}catch(e){return C.error("symbolize",e.message),b}};l.simpleStretch=function(a,b){if(!this.isValidPixelBlock(a))return a;try{return 3<a.pixels.length&&(a=p.extractBands(a,[0,1,2])),p.stretch(a,b)}catch(e){return C.error("symbolize",e.message),a}};l.generateWebGLParameters=function(a){if(-1<["uniqueValue",
"rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)){const {indexedColormap:f,offset:g}=this.lookup.colormapLut;return{colormap:f,colormapOffset:g,type:"lut"}}const {pixelBlock:b,isGCS:e,resolution:c,bandIds:d}=a;({rendererJSON:a}=this);return"rasterStretch"===a.type?this.generateStretchWebGLParams(b,a,d):"rasterShadedRelief"===a.type?this.generateShadedReliefWebGLParams(a,e,c):null};l._isLUTChanged=function(a){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const b=
this.rendererJSON.colorRamp;if(a)return JSON.stringify(b)!==JSON.stringify(this.lookup.rendererJSON.colorRamp)}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)};l._symbolize_colormap=function(a){return this._isLUTChanged()&&!this.bind()?a:p.colorize(a,this.lookup.colormapLut)};l._symbolize_classBreaks=function(a){const b=-1<["u8","u16","s8","s16"].indexOf(this.rasterInfo.pixelType);return this._isLUTChanged()&&!this.bind()?a:b?p.colorize(a,this.lookup.colormapLut):
p.remapColor(a,this.lookup.remapLut)};l._symbolize_stretch=function(a,b){const {pixelType:e,bandCount:c}=this.rasterInfo,d=this.rendererJSON;var f=-1<["u8","u16","s8","s16"].indexOf(e);let g;const {gamma:k,useGamma:m}=d;if(f){var n;if(d.dra)f=this.getStretchCutoff(d,a,b),g=p.createStretchLUT({pixelType:e,...f,gamma:m?k:null});else{if(this._isLUTChanged()&&!this.bind())return a;g=this.lookup?this.lookup.stretchLut:null}if(!g)return a;1<c&&(null==b?void 0:b.length)===a.pixels.length&&(null==(n=g)?void 0:
n.lut.length)===c&&(g={lut:b.map(q=>g.lut[q]),offset:g.offset});b=p.lookupPixels(a,g)}else b=this.getStretchCutoff(d,a,b),b=p.stretch(a,{...b,gamma:m?k:null});if(d.colorRamp){if(this._isLUTChanged(!0)&&!this.bind())return a;b=p.colorize(b,this.lookup.colormapLut)}return b};l._symbolize_shadedRelief=function(a,b){var e,c,d=this.rendererJSON;b=A.hillshade(a,{...d,...b});if(!d.colorRamp||this._isLUTChanged(!0)&&!this.bind())return b;d=this.lookup?this.lookup.hsvMap:null;if(!d)return b;const f=null!=
(e=null==(c=w.unwrap(this.rasterInfo.statistics))?void 0:c[0])?e:{min:0,max:8E3};A.tintHillshade(b,a,d,f);return b};l._updateUVRenderer=function(a){const {bandCount:b,attributeTable:e,statistics:c,pixelType:d}=this.rasterInfo,f=a.field1;if(!f)return!1;var g=-1<["u8","s8"].indexOf(d)&&c&&null!=c[0].min&&null!=c[0].max;if(!(K(this.rasterInfo,f)||1===b&&g))return!1;const k=[];if(e){const m=e.fields.filter(n=>"value"===n.name.toLowerCase())[0];if(!m)return!1;e.features.forEach(n=>{var q,h=a.uniqueValueInfos.filter(r=>
String(r.value)===String(n.attributes[f]))[0];(h=null==h?void 0:null==(q=h.symbol)?void 0:q.color)&&k.push([n.attributes[m.name]].concat(h))})}else{if("value"!==f.toLowerCase())return!1;a.uniqueValueInfos.forEach(m=>{var n;const q=null==m?void 0:null==(n=m.symbol)?void 0:n.color;q&&k.push([parseInt(""+m.value,10)].concat(q))})}if(0===k.length)return!1;g=p.createColormapLUT({colormap:k});this.lookup={rendererJSON:a,colormapLut:g};return this.canRenderInWebGL=!0};l._updateColormapRenderer=function(a){if(!L(this.rasterInfo))return!1;
var b=a.colormapInfos.map(e=>[e.value].concat(e.color)).sort((e,c)=>e[0]-c[0]);if(!b||0===b.length)return!1;b=p.createColormapLUT({colormap:b});this.lookup={rendererJSON:a,colormapLut:b};return this.canRenderInWebGL=!0};l._updateShadedReliefRenderer=function(a){if("elevation"!==this.rasterInfo.dataType)return!1;if(a.colorRamp){var b=B.convertColorRampToColormap(a.colorRamp,256,!0);b=p.createColormapLUT({colormap:b});const e=[],c=b.indexedColormap;for(let d=0;d<c.length;d+=4){const f=I.toHSV({r:c[d],
g:c[d+1],b:c[d+2]});e.push([f.h/60,f.s/100,255*f.v/100])}this.lookup={rendererJSON:a,colormapLut:b,hsvMap:e}}else this.lookup=null;return this.canRenderInWebGL=!0};l._updateClassBreaksRenderer=function(a){var b=-1<["u8","u16","s8","s16"].indexOf(this.rasterInfo.pixelType),e=a.classBreakInfos;if(null==e||!e.length)return!1;e=e.sort((k,m)=>k.classMaxValue-m.classMaxValue);const c=e[e.length-1];var d=a.minValue;if(!b){b=[];for(var f=0;f<e.length;f++){var g;b.push({value:null!=(g=e[f].classMinValue)?
g:d,mappedColor:e[f].symbol.color});d=e[f].classMaxValue}b.push({value:c.classMaxValue,mappedColor:c.symbol.color});this.lookup={rendererJSON:a,remapLut:b};this.canRenderInWebGL=!1;return!0}g=[];d=a.minValue;for(b=0;b<e.length;b++){for(f=e[b];d<f.classMaxValue;d++)g.push([d].concat(f.symbol.color));d=f.classMaxValue}g.push([c.classMaxValue].concat(c.symbol.color));e=p.createColormapLUT({colormap:g,fillUnspecified:!1});this.lookup={rendererJSON:a,colormapLut:e};return this.canRenderInWebGL=!0};l._updateStretchRenderer=
function(a){if(!("none"===a.stretchType||a.statistics||this.rasterInfo.statistics||a.dra))return!1;var b=a.histograms||this.rasterInfo.histograms;if(!a.dra&&"percentClip"===a.stretchType&&!b)return!1;const {gamma:e,useGamma:c,colorRamp:d}=a;b=this.rasterInfo.pixelType;if(!a.dra&&-1<["u8","u16","s8","s16"].indexOf(b)){const f=this.getStretchCutoff(a);b=p.createStretchLUT({pixelType:b,...f,gamma:c?e:null});this.lookup={rendererJSON:a,stretchLut:b}}d&&(b=B.convertColorRampToColormap(d,256,!0),this.lookup||
(this.lookup={rendererJSON:a}),this.lookup.colormapLut=p.createColormapLUT({colormap:b}),this.lookup.rendererJSON=a);return this.canRenderInWebGL=!0};l.getStretchCutoff=function(a,b,e){var c=a.stretchType;if(a.dra)if("minMax"===c&&b.statistics)var d=b.statistics.map(t=>[t.minValue,t.maxValue,0,0]);else{var f=p.estimateStatisticsHistograms(b);d=f.statistics;f=f.histograms}else{var g;d=0<(null==(g=a.statistics)?void 0:g.length)?a.statistics:w.unwrap(this.rasterInfo.statistics);f=a.histograms||w.unwrap(this.rasterInfo.histograms)}var k=
d||f?(d||f).length:this.rasterInfo.bandCount;g=[];b=[];let m;let n,q,h;d&&!Array.isArray(d[0])&&(d=d.map(t=>[t.min,t.max,t.avg,t.stddev]));switch(c){case "none":f=D[this.rasterInfo.pixelType]||D.f32;for(c=0;c<k;c++)g[c]=f[0],b[c]=f[1];break;case "minMax":for(c=0;c<k;c++)g[c]=d[c][0],b[c]=d[c][1];break;case "standardDeviation":for(c=0;c<k;c++)g[c]=d[c][2]-a.numberOfStandardDeviations*d[c][3],b[c]=d[c][2]+a.numberOfStandardDeviations*d[c][3],g[c]<d[c][0]&&(g[c]=d[c][0]),b[c]>d[c][1]&&(b[c]=d[c][1]);
break;case "percentClip":for(c=0;c<f.length;c++){d=f[c];n=new Uint32Array(d.size);var r=d.counts;m=0;k=(d.max-d.min)/d.size;q=-.5===d.min&&1===k?.5:0;for(h=0;h<d.size;h++)m+=r[h],n[h]=m;r=a.minPercent*m/100;for(h=0;h<d.size;h++)if(n[h]>r){g[c]=d.min+k*(h+q);break}r=(1-a.maxPercent/100)*m;for(h=d.size-2;0<=h;h--)if(n[h]<r){b[c]=d.min+k*(h+2-q);break}}break;default:for(c=0;c<k;c++)g[c]=d[c][0],b[c]=d[c][1]}return this.getSelectedBandCutoffs({minCutOff:g,maxCutOff:b,outMax:a.max||255,outMin:a.min||0},
e)};l.getSelectedBandCutoffs=function(a,b){if(null==b||0===b.length)return a;const e=Math.max.apply(null,b),{minCutOff:c,maxCutOff:d,outMin:f,outMax:g}=a;return c.length===b.length||c.length<=e?a:{minCutOff:b.map(k=>c[k]),maxCutOff:b.map(k=>d[k]),outMin:f,outMax:g}};l.generateStretchWebGLParams=function(a,b,e){let c=null,d=null;var f=this.lookup&&this.lookup.colormapLut;b.colorRamp&&f&&(c=f.indexedColormap,d=f.offset);({gamma:f}=b);const g=!!(b.useGamma&&f&&f.some(t=>1!==t)),{minCutOff:k,maxCutOff:m,
outMin:n,outMax:q}=this.getStretchCutoff(b,a,e);a&&a.pixels&&2===a.pixels.length&&(a=a.clone(),a.statistics=[a.statistics[0]],a.pixels=[a.pixels[0]]);a=Math.min(3,e&&e.length||a&&a.getPlaneCount()||this.rasterInfo.bandCount);b=new Float32Array(a);e=c||g?1:255;let h;for(h=0;h<a;h++)b[h]=(q-n)/(m[h]-k[h])/e;const r=new Float32Array(a);if(g)for(h=0;h<a;h++)r[h]=1<f[h]?2<f[h]?6.5+Math.pow(f[h]-2,2.5):6.5+100*Math.pow(2-f[h],4):1;return{bandCount:a,outMin:n/e,outMax:q/e,minCutOff:k,maxCutOff:m,factor:b,
useGamma:g,gamma:g?f:[1,1,1],gammaCorrection:g?r:[1,1,1],colormap:c,colormapOffset:d,type:"stretch"}};l.generateShadedReliefWebGLParams=function(a,b,e){var c,d,f;let g=null,k=null;const m=this.lookup&&this.lookup.colormapLut;a.colorRamp&&m&&(g=m.indexedColormap,k=m.offset);b=A.calculateHillshadeParams({...a,isGCS:b,resolution:e});e=null==(c=w.unwrap(this.rasterInfo.statistics))?void 0:c[0];return{...b,minValue:null!=(d=e.min)?d:0,maxValue:null!=(f=e.max)?f:8E3,hillshadeType:"traditional"===a.hillshadeType?
0:1,type:"hillshade",colormap:g,colormapOffset:k}};l.isValidPixelBlock=function(a){return!!(a&&a.pixels&&0<a.pixels.length&&0!==a.validPixelCount)};return u}(H.JSONSupport);y.__decorate([z.property({json:{write:!0}})],v.prototype,"rendererJSON",void 0);y.__decorate([z.property({type:J,json:{write:!0}})],v.prototype,"rasterInfo",void 0);y.__decorate([z.property({json:{write:!0}})],v.prototype,"lookup",void 0);y.__decorate([z.property({})],v.prototype,"canRenderInWebGL",void 0);return v=y.__decorate([G.subclass("esri.renderers.support.RasterSymbolizer")],
v)});