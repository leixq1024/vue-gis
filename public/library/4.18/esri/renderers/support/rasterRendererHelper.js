// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../core/maybe ../../Color ../../tasks/support/MultipartColorRamp ../../core/unitUtils ./ClassBreakInfo ../ClassBreaksRenderer ./colorRampUtils ../RasterColormapRenderer ../RasterShadedReliefRenderer ../RasterStretchRenderer ./UniqueValueInfo ../UniqueValueRenderer ../VectorFieldRenderer ../../rasterRenderers ../../layers/support/RasterInfo ../../tasks/support/ClassBreaksDefinition ../../tasks/support/generateRendererUtils".split(" "),function(p,m,w,D,N,O,P,x,Q,R,S,T,U,V,ba,W,X,
Y){function E(a,b){var d,c,f,e;a=F(a,null==b?void 0:b.variableName);const {bandCount:h}=a;let {bandIds:n,stretchType:g}=b||{};null!=(d=n)&&d.some(k=>k>=h)&&(n=null);let l=m.unwrap(a.statistics),q=m.unwrap(a.histograms);if(1<h){var r;n=null!=(r=n)&&r.length?n:G(a);l=null==l?null:n.map(k=>l[k]);q=null==q?null:n.map(k=>q[k])}else n=[0];null==g&&(g=Z(a));b=!1;switch(g){case "none":b=!1;break;case "percent-clip":b=!(null!=(c=q)&&c.length);break;default:b=!(null!=(f=l)&&f.length)}a=1===(null==(e=n)?void 0:
e.length)&&"scientific"===a.dataType?H:null;e=new S({stretchType:g,dynamicRangeAdjustment:b,colorRamp:a,outputMin:0,outputMax:255,gamma:1===n.length?[1]:[1,1,1],useGamma:!1});"percent-clip"===g?e.maxPercent=e.minPercent=.25:"standard-deviation"===g&&(e.numberOfStandardDeviations=2);if(!b)if("percent-clip"===g)e.histograms=q;else if("min-max"===g||"standard-deviation"===g)e.statistics=l;return e}function F(a,b){if(null==b)return a;let d=m.unwrap(a.statistics),c=m.unwrap(a.histograms);const {multidimensionalInfo:f}=
a;if(b&&m.isSome(f)){const {statistics:e,histograms:h}=f.variables.find(n=>n.name===b);null!=e&&e.length&&(d=e);null!=h&&h.length&&(c=h)}return W.fromJSON({...a.toJSON(),statistics:d,histograms:c})}function G(a){const b=a.bandCount;if(1===b)return null;if(2===b)return[0];a=a.keyProperties&&a.keyProperties.BandProperties;let d;if(a&&a.length===b){const {red:c,green:f,blue:e,nir:h}=I(a);null!=c&&null!=f&&null!=e?d=[c,f,e]:null!=h&&null!=c&&null!=f&&(d=[h,c,f])}!d&&3<=b&&(d=[0,1,2]);return d}function I(a){const b=
{};for(let e=0;e<a.length;e++){var d,c=a[e],f=null==(d=c.BandName)?void 0:d.toLowerCase();"red"===f?b.red=e:"green"===f?b.green=e:"blue"===f?b.blue=e:"nearinfrared"===f||"nearinfrared_1"===f||"nir"===f?b.nir=e:c.WavelengthMax&&c.WavelengthMin&&(f=c.WavelengthMin,c=c.WavelengthMax,null==b.blue&&410<=f&&480>=f&&480<=c&&540>=c?b.blue=e:null==b.green&&490<=f&&560>=f&&560<=c&&610>=c?b.green=e:null==b.red&&595<=f&&670>=f&&660<=c&&730>=c?b.red=e:null==b.nir&&700<=f&&860>=f&&800<=c&&950>=c&&(b.nir=e))}return b}
function Z(a){let b="percent-clip";const {pixelType:d,dataType:c,histograms:f,statistics:e}=a;"u8"!==d||"processed"!==c&&m.isSome(f)&&m.isSome(e)?"u8"===d||"elevation"===c||"scientific"===c?b="min-max":m.isSome(f)?b="percent-clip":m.isSome(e)&&(b=b="min-max"):b="none";return b}function J(a,b){if(!y(a,b))return null;({attributeTable:a}=a);const d=z(a,b),c=v(a,"red"),f=v(a,"green"),e=v(a,"blue"),h=[],n=new Set,g=!!(c&&f&&e);a.features.forEach(l=>{const q=l.attributes[d.name];n.has(l.attributes[d.name])||
null==q||(n.add(q),h.push(new T({value:l.attributes[d.name],label:l.attributes[d.name],symbol:{type:"simple-fill",style:"solid",outline:null,color:g?new w([l.attributes[c.name],l.attributes[f.name],l.attributes[e.name],1]):new w([0,0,0,0])}})))});if(!g){const l=x.convertColorRampToColormap(aa,h.length);h.forEach((q,r)=>q.symbol.color=new w(l[r].slice(1,4)))}return new U({field:d.name,uniqueValueInfos:h})}function z(a,b){let d=a.fields.find(c=>"string"===c.type&&(b===c.name.toLowerCase()||-1<c.name.toLowerCase().indexOf("class")));
d||(d=a.fields.find(c=>"string"===c.type))||(d=v(a,"value"));return d}function v(a,b){return a.fields.find(d=>d.name.toLowerCase()===b)}function y(a,b){const {attributeTable:d,bandCount:c}=a;return!m.isSome(d)||1<c||b&&null==d.fields.find(f=>f.name.toLowerCase()===b.toLowerCase())?!1:!0}function A(a){const {bandCount:b,colormap:d}=a;return m.isSome(d)&&d.length&&1===b}function K(a){if(!A(a))return null;let b;const {attributeTable:d,colormap:c}=a;if(m.isSome(d)){const f=v(d,"value"),e=z(d);"string"===
e.type&&(b={},d.features.forEach(h=>{h=h.attributes;b[h[f.name]]=e?h[e.name]:h[f.name]}))}return Q.createFromColormap(m.unwrap(c),b)}function B(a){return"elevation"===a.dataType}function C(a){const {attributeTable:b,bandCount:d}=a;return 1===d&&(m.isSome(b)||m.isSome(a.histograms))}function L(a){({dataType:a}=a);return"vector-uv"===a||"vector-magdir"===a}const H=D.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,
255,0],toColor:[255,0,0]}]}),aa=D.fromJSON(x.PREDEFINED_JSON_COLOR_RAMPS[0]);p.createClassBreaksRenderer=function(a,b){a=F(a,null==b?void 0:b.variableName);const {attributeTable:d}=a;if(!C(a))return null;const c=m.isSome(a.histograms)?a.histograms[0]:null,f=(null==b?void 0:b.numClasses)||4;let e=(null==b?void 0:b.field)||"value";const h=[];if(m.isSome(d)){const g=d.fields.find(k=>"count"===k.name.toLowerCase()),l=d.fields.find(k=>k.name.toLowerCase()===e.toLowerCase());e=l.name;const q=d.features.length;
let r=0;d.features.forEach(k=>r+=k.attributes[g.name]/q);d.features.forEach(k=>{const t=k.attributes[l.name];k=k.attributes[g.name];if(0<k){k=Math.max(1,Math.round(k/q/r*1E3));for(let u=0;u<k;u++)h.push(t)}})}else{({pixelType:a}=a);const g=(c.max-c.min)/c.size,l=(a=-1<a.indexOf("s")||-1<a.indexOf("u"))&&1===g?Math.floor(c.min+.5):c.min,q=a&&1===g?Math.floor(c.max-.5):c.max,r=c.size;let k=0;c.counts.forEach(t=>k+=t/r);c.counts.forEach((t,u)=>{if(0<t){t=Math.max(1,Math.round(t/r/k*1E3));u=0===u?l:u===
r-1?q:c.min+g*(u+.5);for(let M=0;M<t;M++)h.push(u)}})}a=Y.createGenerateRendererClassBreaks({values:h,normalizationTotal:null,definition:new X({classificationMethod:(null==b?void 0:b.classificationMethod)||"equal-interval",breakCount:f})});let n=null==b?void 0:b.colors;n||(n=x.convertColorRampToColormap((null==b?void 0:b.colorRamp)||H,f,!0).map(g=>g.slice(1)));b=a.classBreaks.map((g,l)=>new O({minValue:g.minValue,maxValue:g.maxValue,label:g.label,symbol:{type:"simple-fill",color:n[l]}}));return new P({field:e,
classBreakInfos:b})};p.createColormapRenderer=K;p.createDefaultRenderer=function(a,b){const {attributeTable:d,colormap:c,dataType:f}=a;if("vector-uv"===f||"vector-magdir"===f)return new V;if(m.isSome(c)){var e=K(a);if(m.isSome(e))return e}return m.isSome(d)&&(e=J(a),m.isSome(e))?e:E(a,b)};p.createShadedReliefRenderer=function(a,b){var d;if(!B(a))return null;({extent:a}=a);a=a.width*N.getMetersPerUnitForSR(a.spatialReference);b=null!=(d=b)?d:"multi-directional";return new R({hillshadeType:b,scalingType:5E6<
a?"adjusted":"none"})};p.createStretchRenderer=E;p.createUVRenderer=J;p.getClassField=z;p.getDefaultBandCombination=G;p.getDefaultInterpolation=function(a,b,d){const c=["nearest","bilinear","cubic","majority"].find(f=>f===(null==d?void 0:d.toLowerCase()));return"Map"===b?null!=c?c:"bilinear":"thematic"===a.dataType||a.attributeTable||a.colormap?"nearest"===c||"majority"===c?c:"nearest":null!=c?c:"bilinear"};p.getSupportedRendererTypes=function(a){const b=["raster-stretch"];A(a)&&b.push("raster-colormap");
y(a)&&b.push("unique-value");C(a)&&b.push("class-breaks");B(a)&&b.push("raster-shaded-relief");L(a)&&b.push("vector-field");return b};p.getWellKnownBandIndexes=I;p.isClassBreaksSupported=C;p.isColormapRendererSupported=A;p.isShadedReliefRendererSupported=B;p.isUVRendererSupported=y;p.isVectorFieldRendererSupported=L;Object.defineProperty(p,"__esModule",{value:!0})});