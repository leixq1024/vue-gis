// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../core/maybe ../../core/Error ../../core/promiseUtils ../../core/screenUtils ../../intl/substitute ../../intl/messages ../../renderers/support/AuthoringInfoVisualVariable ../../renderers/support/AuthoringInfo ../../renderers/Renderer ../../renderers/visualVariables/SizeVariable ../../renderers/ClassBreaksRenderer ../../renderers/UniqueValueRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/SimpleRenderer ../../renderers/support/jsonUtils ../support/utils ../../renderers/support/utils ../support/adapters/support/layerUtils ../statistics/support/ageUtils ../heuristics/ageUnit ../heuristics/outline ../heuristics/sizeRange ./support/utils ../../chunks/size".split(" "),
function(B,z,h,F,J,T,G,U,K,ja,L,M,ka,la,ma,na,oa,pa,D,V,x,E,W,N,X,g,A){async function Y(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new h("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new h("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");a={...a};if("90-10"===a.theme)throw new h("size-visual-variable:not-supported",
"Only 'high-to-low', 'above', 'below' themes are supported.");var b=[0,2,1,3],c=x.createLayerAdapter(a.layer,b);a.layer=c;if(!c)throw new h("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+x.getLayerTypeLabels(b).join(", "));"height"===a.axis&&(a.sizeOptimizationEnabled=!1);b=z.isSome(a.signal)?{signal:a.signal}:null;await c.load(b);b=c.geometryType;if("mesh"===b)throw new h("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");
if(a.worldScale){if("polyline"===b||"polygon"===b)throw new h("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!a.view||"3d"!==a.view.type)throw new h("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true");}b=await D.getFieldsList({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression});if(c=g.verifyBasicFieldValidity(c,b,"size-visual-variable:invalid-parameters"))throw c;
return a}async function Z(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new h("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new h("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");a={...a};a.symbolType=a.symbolType||"2d";a.defaultSymbolEnabled=null==a.defaultSymbolEnabled?!0:a.defaultSymbolEnabled;
var b=[0,2,1,3],c=x.createLayerAdapter(a.layer,b);a.layer=c;if(!c)throw new h("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+x.getLayerTypeLabels(b).join(", "));b=z.isSome(a.signal)?{signal:a.signal}:null;await c.load(b);b=c.geometryType;const d=-1<a.symbolType.indexOf("3d");a.outlineOptimizationEnabled="polygon"===b?a.outlineOptimizationEnabled:!1;if("mesh"===b)throw new h("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");
if(d&&("polyline"===b||"polygon"===b))throw new h("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(-1<a.symbolType.indexOf("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new h("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");b=await D.getFieldsList({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression});
if(c=g.verifyBasicFieldValidity(c,b,"size-continuous-renderer:invalid-parameters"))throw c;return a}async function aa(a){if(!a||!a.layer||!a.field&&!a.valueExpression)throw new h("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(a.valueExpression&&!a.view)throw new h("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");a={...a};a.symbolType=a.symbolType||"2d";a.defaultSymbolEnabled=
null==a.defaultSymbolEnabled?!0:a.defaultSymbolEnabled;a.classificationMethod=a.classificationMethod||"equal-interval";a.normalizationType=D.getNormalizationType(a);var b=[0,2,1,3],c=x.createLayerAdapter(a.layer,b);a.layer=c;if(!c)throw new h("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+x.getLayerTypeLabels(b).join(", "));if(!(null!=a.minValue&&null!=a.maxValue||null==a.minValue&&null==a.maxValue))throw new h("size-class-breaks-renderer:missing-parameters",
"Both 'minValue' and 'maxValue' are required when specifying custom data range");b=z.isSome(a.signal)?{signal:a.signal}:null;await c.load(b);b=c.geometryType;const d=-1<a.symbolType.indexOf("3d");a.outlineOptimizationEnabled="polygon"===b?a.outlineOptimizationEnabled:!1;if("mesh"===b)throw new h("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(d&&("polyline"===b||"polygon"===b))throw new h("size-class-breaks-renderer:not-supported",
"3d symbols are not supported for polyline and polygon layers");if(-1<a.symbolType.indexOf("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new h("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");b=await D.getFieldsList({field:a.field,normalizationField:a.normalizationField});if(c=g.verifyBasicFieldValidity(c,b,"size-class-breaks-renderer:invalid-parameters"))throw c;return a}
function ba(a){a={...a};delete a.basemap;delete a.sizeScheme;delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}function O(a){a={...a};const b=-1<a.symbolType.indexOf("3d-volumetric");if(a.worldScale=b)a.axis="3d-volumetric-uniform"===a.symbolType?"all":"height";delete a.symbolType;delete a.defaultSymbolEnabled;return a}async function ca(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))throw new h("size-age-renderer:missing-parameters",
"'layer', 'view', 'startTime', 'endTime' parameters are required");a={...a};a.symbolType=a.symbolType||"2d";a.defaultSymbolEnabled=null==a.defaultSymbolEnabled?!0:a.defaultSymbolEnabled;var b=[0,2,1,3],c=x.createLayerAdapter(a.layer,b);a.layer=c;if(!c)throw new h("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+x.getLayerTypeLabels(b).join(", "));b=z.isSome(a.signal)?{signal:a.signal}:null;await c.load(b);b=c.geometryType;const d=-1<a.symbolType.indexOf("3d");a.outlineOptimizationEnabled=
"polygon"===b?a.outlineOptimizationEnabled:!1;if("mesh"===b)throw new h("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(d&&("polyline"===b||"polygon"===b))throw new h("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(-1<a.symbolType.indexOf("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new h("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");
if(c=E.verifyDates(c,a.startTime,a.endTime,"size-age-renderer:invalid-parameters"))throw c;if(a.unit&&-1===E.supportedAgeUnits.indexOf(a.unit))throw new h("size-age-renderer:invalid-unit",`Supported units are: ${E.supportedAgeUnits.join(", ")}`);return a}async function P(a){let b=a.sizeScheme,c=null;var d=null;d=await g.getBasemapInfo(a.basemap,a.view);c=z.isSome(d.basemapId)?d.basemapId:null;d=z.isSome(d.basemapTheme)?d.basemapTheme:null;if(b)return{scheme:A.cloneScheme(b),basemapId:c,basemapTheme:d};
if(a=A.getSchemes({basemap:c,basemapTheme:d,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view}))b=a.primaryScheme,c=a.basemapId,d=a.basemapTheme;return{scheme:b,basemapId:c,basemapTheme:d}}function Q(a,b){let c;switch(b){case "point":case "multipoint":c=[a.minSize,a.maxSize];break;case "polyline":c=[a.minWidth,a.maxWidth];break;case "polygon":c=[a.marker.minSize,a.marker.maxSize]}return c}async function da(a,b,c,d){const {theme:e,field:k,normalizationField:u,minValue:p,maxValue:q,axis:l}=
a;var f=a.layer,m=k&&"function"!==typeof k?f.getField(k):null,r=m&&"date"===m.type,n=f.geometryType;f=await P({basemap:a.basemap,geometryType:n,sizeScheme:a.sizeScheme,worldScale:a.worldScale,view:a.view});m=f.scheme;if(!m)throw new h("size-visual-variable:insufficient-info","Unable to find size scheme");d=d&&[d.minSize,d.maxSize]||Q(m,n);const {minDataValue:t,maxDataValue:w,defaultValuesUsed:v}=g.getDataRange(b,c,e,r,"above"===e||"below"===e);c=[];const y="height"===l;r=y?l:void 0;n=d[0];d=d[1];
y&&"number"===typeof n&&"number"===typeof d&&(d=g.getSizeRangeForAxis({minSize:n,maxSize:d},r),c.push(new L({axis:"width-and-depth",minSize:d.minSize})),d=d.maxSize);a=new L({field:k,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,valueUnit:"unknown",normalizationField:u,axis:r,minSize:n,maxSize:d,minDataValue:t,maxDataValue:w,legendOptions:a.legendOptions});"clamped-linear"===a.transformationType&&"below"===e&&a.flipSizes();c.unshift(a);a=new U({type:"size",theme:e,
minSliderValue:null!=p?p:b.min,maxSliderValue:null!=q?q:b.max});a=new K({visualVariables:[a]});return{basemapId:f.basemapId,basemapTheme:f.basemapTheme,visualVariables:c,statistics:b,defaultValuesUsed:v,sizeScheme:A.cloneScheme(m),authoringInfo:a}}async function R(a,b,c,d,e){const k=await G.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),u=e.field,p=e.layer.geometryType,q=e.defaultSymbolEnabled;var l=A.cloneScheme(a.sizeScheme),f="polygon"===p;const m=f?l.marker:l;l=f?l.background:null;f=
f?"point":p;const r=b&&b.opacity,n=a.visualVariables.map(t=>t.clone());b&&b.visualVariables&&b.visualVariables.length&&n.push(...b.visualVariables.map(t=>t.clone()));return{renderer:new M({backgroundFillSymbol:l&&g.createSymbol(p,{type:e.symbolType,color:l.color,outline:g.getSymbolOutlineFromScheme(l,p,r)}),classBreakInfos:[{minValue:-S,maxValue:S,symbol:g.createSymbol(f,{type:e.symbolType,color:m.color,size:g.getSymbolSizeFromScheme(m,f),outline:g.getSymbolOutlineFromScheme(m,f,r)})}],defaultLabel:q?
k.other:null,defaultSymbol:q?g.createSymbol(f,{type:e.symbolType,color:m.noDataColor,size:g.getSymbolSizeFromScheme(m,f,!0),outline:g.getSymbolOutlineFromScheme(m,f,r)}):null,field:u,normalizationField:d,normalizationType:c,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,visualVariables:n,authoringInfo:a.authoringInfo&&a.authoringInfo.clone()}),visualVariables:a.visualVariables.map(t=>t.clone()),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,sizeScheme:A.cloneScheme(a.sizeScheme),
basemapId:a.basemapId,basemapTheme:a.basemapTheme}}function ea(a,b){const c=J.toPt(a.minSize);a=(J.toPt(a.maxSize)-c)/(4<=b?b-1:b);const d=[];for(let e=0;e<b;e++)d.push(c+a*e);return d}async function fa(a,b){var c=await G.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");const d=a.defaultSymbolEnabled,e=a.layer.geometryType;var k="polygon"===e;const u=-1<a.symbolType.indexOf("3d-volumetric"),p=await P({basemap:a.basemap,geometryType:e,sizeScheme:a.sizeScheme,worldScale:u,view:a.view}),q=p.scheme,
{result:l,outlineResult:f}=b,m=l.classBreakInfos,r=a.classificationMethod,n=a.normalizationType,t=k?q.marker:q,w=k?q.background:null,v=k?"point":e;k=Q(t,v);const y=u&&g.getSizeRangeForAxis({minSize:k[0],maxSize:k[1]},"height"),ha=ea({minSize:k[0],maxSize:u?y.maxSize:k[1]},m.length),H=f&&f.opacity;c=new M({backgroundFillSymbol:w&&g.createSymbol(e,{type:a.symbolType,color:w.color,outline:g.getSymbolOutlineFromScheme(w,e,H)}),classBreakInfos:m.map((C,ia)=>({minValue:C.minValue,maxValue:C.maxValue,symbol:g.createSymbol(v,
{type:a.symbolType,color:t.color,size:ha[ia],widthAndDepth:y&&y.minSize,outline:g.getSymbolOutlineFromScheme(t,v,H)}),label:C.label})),defaultLabel:d?c.other:null,defaultSymbol:d?g.createSymbol(v,{type:a.symbolType,color:t.noDataColor,size:g.getSymbolSizeFromScheme(t,v,!0),widthAndDepth:y&&y.minSize,outline:g.getSymbolOutlineFromScheme(t,v,H)}):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:n,normalizationField:a.normalizationField,
normalizationTotal:"percent-of-total"===n?l.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new K({type:"class-breaks-size",classificationMethod:r,standardDeviationInterval:a.standardDeviationInterval})});"standard-deviation"!==r&&V.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,classificationMethod:r,normalizationType:n,round:!0});f&&f.visualVariables&&f.visualVariables.length&&(c.visualVariables=f.visualVariables.map(C=>C.clone()));return{renderer:c,sizeScheme:A.cloneScheme(q),
classBreaksResult:l,defaultValuesUsed:b.defaultValuesUsed,basemapId:p.basemapId,basemapTheme:p.basemapTheme}}async function I(a){a=await Y(a);const {view:b,field:c,valueExpression:d,minValue:e,maxValue:k,layer:u,normalizationField:p,signal:q,statistics:l}=a,[f,m,r]=await F.all([l?l:g.getSummaryStatistics({layer:u,field:c,valueExpression:d,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:p?"field":void 0,normalizationField:p,minValue:e,maxValue:k,view:b,signal:q}),"90-10"===a.theme?
g.getClassBreaks({layer:u,field:c,normalizationField:p,valueExpression:d,classificationMethod:"quantile",minValue:e,maxValue:k,view:b,numClasses:10,signal:q}):null,a.sizeOptimizationEnabled?X({view:b,layer:u,signal:q}):null]);return da(a,f,null==m?void 0:m.result,r)}const S=Math.pow(2,53)-1;B.createAgeRenderer=async function(a){var b=await ca(a);const {defaultSymbolEnabled:c,view:d,startTime:e,endTime:k,symbolType:u,minValue:p,maxValue:q,signal:l}=b;a=b.layer;var f={layer:b.layer,view:b.view,signal:l};
const [m,r]=await F.all([b.unit?{unit:b.unit,statistics:null,valueExpression:null}:await W({view:d,layer:a,startTime:e,endTime:k,minValue:p,maxValue:q,signal:l}),b.outlineOptimizationEnabled?N(f):null]),{unit:n,statistics:t}=m;f=E.getAgeExpressions({layer:a,startTime:e,endTime:k,unit:n}).valueExpression;var w=await G.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");w=T.substitute(w[`ageInfo_${n}`],{unit:n,startTime:g.formatDate(e,n,a),endTime:g.formatDate(k,n,a)});b=await I(O({layer:a,basemap:b.basemap,
valueExpression:f,symbolType:u,statistics:t,legendOptions:{title:w},theme:b.theme,sizeScheme:b.sizeScheme,sizeOptimizationEnabled:b.sizeOptimizationEnabled,view:b.view,minValue:p,maxValue:q,signal:l}));a=await R(b,r,null,null,{layer:a,valueExpression:f,defaultSymbolEnabled:c,symbolType:u});a.renderer.authoringInfo.visualVariables.forEach(v=>g.updateAgeRendererAuthoringInfoVV(v,e,k,n));return{...a,unit:n}};B.createClassBreaksRenderer=async function(a){a=await aa(a);const b=await g.getClassBreaks(ba(a),
a.outlineOptimizationEnabled);return fa(a,b)};B.createContinuousRenderer=async function(a){a=await Z(a);var b={layer:a.layer,view:a.view,signal:a.signal};const [c,d]=await F.all([I(O(a)),a.outlineOptimizationEnabled?N(b):null]);b=a.normalizationField;return R(c,d,b?"field":void 0,b,a)};B.createVisualVariables=I;Object.defineProperty(B,"__esModule",{value:!0})});