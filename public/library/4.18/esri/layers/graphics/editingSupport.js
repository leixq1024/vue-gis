// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../core/lang ../../core/maybe ../../core/Error ../../core/urlUtils ../../core/promiseUtils ../../core/Collection ../../Graphic ../../geometry/support/normalizeUtils".split(" "),function(m,v,w,e,x,r,n,y,z){async function A(a,b,d,c){await a.load();if(!b||null==b.applyEdits)return r.reject(new e(`${a.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:a}));if(!a.editingEnabled)throw new e(`${a.type}-layer:editing-disabled`,"Editing is disabled for layer",
{layer:a});a=await B(a,d,c);return a.addFeatures.length||a.updateFeatures.length||a.deleteFeatures.length||a.addAttachments.length||a.updateAttachments.length||a.deleteAttachments.length?{edits:a,results:await b.applyEdits(a,c)}:{edits:a,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}function B(a,b,d){var c=b&&(b.addFeatures||b.updateFeatures||b.deleteFeatures);const f=b&&(b.addAttachments||
b.updateAttachments||b.deleteAttachments);if(!b||!c&&!f)throw new e(`${a.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!a.capabilities.data.isVersioned&&d&&d.gdbVersion)throw new e(`${a.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!a.capabilities.editing.supportsRollbackOnFailure&&
d&&d.rollbackOnFailureEnabled)throw new e(`${a.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!a.capabilities.editing.supportsGlobalId&&d&&d.globalIdUsed)throw new e(`${a.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!a.capabilities.editing.supportsGlobalId&&f)throw new e(`${a.type}-layer:invalid-parameter`,
"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!d||!d.globalIdUsed)&&f)throw new e(`${a.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");c={...b};c.addFeatures=b&&n.isCollection(b.addFeatures)?b.addFeatures.toArray():c.addFeatures||[];c.updateFeatures=b&&n.isCollection(b.updateFeatures)?
b.updateFeatures.toArray():c.updateFeatures||[];c.deleteFeatures=b&&n.isCollection(b.deleteFeatures)?b.deleteFeatures.toArray():c.deleteFeatures||[];if(c.addFeatures.length&&!a.capabilities.operations.supportsAdd)throw new e(`${a.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(c.updateFeatures.length&&!a.capabilities.operations.supportsUpdate)throw new e(`${a.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(c.deleteFeatures.length&&
!a.capabilities.operations.supportsDelete)throw new e(`${a.type}-layer:unsupported-operation`,"Layer does not support deleting features.");c.addAttachments=c.addAttachments||[];c.updateAttachments=c.updateAttachments||[];c.deleteAttachments=c.deleteAttachments||[];c.addFeatures=c.addFeatures.map(t);c.updateFeatures=c.updateFeatures.map(t);const k=d&&d.globalIdUsed;c.addFeatures.forEach(h=>p(h,a,k));c.updateFeatures.forEach(h=>p(h,a,k));c.deleteFeatures.forEach(h=>p(h,a,k));c.addAttachments.forEach(h=>
u(h,a));c.updateAttachments.forEach(h=>u(h,a));return C(c)}function p(a,b,d){if(d){if("attributes"in a&&!a.attributes[b.globalIdField])throw new e(`${b.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in a||a.globalId))throw new e(`${b.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true");}if("geometry"in a&&w.isSome(a.geometry)){if(a.geometry.hasZ&&!1===b.capabilities.data.supportsZ)throw new e(`${b.type}-layer:z-unsupported`,
"Layer does not support z values while feature has z values.");if(a.geometry.hasM&&!1===b.capabilities.data.supportsM)throw new e(`${b.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.");}}function u(a,b){const {feature:d,attachment:c}=a;if(!d||"attributes"in d&&!d.attributes[b.globalIdField])throw new e(`${b.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in d||d.globalId))throw new e(`${b.type}-layer:invalid-parameter`,
"Attachment should have reference to 'globalId' of the parent feature");if(!c.globalId)throw new e(`${b.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!c.data&&!c.uploadId)throw new e(`${b.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(c.data instanceof File&&c.data.name||c.name))throw new e(`${b.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!b.capabilities.editing.supportsUploadWithItemId&&
c.uploadId)throw new e(`${b.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"===typeof c.data&&(a=x.dataComponents(c.data))&&!a.isBase64)throw new e(`${b.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string");}async function C(a){var b=a.addFeatures,d=a.updateFeatures,c=b.concat(d).map(f=>f.geometry);c=await z.normalizeCentralMeridian(c);b=b.length;d=d.length;
c.slice(0,b).forEach((f,k)=>{a.addFeatures[k].geometry=f});c.slice(b,b+d).forEach((f,k)=>{a.updateFeatures[k].geometry=f});return a}function t(a){const b=new y;a.attributes||(a.attributes={});b.geometry=a.geometry;b.attributes=a.attributes;return b}m.applyEdits=async function(a,b,d,c){let f,k;const h={edits:d,result:r.create((g,q)=>{f=g;k=q})};a.emit("apply-edits",h);try{const {results:g,edits:q}=await A(a,b,d,c);b=D=>D.filter(E=>!E.error).map(v.clone);const l={edits:q,addedFeatures:b(g.addFeatureResults),
updatedFeatures:b(g.updateFeatureResults),deletedFeatures:b(g.deleteFeatureResults),addedAttachments:b(g.addAttachmentResults),updatedAttachments:b(g.updateAttachmentResults),deletedAttachments:b(g.deleteAttachmentResults)};(l.addedFeatures.length||l.updatedFeatures.length||l.deletedFeatures.length||l.addedAttachments.length||l.updatedAttachments.length||l.deletedAttachments.length)&&a.emit("edits",l);f(l);return g}catch(g){throw k(g),g;}};m.isEditableLayer=function(a){var b,d;return!0===(null==a?
void 0:null==(b=a.capabilities)?void 0:null==(d=b.operations)?void 0:d.supportsEditing)&&a&&(!("editingEnabled"in a)||a.editingEnabled)};Object.defineProperty(m,"__esModule",{value:!0})});