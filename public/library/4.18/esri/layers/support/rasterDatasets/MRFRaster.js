// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/Error ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../core/promiseUtils ../../../geometry/SpatialReference ../../../geometry/Point ../../../geometry/Extent ../../../geometry ../PixelBlock ../RasterInfo ../rasterFormats/utils ../rasterFunctions/pixelUtils ../RasterStorageInfo ./BaseRaster ./xmlUtilities ./pamParser".split(" "),
function(I,C,y,F,U,V,D,W,J,A,X,Y,Z,K,L,G,M,aa,N,O,P,Q,R,S,r,T){const u=new Map;u.set("Int8","s8");u.set("UInt8","u8");u.set("Int16","s16");u.set("UInt16","u16");u.set("Int32","s32");u.set("UInt32","u32");u.set("Float32","f32");u.set("Float64","f32");u.set("Double64","f32");const B=new Map;B.set("lerc",".lrc");B.set("none",".til");B.set("deflate",".pzp");B.set("jpeg",".jzp");y=function(H){function E(){var a=H.apply(this,arguments)||this;a._files=null;a._storageIndex=null;a.datasetFormat="MRF";return a}
I._inheritsLoose(E,H);var z=E.prototype;z.open=async function(a){var b;await this.init();this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);var c=a?F.unwrap(a.signal):null,e=await this.request(this.url,{responseType:"xml",signal:c});const {rasterInfo:d,files:h}=this._parseHeader(e.data);if(-1===(null==(b=this.ioConfig.skipExtensions)?void 0:b.indexOf("aux.xml"))&&(a=await this._fetchAuxiliaryData(a),null!=a)){var m;d.statistics=null!=(m=a.statistics)?m:d.statistics;(d.histograms=a.histograms)&&
!F.isSome(d.statistics)&&(d.statistics=Q.estimateStatisticsFromHistograms(a.histograms))}this._set("rasterInfo",d);this._files=h;c=await this.request(h.index,{responseType:"array-buffer",signal:c});this._storageIndex=this._parseIndex(c.data);c=0;m=-1;const {blockWidth:p,blockHeight:f,compression:v}=this.rasterInfo.storageInfo;e=this.rasterInfo.storageInfo.pyramidScalingFactor;const {width:t,height:g,bandCount:q}=this.rasterInfo,k=[],n="none"===v?1:q;for(;c<this._storageIndex.length;)m++,a=Math.ceil(t/
p/Math.pow(e,m)),b=Math.ceil(g/f/Math.pow(e,m)),c+=a*b*n*4,k.push({maxRow:b,maxCol:a,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=k;0<m&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=m);this.updateTileInfo()};z.fetchRawTile=async function(a,b,c,e={}){const {blockWidth:d,blockHeight:h,blockBoundary:m,compression:p}=this.rasterInfo.storageInfo;var f=m[a];if(!f||f.maxRow<b||f.maxCol<c||f.minRow>b||f.minCol>c)return null;const {bandCount:v,
pixelType:t}=this.rasterInfo,{ranges:g,actualTileWidth:q,actualTileHeight:k}=this._getTileLocation(a,b,c);if(!g||0===g.length)return null;if(0===g[0].from&&0===g[0].to)return a=new Uint8Array(d*h),new N({width:d,height:h,pixels:null,mask:a,validPixelCount:0});({bandIds:c}=this.ioConfig);b="none"===p?1:v;f=[];for(a=a=0;a<b;a++)(!c||-1<c.indexOf[a])&&f.push(this.request(this._files.data,{range:{from:g[a].from,to:g[a].to},responseType:"array-buffer",signal:e.signal}));e=await K.all(f);a=e.map(n=>n.data.byteLength).reduce((n,
l)=>n+l);c=new Uint8Array(a);for(a=f=0;a<b;a++)c.set(new Uint8Array(e[a].data),f),f+=e[a].data.byteLength;e=await this.decodePixelBlock(c.buffer,{width:d,height:h,format:"lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",pixelType:t});c=b=0;if(q!==d||k!==h)if(f=e.mask)for(a=0;a<h;a++)for(c=a*d,b=a<k?q:0;b<d;b++)f[c+b]=0;else for(f=new Uint8Array(d*h),e.mask=f,a=0;a<k;a++)for(c=a*d,b=0;b<q;b++)f[c+b]=1;return e};z._parseIndex=function(a){if(0<a.byteLength%16)throw"invalid array buffer must be multiples of 16";
let b,c,e,d,h;if(P.isPlatformLittleEndian){b=new Uint8Array(a);e=new ArrayBuffer(a.byteLength);c=new Uint8Array(e);for(d=0;d<a.byteLength/4;d++)for(h=0;4>h;h++)c[4*d+h]=b[4*d+3-h];a=new Uint32Array(e)}else a=new Uint32Array(a);return a};z._getTileLocation=function(a,b,c){const {blockWidth:e,blockHeight:d,pyramidScalingFactor:h,compression:m}=this.rasterInfo.storageInfo,{width:p,height:f,bandCount:v}=this.rasterInfo,t="none"===m?1:v;let g,q;var k,n=0;let l=0;for(k=0;k<a;k++)l=Math.pow(h,k),g=Math.ceil(p/
e/l),q=Math.ceil(f/d/l),n+=g*q;l=Math.pow(h,a);g=Math.ceil(p/e/l);q=Math.ceil(f/d/l);n=4*(n+(b*g+c))*t;a=this._storageIndex.subarray(n,n+4*t);n=k=0;const w=[];for(let x=0;x<t;x++)k=a[4*x]*Math.pow(2,32)+a[4*x+1],n=k+a[4*x+2]*Math.pow(2,32)+a[4*x+3],w.push({from:k,to:n});return{ranges:w,actualTileWidth:c<g-1?e:Math.ceil(p/l)-e*(g-1),actualTileHeight:b<q-1?d:Math.ceil(f/l)-d*(q-1)}};z._parseHeader=function(a){var b=r.getElement(a,"MRF_META/Raster");if(!b)throw new A("mrf:open","not a valid MRF format");
var c=r.getElement(b,"Size"),e=parseInt(c.getAttribute("x"),10),d=parseInt(c.getAttribute("y"),10);const h=parseInt(c.getAttribute("c"),10);c=(r.getElementValue(b,"Compression")||"none").toLowerCase();var m=["none","lerc"];if(!c||-1===m.indexOf(c))throw new A("mrf:open","currently does not support compression "+c);var p=r.getElementValue(b,"DataType")||"UInt8";m=u.get(p);if(null==m)throw new A("mrf:open","currently does not support pixel type "+p);var f=r.getElement(b,"PageSize");p=parseInt(f.getAttribute("x"),
10);f=parseInt(f.getAttribute("y"),10);b=r.getElement(b,"DataValues");let v;b&&(b=b.getAttribute("NoData"),null!=b&&(v=b.trim().split(" ").map(x=>parseFloat(x))));if(r.getElement(a,"MRF_META/CachedSource"))throw new A("mrf:open","currently does not support MRF referencing other data files");var t=r.getElement(a,"MRF_META/GeoTags"),g=r.getElement(t,"BoundingBox");if(null==g)throw new A("mrf:open","missing node MRF_META/GeoTags/BoundingBox");b=parseFloat(g.getAttribute("minx"));const q=parseFloat(g.getAttribute("miny")),
k=parseFloat(g.getAttribute("maxx")),n=parseFloat(g.getAttribute("maxy"));var l=r.getElementValue(t,"Projection");t=r.getElementValue(a,"datafile");g=r.getElementValue(a,"IndexFile");let w;"LOCAL_CS[]"!==l&&(w=new L({wkt:l}));l=new M(b,q,k,n);l.spatialReference=w;a=r.getElement(a,"MRF_META/Rsets");a=parseInt(a&&a.getAttribute("scale")||"2",10);a=new R({origin:new G({x:l.xmin,y:l.ymax,spatialReference:w}),blockWidth:p,blockHeight:f,pyramidBlockWidth:p,pyramidBlockHeight:f,compression:c,pyramidScalingFactor:a});
p=new G({x:(k-b)/e,y:(n-q)/d,spatialReference:w});e=new O({width:e,height:d,extent:l,spatialReference:w,bandCount:h,pixelType:m,pixelSize:p,noDataValue:v,storageInfo:a});d={mrf:this.url,index:g||this.url.replace(".mrf",".idx"),data:t||this.url.replace(".mrf",B.get(c))};return{rasterInfo:e,files:d}};z._fetchAuxiliaryData=async function(a){try{const {data:b}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==a?void 0:a.signal});return T.parsePAMInfo(b)}catch{return null}};return E}(S);
C.__decorate([D.property()],y.prototype,"_files",void 0);C.__decorate([D.property()],y.prototype,"_storageIndex",void 0);C.__decorate([D.property({type:String,json:{write:!0}})],y.prototype,"datasetFormat",void 0);return y=C.__decorate([J.subclass("esri.layers.support.rasterIO.MRFRaster")],y)});