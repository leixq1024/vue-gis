// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/has ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/property ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/Error ../../../core/urlUtils ../../../core/uuid ../../../portal/support/resourceExtension ../../../geometry/Point ../../../geometry/Extent ../../../geometry ../RasterInfo ../rasterFormats/TiffTags ../rasterFormats/TiffDecoder ../rasterFunctions/pixelUtils ../RasterStorageInfo ./BaseRaster ./pamParser".split(" "),
function(L,t,n,H,Y,Z,x,aa,M,I,ba,ca,da,D,N,ea,O,y,z,P,Q,R,S){const J=function(l,p){return(l=l.get(p))&&l.values},A=function(l,p){return(l=l.get(p))&&l.values[0]};n=function(l){function p(){var a=l.apply(this,arguments)||this;a._files=null;a._headerInfo=null;a._bufferSize=1048576;a.datasetFormat="TIFF";return a}L._inheritsLoose(p,l);var q=p.prototype;q.open=async function(a){var e;await this.init();var d=a?H.unwrap(a.signal):null,{data:b}=await this.request(this.url,{range:{from:0,to:this._bufferSize},
responseType:"array-buffer",signal:d});if(!b)throw new I("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const {littleEndian:c,firstIFD:f,isBigTiff:g}=z.parseSignature(b),k=[];await this.readIFDs(k,b,c,f,0,g?8:4,d);d=z.getImageInfo(k);const {width:h,height:m,tileWidth:r,tileHeight:u,planes:E,pixelType:B,compression:v,firstPyramidLevel:C,maximumPyramidLevel:T,pyramidBlockWidth:U,pyramidBlockHeight:V,tileBoundary:W,metadata:w}=d;b=N.fromJSON(d.extent);
const F=b.spatialReference;var G=b?new D({x:b.xmin,y:b.ymax,spatialReference:F}):new D({x:0,y:0});G=new Q({blockWidth:r,blockHeight:u,pyramidBlockWidth:U,pyramidBlockHeight:V,compression:v,origin:G,firstPyramidLevel:C,maximumPyramidLevel:T,blockBoundary:W});const X=new D({x:(b.xmax-b.xmin)/h,y:(b.ymax-b.ymin)/m,spatialReference:F});b=new O({width:h,height:m,bandCount:E,pixelType:B,compression:v,pixelSize:X,storageInfo:G,spatialReference:F,keyProperties:w?{BandProperties:w.bandProperties,DataType:w.dataType}:
{},extent:b,statistics:w?w.statistics:null});if(-1===(null==(e=this.ioConfig.skipExtensions)?void 0:e.indexOf("aux.xml"))&&(a=await this._fetchAuxiliaryData(a),null!=a)){var K;b.statistics=null!=(K=a.statistics)?K:b.statistics;(b.histograms=a.histograms)&&!H.isSome(b.statistics)&&(b.statistics=P.estimateStatisticsFromHistograms(a.histograms))}this._set("rasterInfo",b);this._headerInfo={littleEndian:c,isBigTiff:g,ifds:k,...d};if(!this._headerInfo.isSupported)throw new I("tiffraster:open","this tiff is not supported: "+
this._headerInfo.message);this.updateTileInfo()};q.fetchRawTile=async function(a,e,d,b={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;var {blockBoundary:c}=this.rasterInfo.storageInfo;const f=0<a?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,g=0<a?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;c=c[a];if(!c||c.maxRow<e||c.maxCol<d||c.minRow>e||c.minCol>d)return null;a=this.getTileLocation(a,e,d);if(!a)return null;
const {range:k,actualTileWidth:h,actualTileHeight:m,ifd:r}=a;({data:b}=await this.request(this.url,{range:k,responseType:"array-buffer",signal:b.signal}));b=await this.decodePixelBlock(b,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:r,offset:0,size:0},width:f,height:g,planes:null,pixelType:null});if(h!==f||m!==g)if(c=b.mask)for(a=0;a<g;a++)for(d=a*f,e=a<m?h:0;e<f;e++)c[d+e]=0;else for(c=new Uint8Array(f*g),b.mask=c,a=0;a<m;a++)for(d=a*f,e=0;e<h;e++)c[d+e]=1;return b};q.readIFDs=async function(a,
e,d,b,c,f=4,g){if(!b)return null;if(b>=e.byteLength||0>b)e=(await this.request(this.url,{range:{from:b+c,to:b+c+this._bufferSize},responseType:"array-buffer",signal:g})).data,c=b+c,b=0;b=await this.readIFD(e,d,b,c,y.TIFF_TAGS,f,g);a.push(b.ifd);if(!b.nextIFD)return null;await this.readIFDs(a,e,d,b.nextIFD-c,c,f,g)};q.readIFD=async function(a,e,d,b,c=y.TIFF_TAGS,f=4,g){if(!a)return null;d=z.parseIFD(a,e,d,b,c,f);if(d.success){const k=[];d.ifd.forEach(h=>{h.values||k.push(h)});0<k.length&&(f=k.map(h=>
h.offlineOffsetSize),c=Math.min.apply(null,f.map(h=>h[0])),Math.min.apply(null,f.map(h=>h[0]+h[1]))-c<=this._bufferSize&&({data:f}=await this.request(this.url,{range:{from:c,to:c+this._bufferSize},responseType:"array-buffer",signal:g}),a=f,b=c,k.forEach(h=>z.parseFieldValues(a,e,h,b))));d.ifd.has("GEOKEYDIRECTORY")&&(c=d.ifd.get("GEOKEYDIRECTORY"),(f=c.values)&&4<f.length&&(f=f[0]+"."+f[1]+"."+f[2],g=await this.readIFD(a,e,c.valueOffset+6-b,b,y.GEO_KEYS,2,g),c.data=g.ifd,c.data&&c.data.set("GEOTIFFVersion",
{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})));return d}if(d.requiredBufferSize&&d.requiredBufferSize!==a.byteLength)return a=(await this.request(this.url,{range:{from:b,to:b+d.requiredBufferSize+4},responseType:"array-buffer",signal:g})).data,a.byteLength<d.requiredBufferSize?null:this.readIFD(a,e,0,b,y.TIFF_TAGS,4,g)};q.getTileLocation=function(a,e,d){const {firstPyramidLevel:b,blockBoundary:c}=this.rasterInfo.storageInfo;var f=0===a?0:a-(b-1);a=this._headerInfo.ifds[f];if(!a)return null;
var g=J(a,"TILEOFFSETS");if(void 0===g)return null;var k=J(a,"TILEBYTECOUNTS");const {minRow:h,minCol:m,maxRow:r,maxCol:u}=c[f];if(e>r||d>u||e<h||d<m)return null;f=A(a,"IMAGEWIDTH");const E=A(a,"IMAGELENGTH"),B=A(a,"TILEWIDTH"),v=A(a,"TILELENGTH"),C=e*(u+1)+d;g=g[C];k=k[C];return null==g||null==k?null:{range:{from:g,to:g+k-1},ifd:a,actualTileWidth:d===u?f%B:B,actualTileHeight:e===r?E%v:v}};q._fetchAuxiliaryData=async function(a){try{const {data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",
signal:null==a?void 0:a.signal});return S.parsePAMInfo(e)}catch{return null}};return p}(R);t.__decorate([x.property()],n.prototype,"_files",void 0);t.__decorate([x.property()],n.prototype,"_headerInfo",void 0);t.__decorate([x.property()],n.prototype,"_bufferSize",void 0);t.__decorate([x.property({type:String,json:{write:!0}})],n.prototype,"datasetFormat",void 0);return n=t.__decorate([M.subclass("esri.layers.support.rasterDatasets.TIFFRaster")],n)});