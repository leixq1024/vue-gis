// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/aliasOf ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/JSONSupport ./RasterFunction ./imageryRendererUtils ./MosaicRule".split(" "),
function(c,r,e,p,z,A,f,g,k,v,l,B,C,D,w,x,m,y){p=new k.JSONMap({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});k=new k.JSONMap({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});c.ExportImageServiceParameters=function(t){function n(){var a=t.apply(this,arguments)||this;a.layer=null;a.adjustAspectRatio=void 0;a.bandIds=void 0;a.compression=void 0;a.compressionQuality=void 0;a.compressionTolerance=.01;a.format=null;a.interpolation=
null;a.noData=null;a.noDataInterpretation=void 0;a.pixelType=void 0;a.lercVersion=2;return a}r._inheritsLoose(n,t);var h=n.prototype;h.writeAdjustAspectRatio=function(a,b,d){10.3>this.layer.version||(b[d]=a)};h.writeCompressionQuality=function(a,b,d){this.format&&-1<this.format.toLowerCase().indexOf("jpg")&&null!=a&&(b[d]=a)};h.writeCompressionTolerance=function(a,b,d){"lerc"===this.format&&null!=a&&(b[d]=a)};h.writeLercVersion=function(a,b,d){"lerc"===this.format&&10.5<=this.layer.version&&(b[d]=
a)};h.combineRendererWithRenderingRule=function(){var a;const b=this.layer,{rasterInfo:d,renderingRule:u,renderer:q}=b;return q&&m.isSupportedRendererType(q)?m.combineRenderingRules(m.convertRendererToRenderingRule(q,{rasterAttributeTable:d.attributeTable,pixelType:d.pixelType,dataType:d.dataType,bandProperties:null==(a=d.keyProperties)?void 0:a.BandProperties,convertColorRampToColormap:10.6>b.version}),u):u};h._addResampleRasterFunction=function(a){var b,d=null;"vector-field"===(null==(b=this.layer.renderer)?
void 0:b.type)&&(b={},d=this.layer.renderingRule,d&&"Resample"===d.functionName||(d="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,b.rasterFunction="Resample",b.rasterFunctionArguments={ResamplingType:d,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}),d=x.fromJSON(b));return m.combineRenderingRules(d,a)};r._createClass(n,[{key:"version",get:function(){const a=this.layer;a.bandIds;a.format;a.compressionQuality;a.compressionTolerance;a.interpolation;a.noData;
a.noDataInterpretation;a.mosaicRule;a.renderingRule;a.adjustAspectRatio;a.pixelFilter;a.renderer;a.definitionExpression;return(this._get("version")||0)+1},set:function(a){this._set("version",a)}},{key:"mosaicRule",get:function(){var a=this.layer;let b=a.mosaicRule;a=a.definitionExpression;b?a&&a!==b.where&&(b=b.clone(),b.where=a):a&&(b=new y({where:a}));return b}},{key:"renderingRule",get:function(){var a=this.layer;let b=a.renderingRule;const d=a.pixelFilter;a=!a.format||-1<a.format.indexOf("jpg")||
-1<a.format.indexOf("png");b=this._addResampleRasterFunction(b);a&&!d&&(b=this.combineRendererWithRenderingRule());return b}}]);return n}(w.JSONSupport);e.__decorate([f.property()],c.ExportImageServiceParameters.prototype,"layer",void 0);e.__decorate([f.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"adjustAspectRatio",void 0);e.__decorate([l.writer("adjustAspectRatio")],c.ExportImageServiceParameters.prototype,"writeAdjustAspectRatio",null);e.__decorate([f.property({json:{write:!0}}),
g.aliasOf("layer.bandIds")],c.ExportImageServiceParameters.prototype,"bandIds",void 0);e.__decorate([f.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"compression",void 0);e.__decorate([f.property({json:{write:!0}}),g.aliasOf("layer.compressionQuality")],c.ExportImageServiceParameters.prototype,"compressionQuality",void 0);e.__decorate([l.writer("compressionQuality")],c.ExportImageServiceParameters.prototype,"writeCompressionQuality",null);e.__decorate([f.property({json:{write:!0}}),
g.aliasOf("layer.compressionTolerance")],c.ExportImageServiceParameters.prototype,"compressionTolerance",void 0);e.__decorate([l.writer("compressionTolerance")],c.ExportImageServiceParameters.prototype,"writeCompressionTolerance",null);e.__decorate([f.property({json:{write:!0}}),g.aliasOf("layer.format")],c.ExportImageServiceParameters.prototype,"format",void 0);e.__decorate([f.property({type:String,json:{read:{reader:p.read},write:{writer:p.write}}}),g.aliasOf("layer.interpolation")],c.ExportImageServiceParameters.prototype,
"interpolation",void 0);e.__decorate([f.property({json:{write:!0}}),g.aliasOf("layer.noData")],c.ExportImageServiceParameters.prototype,"noData",void 0);e.__decorate([f.property({type:String,json:{read:{reader:k.read},write:{writer:k.write}}}),g.aliasOf("layer.noDataInterpretation")],c.ExportImageServiceParameters.prototype,"noDataInterpretation",void 0);e.__decorate([f.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"pixelType",void 0);e.__decorate([f.property({json:{write:!0}})],
c.ExportImageServiceParameters.prototype,"lercVersion",void 0);e.__decorate([l.writer("lercVersion")],c.ExportImageServiceParameters.prototype,"writeLercVersion",null);e.__decorate([f.property({type:Number,dependsOn:"layer.adjustAspectRatio layer.bandIds layer.format layer.compressionQuality layer.compressionTolerance layer.definitionExpression layer.interpolation layer.noData layer.noDataInterpretation layer.mosaicRule layer.renderingRule layer.pixelFilter layer.renderer lercVersion pixelType".split(" ")})],
c.ExportImageServiceParameters.prototype,"version",null);e.__decorate([f.property({dependsOn:["layer.mosaicRule","layer.definitionExpression"],json:{write:!0}})],c.ExportImageServiceParameters.prototype,"mosaicRule",null);e.__decorate([f.property({dependsOn:["layer.renderingRule","layer.renderer","layer.rasterInfo","layer.format"],json:{write:!0}})],c.ExportImageServiceParameters.prototype,"renderingRule",null);c.ExportImageServiceParameters=e.__decorate([v.subclass("esri.layers.mixins.ExportImageServiceParameters")],
c.ExportImageServiceParameters);Object.defineProperty(c,"__esModule",{value:!0})});