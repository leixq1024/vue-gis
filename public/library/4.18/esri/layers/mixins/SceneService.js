// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("require exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/Error ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/promiseUtils ../../geometry/SpatialReference ../../geometry/Extent ../../request ../../portal/Portal ../../portal/PortalItem ../../core/accessorSupport/originUtils ../support/arcgisLayerUrl ../../geometry/HeightModelInfo ../../webdoc/support/saveUtils ../support/commonProperties".split(" "),
function(E,u,x,f,N,F,G,O,h,P,p,H,I,k,v,Q,R,m,w,y,r,z,J,A,n,K,B,L){const q=G.getLogger("esri.layers.mixins.SceneService"),C={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};u.SCENE_SERVICE_ITEM_TYPE="Scene Service";u.SceneService=e=>{e=function(D){function t(){var a=D.apply(this,arguments)||this;a.spatialReference=null;a.fullExtent=null;a.heightModelInfo=null;a.minScale=0;a.maxScale=0;a.version={major:Number.NaN,minor:Number.NaN,
versionString:""};a.copyright=null;a.sublayerTitleMode="item-title";a.title=null;a.layerId=null;a._debouncedSaveOperations=m.debounce(async(b,d,c)=>{switch(b){case 0:return a._save(d);case 1:return a._saveAs(c,d)}});return a}x._inheritsLoose(t,D);var g=t.prototype;g.readSpatialReference=function(a,b){return this._readSpatialReference(b)};g._readSpatialReference=function(a){if(null!=a.spatialReference)return w.fromJSON(a.spatialReference);a=a.store;a=(a=a.indexCRS||a.geographicCRS)&&parseInt(a.substring(a.lastIndexOf("/")+
1,a.length),10);return null!=a?new w(a):null};g.readFullExtent=function(a,b){a=b.store;b=this._readSpatialReference(b);return null==b||null==a||null==a.extent||!Array.isArray(a.extent)||a.extent.some(d=>-1E38>d)?null:new y({xmin:a.extent[0],ymin:a.extent[1],xmax:a.extent[2],ymax:a.extent[3],spatialReference:b})};g.readVersion=function(a,b){a=b.store;b=null!=a.version?a.version.toString():"";a={major:Number.NaN,minor:Number.NaN,versionString:b};b=b.split(".");2<=b.length&&(a.major=parseInt(b[0],10),
a.minor=parseInt(b[1],10));return a};g.readTitlePortalItem=function(a){return"item-title"!==this.sublayerTitleMode?void 0:a};g.readTitleService=function(a,b){a=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return n.titleFromUrlAndName(this.url,b.name);b=b.name;if(!b&&this.url){const d=n.parse(this.url);F.isSome(d)&&(b=d.title)}"item-title-and-service-name"===this.sublayerTitleMode&&a&&(b=a+" - "+b);return n.cleanTitle(b)};g.writeUrl=function(a,b,d,c){n.writeUrlWithLayerId(this,
a,"layers",b,c)};g._verifyRootNodeAndUpdateExtent=async function(a,b){if(a)try{return this._updateExtentFromRootPage(a,await this._fetchRootPage(a,b))}catch(d){}return this._updateExtentFromRootNode(await this._fetchRootNode(b))};g._fetchRootPage=async function(a,b){return a?(await r(`${this.parsedUrl.path}/nodepages/${Math.floor(a.rootIndex/a.nodesPerPage)}`,{responseType:"json",signal:b})).data:m.reject()};g._updateExtentFromRootPage=function(a,b){if(null==b||null==b.nodes)throw new k("sceneservice:invalid-node-page",
"Inavlid node page.");b=b.nodes[a.rootIndex%a.nodesPerPage];if(null==b||null==b.obb||null==b.obb.center||null==b.obb.halfSize)throw new k("sceneservice:invalid-node-page","Inavlid node page.");-1E38>b.obb.center[0]||(a=b.obb.halfSize,b=b.obb.center[2],a=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]),this.fullExtent.zmin=b-a,this.fullExtent.zmax=b+a)};g._updateExtentFromRootNode=function(a){if(null!=a&&null!=this.fullExtent&&!this.fullExtent.hasZ&&Array.isArray(a.mbs)&&4===a.mbs.length&&!(-1E38>a.mbs[0])){var b=
a.mbs[2];a=a.mbs[3];this.fullExtent.zmin=b-a;this.fullExtent.zmax=b+a}};g._fetchRootNode=async function(a){if(this.rootNode){var b=v.join(this.parsedUrl.path,this.rootNode);try{return(await r(b,{query:{f:"json"},responseType:"json",signal:a})).data}catch(d){throw new k("sceneservice:root-node-missing","Root node missing.",{error:d,url:b});}}};g._fetchService=async function(a){if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const b=await this._fetchFirstLayerId(a);null!=b&&(this.layerId=
b)}return this._fetchServiceLayer(a)};g._fetchFirstLayerId=async function(a){a=await r(this.url,{query:{f:"json"},responseType:"json",signal:a});if(a.data&&Array.isArray(a.data.layers)&&0<a.data.layers.length)return a.data.layers[0].id};g._fetchServiceLayer=async function(a){a=await r(this.parsedUrl.path,{query:{f:"json"},responseType:"json",signal:a});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));a=a.data;this.read(a,{origin:"service",url:this.parsedUrl});this.validateLayer(a)};g._ensureLoadBeforeSave=
async function(){await this.load();"beforeSave"in this&&"function"===typeof this.beforeSave&&await this.beforeSave()};g.validateLayer=function(a){};g._updateTypeKeywords=function(a,b,d){a.typeKeywords||(a.typeKeywords=[]);b=b.getTypeKeywords();for(const c of b)a.typeKeywords.push(c);a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter((c,l,M)=>M.indexOf(c)===l),1===d&&(a.typeKeywords=a.typeKeywords.filter(c=>"Hosted Service"!==c)))};g._saveAs=async function(a,b){b={...C,...b};a=J.from(a);a||(q.error("_saveAs(): requires a portal item parameter"),
await m.reject(new k("sceneservice:portal-item-required","_saveAs() requires a portal item to save to")));a.id&&(a=a.clone(),a.id=null);const d=a.portal||z.getDefault();await this._ensureLoadBeforeSave();a.type="Scene Service";a.portal=d;const c={origin:"portal-item",url:null,messages:[],portal:d,portalItem:a,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},l={layers:[this.write(null,c)]};await m.all(c.resources.pendingOperations);await this._validateAgainstJSONSchema(l,
c,b);a.url=this.url;a.title||(a.title=this.title);this._updateTypeKeywords(a,b,1);await d._signIn();await d.user.addItem({item:a,folder:b&&b.folder,data:l});await B.saveResources(this.resourceReferences,c,null);this.portalItem=a;A.updateOrigins(c);return c.portalItem=a};g._save=async function(a){a={...C,...a};this.portalItem||(q.error("_save(): requires the .portalItem property to be set"),await m.reject(new k("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService")));
"Scene Service"!==this.portalItem.type&&(q.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected Scene Service"),await m.reject(new k("sceneservice:portal-item-wrong-type",'Portal item needs to have type "Scene Service"')));await this._ensureLoadBeforeSave();const b={origin:"portal-item",url:this.portalItem.itemUrl&&v.urlToObject(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||z.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],
resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},d={layers:[this.write(null,b)]};await m.all(b.resources.pendingOperations);await this._validateAgainstJSONSchema(d,b,a);this.portalItem.url=this.url;this.portalItem.title||(this.portalItem.title=this.title);this._updateTypeKeywords(this.portalItem,a,0);await this.portalItem.update({data:d});await B.saveResources(this.resourceReferences,b,null);A.updateOrigins(b);return this.portalItem};g._validateAgainstJSONSchema=async function(a,b,
d){b=b.messages.filter(c=>"error"===c.type).map(c=>new k(c.name,c.message,c.details));d&&d.validationOptions.ignoreUnsupported&&(b=b.filter(c=>"layer:unsupported"!==c.name&&"symbol:unsupported"!==c.name&&"symbol-layer:unsupported"!==c.name&&"property:unsupported"!==c.name&&"url:unsupported"!==c.name&&"scenemodification:unsupported"!==c.name));if(d.validationOptions.enabled&&(a=(await new Promise(function(c,l){E(["../support/schemaValidator"],c,l)})).validate(a,d.portalItemLayerType),0<a.length)){const c=
`Layer item did not validate:\n${a.join("\n")}`;q.error(`_validateAgainstJSONSchema(): ${c}`);if("throw"===d.validationOptions.failPolicy)throw d=a.map(l=>new k("sceneservice:schema-validation",l)).concat(b),new k("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:d});}if(0<b.length)throw new k("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",
{errors:b});};x._createClass(t,[{key:"url",set:function(a){a=n.sanitizeUrlWithLayerId(this,a,q);this._set("url",a.url);null!=a.layerId&&this._set("layerId",a.layerId)}},{key:"parsedUrl",get:function(){var a=this._get("url");if(!a)return null;a=v.urlToObject(a);null!=this.layerId&&n.isArcGISUrl(a.path)&&(a.path=`${a.path}/layers/${this.layerId}`);return a}}]);return t}(e);f.__decorate([h.property({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],e.prototype,"id",void 0);f.__decorate([h.property({type:w})],
e.prototype,"spatialReference",void 0);f.__decorate([p.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],e.prototype,"readSpatialReference",null);f.__decorate([h.property({type:y})],e.prototype,"fullExtent",void 0);f.__decorate([p.reader("fullExtent",["store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],e.prototype,"readFullExtent",null);f.__decorate([h.property({readOnly:!0,type:K})],e.prototype,"heightModelInfo",void 0);f.__decorate([h.property({type:Number,
json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],e.prototype,"minScale",void 0);f.__decorate([h.property({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],e.prototype,"maxScale",void 0);f.__decorate([h.property({readOnly:!0})],e.prototype,"version",void 0);f.__decorate([p.reader("version",["store.version"])],e.prototype,"readVersion",null);f.__decorate([h.property({type:String,
json:{read:{source:"copyrightText"}}})],e.prototype,"copyright",void 0);f.__decorate([h.property({type:String,json:{read:!1}})],e.prototype,"sublayerTitleMode",void 0);f.__decorate([h.property({type:String})],e.prototype,"title",void 0);f.__decorate([p.reader("portal-item","title")],e.prototype,"readTitlePortalItem",null);f.__decorate([p.reader("service","title",["name"])],e.prototype,"readTitleService",null);f.__decorate([h.property({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",
isRequired:!0,ignoreOrigin:!0},read:!1}}}})],e.prototype,"layerId",void 0);f.__decorate([h.property(L.url)],e.prototype,"url",null);f.__decorate([I.writer("url")],e.prototype,"writeUrl",null);f.__decorate([h.property({dependsOn:["layerId"]})],e.prototype,"parsedUrl",null);f.__decorate([h.property({readOnly:!0})],e.prototype,"store",void 0);f.__decorate([h.property({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],e.prototype,"rootNode",void 0);return e=f.__decorate([H.subclass("esri.layers.mixins.SceneService")],
e)};Object.defineProperty(u,"__esModule",{value:!0})});