// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/lang ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/aliasOf ../../core/jsonMap ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/Error ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../core/promiseUtils ../../geometry/SpatialReference ../../geometry/Point ../../geometry/Extent ../../geometry/Polygon ../../geometry ../../request ../../Graphic ../support/PixelBlock ../../rasterRenderers ../support/commonProperties ../support/Field ../support/FieldsIndex ../../tasks/support/FeatureSet ../../tasks/support/Query ../../tasks/QueryTask ../support/DimensionalDefinition ../support/RasterFunction ../support/imageryRendererUtils ../support/MosaicRule ../support/ExportImageServiceParameters ../support/RasterInfo ../support/RasterJobHandler ../support/rasterFormats/RasterCodec ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../rest/imageService ../../tasks/ImageIdentifyTask ../../tasks/support/ImageIdentifyParameters".split(" "),
function(Y,Z,g,Da,aa,B,la,N,m,H,O,y,ma,F,A,na,Ea,Fa,z,J,ba,I,oa,Ga,w,pa,qa,P,ca,C,ra,da,sa,ta,ua,K,va,G,wa,Q,xa,R,S,ya,ea,fa,za){function Aa(f){if(!f)return null;f=JSON.stringify(f).match(/"rasterFunction":"(.*?")/gi);return(f=null==f?void 0:f.map(D=>D.replace('"rasterFunction":"',"").replace('"',"")))?f.join("/"):null}const ha=la.getLogger("esri.layers.mixins.ArcGISImageService"),T=O.strict()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),
U=O.strict()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),V=O.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Ba=new Set("png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" ")),Ca=m.ensureRange(N.ensureNumber,{min:0,max:255});Y.ArcGISImageService=f=>{f=function(D){function L(){var a=D.apply(this,arguments)||this;a._functionRasterInfos={};a._rasterJobHandler={instance:null,refCount:0,
connectionPromise:null};a._symbolizer=null;a._defaultServiceMosaicRule=null;a.rasterAttributeTableFieldPrefix="Raster.";a.adjustAspectRatio=null;a.bandCount=null;a.bandIds=void 0;a.capabilities=null;a.compressionQuality=void 0;a.compressionTolerance=.01;a.copyright=null;a.definitionExpression=null;a.exportImageServiceParameters=null;a.rasterInfo=null;a.fields=null;a.fullExtent=null;a.hasMultidimensions=!1;a.imageMaxHeight=4100;a.imageMaxWidth=4100;a.interpolation=void 0;a.minScale=0;a.maxScale=0;
a.multidimensionalInfo=null;a.noData=null;a.noDataInterpretation=void 0;a.objectIdField=null;a.pixelSizeX=null;a.pixelSizeY=null;a.pixelFilter=null;a.raster=void 0;a.viewId=void 0;a.renderer=null;a.rasterAttributeTable=null;a.rasterFunctionInfos=null;a.serviceDataType=null;a.spatialReference=null;a.pixelType=null;a.serviceRasterInfo=null;a.sourceJSON=null;a.url=null;a.version=null;return a}Z._inheritsLoose(L,D);var k=L.prototype;k.initialize=function(){this._set("exportImageServiceParameters",new wa.ExportImageServiceParameters({layer:this}))};
k.readDefaultServiceMosaicRule=function(a,b){return G.fromJSON(b)};k.readBandIds=function(a,b){if(Array.isArray(a)&&0<a.length&&a.every(c=>"number"===typeof c))return a};k.readCapabilities=function(a,b){return this._readCapabilities(b)};k.writeCompressionQuality=function(a,b,c){null!=a&&"lerc"!==this.format&&(b[c]=a)};k.writeCompressionTolerance=function(a,b,c){"lerc"===this.format&&null!=a&&(b[c]=a)};k.readFormat=function(a,b){return"esriImageServiceDataTypeVector-UV"===b.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===
b.serviceDataType?"lerc":null!=this.pixelFilter?"lerc":"jpgpng"};k.readMinScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};k.readMaxScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};k.readMosaicRule=function(a,b){return G.fromJSON(a||b.mosaicRule||b)};k.writeMosaicRule=function(a,b,c){a=this.mosaicRule;const d=this.definitionExpression;a?d&&d!==a.where&&(a=a.clone(),a.where=d):d&&(a=new G({where:d}));this._isValidCustomizedMosaicRule(a)&&(b[c]=a.toJSON())};k.writeNoData=
function(a,b,c){null!=a&&"number"===typeof a&&(b[c]=Ca(a))};k.readObjectIdField=function(a,b){a||(a=(a=b.fields.filter(c=>"esriFieldTypeOID"===c.type||"oid"===c.type))&&a[0]&&a[0].name);return a};k.readRenderer=function(a,b,c){a=P.read(b&&b.layerDefinition&&b.layerDefinition.drawingInfo&&b.layerDefinition.drawingInfo.renderer,c)||void 0;if(null!=a)return va.isSupportedRendererType(a)||ha.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a};k.readRenderingRule=function(a,
b){a=b.rasterFunctionInfos;return b.renderingRule||a&&a.length&&"None"!==a[0].name?K.fromJSON(b.renderingRule||{rasterFunctionInfos:b.rasterFunctionInfos}):null};k.writeRenderingRule=function(a,b,c){this._isRFTJson(a)||(b[c]=a.toJSON())};k.readSpatialReference=function(a,b){return(a=a||b.extent.spatialReference)?J.fromJSON(a):null};k.readPixelType=function(a){return V.fromJSON(a)||a};k.writePixelType=function(a,b,c){if(B.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)b[c]=
V.toJSON(a)};k.readVersion=function(a,b){(a=b.currentVersion)||(a=b.hasOwnProperty("fields")||b.hasOwnProperty("timeInfo")?10:9.3);return a};k.applyFilter=function(a){let b=a;this.pixelFilter&&(b=this._clonePixelData(a),this.pixelFilter(b));return b};k.applyRenderer=async function(a,b){var c=a;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON());const d=this._rasterJobHandler.instance,{bandIds:e}=
this;d?(c&&(this._symbolizer.bind(),await d.updateSymbolizer(this._symbolizer,b),this._cachedRendererJson=this.renderer.toJSON()),b=await d.symbolize({bandIds:e,...a},b),c={extent:a.extent,pixelBlock:b}):c={extent:a.extent,pixelBlock:this._symbolizer.symbolize({bandIds:e,...a})}}return c};k.destroy=function(){this._shutdownJobHandler()};k.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};k.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&
this._shutdownJobHandler()};k.computeHistograms=async function(a,b){b=null==b?void 0:b.signal;await this._fetchCapabilities(b);if(!this.capabilities.operations.supportsComputeHistograms)throw new A("imagery-layer:compute-histograms","this operation is not supported on the input image service");a=a.clone();const {raster:c,mosaicRule:d,renderingRule:e}=this;e&&null==a.renderingRule&&(a.renderingRule=e);d&&null==a.mosaicRule&&(a.mosaicRule=d);c&&null==a.raster&&(a.raster=c);return ea.computeHistograms(this.url,
a,{signal:b})};k.computeStatisticsHistograms=async function(a,b){b=null==b?void 0:b.signal;await this._fetchCapabilities(b);if(!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");a=a.clone();const {raster:c,mosaicRule:d,renderingRule:e}=this;e&&null==a.renderingRule&&(a.renderingRule=e);d&&null==a.mosaicRule&&(a.mosaicRule=d);c&&null==a.raster&&(a.raster=c);return ea.computeStatisticsHistograms(this.url,
a,{signal:b})};k.fetchImage=function(a,b,c,d={}){if(null==a||null==b||null==c)return z.reject(new A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const e=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:d.signal}):null;return z.when(e).then(h=>{h&&(this.rasterInfo=h);h={imageServiceParameters:this.getExportImageServiceParameters(a,b,c,d.timeExtent),imageProps:{extent:a,width:b,
height:c,format:this.format},requestAsImageElement:d.requestAsImageElement&&!this.pixelFilter||!1,signal:d.signal};return this._requestArrayBuffer(h)})};k.fetchKeyProperties=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();return w(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(b=>b.data)};k.fetchRasterAttributeTable=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();return 10.1>this.version?z.reject(new A("#fetchRasterAttributeTable()",
"Failed to get rasterAttributeTable")):w(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(b=>da.fromJSON(b.data))};k.getCatalogItemRasterInfo=async function(a,b){var c=w(this.parsedUrl.path+"/"+a+"/info",{query:this._getQueryParams(),...b}).then(d=>d.data);a=w(this.parsedUrl.path+"/"+a+"/info/keyProperties",{query:this._getQueryParams(),...b}).then(d=>d.data).catch(()=>{});c=await z.all([c,a]);if(c[0])return a=
I.fromJSON(c[0].extent),b=c[0].statistics?c[0].statistics.map(d=>({min:d[0],max:d[1],avg:d[2],stddev:d[3]})):null,new Q({bandCount:c[0].bandCount,extent:a,spatialReference:a.sr,pixelSize:new ba({x:c[0].pixelSizeX,y:c[0].pixelSizeY,spatialReference:a.sr}),pixelType:c[0].pixelType.toLowerCase(),statistics:b,histograms:c[0].histograms,keyProperties:c[1]||{}})};k.getCatalogItemICSInfo=async function(a,b){var {data:c}=await w(this.parsedUrl.path+"/"+a+"/info/ics",{query:this._getQueryParams(),...b});if(c=
c&&c.ics){var d=null;try{d=(await w(this.parsedUrl.path+"/"+a+"/info",{query:this._getQueryParams(),...b})).data.extent}catch{}if(!d||!d.spatialReference)return{ics:c,icsToPixelTransform:null,icsExtent:null,northDirection:null};var e=10.7<=this.version?w(this.parsedUrl.path+"/"+a+"/info/icstopixel",{query:this._getQueryParams(),...b}).then(p=>p.data).catch(()=>({})):{},h=d.spatialReference,n={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[d]}),inSR:h.wkid||JSON.stringify(h),
outSR:"0:"+a};n=w(this.parsedUrl.path+"/project",{query:this._getQueryParams(n),...b}).then(p=>p.data).catch(()=>({}));var l=(d.xmin+d.xmax)/2,t=(d.ymax-d.ymin)/6;d=d.ymin+t;var v=[];for(let p=0;5>p;p++)v.push({x:l,y:d+t*p});a={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:v}),inSR:h.wkid||JSON.stringify(h),outSR:"0:"+a};b=w(this.parsedUrl.path+"/project",{query:this._getQueryParams(a),...b}).then(p=>p.data).catch(()=>({}));e=await z.all([e,n,b]);b=e[0].ipxf;if(null==b){var x,
r,q;a=null==(x=c.geodataXform)?void 0:x.xf_0;"topup"===(null==a?void 0:null==(r=a.name)?void 0:r.toLowerCase())&&6===(null==a?void 0:null==(q=a.coefficients)?void 0:q.length)&&(b={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:a.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}if(x=I.fromJSON(e[1]&&e[1].geometries&&e[1].geometries[0]))x.spatialReference=new J({wkid:0,imageCoordinateSystem:c});r=e[2].geometries?e[2].geometries.filter(p=>null!=p&&null!=p.x&&
null!=p.y&&"NaN"!==p.x&&"NaN"!==p.y):[];q=r.length;if(3>q)return{ics:c,icsToPixelTransform:b,icsExtent:x,northDirection:null};h=n=a=e=0;for(l=0;l<q;l++)e+=r[l].x,a+=r[l].y,n+=r[l].x*r[l].x,h+=r[l].x*r[l].y;q=(q*h-e*a)/(q*n-e*e);e=0;a=r[4].x>r[0].x;r=r[4].y>r[0].y;Infinity===q?e=r?90:270:0===q?e=a?0:180:0<q?e=a?180*Math.atan(q)/Math.PI:180*Math.atan(q)/Math.PI+180:0>q&&(e=r?180+180*Math.atan(q)/Math.PI:360+180*Math.atan(q)/Math.PI);return{ics:c,icsToPixelTransform:b,icsExtent:x,northDirection:e}}};
k.generateRasterInfo=async function(a,b){if((!a||"none"===a.functionName.toLowerCase())&&B.isSome(this.serviceRasterInfo))return this.serviceRasterInfo;const c=Aa(a);if(this._functionRasterInfos[c])return this._functionRasterInfos[c];a=this._generateRasterInfo(a,b);this._functionRasterInfos[c]=a;try{return await a}catch{return this._functionRasterInfos[c]=null}};k.getExportImageServiceParameters=function(a,b,c,d){a=a.clone().shiftCentralMeridian();var e=a.spatialReference;if(e.imageCoordinateSystem){const {id:q,
referenceServiceName:p}=e.imageCoordinateSystem;e=null!=q?p?-1<this.parsedUrl.path.toLowerCase().indexOf("/"+p.toLowerCase()+"/")?"0:"+q:JSON.stringify({icsid:q,icsns:p}):"0:"+q:JSON.stringify({ics:e.imageCoordinateSystem})}else e=e.wkid||JSON.stringify(e.toJSON());B.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const h=this.exportImageServiceParameters.toJSON(),{bandIds:n,noData:l,mosaicRule:t,renderingRule:v}=
h;n instanceof Array&&0<n.length&&(h.bandIds=n.join(","));l instanceof Array&&0<l.length&&(h.noData=l.join(","));const x=this.timeInfo;t&&t.multidimensionalDefinition&&d&&x&&x.startField&&(t.multidimensionalDefinition=t.multidimensionalDefinition.filter(q=>q.dimensionName!==x.startField));h.mosaicRule=t&&JSON.stringify(t);h.renderingRule=v&&JSON.stringify(v);const r={};if(d){const {start:q,end:p}=d.toJSON();if(q&&p&&q===p)r.time=""+q;else if(null!=q||null!=p)r.time=`${null==q?"null":q},${null==p?
"null":p}`}return{bbox:a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:e,imageSR:e,size:b+","+c,...h,...r}};k.identify=async function(a,b){await this._fetchCapabilities(null==b?void 0:b.signal);if(!this.capabilities.operations.supportsIdentify)throw new A("imagery-layer:query-rasters","query operation is not supported on the input image service");a=a.clone();const {raster:c,mosaicRule:d,renderingRule:e}=this;e&&null==a.renderingRule&&(a.renderingRule=e);d&&null==a.mosaicRule&&(a.mosaicRule=d);c&&null==
a.raster&&(a.raster=c);return(new fa({url:this.url})).execute(a,b)};k.queryRasters=async function(a,b){await this._fetchCapabilities(null==b?void 0:b.signal);if(!this.capabilities.operations.supportsQuery)throw new A("imagery-layer:query-rasters","query operation is not supported on the input image service");return this.queryTask.execute(a,b)};k.queryVisibleRasters=function(a,b){if(!a)return z.reject(new A("imagery-layer: query-visible-rasters","missing query parameter"));const {pixelSize:c,returnDomainValues:d,
returnTopmostRaster:e,showNoDataRecords:h}=b||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let n=!1,l=b=null;const t=this.rasterFunctionNamesIndex;if(B.isSome(a.outFields)&&(n=a.outFields.some(p=>-1===p.toLowerCase().indexOf("raster.servicepixelvalue")),10.4<=this.version)){const p=a.outFields.filter(u=>-1<u.toLowerCase().indexOf("raster.servicepixelvalue")&&24<u.length).map(u=>{u=u.slice(25);return[this._updateRenderingRulesFunctionName(u,t),u]});b=p.map(u=>
new K({functionName:u[0]}));l=p.map(u=>u[1]);0===b.length?this.renderingRule?(b.push(this.renderingRule),l.push(this.renderingRule.functionName)):b=null:this.renderingRule&&!b.some(u=>u.functionName===this.renderingRule.functionName)&&(b.push(this.renderingRule),l.push(this.renderingRule.functionName))}const v=B.isNone(a.outSpatialReference)||a.outSpatialReference.equals(this.spatialReference);b=this._getQueryParams({geometry:a.geometry,timeExtent:a.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,
renderingRule:10.4>this.version?this.renderingRule:null,renderingRules:b,pixelSize:c,returnCatalogItems:n,returnGeometry:v,maxItemCount:e?1:null});delete b.f;const x=new za(b),r=new fa({url:this.url}),q=this.generateRasterInfo(this.renderingRule);return z.create(p=>{q.then(()=>{r.execute(x).then(u=>{const ia=a.outFields;if(n&&!v&&u.catalogItems&&u.catalogItems.features&&0<u.catalogItems.features.length){const M=this.objectIdField||"ObjectId",ja=u.catalogItems.features;var W=ja.map(E=>E.attributes&&
E.attributes[M]);W=new sa({objectIds:W,returnGeometry:!0,outSpatialReference:a.outSpatialReference,outFields:[M]});return this.queryRasters(W).then(E=>{E&&E.features&&0<E.features.length&&E.features.forEach(ka=>{ja.forEach(X=>{X.attributes[M]===ka.attributes[M]&&(X.geometry=new oa(ka.geometry),X.geometry.spatialReference=a.outSpatialReference)})});p(this._processVisibleRastersResponse(u,{returnDomainValues:d,templateRRFunctionNames:l,showNoDataRecords:h,templateFields:ia}))}).catch(()=>{throw new A("imagery-layer:query-visible-rasters",
"encountered error when querying visible rasters geometry");})}p(this._processVisibleRastersResponse(u,{returnDomainValues:d,templateRRFunctionNames:l,showNoDataRecords:h,templateFields:ia}))}).catch(()=>{throw new A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters");})})})};k.fetchVariableStatisticsHistograms=async function(a,b){var c=w(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:a}),signal:b}).then(d=>{var e;return null==(e=d.data)?
void 0:e.statistics});a=w(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:a}),signal:b}).then(d=>{var e;return null==(e=d.data)?void 0:e.histograms});c=await z.all([c,a]);c[0]&&c[0].forEach(d=>{d.avg=d.mean;d.stddev=d.standardDeviation});return{statistics:c[0]||null,histograms:c[1]||null}};k._fetchService=async function(a){await this._fetchServiceInfo(a);B.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);var b=this.sourceJSON;b=B.isSome(this.serviceRasterInfo)?
z.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:b,signal:a}).then(c=>{this._set("serviceRasterInfo",c);return c});a=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:a}):null;return z.all([b,a]).then(c=>{c[1]?this._set("rasterInfo",c[1]):this._set("rasterInfo",c[0]);this.renderer&&0>S.getSupportedRendererTypes(this.rasterInfo).indexOf(this.renderer.type)&&(this.renderer=null,ha.warn("ArcGISImageService",
"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer"));this._configDefaultRenderer();this.watch("renderer",()=>this._configDefaultRenderer());this.watch("renderingRule",d=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(d).then(e=>{e&&(this.rasterInfo=e)})});(c=B.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo)&&this._updateMultidimensionalDefinition(c)})};k._initJobHandler=async function(){if(null!=
this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const a=new xa;this._rasterJobHandler.connectionPromise=a.initialize().then(()=>{this._rasterJobHandler.instance=a},()=>null);await this._rasterJobHandler.connectionPromise};k._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0};k._fetchCapabilities=
async function(a){if(this.capabilities)return this.capabilities;await this._fetchServiceInfo(a);return this.capabilities};k._fetchServiceInfo=async function(a){var b;let c=this.sourceJSON;if(!c){const {data:d,ssl:e}=await w(this.parsedUrl.path,{query:this._getQueryParams(),signal:a});this.sourceJSON=c=d;e&&(this.url=this.url.replace(/^http:/i,"https:"))}if(-1<(null==(b=c.capabilities)?void 0:b.toLowerCase().split(",").map(d=>d.trim()).indexOf("tilesonly")))throw new A("imagery-layer:fetch-service-info",
"use ImageryTileLayer to open tiles-only image services");this.read(c,{origin:"service",url:this.parsedUrl})};k._isPicture=function(){return!this.format||-1<this.format.indexOf("jpg")||-1<this.format.indexOf("png")};k._configDefaultRenderer=function(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&3<=this.rasterInfo.bandCount){const c=S.getDefaultBandCombination(this.rasterInfo);!c||3===this.rasterInfo.bandCount&&0===c[0]&&1===c[1]&&2===c[2]||(this.bandIds=c)}if(!this.renderer){var a,
b;this.renderer=S.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(a=this.mosaicRule)?void 0:null==(b=a.multidimensionalDefinition)?void 0:b[0].variableName})}this._symbolizer?(this._symbolizer.rendererJSON=this.renderer.toJSON(),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new ya({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo});this._symbolizer.bind()||(this._symbolizer=null)}};k._clonePixelData=function(a){return null==
a?a:{extent:a.extent&&a.extent.clone(),pixelBlock:a.pixelBlock&&a.pixelBlock.clone()}};k._getQueryParams=function(a){const {raster:b,viewId:c}=this;return{raster:b,viewId:c,f:"json",...a}};k._decodePixelBlock=function(a,b,c){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:a,options:b}):R.decode(a,b,c)};k._fetchMultidimensionalInfo=async function(a){var b;a=await w(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:a}).then(c=>{var d;
return null==(d=c.data)?void 0:d.multidimensionalInfo});null!=(b=a.variables)&&b.length&&a.variables.forEach(c=>{var d;null!=(d=c.statistics)&&d.length&&c.statistics.forEach(e=>{e.avg=e.mean;e.stddev=e.standardDeviation})});return a};k._fetchAuxiliaryRasterInfo=function(a){const b=a&&a.serviceInfo;if(!b)return z.reject(new A("imagery-layer:fetch-metadata","valid serviceInfo is required"));var c=a.renderingRule?JSON.stringify(a.renderingRule.toJSON()):null,d=a.signal;a=b.hasRasterAttributeTable&&10.1<=
this.version?w(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.1<=this.version?c:null}),signal:d}).then(n=>da.fromJSON(n.data)).catch(()=>null):!1;const e=b.hasColormap&&10.1<=this.version?w(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:10.6<=this.version?c:null}),signal:d}).then(n=>{var l;return null==(l=n.data)?void 0:l.colormap}):!1,h=b.hasHistograms&&10.1<=this.version?w(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:10.1<=
this.version?c:null}),signal:d}).then(n=>{var l;return null==(l=n.data)?void 0:l.histograms}):!1;c=10.3<=this.version?w(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:c}),signal:d}).then(n=>n.data).catch(()=>{}):!1;d=b.hasMultidimensions&&10.3<=this.version?this._fetchMultidimensionalInfo():!1;return z.all([a,e,h,c,d]).then(n=>{let l=null;if(b.minValues&&b.minValues.length===b.bandCount){l=[];for(var t=0;t<b.minValues.length;t++)l.push({min:b.minValues[t],max:b.maxValues[t],
avg:b.meanValues[t],stddev:b.stdvValues[t]})}t=Math.ceil((b.extent.xmax-b.extent.xmin)/b.pixelSizeX-.1);const v=Math.ceil((b.extent.ymax-b.extent.ymin)/b.pixelSizeY-.1),x=J.fromJSON(b.spatialReference||b.extent.spatialReference);return new Q({width:t,height:v,bandCount:b.bandCount,extent:I.fromJSON(b.extent),spatialReference:x,pixelSize:new ba({x:b.pixelSizeX,y:b.pixelSizeY,spatialReference:x}),pixelType:b.pixelType.toLowerCase(),statistics:l,attributeTable:n[0]||null,colormap:n[1]||null,histograms:n[2]||
null,keyProperties:n[3]||{},multidimensionalInfo:n[4]||null})})};k._requestArrayBuffer=function(a){const {imageProps:b,requestAsImageElement:c,signal:d}=a;if(c&&!this.pixelFilter&&b.format&&-1<b.format.indexOf("png"))return w(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...a.imageServiceParameters}),signal:d}).then(h=>({imageElement:h.data,params:b}));const e=this._initJobHandler();a=w(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",
query:this._getQueryParams({f:"image",...a.imageServiceParameters}),signal:d});return z.all([a,e]).then(h=>{h=h[0].data;const n=b.format||"jpgpng";var l=n;"bsq"!==l&&"bip"!==l&&(l=R.getFormat(h));if(!l)throw new A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(h)));l="gif"===n||"bmp"===n||-1<n.indexOf("png")&&("png"===l||"jpg"===l);const t={signal:d};return l?R.decode(h,{useCanvas:!0,...b},t).then(v=>({pixelData:{pixelBlock:v,extent:b.extent},
params:b})):this._decodePixelBlock(h,{width:b.width,height:b.height,planes:null,pixelType:null,noDataValue:null,format:n},t).then(v=>({pixelData:{pixelBlock:v,extent:b.extent},params:b}))})};k._generateRasterInfo=async function(a,b){const {data:c}=await w(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:a}),...b});return await this._fetchAuxiliaryRasterInfo({serviceInfo:c,renderingRule:a,...b})};k._isValidCustomizedMosaicRule=function(a){return a&&JSON.stringify(a.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&
this._defaultServiceMosaicRule.toJSON())};k._updateMultidimensionalDefinition=function(a){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var b=a.variables[0].dimensions;a=[];for(var c in b)if(b.hasOwnProperty(c)){const d=b[c],e=d.extent;let h=!0,n=[e[0]];d.hasRanges&&!0===d.hasRanges?(h=!1,n=[d.values[0]]):"stdz"===d.name.toLowerCase()&&Math.abs(e[1])<=Math.abs(e[0])&&(n=[e[1]]);a.push(new ua({variableName:"",dimensionName:b[c].name,isSlice:h,values:n}))}0<a.length&&(this.mosaicRule=this.mosaicRule||
new G,c=this.mosaicRule.multidimensionalDefinition,!c||c&&0>=c.length)&&(this.mosaicRule.multidimensionalDefinition=a)}};k._formatAttributeValue=function(a,b){if("string"===typeof a&&(b=(b=this._getFieldInfo(this.popupTemplate&&this.popupTemplate.fieldInfos,b))&&b.format)){let c,d;return-1<a.trim().indexOf(",")?(c=",",d=c+" ",this._formatDelimitedString(a,c,d,b)):-1<a.trim().indexOf(" ")?(c=d=" ",this._formatDelimitedString(a,c,d,b)):this._formatNumberFromString(a,b)}return a};k._getFieldInfo=function(a,
b){if(a&&a.length&&b){var c=b.toLowerCase(),d=void 0;a.some(e=>!e.fieldName||e.fieldName.toLowerCase()!==c&&e.fieldName.toLowerCase()!==c.replace(/ /g,"_")?!1:(d=e,!0));return d}};k._formatDelimitedString=function(a,b,c,d){return a&&b&&c&&d?a.trim().split(b).map(e=>this._formatNumberFromString(e,d)).join(c):a};k._formatNumberFromString=function(a,b){if(!a||!b)return a;const c=Number(a);return isNaN(c)?a:b.format(c)};k._processVisibleRastersResponse=function(a,b){b=b||{};const c=a.value,{templateRRFunctionNames:d,
showNoDataRecords:e,returnDomainValues:h,templateFields:n}=b;b=a.processedValues;var l=a.catalogItems&&a.catalogItems.features;let t=a.properties&&a.properties.Values&&a.properties.Values.map(u=>u.replace(/ /gi,", "))||[];var v=this.objectIdField||"ObjectId";a="string"===typeof c&&-1<c.toLowerCase().indexOf("nodata");const x=[];!c||l||a||(l={},l[v]=0,l=new pa(this.fullExtent,null,l),t=[c],l=[l]);if(!l)return[];this._updateResponseFieldNames(l,n);for(let u=0;u<l.length;u++){v=l[u];if(null!=c&&!a){var r=
t[u];var q=this.renderingRule&&b&&0<b.length&&d&&0<d.length&&-1<d.indexOf(this.renderingRule.functionName)?b[d.indexOf(this.renderingRule.functionName)]:c;if("nodata"===r.toLowerCase()&&!e)continue;v.attributes["Raster.ItemPixelValue"]=this._formatAttributeValue(r,"Raster.ItemPixelValue");v.attributes["Raster.ServicePixelValue"]=this._formatAttributeValue(q,"Raster.ServicePixelValue");this._updateFeatureWithMagDirValues(v,r);var p=this.fields&&0<this.fields.length;q=this.renderingRule&&B.isSome(this.serviceRasterInfo)&&
this.serviceRasterInfo.attributeTable?p?r:c:q;this.renderingRule||(q=p?r:c);this._updateFeatureWithRasterAttributeTableValues(v,q)}v.sourceLayer=this;h&&this._updateFeatureWithDomainValues(v);if(d&&b&&d.length===b.length)for(r=0;r<d.length;r++)p="Raster.ServicePixelValue."+d[r],v.attributes[p]=this._formatAttributeValue(b[r],p);x.push(l[u])}return x};k._updateFeatureWithRasterAttributeTableValues=function(a,b){var c=this.rasterInfo&&this.rasterInfo.attributeTable||B.isSome(this.serviceRasterInfo)&&
this.serviceRasterInfo.attributeTable;const d=c&&c.features;if(d){c=c.fields;var e=c.map(l=>l.name).filter(l=>"value"===l.toLowerCase()),h=e&&e[0];if(h){var n=d.filter(l=>l.attributes[h]===(null!=b?parseInt(b,10):null));n&&n[0]&&c.forEach(l=>{const t=this.rasterAttributeTableFieldPrefix+l.name;a.attributes[t]=this._formatAttributeValue(n[0].attributes[l.name],t)})}}};k._updateFeatureWithMagDirValues=function(a,b){if(this.pixelFilter&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===
this.serviceDataType)){var c=b.replace(" ",",").split(",").map(d=>parseFloat(d));b=c.map(d=>[d]);c=c.map(d=>({minValue:d,maxValue:d,noDataValue:null}));b=new qa({height:1,width:1,pixelType:"f32",pixels:b,statistics:c});this.pixelFilter({pixelBlock:b,extent:new I(0,0,0,0,this.spatialReference)});a.attributes["Raster.Magnitude"]=b.pixels[0][0];a.attributes["Raster.Direction"]=b.pixels[1][0]}};k._updateFeatureWithDomainValues=function(a){const b=this.fields&&this.fields.filter(c=>c.domain&&"coded-value"===
c.domain.type);null!=b&&b.forEach(c=>{const d=a.attributes[c.name];if(null!=d){const e=c.domain.codedValues.filter(h=>h.code===d)[0];e&&(a.attributes[c.name]=e.name)}})};k._updateResponseFieldNames=function(a,b){if(b&&!(1>b.length)){var c=this.fieldsIndex;c&&a.forEach(d=>{if(d&&d.attributes)for(const e of b)if(c.has(e)){const h=c.get(e).name;h!==e&&(d.attributes[e]=d.attributes[h],delete d.attributes[h])}})}};k._updateRenderingRulesFunctionName=function(a,b){if(a&&!(1>a.length)){if("Raw"===a)return a.replace("Raw",
"None");var c=a.toLowerCase().replace(/ /gi,"_");return b.has(c)?b.get(c):a}};k._isRFTJson=function(a){return a.name&&a.arguments&&a.function&&a.hasOwnProperty("functionType")};k._readCapabilities=function(a){const b=a.capabilities?a.capabilities.toLowerCase().split(",").map(t=>t.trim()):["image","catalog"],{currentVersion:c,advancedQueryCapabilities:d,maxRecordCount:e}=a,h=-1<b.indexOf("image"),n="esriImageServiceDataTypeElevation"===a.serviceDataType,l=!!(a.spatialReference||a.extent&&a.extent.spatialReference);
return{operations:{supportsComputeHistograms:h,supportsExportImage:h,supportsIdentify:h,supportsMeasure:-1<b.indexOf("mensuration")&&l,supportsDownload:-1<b.indexOf("download"),supportsQuery:-1<b.indexOf("catalog")&&a.fields&&0<a.fields.length,supportsGetSamples:10.2<=c&&h,supportsProject:10.3<=c&&h,supportsComputeStatisticsHistograms:10.4<=c&&h,supportsQueryBoundary:10.6<=c&&h,supportsCalculateVolume:10.7<=c&&n,supportsComputePixelLocation:10.7<=c&&-1<b.indexOf("catalog")},query:{supportsStatistics:!(!d||
!d.supportsStatistics),supportsOrderBy:!(!d||!d.supportsOrderBy),supportsDistinct:!(!d||!d.supportsDistinct),supportsPagination:!(!d||!d.supportsPagination),supportsStandardizedQueriesOnly:!(!d||!d.useStandardizedQueries),maxRecordCount:e}}};Z._createClass(L,[{key:"rasterFunctionNamesIndex",get:function(){const a=new Map;if(!this.rasterFunctionInfos||1>this.rasterFunctionInfos.length)return a;this.rasterFunctionInfos.forEach(b=>{a.set(b.name.toLowerCase().replace(/ /gi,"_"),b.name)});return a}},{key:"queryTask",
get:function(){return new ta({url:this.url})}},{key:"fieldsIndex",get:function(){return this.fields?new ra(this.fields):null}},{key:"format",set:function(a){a&&Ba.has(a.toLowerCase())&&this._set("format",a.toLowerCase())}},{key:"mosaicRule",set:function(a){a&&a.mosaicMethod&&(a=G.fromJSON({...a.toJSON(),mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation}));this._set("mosaicRule",a)}},{key:"parsedUrl",get:function(){return this.url?na.urlToObject(this.url):null}},{key:"rasterFields",get:function(){const a=
this.rasterAttributeTableFieldPrefix||"Raster.";var b=new C({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"});const c=new C({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),d=new C({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let e=this.fields?aa.clone(this.fields):[];e.push(c);this.capabilities.operations.supportsQuery&&
this.fields&&0<this.fields.length&&e.push(b);10.4<=this.version&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(h=>"none"===h.name.toLowerCase())&&e.push(d);this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(h=>"none"!==h.name.toLowerCase()).forEach(h=>{e.push(new C({name:"Raster.ServicePixelValue."+h.name,alias:h.name,domain:null,editable:!1,length:50,type:"string"}))});null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==
this.serviceDataType||(e.push(new C({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),e.push(new C({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));(b=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null)&&0<b.length&&(b=b.filter(h=>"esriFieldTypeOID"!==h.type&&"value"!==h.name.toLowerCase()).map(h=>{const n=aa.clone(h);n.name=a+h.name;return n}),e=e.concat(b));return e}},{key:"renderingRule",set:function(a){a&&
a.rasterFunction&&(a=K.fromJSON({...a.toJSON(),rasterFunction:a.rasterFunction,rasterFunctionArguments:a.rasterFunctionArguments}));this._set("renderingRule",a)}}]);return L}(f);g.__decorate([m.property()],f.prototype,"_functionRasterInfos",void 0);g.__decorate([m.property()],f.prototype,"_rasterJobHandler",void 0);g.__decorate([m.property()],f.prototype,"_symbolizer",void 0);g.__decorate([m.property()],f.prototype,"_defaultServiceMosaicRule",void 0);g.__decorate([y.reader("_defaultServiceMosaicRule",
["defaultMosaicMethod"])],f.prototype,"readDefaultServiceMosaicRule",null);g.__decorate([m.property()],f.prototype,"_cachedRendererJson",void 0);g.__decorate([m.property()],f.prototype,"rasterAttributeTableFieldPrefix",void 0);g.__decorate([m.property({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],f.prototype,"rasterFunctionNamesIndex",null);g.__decorate([m.property({readOnly:!0,dependsOn:["url"]})],f.prototype,"queryTask",null);g.__decorate([m.property()],f.prototype,"adjustAspectRatio",void 0);
g.__decorate([m.property({readOnly:!0}),H.aliasOf("serviceRasterInfo.bandCount")],f.prototype,"bandCount",void 0);g.__decorate([m.property({type:[N.Integer],json:{write:!0}})],f.prototype,"bandIds",void 0);g.__decorate([y.reader("bandIds")],f.prototype,"readBandIds",null);g.__decorate([m.property({readOnly:!0,json:{read:!1}})],f.prototype,"capabilities",void 0);g.__decorate([y.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],f.prototype,"readCapabilities",null);
g.__decorate([m.property({type:Number})],f.prototype,"compressionQuality",void 0);g.__decorate([F.writer("compressionQuality")],f.prototype,"writeCompressionQuality",null);g.__decorate([m.property({type:Number})],f.prototype,"compressionTolerance",void 0);g.__decorate([F.writer("compressionTolerance")],f.prototype,"writeCompressionTolerance",null);g.__decorate([m.property({json:{read:{source:"copyrightText"}}})],f.prototype,"copyright",void 0);g.__decorate([m.property({type:String,json:{read:{source:"layerDefinition.definitionExpression"},
write:{target:"layerDefinition.definitionExpression"}}})],f.prototype,"definitionExpression",void 0);g.__decorate([m.property({readOnly:!0,constructOnly:!0})],f.prototype,"exportImageServiceParameters",void 0);g.__decorate([m.property()],f.prototype,"rasterInfo",void 0);g.__decorate([m.property({readOnly:!0,type:[C]})],f.prototype,"fields",void 0);g.__decorate([m.property({readOnly:!0,dependsOn:["fields"]})],f.prototype,"fieldsIndex",null);g.__decorate([m.property({type:"png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" "),
json:{write:!0}})],f.prototype,"format",null);g.__decorate([y.reader("service","format",["serviceDataType"])],f.prototype,"readFormat",null);g.__decorate([m.property({type:I})],f.prototype,"fullExtent",void 0);g.__decorate([m.property({readOnly:!0})],f.prototype,"hasMultidimensions",void 0);g.__decorate([m.property({json:{read:{source:"maxImageHeight"}}})],f.prototype,"imageMaxHeight",void 0);g.__decorate([m.property({json:{read:{source:"maxImageWidth"}}})],f.prototype,"imageMaxWidth",void 0);g.__decorate([m.property({type:String,
json:{type:T.jsonValues,read:T.read,write:T.write}})],f.prototype,"interpolation",void 0);g.__decorate([m.property()],f.prototype,"minScale",void 0);g.__decorate([y.reader("service","minScale")],f.prototype,"readMinScale",null);g.__decorate([m.property()],f.prototype,"maxScale",void 0);g.__decorate([y.reader("service","maxScale")],f.prototype,"readMaxScale",null);g.__decorate([m.property({type:G})],f.prototype,"mosaicRule",null);g.__decorate([y.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],
f.prototype,"readMosaicRule",null);g.__decorate([F.writer("mosaicRule")],f.prototype,"writeMosaicRule",null);g.__decorate([m.property({readOnly:!0}),H.aliasOf("serviceRasterInfo.multidimensionalInfo")],f.prototype,"multidimensionalInfo",void 0);g.__decorate([m.property({json:{type:N.Integer}})],f.prototype,"noData",void 0);g.__decorate([F.writer("noData")],f.prototype,"writeNoData",null);g.__decorate([m.property({type:String,json:{type:U.jsonValues,read:U.read,write:U.write}})],f.prototype,"noDataInterpretation",
void 0);g.__decorate([m.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],f.prototype,"objectIdField",void 0);g.__decorate([y.reader("objectIdField")],f.prototype,"readObjectIdField",null);g.__decorate([m.property({readOnly:!0,dependsOn:["url"]})],f.prototype,"parsedUrl",null);g.__decorate([m.property({readOnly:!0}),H.aliasOf("serviceRasterInfo.pixelSize.x")],f.prototype,"pixelSizeX",void 0);g.__decorate([m.property({readOnly:!0}),H.aliasOf("serviceRasterInfo.pixelSize.y")],f.prototype,
"pixelSizeY",void 0);g.__decorate([m.property({type:Function})],f.prototype,"pixelFilter",void 0);g.__decorate([m.property()],f.prototype,"raster",void 0);g.__decorate([m.property()],f.prototype,"viewId",void 0);g.__decorate([m.property({types:P.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:P.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(D){return{enabled:D&&"vector-field"!==D.type}}}}}}})],f.prototype,
"renderer",void 0);g.__decorate([y.reader("renderer")],f.prototype,"readRenderer",null);g.__decorate([m.property(ca.opacityDrawingInfo)],f.prototype,"opacity",void 0);g.__decorate([m.property({readOnly:!0}),H.aliasOf("serviceRasterInfo.attributeTable")],f.prototype,"rasterAttributeTable",void 0);g.__decorate([m.property({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],f.prototype,"rasterFields",null);g.__decorate([m.property({readOnly:!0})],f.prototype,"rasterFunctionInfos",void 0);
g.__decorate([m.property({type:K})],f.prototype,"renderingRule",null);g.__decorate([y.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],f.prototype,"readRenderingRule",null);g.__decorate([F.writer("renderingRule")],f.prototype,"writeRenderingRule",null);g.__decorate([m.property()],f.prototype,"serviceDataType",void 0);g.__decorate([m.property({readOnly:!0,type:J})],f.prototype,"spatialReference",void 0);g.__decorate([y.reader("spatialReference",["spatialReference","extent"])],f.prototype,
"readSpatialReference",null);g.__decorate([m.property({json:{type:V.jsonValues}})],f.prototype,"pixelType",void 0);g.__decorate([y.reader("pixelType")],f.prototype,"readPixelType",null);g.__decorate([F.writer("pixelType")],f.prototype,"writePixelType",null);g.__decorate([m.property({constructOnly:!0,type:Q})],f.prototype,"serviceRasterInfo",void 0);g.__decorate([m.property()],f.prototype,"sourceJSON",void 0);g.__decorate([m.property(ca.url)],f.prototype,"url",void 0);g.__decorate([m.property({readOnly:!0})],
f.prototype,"version",void 0);g.__decorate([y.reader("version",["currentVersion","fields","timeInfo"])],f.prototype,"readVersion",null);return f=g.__decorate([ma.subclass("esri.layers.mixins.ArcGISImageService")],f)};Object.defineProperty(Y,"__esModule",{value:!0})});