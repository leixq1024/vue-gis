// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ./vec3f64 ./vec3 ./mat4 ../core/ObjectStack ./vec4f64 ./vec4 ../views/3d/support/stack ./plane ./clipRay".split(" "),function(f,e,r,t,m,g,G,u,d,n){function l(c){if(c){const {planes:b,points:a}=c;return{planes:[d.create(b[0]),d.create(b[1]),d.create(b[2]),d.create(b[3]),d.create(b[4]),d.create(b[5])],points:[e.clone(a[0]),e.clone(a[1]),e.clone(a[2]),e.clone(a[3]),e.clone(a[4]),e.clone(a[5]),e.clone(a[6]),e.clone(a[7])]}}return{planes:[d.create(),d.create(),d.create(),d.create(),d.create(),
d.create()],points:[e.create(),e.create(),e.create(),e.create(),e.create(),e.create(),e.create(),e.create()]}}function v(c,b=l()){return p(c.planes,c.points,b)}function p(c,b,a=l()){for(let h=0;6>h;h++)d.copy(c[h],a.planes[h]);for(c=0;8>c;c++)r.copy(a.points[c],b[c]);return a}function w(c,b,a=l()){const {points:h}=a;c=t.multiply(u.sm4d.get(),b,c);t.invert(c,c);for(b=0;8>b;++b){const k=G.transformMat4(u.sv4d.get(),H[b],c);r.set(h[b],k[0]/k[3],k[1]/k[3],k[2]/k[3])}q(a);return a}function q(c){const {planes:b,
points:a}=c;d.fromPoints(a[4],a[0],a[3],b[0]);d.fromPoints(a[1],a[5],a[6],b[1]);d.fromPoints(a[4],a[5],a[1],b[2]);d.fromPoints(a[3],a[2],a[6],b[3]);d.fromPoints(a[0],a[1],a[2],b[4]);d.fromPoints(a[5],a[4],a[7],b[5])}function x(c,b){for(let a=0;6>a;a++)if(d.isSphereFullyInside(c[a],b))return!1;return!0}function y(c,b){return z(c,n.fromRay(b,A.get()))}function B(c,b){for(let a=0;6>a;a++)if(!d.clipInfinite(c[a],b))return!1;return!0}function C(c,b,a){return z(c,n.fromLineSegmentAndDirection(b,a,A.get()))}
function D(c,b){for(let a=0;6>a;a++)if(0<d.signedDistance(c[a],b))return!1;return!0}function E(c,b){for(let a=0;6>a;a++)if(d.isAABBFullyInside(c[a],b))return!1;return!0}function z(c,b){for(let a=0;6>a;a++)if(!d.clip(c[a],b))return!1;return!0}const F={bottom:[5,1,0,4],near:[0,1,2,3],far:[5,4,7,6],right:[1,5,6,2],left:[4,0,3,7],top:[7,3,2,6]},H=[g.fromValues(-1,-1,-1,1),g.fromValues(1,-1,-1,1),g.fromValues(1,1,-1,1),g.fromValues(-1,1,-1,1),g.fromValues(-1,-1,1,1),g.fromValues(1,-1,1,1),g.fromValues(1,
1,1,1),g.fromValues(-1,1,1,1)],A=new m.ObjectStack(n.create);m=Object.freeze({__proto__:null,create:l,copy:v,fromValues:p,fromMatrix:w,recomputePlanes:q,intersectsSphere:x,intersectsRay:y,intersectClipRay:B,intersectsLineSegment:C,intersectsPoint:D,intersectsAABB:E,planePointIndices:F});f.copy=v;f.create=l;f.fromMatrix=w;f.fromValues=p;f.frustumModule=m;f.intersectClipRay=B;f.intersectsAABB=E;f.intersectsLineSegment=C;f.intersectsPoint=D;f.intersectsRay=y;f.intersectsSphere=x;f.planePointIndices=
F;f.recomputePlanes=q});