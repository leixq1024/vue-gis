// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.18/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/has ../../core/object ../../core/maybe ../../core/Logger ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/jsonMap ../../core/accessorSupport/decorators/subclass ../../core/Error ../../core/urlUtils ../../core/uuid ../../portal/support/resourceExtension ../../request ../Task".split(" "),function(l,p,q,n,u,v,A,B,C,D,r,t,w,E,F,m,x){async function y(a){try{const {data:{supportedTravelModes:b,
defaultTravelMode:d}}=await m(a+("/"===a[a.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:b,defaultTravelMode:d}}catch(b){throw new t("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:b});}}async function z(a){var {data:b}=await m(a.substring(0,a.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!b||!b.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};a=b.owningSystemUrl;({data:b}=await m(a+
("/"===a[a.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}));b=u.getDeepValue("helperServices.routingUtilities.url",b);if(!b)return{supportedTravelModes:[],defaultTravelMode:null};a=w.urlToObject(a);a=/\/solveClosestFacility$/.test(a.path)?"Route":/\/solveClosestFacility$/.test(a.path)?"ClosestFacility":"ServiceAreas";var d=await m(b+("/"===b[b.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:a}});b=[];a=null;if(d&&d.data&&d.data.results&&d.data.results.length){d=
d.data.results;for(const f of d)if("supportedTravelModes"===f.paramName){if(f.value&&f.value.features)for(const {attributes:e}of f.value.features)e&&(d=JSON.parse(e.TravelMode),b.push(d))}else"defaultTravelMode"===f.paramName&&(a=f.value)}return{supportedTravelModes:b,defaultTravelMode:a}}n=a=>{a=function(b){function d(){return b.apply(this,arguments)||this}p._inheritsLoose(d,b);var f=d.prototype;f.getServiceDescription=async function(){this._serviceDescriptionPromise||(this._serviceDescriptionPromise=
this._fetchServiceDescription());return this._serviceDescriptionPromise};f._fetchServiceDescription=async function(){if(!this.url||!this.parsedUrl)throw new t("network-service:missing-url","Url to Network service is missing");var e=this.url;const {data:c}=await m(e,{query:{f:"json"}});c.supportedTravelModes||(c.supportedTravelModes=[]);for(let g=0;g<c.supportedTravelModes.length;g++)c.supportedTravelModes[g].id||(c.supportedTravelModes[g].id=c.supportedTravelModes[g].itemId);e=10.4<=c.currentVersion?
y(e):z(e);const {defaultTravelMode:h,supportedTravelModes:k}=await e;c.defaultTravelMode=h;c.supportedTravelModes=k;return c};f._isInputGeometryZAware=function(e,c){for(let h=0;h<c.length;h++){const k=e[c[h]];if(k&&k.length)for(const g of k)if(v.isSome(g)&&g.hasZ)return!0}return!1};f._dropZValuesOffInputGeometry=function(e,c){for(let h=0;h<c.length;h++){const k=e[c[h]];if(k&&k.length)for(const g of k)g.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")};
return d}(a);return a=q.__decorate([r.subclass("esri.tasks.mixins.NAServiceDescription")],a)};l.NAServiceDescription=function(a){function b(){return a.apply(this,arguments)||this}p._inheritsLoose(b,a);return b}(n(x));l.NAServiceDescription=q.__decorate([r.subclass("esri.tasks.mixins.NAServiceDescription")],l.NAServiceDescription);l.NAServiceDescriptionMixin=n;Object.defineProperty(l,"__esModule",{value:!0})});