// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../core/Logger","../layers/support/Field"],function(l,w,m){function r(a){return Object.keys(a.attributes).map(b=>{const g=a.attributes[b];return"objectid"===b.toLowerCase()||"fid"===b.toLowerCase()?new m({name:b,alias:b,type:"oid"}):"number"===typeof g?new m({name:b,alias:b,type:"double"}):new m({name:b,alias:b,type:"string"})})}function t(a){if(!a.fields){var b=a.features[0];if(b.layer){a.fields=b.layer.fields;const g=Object.keys(b.attributes);b=a.fields.filter(f=>g.includes(f.name));
a.fields=b}else a.fields=r(b)}return a}function u(a){return a.map(({attributes:b})=>b)}function v(a){const {delimiter:b,fields:g=[],outFields:f=[]}=a,h=b||",",e=g.map(n=>n.name);return n=>{let p="";e.filter(k=>f.includes(k)).forEach(k=>{var c=g.find(({name:q})=>q===k);let d=n[k]||"";"date"===c?.type&&(d=(new Date(d)).toString());c?.domain&&"coded-value"===c.domain.type&&(c=c.domain.codedValues.find(q=>d===q.code))&&(d=c.name);"string"===typeof d&&d.includes(h)&&(d=`"${d}"`);p+=`${d}${h}`});return`${p}\r\n`}}
l.attributeToString=v;l.convertFeaturesToCSV=async function(a,{includeGeometry:b=!0,delimiter:g=",",outFields:f=["*"]}={}){a=t(a);b&&"point"!==a.geometryType&&w.getLogger("esri.exports.csv").warn(`The input geometry ${a.geometryType} is not supported. Geometry will be excluded from export.`);var {features:h}=a;if(!h.length)return null;let e=a.fields;const [n]=f;"*"===n&&(f=e.map(c=>c.name));b&&"point"===a.geometryType&&(e.some(c=>"x"===c.name||"y"===c.name)||(e=[...e,new m({name:"lon",alias:"Longitude",
type:"double"}),new m({name:"lat",alias:"Latitude",type:"double"})],f=[...f,"lon","lat"]),h.forEach(({attributes:c,geometry:d})=>{c.lon="point"===d?.type?d.longitude:null;c.lat="point"===d?.type?d.latitude:null}));e=e.filter(c=>f.includes(c.name));a=g||",";h=u(h);b=e.map(c=>c.name).join(a);const p=v({delimiter:a,outFields:f||e.map(c=>c.name),fields:e});let k=`${b}${a}\r\n`;h.forEach(c=>{k+=p(c)});return k.replace(new RegExp(`${a}\r\n\\s*$`,"g"),"")};l.extractAttributes=u;l.extractFieldsFromFeature=
r;l.validateFeatureSetFields=t;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});