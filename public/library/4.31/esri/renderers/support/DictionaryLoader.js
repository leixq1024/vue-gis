// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../Color ../../request ../../core/Error ../../core/has ../../core/lang ../../core/Logger ../../core/LRUCache ../../core/promiseUtils ../../core/Version ../../geometry/support/jsonUtils ../../layers/support/FieldsIndex ../../support/arcadeOnDemand ../../symbols/CIMSymbol ../../symbols/cim/OverrideHelper ../../symbols/cim/utils".split(" "),function(p,x,q,y,I,z,r,A,B,C,t,D,u,E,F,v){const G={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",
width:.5,color:[0,0,0,255]}]}};class H{constructor(a,e,d){this.url=this.fieldMap=this.config=null;this._ongoingRequests=new Map;this._symbolCache=new A.LRUCache(100);this._dictionaryPromise=this._fieldIndex=this._dictionaryVersion=null;this.url=a;this.config=e;this.fieldMap=d}getSymbolFields(){return this._symbolFields}async getSymbolAsync(a,e){this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(e));try{var d=await this._dictionaryPromise}catch(m){if(B.isAbortError(m))return this._dictionaryPromise=
null}var f=this._dictionaryVersion?.greaterEqual(4,0),k={};if(this.fieldMap)for(var l of this._symbolFields){var b=v.getFieldName(this.fieldMap[l],this._fieldIndex);if(b){var g=a.attributes[b];k[l]=f?g:null!=g?""+a.attributes[b]:""}else k[l]=""}f=null;try{f=d?.(k,e)}catch(m){return null}if(!f||"string"!==typeof f||"invalid"===f)return null;f=f.split(";");d=[];k=[];for(l=0;l<f.length;l++)if(b=f[l])if(b.includes("po:")){var c=b.slice(3).split("|");3===c.length&&(b=c[0],g=c[1],c=c[2],"countrylabel"===
b&&"TextString"===g?null!=this.fieldMap&&(b=this.fieldMap.countrylabel,null==b&&(b="countrylabel",this.fieldMap[b]=b),a.attributes[b]=c):("DashTemplate"===g?c=c.split(" ").map(m=>Number(m)):"Color"===g?(c=(new x(c)).toRgba(),c=[c[0],c[1],c[2],255*c[3]]):c=Number(c),k.push({primitiveName:b,propertyName:g,value:c,defaultValue:null})))}else if(b.includes("|"))for(var h of b.split("|")){if(this._itemNames.has(h)){d.push(h);break}}else if(this._itemNames.has(b))d.push(b);else if(0===l){d.length=0;h="Invalid_P";
null!=a.geometry&&(t.isPolygon(a.geometry)?h="Invalid_A":t.isPolyline(a.geometry)&&(h="Invalid_L"));d.push(h);break}return this._cimPartsToCIMSymbol(a,d,k,null==a.geometry||!a.geometry.hasZ&&"point"===a.geometry.type?!0:!1,e)}async fetchResources(a){if(this._dictionaryPromise)return this._dictionaryPromise;if(this.url){var e=q(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:null!=a?a.signal:null}),[{data:d}]=await Promise.all([e,u.loadArcade()]);if(!d)throw this._dictionaryPromise=
null,new y("esri.renderers.DictionaryRenderer","Bad dictionary data!");var {authoringInfo:f,dictionary_version:k,expression:l,itemsNames:b}=d;e=!1;k&&(this._dictionaryVersion=C.Version.parse(k),e=this._dictionaryVersion.greaterEqual(4,0));this._refSymbolUrlTemplate=this.url+"/"+d.cimRefTemplateUrl;this._itemNames=new Set(b);this._symbolFields=f.symbol;d={};if(this.config){const h=this.config;for(var g in h)d[g]=h[g]}if(f.configuration)for(var c of f.configuration)d.hasOwnProperty(c.name)||(d[c.name]=
c.value);g=[];if(a?.fields&&this.fieldMap)for(const h in this.fieldMap){const m=this.fieldMap[h];c=a.fields.filter(n=>n.name.toLowerCase()===m?.toLowerCase());0<c.length&&g.push({...c[0],type:e?c[0].type:"esriFieldTypeString"})}0<g.length&&(this._fieldIndex=new D(g));return this._dictionaryPromise=a=u.createDictionaryExpression(l,null!=a?a.spatialReference:null,g,d).then(h=>{const m={scale:0};return(n,w)=>{if(null==h)return null;n=h.repurposeFeature({geometry:null,attributes:n});m.scale=null!=w?w.scale??
void 0:void 0;return h.evaluate({$feature:n,$view:m},h.services)}}).catch(h=>{r.getLogger("esri.renderers.support.DictionaryLoader").error("Creating dictionary expression failed:",h);return null})}r.getLogger("esri.renderers.support.DictionaryLoader").error("no valid URL!")}async _cimPartsToCIMSymbol(a,e,d,f,k){const l=Array(e.length);for(let g=0;g<e.length;g++)l[g]=this._getSymbolPart(e[g],k);e=await Promise.all(l);if(k=this.fieldMap){e=z.clone(e);for(var b of e)F.OverrideHelper.applyDictionaryTextOverrides(b,
a,k,this._fieldIndex,v.getTextCasing(b))}if((b=e)&&0!==b.length){a={...b[0]};if(1<b.length){a.effects=null;a.symbolLayers=[];for(const g of b){b=g;if(null!=b.effects)for(const c of b.symbolLayers)null==c.effects?c.effects=b.effects:c.effects.unshift(...b.effects);a.symbolLayers.unshift(...b.symbolLayers)}}f&&(a.callout=G);d={type:"CIMSymbolReference",symbol:a,primitiveOverrides:d}}else d=null;return new E({data:d})}async _getSymbolPart(a,e){var d=this._symbolCache.get(a);if(d)return d;if(this._ongoingRequests.has(a))return this._ongoingRequests.get(a).then(f=>
f.data);d=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,a);e=q(d,{responseType:"json",query:{f:"json"},...e});this._ongoingRequests.set(a,e);e.finally(()=>this._ongoingRequests.delete(a));try{const f=await e;this._symbolCache.put(a,f.data);return f.data}catch(f){throw f;}}}p.DictionaryLoader=H;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});