// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../renderers/PointCloudClassBreaksRenderer ../../renderers/PointCloudRenderer ../../renderers/PointCloudRGBRenderer ../../renderers/PointCloudStretchRenderer ../../renderers/PointCloudUniqueValueRenderer ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../core/Logger ../../core/colorUtils ../../core/Error ../../core/lang ../../core/accessorSupport/ensureType ../../intl/messages ../../renderers/support/AuthoringInfo ../../renderers/support/AuthoringInfoVisualVariable ../../renderers/support/utils ../../renderers/visualVariables/ColorVariable ../../renderers/visualVariables/support/ColorStop ../../renderers/visualVariables/support/VisualVariableLegendOptions ../heuristics/ageUnit ../heuristics/outline ../heuristics/sizeRange ./support/regenerateUtils ./support/utils ../statistics/support/ageUtils ../support/binningUtils ../support/utils ../support/adapters/support/layerUtils ../symbology/color".split(" "),
function(z,va,wa,ba,ca,xa,O,ya,za,Aa,Ba,Ca,Da,Ea,Fa,Ga,D,l,da,ea,P,Q,fa,I,ha,ia,ja,R,E,F,r,g,J,K,C,u,A){async function S(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new l("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new l("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");a.forBinning&&
K.verifyBinningParams(a,"color-visual-variable");const b={...a};var c=a.forBinning?u.binningCapableLayerTypes:u.featureCapableLayerTypes;a=u.createLayerAdapter(b.layer,c,a.forBinning);if(!a)throw new l("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+u.getLayerTypeLabels(c).join(", "));await a.load(null!=b.signal?{signal:b.signal}:null);if("mesh"!==a.geometryType&&b.worldScale&&(!b.view||"3d"!==b.view.type))throw new l("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true");
c=await C.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});if(c=g.verifyBasicFieldValidity(a,c,"color-visual-variable:invalid-parameters"))throw c;return{...b,layer:a}}async function T(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new l("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new l("color-continuous-renderer:missing-parameters",
"View is required when 'valueExpression' is specified");a.forBinning&&K.verifyBinningParams(a,"color-continuous-renderer");const b={...a};b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled??(b.defaultSymbolEnabled=!0);var c=a.forBinning?u.binningCapableLayerTypes:u.featureCapableLayerTypes;a=u.createLayerAdapter(b.layer,c,a.forBinning);if(!a)throw new l("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+u.getLayerTypeLabels(c).join(", "));await a.load(null!=
b.signal?{signal:b.signal}:null);c=a.geometryType;b.outlineOptimizationEnabled="polygon"===c?b.outlineOptimizationEnabled:!1;b.sizeOptimizationEnabled="point"===c||"multipoint"===c||"polyline"===c?b.sizeOptimizationEnabled:!1;if("mesh"===c)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if("3d-volumetric-uniform"===b.symbolType&&"point"!==c)throw new l("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");
if(b.symbolType.includes("3d-volumetric")&&(!b.view||"3d"!==b.view.type))throw new l("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");}c=await C.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});if(c=g.verifyBasicFieldValidity(a,c,"color-continuous-renderer:invalid-parameters"))throw c;return{...b,layer:a}}async function U(a){if(!a||
!a.layer||!a.field&&!a.valueExpression)throw new l("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(a.valueExpression&&!a.view)throw new l("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");a.forBinning&&K.verifyBinningParams(a,"color-class-breaks-renderer");const b={...a};b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled??(b.defaultSymbolEnabled=!0);b.classificationMethod??
(b.classificationMethod="equal-interval");b.normalizationType=C.getNormalizationType(b);var c=a.forBinning?u.binningCapableLayerTypes:u.featureCapableLayerTypes;a=u.createLayerAdapter(b.layer,c,a.forBinning);if(!a)throw new l("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+u.getLayerTypeLabels(c).join(", "));if(!(null!=b.minValue&&null!=b.maxValue||null==b.minValue&&null==b.maxValue))throw new l("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");
await a.load(null!=b.signal?{signal:b.signal}:null);c=a.geometryType;b.outlineOptimizationEnabled="polygon"===c?b.outlineOptimizationEnabled:!1;if("mesh"===c)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if("3d-volumetric-uniform"===b.symbolType&&"point"!==c)throw new l("color-class-breaks-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(b.symbolType.includes("3d-volumetric")&&(!b.view||"3d"!==
b.view.type))throw new l("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");}c=await C.getFieldsList({field:b.field,normalizationField:b.normalizationField});if(c=g.verifyBasicFieldValidity(a,c,"color-class-breaks-renderer:invalid-parameters"))throw c;return{...b,layer:a}}function V(a){a={...a};delete a.basemap;delete a.colorScheme;delete a.legendOptions;delete a.symbolType;
delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.edgesType;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}async function ka(a){if(!a?.layer)throw new l("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required");a={...a,layer:a.layer};const b=[u.LayerType.PointCloudLayer],c=u.createLayerAdapter(a.layer,b);if(!c)throw new l("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+u.getLayerTypeLabels(b).join(", "));
a.layer=c;a.density=a.density||25;a.size=a.size||"100%";if(!g.isValidPointSize(a.size))throw new l("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'");await c.load(null!=a.signal?{signal:a.signal}:null);return a}async function la(a){if(!a?.layer||!a.field)throw new l("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required");var b=a.field.toLowerCase();if("intensity"!==b&&"elevation"!==
b)throw new l("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'");a={...a,layer:a.layer,field:a.field};b=[u.LayerType.PointCloudLayer];const c=u.createLayerAdapter(a.layer,b);if(!c)throw new l("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+u.getLayerTypeLabels(b).join(", "));a.layer=c;a.density=a.density||25;a.size=a.size||"100%";if(!g.isValidPointSize(a.size))throw new l("color-point-cloud-continuous-renderer:invalid-parameters",
"Invalid 'size' parameter. It should be a string of the form '100%'");await c.load(null!=a.signal?{signal:a.signal}:null);return a}function L(a){a={...a};const b=!!a.symbolType?.includes("3d-volumetric");delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.edgesType;a.worldScale=b;return a}async function W(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))throw new l("color-age-renderer:missing-parameters","'layer', 'view', startTime', 'endTime' parameters are required");
a={...a};a.symbolType=a.symbolType||"2d";a.defaultSymbolEnabled??(a.defaultSymbolEnabled=!0);const b=u.createLayerAdapter(a.layer,u.featureCapableLayerTypes);if(!b)throw new l("color-age-renderer:invalid-parameters","'layer' must be one of these types: "+u.getLayerTypeLabels(u.featureCapableLayerTypes).join(", "));await b.load(null!=a.signal?{signal:a.signal}:null);var c=b.geometryType;a.outlineOptimizationEnabled="polygon"===c?a.outlineOptimizationEnabled:!1;a.sizeOptimizationEnabled="point"===c||
"multipoint"===c||"polyline"===c?a.sizeOptimizationEnabled:!1;if("mesh"===c)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none";else if("3d-volumetric-uniform"===a.symbolType&&"point"!==c)throw new l("color-continuous-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new l("color-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");
if(c=J.verifyDates(b,a.startTime,a.endTime,"color-age-renderer:invalid-parameters"))throw c;if(a.unit&&!J.supportedAgeUnits.includes(a.unit))throw new l("color-age-renderer:invalid-unit",`Supported units are: ${J.supportedAgeUnits.join(", ")}`);return{...a,layer:b}}async function ma(a){await r.processRegenerateParams(a,"regenerate-color-visual-variable");const b=await r.getRendererToUpdate(a);if("class-breaks"!==b?.type)throw new l("regenerate-color-visual-variable:invalid-parameters","Renderer must be a ClassBreaksRenderer to regenerate a color visual variable");
var c=b.authoringInfo;const d=c?.visualVariables.find(x=>"color"===x.type),e=b.visualVariables?.find(x=>"color"===x.type);if(!e)throw new l("regenerate-color-visual-variable:invalid-parameters","Renderer does not have a color visual variable");const {field:h,normalizationField:f,valueExpression:p,valueExpressionTitle:k}=e,{layer:q,forBinning:m,filter:n,view:t,signal:v}=a;c=await S({layer:q,field:h,valueExpression:p,valueExpressionTitle:k,normalizationField:f,theme:"univariate-color-size"===c?.type?
c?.univariateTheme:d?.theme,forBinning:m,filter:n,view:t,signal:v});return{...a,creatorParameters:c,renderer:b}}async function na(a){await r.processRegenerateParams(a,"regenerate-color-continuous-renderer");const b=await r.getRendererToUpdate(a);var c=r.getStyleType(b);if(!c||!["color-continuous","color-size"].includes(c))throw new l("regenerate-color-continuous-renderer:invalid-renderer","Renderer is invalid");const {authoringInfo:d,field:e,normalizationField:h,valueExpression:f,valueExpressionTitle:p}=
b;c=d?.visualVariables.find(w=>"color"===w.type)?.theme;const {layer:k,forBinning:q,filter:m,view:n,signal:t}=a,v=r.hasOutlineVV(b),x=r.hasScaleDependentSizeVV(b);c=await T({layer:k,field:e,valueExpression:f,valueExpressionTitle:p,normalizationField:h,theme:c,outlineOptimizationEnabled:v,sizeOptimizationEnabled:x,forBinning:q,filter:m,view:n,signal:t});return{...a,creatorParameters:c,renderer:b}}async function oa(a){await r.processRegenerateParams(a,"regenerate-color-class-breaks-renderer");const b=
await r.getRendererToUpdate(a);if("color-class-breaks"!==r.getStyleType(b))throw new l("regenerate-color-class-breaks-renderer:invalid-parameters","Renderer is invalid");const {authoringInfo:c,field:d,normalizationField:e,normalizationType:h,normalizationTotal:f,valueExpression:p,valueExpressionTitle:k}=b,{classificationMethod:q,standardDeviationInterval:m}=c;var n=b.classBreakInfos.length;const {layer:t,forBinning:v,filter:x,view:w,signal:y}=a,B=r.hasOutlineVV(b);n=await U({layer:t,field:d,valueExpression:p,
valueExpressionTitle:k,normalizationType:h,normalizationField:e,normalizationTotal:f,classificationMethod:q,standardDeviationInterval:m,numClasses:n,outlineOptimizationEnabled:B,forBinning:v,filter:x,view:w,signal:y});return{...a,creatorParameters:n,renderer:b}}async function pa(a){await r.processRegenerateParams(a,"regenerate-color-age-renderer");const b=await r.getRendererToUpdate(a);if("color-age"!==r.getStyleType(b))throw new l("regenerate-color-age-renderer:invalid-parameters","Renderer is invalid");
var {authoringInfo:c}=b,d=c?.visualVariables.find(t=>"color"===t.type);c=d.startTime;const e=d.endTime,h=d.units;d=d.theme;const {layer:f,filter:p,view:k,signal:q}=a,m=r.hasOutlineVV(b),n=r.hasScaleDependentSizeVV(b);c=await W({layer:f,startTime:c,endTime:e,unit:h,theme:d,outlineOptimizationEnabled:m,sizeOptimizationEnabled:n,filter:p,view:k,signal:q});return{...a,creatorParameters:c,renderer:b}}async function M(a,b){b=a.colorScheme;let c=null;var d=null,{view:e}=a;d=await g.getBasemapInfo(a.basemap,
e);c=null!=d.basemapId?d.basemapId:null;d=null!=d.basemapTheme?d.basemapTheme:null;if(b)return{scheme:A.cloneScheme(b),basemapId:c,basemapTheme:d};const h=a.theme||"high-to-low";if(e=A.getSchemes({theme:h,basemapTheme:d,geometryType:a.geometryType,worldScale:a.worldScale,view:e}))c=e.basemapId,d=e.basemapTheme,b=a.schemeId?A.getSchemeById({id:h+"/"+c+"/"+a.schemeId,geometryType:a.geometryType}):e.primaryScheme;return{scheme:b,basemapId:c,basemapTheme:d}}async function qa(a,b){b=await M({basemap:b.basemap,
colorScheme:b.colorScheme,geometryType:b.layer.geometryType,schemeId:"elevation"===b.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"});const c=b.scheme;if(!c)throw new l("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme");const d=D.createUniqueColors(c.colors,5);if(5>d.length)throw new l("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors");const e=g.getDefaultDataRange(a,!1,!0),
h=e?g.createDefaultStopValues(e[0],e[1],5):g.createStopValues(a);return{stops:I.createColorStops({values:h,isDate:!1,colors:d,labelIndexes:[0,2,4]}),basemapId:b.basemapId,basemapTheme:b.basemapTheme,statistics:a,defaultValuesUsed:!!e,colorScheme:A.cloneScheme(c)}}function X(a,b,c,d){c=g.getDataRange(a,b,c,!0);return{values:g.createDataValues(c,a,b,d),defaultValuesUsed:c.defaultValuesUsed}}async function ra(a,b,c,d){const {field:e,theme:h}=a;c=await M({basemap:a.basemap,theme:a.theme,geometryType:c,
colorScheme:a.colorScheme,worldScale:a.worldScale,view:a.view});const f=c.scheme;if(!f)throw new l("color-visual-variable:insufficient-info","Unable to find color scheme");const p=D.createUniqueColors(f.colors,5);if(5>p.length)throw new l("color-visual-variable:insufficient-info","Color scheme does not have enough colors");const k=f.id.includes("seq-"),{values:q,defaultValuesUsed:m}=X(b,h,d,k),n=D.createUniqueColors(p,5);d=new ha({field:e??void 0,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,
normalizationField:a.normalizationField,stops:q.map((t,v)=>new ia({value:t,color:n[v]})),legendOptions:ea.ensureClass(ja,a.legendOptions)});a=new fa({type:"color",minSliderValue:null!=a.minValue?a.minValue:b.min,maxSliderValue:null!=a.maxValue?a.maxValue:b.max,theme:f.theme});a=new Q({visualVariables:[a]});return{basemapId:c.basemapId,basemapTheme:c.basemapTheme,visualVariable:d,statistics:b,defaultValuesUsed:m,colorScheme:A.cloneScheme(f),authoringInfo:a}}async function Y(a,b,c,d,e,h,f){const p=
await P.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),{field:k,defaultSymbolEnabled:q}=f,m=A.cloneScheme(a.colorScheme),n=b?.opacity,t=[a.visualVariable.clone()];b?.visualVariables?.length&&t.push(...b.visualVariables.map(v=>v.clone()));c?.minSize&&t.push(c.minSize);return{renderer:new O({classBreakInfos:[{minValue:-Z,maxValue:Z,symbol:g.createSymbol(h,{type:f.symbolType,color:m.noDataColor,size:g.getSymbolSizeFromScheme(m,h),outline:g.getSymbolOutlineFromScheme(m,h,n),meshInfo:{colorMixMode:f.colorMixMode,
edgesType:f.edgesType}})}],defaultLabel:q?p.other:null,defaultSymbol:q?g.createSymbol(h,{type:f.symbolType,color:m.noDataColor,size:g.getSymbolSizeFromScheme(m,h),outline:g.getSymbolOutlineFromScheme(m,h,n),meshInfo:{colorMixMode:f.colorMixMode,edgesType:f.edgesType}}):null,field:k,normalizationType:d,normalizationField:e,valueExpression:f.valueExpression,valueExpressionTitle:f.valueExpressionTitle,visualVariables:t,authoringInfo:a.authoringInfo&&a.authoringInfo.clone()}),visualVariable:a.visualVariable.clone(),
statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,colorScheme:A.cloneScheme(a.colorScheme),basemapId:a.basemapId,basemapTheme:a.basemapTheme}}async function G(a){a=await S(a);const {view:b,field:c,valueExpression:d,minValue:e,maxValue:h,layer:f,normalizationField:p,signal:k,filter:q,statistics:m}=a,n=await (m??g.getSummaryStatistics({layer:f,field:c,valueExpression:d,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:p?"field":void 0,normalizationField:p,minValue:e,maxValue:h,
filter:q,view:b,signal:k})),t=c&&"function"!==typeof c?f.getField(c):null;return ra(a,n,f.geometryType,C.isAnyDateField(t))}async function aa(a){const {view:b,filter:c,creatorParameters:d,renderer:e,signal:h}=await ma(a);a=e.authoringInfo?.clone();const f=a?.visualVariables.find(y=>"color"===y.type),p=e.visualVariables?.find(y=>"color"===y.type),{field:k,normalizationField:q,valueExpression:m,theme:n,layer:t}=d,v=await g.getSummaryStatistics({layer:t,field:k,valueExpression:m,normalizationField:q,
filter:c,view:b,signal:h}),x=k&&"function"!==typeof k?t.getField(k):null,{values:w}=X(v,n,C.isAnyDateField(x),"high-to-low"===n);if(w.length!==p.stops.length)throw new l("regenerate-color-visual-variable:invalid-parameters","Visual variable is invalid");p.stops.forEach((y,B)=>y.value=w[B]);f&&(f.minSliderValue=v.min,f.maxSliderValue=v.max);return{visualVariable:p,authoringInfo:a,statistics:v}}function sa(a,b){const c=a.colorsForClassBreaks;if(c?.length)for(const d of c)if(d.numClasses===b)return da.clone(d.colors);
return D.createUniqueColors(a.colors,b)}async function ta(a,b){var c=await P.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");const d=a.defaultSymbolEnabled,e=a.layer.geometryType,h=a.classificationMethod,f="standard-deviation"===h,p=await M({basemap:a.basemap,geometryType:e,theme:f?"above-and-below":null,colorScheme:a.colorScheme,worldScale:!!a.symbolType?.includes("3d-volumetric"),view:a.view}),k=p.scheme,{result:q,outlineResult:m}=b,n=q.classBreakInfos,t=a.normalizationType;if(!k)throw new l("color-class-breaks-renderer:insufficient-info",
"Unable to find color scheme");const v=sa(k,n.length);if(!v||v.length!==n.length)throw new l("color-class-breaks-renderer:insufficient-info","Color scheme does not have enough colors");const x=m?.opacity;c=new O({classBreakInfos:n.map((w,y)=>({minValue:w.minValue,maxValue:w.maxValue,symbol:g.createSymbol(e,{type:a.symbolType,color:v[y],size:g.getSymbolSizeFromScheme(k,e),outline:g.getSymbolOutlineFromScheme(k,e,x),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}}),label:w.label})),defaultLabel:d?
c.other:null,defaultSymbol:d?g.createSymbol(e,{type:a.symbolType,color:k.noDataColor,size:g.getSymbolSizeFromScheme(k,e),outline:g.getSymbolOutlineFromScheme(k,e,x),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}}):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:t,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===t?q.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new Q({type:"class-breaks-color",
classificationMethod:h,standardDeviationInterval:a.standardDeviationInterval})});f||I.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,classificationMethod:h,normalizationType:t,round:!0});m?.visualVariables?.length&&(c.visualVariables=m.visualVariables.map(w=>w.clone()));return{renderer:c,colorScheme:A.cloneScheme(k),classBreaksResult:q,defaultValuesUsed:b.defaultValuesUsed,basemapId:p.basemapId,basemapTheme:p.basemapTheme}}const Z=2**53-1;z.createAgeRenderer=async function(a){var b=await W(a);
const {defaultSymbolEnabled:c,view:d,startTime:e,endTime:h,symbolType:f,colorMixMode:p,edgesType:k,minValue:q,maxValue:m,signal:n,filter:t}=b;a=b.layer;const [v,x,w]=await Promise.all([b.unit?{unit:b.unit,statistics:null}:R({view:d,layer:a,startTime:e,endTime:h,minValue:q,maxValue:m,signal:n,filter:t}),b.outlineOptimizationEnabled?E({layer:a,view:d,signal:n,filter:t}).catch(g.errorCallback):null,b.sizeOptimizationEnabled?F({layer:a,view:d,signal:n,filter:t}).catch(g.errorCallback):null]),{unit:y,
statistics:B}=v,{valueExpression:H,title:N}=await g.getTitleAndExpressionForAgeRenderer(b,y);b=await G(L({layer:a,basemap:b.basemap,valueExpression:H,symbolType:f,statistics:B,legendOptions:{title:N},colorScheme:b.colorScheme,theme:b.theme,view:d,minValue:b.minValue,maxValue:b.maxValue,filter:t,signal:n}));a=await Y(b,x,w,null,null,a.geometryType,{layer:a,valueExpression:H,defaultSymbolEnabled:c,symbolType:f,colorMixMode:p,edgesType:k});a.renderer.authoringInfo?.visualVariables?.forEach(ua=>g.updateAgeRendererAuthoringInfoVV(ua,
e,h,y));return{...a,unit:y}};z.createClassBreaksRenderer=async function(a){a=await U(a);const b=await g.getClassBreaks(V(a),a.outlineOptimizationEnabled);return ta(a,b)};z.createContinuousRenderer=async function(a){a=await T(a);const {layer:b,view:c,signal:d,filter:e}=a,[h,f,p]=await Promise.all([G(L(a)),a.outlineOptimizationEnabled?E({layer:b,view:c,signal:d,filter:e}).catch(g.errorCallback):null,a.sizeOptimizationEnabled?F({layer:b,view:c,signal:d,filter:e}).catch(g.errorCallback):null]),k=a.normalizationField;
return Y(h,f,p,k?"field":void 0,k,b.geometryType,a)};z.createPCContinuousRenderer=async function(a){a=await la(a);var b=a.statistics??await g.getSummaryStatistics({layer:a.layer,field:a.field,signal:a.signal});b=await qa(b,a);return{renderer:new ca({field:a.field,pointsPerInch:a.density??void 0,pointSizeAlgorithm:g.getPointSizeAlgorithm(a.size),stops:b.stops}),basemapId:b.basemapId,basemapTheme:b.basemapTheme,statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:b.colorScheme}};
z.createPCTrueColorRenderer=function(a){return ka(a).then(b=>({renderer:new ba({field:"RGB",pointsPerInch:b.density??void 0,pointSizeAlgorithm:g.getPointSizeAlgorithm(b.size)})}))};z.createVisualVariable=G;z.regenerateAgeRenderer=async function(a){const {renderer:b,creatorParameters:c}=await pa(a),{layer:d,outlineOptimizationEnabled:e,sizeOptimizationEnabled:h,startTime:f,endTime:p,theme:k,view:q,signal:m,filter:n}=c,[t,v,x]=await Promise.all([R({view:q,layer:d,startTime:f,endTime:p,signal:m,filter:n}),
e?E({layer:d,view:q,signal:m,filter:n}).catch(g.errorCallback):null,h?F({layer:d,view:q,signal:m,filter:n}).catch(g.errorCallback):null]),{unit:w,statistics:y}=t,{valueExpression:B,title:H}=await g.getTitleAndExpressionForAgeRenderer(c,w);a=await G(L({layer:d,valueExpression:B,statistics:y,legendOptions:{title:H},theme:k,view:q,filter:n,signal:m}));r.spliceVisualVariables(b,a.visualVariable,r.findColorVVIndex);r.spliceVisualVariables(b,v?.visualVariables,r.findOutlineVVIndex);r.spliceVisualVariables(b,
x?.minSize,r.findScaleDependentSizeVVIndex);b.authoringInfo=a.authoringInfo.clone();b.authoringInfo?.visualVariables?.forEach(N=>g.updateAgeRendererAuthoringInfoVV(N,f,p,w));return{renderer:b}};z.regenerateClassBreaksRenderer=async function(a){const {renderer:b,creatorParameters:c}=await oa(a),{normalizationType:d,outlineOptimizationEnabled:e,classificationMethod:h}=c,{result:f,outlineResult:p}=await g.getClassBreaks(V(c),e),k=f.classBreakInfos;if(c.numClasses!==k.length)throw new l("regenerate-color-class-breaks-renderer:insufficient-info",
"The number of class breaks generated does not match the number of class breaks in the renderer.");b.classBreakInfos.forEach((q,m)=>{q.minValue=k[m].minValue;q.maxValue=k[m].maxValue;q.label=k[m].label});b.normalizationTotal="percent-of-total"===d?f.normalizationTotal:void 0;"standard-deviation"!==h&&I.setLabelsForClassBreaks({classBreakInfos:b.classBreakInfos,classificationMethod:h,normalizationType:d,round:!0});r.spliceVisualVariables(b,p?.visualVariables,r.findOutlineVVIndex);return{renderer:b}};
z.regenerateContinuousRenderer=async function(a){const {renderer:b,view:c,signal:d,filter:e,creatorParameters:h}=await na(a),{layer:f,outlineOptimizationEnabled:p,sizeOptimizationEnabled:k}=h,[q,m,n]=await Promise.all([aa(a),p?E({layer:f,view:c,signal:d,filter:e}).catch(g.errorCallback):null,k?F({layer:f,view:c,signal:d,filter:e}).catch(g.errorCallback):null]);r.spliceVisualVariables(b,q.visualVariable,r.findColorVVIndex);r.spliceVisualVariables(b,m?.visualVariables,r.findOutlineVVIndex);r.spliceVisualVariables(b,
n?.minSize,r.findScaleDependentSizeVVIndex);r.updateAuthoringInfoVisualVariable(b,q.authoringInfo,"color");return{renderer:b}};z.regenerateVisualVariable=aa;Object.defineProperty(z,Symbol.toStringTag,{value:"Module"})});