// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../core/Logger ../../core/colorUtils ../../core/Error ../../core/screenUtils ../../core/accessorSupport/ensureType ../../intl/messages ../../renderers/support/AuthoringInfo ../../renderers/support/AuthoringInfoSizeStop ../../renderers/support/AuthoringInfoVisualVariable ../../renderers/support/utils ../../renderers/visualVariables/SizeVariable ../../renderers/visualVariables/support/castSizeVariable ../../renderers/visualVariables/support/SizeVariableLegendOptions ../../renderers/visualVariables/support/sizeVariableUtils ../heuristics/ageUnit ../heuristics/outline ../heuristics/referenceSize ../heuristics/sizeRange ./support/referenceSizeUtils ./support/regenerateUtils ./support/utils ../statistics/support/ageUtils ../support/binningUtils ../support/utils ../support/adapters/support/layerUtils ../symbology/size ../../symbols/support/utils".split(" "),
function(D,R,Ca,Da,Ea,Fa,Ga,Ha,Ia,Ja,Ka,pa,n,S,qa,T,L,M,U,V,N,F,ra,sa,W,J,X,Y,E,u,q,O,P,H,A,G,Z){async function aa(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new n("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new n("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");if("reference-size"===
a.theme&&!a.view&&!a.field)throw new n("size-visual-variable:missing-parameters","'view' and 'field' are required when 'theme' is 'reference-size'");if("reference-size"===a.theme&&a.valueExpression)throw new n("size-visual-variable:missing-parameters","'valueExpression' is not supported when 'theme' is 'reference-size'");a.forBinning&&P.verifyBinningParams(a,"size-visual-variable");const b={...a};var c=a.forBinning?A.binningCapableLayerTypes:A.featureCapableLayerTypes;const d=A.createLayerAdapter(b.layer,
c,a.forBinning);if(!d)throw new n("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+A.getLayerTypeLabels(c).join(", "));"height"===b.axis&&(b.sizeOptimizationEnabled=!1);await d.load(null!=b.signal?{signal:b.signal}:null);c=d.geometryType;if("mesh"===c)throw new n("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(b.worldScale){if("polyline"===c||"polygon"===c)throw new n("size-visual-variable:not-supported",
"'worldScale' sizing is not supported for polyline and polygon layers");if(!b.view||"3d"!==b.view.type)throw new n("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true");}if("reference-size"===b.theme&&!a.forBinning&&"polygon"!==c)throw new n("size-visual-variable:invalid-parameters","Reference size is only supported for polygon layers");a=await H.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});
if(a=q.verifyBasicFieldValidity(d,a,"size-visual-variable:invalid-parameters"))throw a;await ba(b);return{...b,layer:d}}async function ca(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new n("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new n("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");
a.forBinning&&P.verifyBinningParams(a,"size-continuous-renderer");const b={...a};b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled??(b.defaultSymbolEnabled=!0);var c=a.forBinning?A.binningCapableLayerTypes:A.featureCapableLayerTypes;const d=A.createLayerAdapter(b.layer,c,a.forBinning);if(!d)throw new n("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+A.getLayerTypeLabels(c).join(", "));await d.load(null!=b.signal?{signal:b.signal}:null);c=d.geometryType;const e=
b.symbolType.includes("3d");b.outlineOptimizationEnabled="reference-size"!==b.theme&&"polygon"===c&&b.outlineOptimizationEnabled;if("mesh"===c)throw new n("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(e&&("polyline"===c||"polygon"===c))throw new n("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(b.symbolType.includes("3d-volumetric")&&(!b.view||"3d"!==b.view.type))throw new n("size-continuous-renderer:invalid-parameters",
"'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");if("reference-size"===b.theme&&!a.forBinning&&"polygon"!==c)throw new n("size-continuous-renderer:invalid-parameters","Reference size is only supported for polygon layers");a=await H.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});if(a=q.verifyBasicFieldValidity(d,a,"size-continuous-renderer:invalid-parameters"))throw a;
await ba(b);return{...b,layer:d}}async function ba(a){const b=a.layer;if(("polygon"===b.geometryType||a.forBinning)&&a.view&&a.field&&!a.valueExpression&&(!a.theme||"reference-size"===a.theme)){try{a.referenceSizeResult=a.referenceSizeResult??await X({layer:b,view:a.view,filter:a.filter,forBinning:a.forBinning,signal:a.signal})}catch{}!a.theme&&a.referenceSizeResult?.isGrid&&(a.theme="reference-size");a.referenceSizeOptions?.symbolStyle||(a.referenceSizeOptions?a.referenceSizeOptions.symbolStyle=
"circle":a.referenceSizeOptions={symbolStyle:"circle"})}}async function ta(a){if(!(a&&a.layer&&a.view&&a.sizeStops))throw new n("update-renderer-with-reference-size:missing-parameters","'layer', 'view and 'sizeStops' parameters are required");const {view:b,forBinning:c}=a;var d=a.forBinning?A.binningCapableLayerTypes:A.featureCapableLayerTypes;const e=A.createLayerAdapter(a.layer,d,a.forBinning);if(!e)throw new n("update-renderer-with-reference-size:invalid-parameters","'layer' must be one of these types: "+
A.getLayerTypeLabels(d).join(", "));var g=e.layer;d=a.renderer;if(!d)if(a.forBinning){if(!("featureReduction"in g&&g.featureReduction&&"renderer"in g.featureReduction&&g.featureReduction.renderer)||"class-breaks"!==g.featureReduction.renderer.type&&"unique-value"!==g.featureReduction.renderer.type)throw new n("update-renderer-with-reference-size:invalid-parameters","Feature reduction renderer is not supported");d=g.featureReduction.renderer}else{if(!("renderer"in g&&g.renderer)||"class-breaks"!==
g.renderer.type&&"unique-value"!==g.renderer.type)throw new n("update-renderer-with-reference-size:invalid-parameters","Renderer is not supported");d=g.renderer}const l=d.authoringInfo;if(!l||!l?.visualVariables?.some(k=>"reference-size"===k.theme))throw new n("update-renderer-with-reference-size:invalid-parameters","'renderer.authoringInfo.visualVariables' should have an authoringInfoVisualVariable with 'theme' set to 'reference-size'");g=a.isGrid??(await X({view:b,layer:g,forBinning:c}))?.isGrid;
return{...a,isGrid:g,renderer:d,layer:e}}async function da(a){if(!a||!a.layer||!a.field&&!a.valueExpression)throw new n("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(a.valueExpression&&!a.view)throw new n("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");a.forBinning&&P.verifyBinningParams(a,"size-class-breaks-renderer");const b={...a};b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled??
(b.defaultSymbolEnabled=!0);b.classificationMethod??(b.classificationMethod="equal-interval");b.normalizationType=H.getNormalizationType(b);var c=a.forBinning?A.binningCapableLayerTypes:A.featureCapableLayerTypes;a=A.createLayerAdapter(b.layer,c,a.forBinning);if(!a)throw new n("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+A.getLayerTypeLabels(c).join(", "));if(!(null!=b.minValue&&null!=b.maxValue||null==b.minValue&&null==b.maxValue))throw new n("size-class-breaks-renderer:missing-parameters",
"Both 'minValue' and 'maxValue' are required when specifying custom data range");await a.load(null!=b.signal?{signal:b.signal}:null);c=a.geometryType;const d=b.symbolType.includes("3d");b.outlineOptimizationEnabled="polygon"===c?b.outlineOptimizationEnabled:!1;if("mesh"===c)throw new n("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(d&&("polyline"===c||"polygon"===c))throw new n("size-class-breaks-renderer:not-supported",
"3d symbols are not supported for polyline and polygon layers");if(b.symbolType.includes("3d-volumetric")&&(!b.view||"3d"!==b.view.type))throw new n("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");c=await H.getFieldsList({field:b.field,normalizationField:b.normalizationField});if(c=q.verifyBasicFieldValidity(a,c,"size-class-breaks-renderer:invalid-parameters"))throw c;return{...b,
layer:a}}function ea(a){a={...a};delete a.basemap;delete a.sizeScheme;delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}function Q(a){a={...a};const b=!!a.symbolType?.includes("3d-volumetric");if(a.worldScale=b)a.axis="3d-volumetric-uniform"===a.symbolType?"all":"height";delete a.symbolType;delete a.defaultSymbolEnabled;return a}async function fa(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))throw new n("size-age-renderer:missing-parameters",
"'layer', 'view', 'startTime', 'endTime' parameters are required");a={...a};a.symbolType??(a.symbolType="2d");a.defaultSymbolEnabled??(a.defaultSymbolEnabled=!0);const b=A.createLayerAdapter(a.layer,A.featureCapableLayerTypes);if(!b)throw new n("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+A.getLayerTypeLabels(A.featureCapableLayerTypes).join(", "));await b.load(null!=a.signal?{signal:a.signal}:null);var c=b.geometryType;const d=a.symbolType.includes("3d");a.outlineOptimizationEnabled=
"polygon"===c?a.outlineOptimizationEnabled:!1;if("mesh"===c)throw new n("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(d&&("polyline"===c||"polygon"===c))throw new n("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new n("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");
if(c=O.verifyDates(b,a.startTime,a.endTime,"size-age-renderer:invalid-parameters"))throw c;if(a.unit&&!O.supportedAgeUnits.includes(a.unit))throw new n("size-age-renderer:invalid-unit",`Supported units are: ${O.supportedAgeUnits.join(", ")}`);return{...a,layer:b}}async function ua(a){u.processRegenerateParams(a,"regenerate-size-visual-variables");const b=await u.getRendererToUpdate(a);var c=u.getStyleType(b);if(!c||!["size-continuous","univariate-color-size","color-size","relationship-size","type-size"].includes(c))throw new n("regenerate-size-visual-variables:invalid-parameters",
"Renderer is invalid");var d=u.getAuthoringInfoVisualVariable(b,"size");if(!d)throw new n("regenerate-size-visual-variables:invalid-parameters","Renderer does not have a size visual variable authoringInfo");c=d.theme;var e=b.visualVariables?.find(u.isSizeVV);if(!e&&"reference-size"!==c)throw new n("regenerate-size-visual-variables:invalid-parameters","Renderer does not have a size visual variable");let g=d.field;d=d.normalizationField;let l=null,k=null;g||(e?.field?(g=e.field,d=e.normalizationField):
b.field?(g=b.field,d=b.normalizationField):(l=e?.valueExpression??b.valueExpression,k=e?.valueExpressionTitle??b.valueExpressionTitle));const {layer:p,forBinning:h,filter:f,view:m,signal:r}=a;e=u.hasScaleDependentSizeVV(b);c=await aa({layer:p,field:g,valueExpression:l,valueExpressionTitle:k,normalizationField:d,theme:c,sizeOptimizationEnabled:e,forBinning:h,filter:f,view:m,signal:r});return{...a,creatorParameters:c,renderer:b}}async function va(a){u.processRegenerateParams(a,"regenerate-size-continuous-renderer");
const b=await u.getRendererToUpdate(a);var c=u.getStyleType(b);if(!c||!["size-continuous","univariate-color-size"].includes(c))throw new n("regenerate-size-continuous-renderer:invalid-parameters","Renderer is invalid");const {authoringInfo:d,field:e,normalizationField:g,valueExpression:l,valueExpressionTitle:k}=b;c=(d?.visualVariables.find(y=>"size"===y.type)).theme;const {layer:p,forBinning:h,filter:f,view:m,signal:r}=a,v=u.hasOutlineVV(b),t=u.hasScaleDependentSizeVV(b);c=await ca({layer:p,field:e,
valueExpression:l,valueExpressionTitle:k,normalizationField:g,theme:c,outlineOptimizationEnabled:v,sizeOptimizationEnabled:t,forBinning:h,filter:f,view:m,signal:r});return{...a,creatorParameters:c,renderer:b}}async function wa(a){await u.processRegenerateParams(a,"regenerate-size-class-breaks-renderer");const b=await u.getRendererToUpdate(a);if("size-class-breaks"!==u.getStyleType(b))throw new n("regenerate-size-class-breaks-renderer:invalid-parameters","Renderer is invalid");const {authoringInfo:c,
field:d,normalizationField:e,normalizationType:g,normalizationTotal:l,valueExpression:k,valueExpressionTitle:p}=b,{classificationMethod:h,standardDeviationInterval:f}=c;var m=b.classBreakInfos.length;const {layer:r,forBinning:v,filter:t,view:y,signal:w}=a,x=u.hasOutlineVV(b);m=await da({layer:r,field:d,valueExpression:k,valueExpressionTitle:p,normalizationType:g,normalizationField:e,normalizationTotal:l,classificationMethod:h,standardDeviationInterval:f,numClasses:m,outlineOptimizationEnabled:x,forBinning:v,
filter:t,view:y,signal:w});return{...a,creatorParameters:m,renderer:b}}async function xa(a){await u.processRegenerateParams(a,"regenerate-size-age-renderer");const b=await u.getRendererToUpdate(a);if("size-age"!==u.getStyleType(b))throw new n("regenerate-size-age-renderer:invalid-parameters","Renderer is invalid");var {authoringInfo:c}=b,d=c?.visualVariables.find(r=>"size"===r.type);c=d.startTime;const e=d.endTime,g=d.units;d=d.theme;const {layer:l,filter:k,view:p,signal:h}=a,f=u.hasOutlineVV(b),
m=u.hasScaleDependentSizeVV(b);c=await fa({layer:l,startTime:c,endTime:e,unit:g,theme:d,outlineOptimizationEnabled:f,sizeOptimizationEnabled:m,filter:k,view:p,signal:h});return{...a,creatorParameters:c,renderer:b}}async function ha(a){let b=a.sizeScheme,c=null;var d=null;d=await q.getBasemapInfo(a.basemap,a.view);c=null!=d.basemapId?d.basemapId:null;d=null!=d.basemapTheme?d.basemapTheme:null;if(b)return{scheme:G.cloneScheme(b),basemapId:c,basemapTheme:d};if(a=G.getSchemes({basemapTheme:d,geometryType:a.geometryType,
worldScale:a.worldScale,view:a.view}))b=a.primaryScheme,c=a.basemapId,d=a.basemapTheme;return{scheme:b,basemapId:c,basemapTheme:d}}function ia(a,b){switch(b){case "point":case "multipoint":return[F.castSizeFromStringOrNumber(a.minSize),F.castSizeFromStringOrNumber(a.maxSize)];case "polyline":return[F.castSizeFromStringOrNumber(a.minWidth),F.castSizeFromStringOrNumber(a.maxWidth)];case "polygon":return[F.castSizeFromStringOrNumber(a.marker.minSize),F.castSizeFromStringOrNumber(a.marker.maxSize)]}}
function ja(a,b){a.transformationType===sa.TransformationType.ClampedLinear&&"below"===b&&a.flipSizes()}async function ya(a,b,c,d,e){return"reference-size"===c&&b?[1,b.size]:a?[a.minSize,a.maxSize]:ia(d,e)}function ka(a,b){if("reference-size"===b.theme&&null!=a.min&&null!=a.max&&null!=a.avg&&null!=a.stddev){b=a.avg;const g=a.min;var c=a.max;a=a.stddev;const l=0!==b?a/b:0,k=0<g&&1>g&&2>c&&.5>l;c=0<g&&100>g&&200>c&&.5>l;return{minDataValue:k?0:c?0:g,maxDataValue:k?1:c?100:b+2*a,defaultValuesUsed:!1}}const {theme:d,
field:e}=b;b=b.layer;b=e&&"function"!==typeof e?b.getField(e):null;b=H.isAnyDateField(b);return q.getDataRange(a,d,b,"above"===d||"below"===d)}async function za(a,b,c,d){const {theme:e,field:g,normalizationField:l,minValue:k,maxValue:p,axis:h}=a;var f=a.layer.geometryType;const m=await ha({basemap:a.basemap,geometryType:f,sizeScheme:a.sizeScheme,worldScale:a.worldScale,view:a.view}),r=m.scheme;if(!r)throw new n("size-visual-variable:insufficient-info","Unable to find size scheme");var v=await ya(c,
d,e,r,f);const {minDataValue:t,maxDataValue:y,defaultValuesUsed:w}=ka(b,a);c=[];var x="height"===h;f=x?h:void 0;const z=v[0];v=v[1];x&&"number"===typeof z&&"number"===typeof v&&(x=q.getSizeRangeForAxis({minSize:z,maxSize:v},f),c.push(new N({axis:"width-and-depth",minSize:x.minSize})),v=x.maxSize);f=new N({field:g??void 0,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,valueUnit:"unknown",normalizationField:l,axis:f,minSize:z,maxSize:v,minDataValue:t,maxDataValue:y,legendOptions:qa.ensureClass(ra,
a.legendOptions)});ja(f,e);c.unshift(f);a="reference-size"===e?new U({type:"size",field:a.field,normalizationField:a.normalizationField,sizeStops:E.getReferenceSizeStops(f).map(({label:C,size:B,value:I})=>new M({label:C,size:B,value:I})),theme:e,referenceSizeScale:d?.isGrid||a.sizeOptimizationEnabled?a?.view?.scale:void 0,referenceSizeSymbolStyle:a.referenceSizeOptions?.symbolStyle,minSliderValue:null!=k?k:b.min,maxSliderValue:null!=p?p:b.max}):new U({type:"size",theme:e,minSliderValue:null!=k?k:
b.min,maxSliderValue:null!=p?p:b.max});a=new L({visualVariables:[a]});return{basemapId:m.basemapId,basemapTheme:m.basemapTheme,visualVariables:c,statistics:b,isGrid:d?.isGrid,defaultValuesUsed:w,sizeScheme:G.cloneScheme(r),authoringInfo:a}}async function la(a,b,c,d,e){const g=await T.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),l=e.field,k=e.layer.geometryType,p=e.defaultSymbolEnabled;var h=G.cloneScheme(a.sizeScheme),f="polygon"===k;const m=f?h.marker:h;h=f?h.background:null;f=f?"point":
k;const r=b?.opacity,v=a.isGrid,t="reference-size"===e.theme,y=t?[]:a.visualVariables.map(w=>w.clone());b?.visualVariables?.length&&y.push(...b.visualVariables.map(w=>w.clone()));b=t?E.createPrimitiveOverrides({view:e.view,field:l,normalizationField:d,sizeStops:E.getReferenceSizeStops(a.visualVariables[0]),sizeByScaleEnabled:v||!!e.sizeOptimizationEnabled}):null;return{renderer:new R({backgroundFillSymbol:!v&&h?q.createSymbol(k,{type:e.symbolType,color:h.color,outline:q.getSymbolOutlineFromScheme(h,
k,r)}):null,classBreakInfos:[{minValue:-ma,maxValue:ma,symbol:b?E.createReferenceSizeSymbol({type:e.referenceSizeOptions?.symbolStyle||"circle",color:m.color,primitiveOverrides:b}):q.createSymbol(f,{type:e.symbolType,color:m.color,size:q.getSymbolSizeFromScheme(m,f),outline:q.getSymbolOutlineFromScheme(m,f,r)})}],defaultLabel:p?g.other:null,defaultSymbol:p&&!t?q.createSymbol(f,{type:e.symbolType,color:m.noDataColor,size:q.getSymbolSizeFromScheme(m,f,!0),outline:q.getSymbolOutlineFromScheme(m,f,r)}):
null,field:l,normalizationField:d,normalizationType:c,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,visualVariables:y,authoringInfo:a.authoringInfo?.clone()}),visualVariables:a.visualVariables.map(w=>w.clone()),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,isGrid:v,sizeScheme:G.cloneScheme(a.sizeScheme),basemapId:a.basemapId,basemapTheme:a.basemapTheme}}function Aa(a,b){const c=S.toPt(a.minSize);a=(S.toPt(a.maxSize)-c)/(4<=b?b-1:b);const d=[];for(let e=
0;e<b;e++)d.push(c+a*e);return d}async function Ba(a,b){var c=await T.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");const d=a.defaultSymbolEnabled,e=a.layer.geometryType;var g="polygon"===e;const l=a.symbolType?.includes("3d-volumetric"),k=await ha({basemap:a.basemap,geometryType:e,sizeScheme:a.sizeScheme,worldScale:l,view:a.view}),p=k.scheme,{result:h,outlineResult:f}=b,m=h?.classBreakInfos??[],r=a.classificationMethod,v=a.normalizationType,t=g?p.marker:p,y=g?p.background:null,w=g?"point":
e;g=ia(t,w);const x=l?q.getSizeRangeForAxis({minSize:g[0],maxSize:g[1]},"height"):null,z=Aa({minSize:g[0],maxSize:x?x.maxSize:g[1]},m.length),C=f?.opacity;c=new R({backgroundFillSymbol:y&&q.createSymbol(e,{type:a.symbolType,color:y.color,outline:q.getSymbolOutlineFromScheme(y,e,C)}),classBreakInfos:m.map((B,I)=>({minValue:B.minValue,maxValue:B.maxValue,symbol:q.createSymbol(w,{type:a.symbolType,color:t.color,size:z[I],widthAndDepth:x?.minSize,outline:q.getSymbolOutlineFromScheme(t,w,C)}),label:B.label})),
defaultLabel:d?c.other:null,defaultSymbol:d?q.createSymbol(w,{type:a.symbolType,color:t.noDataColor,size:q.getSymbolSizeFromScheme(t,w,!0),widthAndDepth:x?.minSize,outline:q.getSymbolOutlineFromScheme(t,w,C)}):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:v,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===v?h?.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new L({type:"class-breaks-size",
classificationMethod:r,standardDeviationInterval:a.standardDeviationInterval})});"standard-deviation"!==r&&V.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,classificationMethod:r,normalizationType:v,round:!0});f?.visualVariables?.length&&(c.visualVariables=f.visualVariables.map(B=>B.clone()));return{renderer:c,sizeScheme:G.cloneScheme(p),classBreaksResult:h,defaultValuesUsed:!!b.defaultValuesUsed,basemapId:k.basemapId,basemapTheme:k.basemapTheme}}async function K(a){a=await aa(a);const {view:b,
field:c,valueExpression:d,minValue:e,maxValue:g,layer:l,normalizationField:k,signal:p,statistics:h,filter:f}=a,[m,r]=await Promise.all([h??q.getSummaryStatistics({layer:l,field:c,valueExpression:d,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:k?"field":void 0,normalizationField:k,filter:f,minValue:e,maxValue:g,view:b,signal:p}),a.sizeOptimizationEnabled?Y({view:b,layer:l,signal:p,filter:f}).catch(q.errorCallback):null]);return za(a,m,r,a.referenceSizeResult)}async function na(a){const {view:b,
filter:c,renderer:d,signal:e,creatorParameters:g}=await ua(a),{field:l,normalizationField:k,valueExpression:p,theme:h,layer:f,sizeOptimizationEnabled:m,referenceSizeResult:r,valueExpressionTitle:v}=g,[t,y]=await Promise.all([q.getSummaryStatistics({layer:f,field:l,valueExpression:p,normalizationField:k,normalizationType:k?"field":void 0,filter:c,view:b,signal:e}),m?Y({view:b,layer:f,signal:e,filter:c}).catch(q.errorCallback):null]);a="reference-size"===h&&r?[1,r.size]:y?[y.minSize,y.maxSize]:null;
const {minDataValue:w,maxDataValue:x}=ka(t,{theme:h,layer:f,field:l});var z=d.visualVariables?.find(u.isSizeVV);z=(z?.stops?null:z)??new N({field:l??void 0,valueExpression:p,valueExpressionTitle:v,valueUnit:"unknown",normalizationField:k});a&&(z.minSize=a[0],z.maxSize=a[1]);z.minDataValue=w;z.maxDataValue=x;ja(z,h);a=u.getAuthoringInfoVisualVariable(d,"size");a.minSliderValue=t.min;a.maxSliderValue=t.max;"reference-size"===h&&(a.sizeStops=E.getReferenceSizeStops(z).map(({label:C,size:B,value:I})=>
new M({label:C,size:B,value:I})),a.referenceSizeScale=r?.isGrid||m?b?.scale:void 0);return{visualVariables:"reference-size"===h?[]:[z],isGrid:!!r?.isGrid,authoringInfo:d.authoringInfo?.clone(),statistics:t}}async function oa(a){const {layer:b,referenceSizeOptions:c,renderer:d,sizeScheme:e,sizeStops:g,typeScheme:l,view:k,isGrid:p}=await ta(a),h=d.clone();h.authoringInfo??(h.authoringInfo=new L);const f=h.authoringInfo.visualVariables.find(w=>"reference-size"===w.theme),m=a.field??f?.field,r=a.normalizationField??
f?.normalizationField;if(!m)throw new n("update-renderer-with-reference-size:invalid-parameters","'field' parameter or authoring info with 'field' is required.");const v=E.createPrimitiveOverrides({view:k,field:m,normalizationField:r,sizeStops:g,sizeByScaleEnabled:p||!!a.sizeOptimizationEnabled}),t=c?.symbolStyle||f?.referenceSizeSymbolStyle||"circle";if("class-breaks"===h.type){const w="polygon"===("geometryType"in b?b.geometryType:null)&&e&&"marker"in e?e.marker:null;h.classBreakInfos.forEach(x=>
{const z=w?.color??Z.getColorFromSymbol(x.symbol,1);"cim"===x.symbol.type?E.updateReferenceSizeSymbol(x.symbol,{type:t,color:z,primitiveOverrides:v}):z&&(x.symbol=E.createReferenceSizeSymbol({type:t,color:z,primitiveOverrides:v}))})}else if("unique-value"===h.type){const w=h.uniqueValueGroups;var y="polygon"===("geometryType"in b?b.geometryType:null)&&l&&"colors"in l?l.colors:null;y=y?pa.createUniqueColors(y,h.uniqueValueInfos?.length??0):null;let x=0;if(w){for(const z of w)for(const C of z.classes??
[]){const B=y?y[x]:Z.getColorFromSymbol(C.symbol,1);"cim"===C.symbol?.type?E.updateReferenceSizeSymbol(C.symbol,{type:t,color:B,primitiveOverrides:v}):B&&(C.symbol=E.createReferenceSizeSymbol({type:t,color:B,primitiveOverrides:v}));x++}h.uniqueValueGroups=w}}f&&(f.field=m,f.normalizationField=r,f.sizeStops=g.map(({label:w,size:x,value:z})=>new M({label:w,size:x,value:z})),f.referenceSizeScale=p||a.sizeOptimizationEnabled?k.scale:void 0,f.referenceSizeSymbolStyle=t);return h}const ma=2**53-1;D.createAgeRenderer=
async function(a){a=await fa(a);const {defaultSymbolEnabled:b,view:c,startTime:d,endTime:e,symbolType:g,minValue:l,maxValue:k,signal:p,filter:h,layer:f}=a,[m,r]=await Promise.all([a.unit?{unit:a.unit,statistics:null,valueExpression:null}:await W({view:c,layer:f,startTime:d,endTime:e,minValue:l,maxValue:k,signal:p,filter:h}),a.outlineOptimizationEnabled?J({layer:f,view:c,filter:h,signal:p}).catch(q.errorCallback):null]),{unit:v,statistics:t}=m,{valueExpression:y,title:w}=await q.getTitleAndExpressionForAgeRenderer(a,
v);a=await K(Q({layer:f,basemap:a.basemap,valueExpression:y,symbolType:g,statistics:t,legendOptions:{title:w},theme:a.theme,sizeScheme:a.sizeScheme,sizeOptimizationEnabled:a.sizeOptimizationEnabled,view:a.view,minValue:l,maxValue:k,filter:h,signal:p}));a=await la(a,r,null,null,{layer:f,valueExpression:y,defaultSymbolEnabled:b,symbolType:g});a.renderer.authoringInfo?.visualVariables?.forEach(x=>q.updateAgeRendererAuthoringInfoVV(x,d,e,v));return{...a,unit:v}};D.createClassBreaksRenderer=async function(a){a=
await da(a);const b=await q.getClassBreaks(ea(a),a.outlineOptimizationEnabled);return Ba(a,b)};D.createContinuousRenderer=async function(a){a=await ca(a);var b={layer:a.layer,view:a.view,filter:a.filter,signal:a.signal};const [c,d]=await Promise.all([K(Q(a)),a.outlineOptimizationEnabled?J(b).catch(q.errorCallback):null]);b=a.normalizationField;return la(c,d,b?"field":void 0,b,a)};D.createVisualVariables=K;D.regenerateAgeRenderer=async function(a){const {renderer:b,creatorParameters:c}=await xa(a),
{layer:d,outlineOptimizationEnabled:e,sizeOptimizationEnabled:g,startTime:l,endTime:k,theme:p,view:h,signal:f,filter:m}=c,[r,v]=await Promise.all([W({view:h,layer:d,startTime:l,endTime:k,signal:f,filter:m}),e?J({layer:d,view:h,filter:m,signal:f}).catch(q.errorCallback):null]),{unit:t,statistics:y}=r,{valueExpression:w,title:x}=await q.getTitleAndExpressionForAgeRenderer(c,t);a=await K(Q({layer:d,valueExpression:w,statistics:y,legendOptions:{title:x},sizeOptimizationEnabled:g,theme:p,view:h,filter:m,
signal:f}));u.spliceVisualVariables(b,a.visualVariables,u.findSizeVVIndex);u.spliceVisualVariables(b,v?.visualVariables,u.findOutlineVVIndex);b.authoringInfo=a.authoringInfo.clone();b.authoringInfo?.visualVariables?.forEach(z=>q.updateAgeRendererAuthoringInfoVV(z,l,k,t));return{renderer:b}};D.regenerateClassBreaksRenderer=async function(a){const {renderer:b,creatorParameters:c}=await wa(a),{outlineOptimizationEnabled:d,normalizationType:e,classificationMethod:g}=c,{result:l,outlineResult:k}=await q.getClassBreaks(ea(c),
d),p=l.classBreakInfos;if(c.numClasses!==p.length)throw new n("regenerate-class-breaks-renderer:invalid-parameters","The number of class breaks generated does not match the number of class breaks in the renderer.");b.classBreakInfos.forEach((h,f)=>{h.minValue=p[f].minValue;h.maxValue=p[f].maxValue;h.label=p[f].label});b.normalizationTotal="percent-of-total"===e?l.normalizationTotal:void 0;"standard-deviation"!==g&&V.setLabelsForClassBreaks({classBreakInfos:b.classBreakInfos,classificationMethod:g,
normalizationType:e,round:!0});u.spliceVisualVariables(b,k?.visualVariables,u.findOutlineVVIndex);return{renderer:b}};D.regenerateContinuousRenderer=async function(a){const {renderer:b,view:c,signal:d,filter:e,creatorParameters:g,forBinning:l}=await va(a),{layer:k,outlineOptimizationEnabled:p,theme:h,referenceSizeResult:f}=g,[m,r]=await Promise.all([na({...a,referenceSizeResult:f}),p?J({layer:k,view:c,filter:e,signal:d}).catch(q.errorCallback):null]);a=m.isGrid;const v="reference-size"===h;u.spliceVisualVariables(b,
m.visualVariables,u.findSizeVVIndex);u.spliceVisualVariables(b,r?.visualVariables,u.findOutlineVVIndex);u.updateAuthoringInfoVisualVariable(b,m.authoringInfo,"size");const t=m.statistics;return v?{renderer:await oa({layer:k,renderer:b,view:c,forBinning:l,sizeStops:u.getAuthoringInfoVisualVariable(b,"size","reference-size")?.sizeStops,isGrid:a}),isGrid:a,statistics:t}:{renderer:b,statistics:t}};D.regenerateVisualVariables=na;D.updateRendererWithReferenceSize=oa;Object.defineProperty(D,Symbol.toStringTag,
{value:"Module"})});