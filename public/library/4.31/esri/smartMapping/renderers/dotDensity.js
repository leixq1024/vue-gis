// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../core/Logger ../../core/colorUtils ../../core/Error ../../geometry/support/scaleUtils ../../renderers/support/AuthoringInfo ../heuristics/outline ./support/dotDensityUtils ./support/regenerateUtils ./support/utils ../statistics/spatialStatistics ../statistics/summaryStatisticsForAttributes ../statistics/support/attributeDensity ../support/binningUtils ../support/utils ../support/adapters/support/layerUtils ../symbology/dotDensity".split(" "),
function(v,R,S,H,T,U,V,W,X,Y,Z,I,p,z,J,A,t,q,u,K,L,M,N,B,n,C){async function D(a){var b=a.view;if(!(a?.layer&&b&&a.attributes?.length))throw new p("dot-density-renderer:missing-parameters","'layer', 'view' and 'attributes' parameters are required");if(8<a.attributes.length)throw new p("dot-density-renderer:invalid-parameters","Dot density renderer does not support more than 8 attributes");a.forBinning&&N.verifyBinningParams(a,"dot-density-renderer");const c={...a,view:b,layer:a.layer,attributes:a.attributes};
var d=[n.LayerType.FeatureLayer,n.LayerType.OGCFeatureLayer,n.LayerType.GeoJSONLayer,n.LayerType.WFSLayer];d=a.forBinning?n.binningCapableLayerTypes:d;a=n.createLayerAdapter(c.layer,d,a.forBinning);if(!a)throw new p("dot-density-renderer:invalid-parameters","'layer' must be one of these types: "+n.getLayerTypeLabels(d).join(", "));c.dotBlendingEnabled??(c.dotBlendingEnabled=!0);c.dotValueOptimizationEnabled??(c.dotValueOptimizationEnabled=!0);d=null!=c.signal?{signal:c.signal}:null;await Promise.all([b.when(),
a.load(d)]);if("polygon"!==a.geometryType)throw new p("dot-density-renderer:not-supported","Dot density renderer is supported for polygon layers only");b=[];d=c.attributes;for(var g of d)d=await B.getFieldsList({field:g.field,valueExpression:g.valueExpression}),b.push(...d);if(g=u.verifyBasicFieldValidity(a,b.filter(Boolean),"dot-density-renderer:invalid-parameters"))throw g;return{...c,layer:a}}async function O(a){await q.processRegenerateParams(a,"regenerate-dot-density-renderer");const b=await q.getRendererToUpdate(a);
if("dot-density"!==q.getStyleType(b))throw new p("regenerate-dot-density-renderer:invalid-parameters","Renderer is invalid");const {layer:c,forBinning:d,filter:g,view:k,signal:e}=a;var f=q.hasOutlineVV(b);const h=b.attributes.map(l=>({field:l.field,valueExpression:l.valueExpression,label:l.label,valueExpressionTitle:l.valueExpressionTitle}));f=await D({layer:c,attributes:h,dotValueOptimizationEnabled:null!=b.referenceScale,outlineOptimizationEnabled:f,forBinning:d,filter:g,view:k,signal:e});return{...a,
creatorParameters:f,renderer:b}}async function P(a){let b=a.dotDensityScheme,c=null;var d=null;d=await u.getBasemapInfo(a.basemap,a.view);c=null!=d.basemapId?d.basemapId:null;d=null!=d.basemapTheme?d.basemapTheme:null;if(b)return{scheme:C.cloneScheme(b),basemapId:c,basemapTheme:d};if(a=C.getSchemes({numColors:a.attributes.length,basemapTheme:d}))b=a.primaryScheme,c=a.basemapId,d=a.basemapTheme;return{scheme:b,basemapId:c,basemapTheme:d}}function E(a){return{dotValue:1,referenceScale:a.scale,minSliderValue:1,
maxSliderValue:100}}async function F(a){const {view:b,layer:c,attributes:d,signal:g,filter:k}=a;a=await c.getSampleFeatures({view:b,sampleSize:500,returnGeometry:!0,filter:k,signal:g},"json");const [e,f]=await Promise.all([K({features:a,geometryType:c.geometryType}),L({layer:c,attributes:d,filter:k,includeZeros:!1,includeNegatives:!1,view:b,signal:g})]);a=null!=e&&"avgSize"in e&&e.avgSize;const h=f.avg;if(!a||!h)return E(b);const l=z.getResolutionForScale(b.scale,b.spatialReference);return{dotValue:t.roundValue(h/
(a*a/(l*l)*.1))||1,referenceScale:b.scale,minSliderValue:1,maxSliderValue:t.roundValue(h)}}async function G(a){const {view:b,layer:c,attributes:d,signal:g,filter:k}=a;a=[];for(var e of d){var f=await B.getFieldsList({field:e.field,valueExpression:e.valueExpression});a.push(...f)}e=await c.getSampleFeatures({view:b,sampleSize:500,requiredFields:a,filter:k,returnGeometry:!0,signal:g},"json");const {minDensity:h,maxDensity:l,avgDensity:r}=await M({features:e,attributes:d,includeZeros:!1,includeNegatives:!1,
view:b});if(!r||!h||!l)return E(b);e=z.getResolutionForScale(b.scale,b.spatialReference);f=e*e;e=t.roundValue(h*f);a=t.roundValue(l*f);f=t.roundValue(r*f*10)||1;f>a&&(f=a);return{dotValue:f,referenceScale:b.scale,minSliderValue:e,maxSliderValue:a}}v.createRenderer=async function(a){var b=await D(a),c=b.layer;const d=c.geometryType;a=await P(b);const g=a?.scheme;if(!g)throw new p("dot-density-renderer:insufficient-info","Unable to find dot-density scheme");var k=b.view;const e=b.filter;c={layer:c,
view:k,filter:e,attributes:b.attributes,signal:b.signal};k={layer:b.layer,view:k,filter:e,signal:b.signal};const [f,h]=await Promise.all([b.trueDensity?G(c):F(c),b.outlineOptimizationEnabled?A(k).catch(u.errorCallback):null]),{dotValue:l,referenceScale:r,minSliderValue:w,maxSliderValue:x}=f,y=I.createUniqueColors(g.colors,b.attributes.length);k=b.attributes.map((m,Q)=>({field:m.field,valueExpression:m.valueExpression,label:m.label,valueExpressionTitle:m.valueExpressionTitle,color:y[Q]}));b=new H({attributes:k,
dotBlendingEnabled:b.dotBlendingEnabled,outline:h?u.getSymbolOutlineFromScheme(g,d,h.opacity):null,dotValue:l,referenceScale:b.dotValueOptimizationEnabled?r:null,legendOptions:b.legendOptions});h?.visualVariables.length&&(b.visualVariables=h.visualVariables.map(m=>m.clone()));b.authoringInfo=new J({type:"dot-density",minSliderValue:w,maxSliderValue:x});return{renderer:b,dotDensityScheme:g,basemapId:a.basemapId,basemapTheme:a.basemapTheme}};v.regenerateRenderer=async function(a){const {creatorParameters:b,
renderer:c}=await O(a),{layer:d,attributes:g,outlineOptimizationEnabled:k,view:e,signal:f,filter:h}=b;a={layer:d,view:e,filter:h,attributes:g,signal:f};const [l,r]=await Promise.all([b.trueDensity?G(a):F(a),k?A({layer:d,view:e,signal:f,filter:h}).catch(u.errorCallback):null]),{dotValue:w,referenceScale:x,minSliderValue:y,maxSliderValue:m}=l;c.dotValue=w;c.referenceScale=b.dotValueOptimizationEnabled?x:null;c.authoringInfo&&(c.authoringInfo.minSliderValue=y,c.authoringInfo.maxSliderValue=m);q.spliceVisualVariables(c,
r?.visualVariables,q.findOutlineVVIndex);return{renderer:c}};Object.defineProperty(v,Symbol.toStringTag,{value:"Module"})});