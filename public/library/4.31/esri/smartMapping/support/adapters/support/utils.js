// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/arrayUtils ../../../../core/promiseUtils ../../../../layers/support/CodedValue ../../../../core/has ../../../../layers/support/CodedValueDomain ../../../../layers/support/Domain ../../../../layers/support/InheritedDomain ../../../../layers/support/RangeDomain ../../../../layers/support/Field ../../../../layers/support/fieldUtils ../../../../rest/support/StatisticDefinition ../../../statistics/support/predominanceUtils ../../../statistics/support/utils ../../utils ../../../../statistics/utils".split(" "),
function(l,Q,R,S,aa,T,ba,ca,da,U,G,H,V,u,v,y){function D(a){const {field:b,normalizationType:c,normalizationField:d,normalizationTotal:e,layer:f}=a;a=v.isIntegerField(f,b);let h=b;"percent-of-total"===c?h=`((${a?v.castIntegerFieldToFloat(b):b} / ${e}) * 100)`:"log"===c?h=`(log(${b}) * ${W})`:"field"===c?h=`(${a?v.castIntegerFieldToFloat(b):b} / ${d})`:"natural-log"===c?h=`(log(${a?v.castIntegerFieldToFloat(b):b}))`:"square-root"===c&&(h=`(power(${a?v.castIntegerFieldToFloat(b):b}, 0.5))`);return h}
function I(a,b){let c;b=b.toLowerCase();if(a)for(const d in a)if(d.toLowerCase()!==b){c=a[d];break}return c}function z(a,b){let c;b=b.toLowerCase();if(a)for(const d in a)if(d.toLowerCase()===b){c=a[d];break}return c}function J(a,b){if(b)for(const c in a)a[c].label=b[c];return{count:a}}async function E(a,b,c){var d=a?c.getField(a):null;if(d=d?c.getFieldDomain(d.name):null)return d;({uniqueValueInfos:a}=await c.uniqueValues({field:a,sqlWhere:b.sqlWhere,features:b.features,useFeaturesInView:b.useFeaturesInView,
view:b.view,signal:b.signal}));a=a.map(e=>new S.CodedValue({code:e.value}));return new T({codedValues:a})}function K(a,b){return v.getDateDiffSQL(a,new Date(0),b,"milliseconds").sqlExpression}function L(a){return a?v.castIntegerFieldToFloat(["HOUR","MINUTE","SECOND"].map(b=>`(${`EXTRACT(${b} FROM ${a}) * ${X[b]}`})`).join(" + ")):null}function M(a,b){switch(a.statisticType){case "avg":case "avg_angle":return"double";case "count":return"integer";case "min":case "max":case "sum":return a.onStatisticField?
b.get(a.onStatisticField)?.type??null:a.onStatisticExpression?"string"===a.onStatisticExpression.returnType?null:"double":null;case "mode":return a.onStatisticField?b.get(a.onStatisticField)?.type??null:a.onStatisticExpression?"string"===a.onStatisticExpression.returnType?"string":"double":null;default:return null}}function N(a,b){return v.isAnyDateField(b)?K(a,b?.name):G.isTimeOnlyField(b)?L(b?.name):null}function F(a,b){b&&(a.geometry=b.geometry,a.spatialRelationship=b.spatialRelationship)}function Y(a,
b,c,d,e,f,h){const m=[],k=b.length;for(let n=0;n<k;n++){const q=u.mergeWhereClauses(d,u.mergeWhereClauses(c+" \x3e\x3d "+b[n][0],null!==b[n][1]?c+(n===k-1?" \x3c\x3d ":" \x3c ")+b[n][1]:""));m.push(q)}return Promise.allSettled(m.map(n=>a.queryFeatureCount({whereClause:n,view:e,filter:f,signal:h})))}const Z=/_value$/i,W=Math.LOG10E,X={SECOND:1E3,MINUTE:6E4,HOUR:36E5};l.defaultNumBins=10;l.ensureFeaturesJSON=function(a){return a.map(b=>b.toJSON())};l.generateBinParams=function(a){const b=[],c=a.classBreaks,
d=c[0].minValue,e=c[c.length-1].maxValue;c.forEach(f=>{b.push([f.minValue,f.maxValue])});return{min:d,max:e,intervals:b,sqlExpr:D({field:a.field,normalizationType:a.normalizationType,normalizationField:a.normalizationField,normalizationTotal:a.normalizationTotal,layer:a.layer}),excludeZerosExpr:a.where,normTotal:a.normalizationTotal}};l.getAggregateFieldType=M;l.getBins=function(a,b,c,d=10,e,f,h){const {min:m,max:k,normTotal:n,excludeZerosExpr:q}=b,r=b.intervals||y.getEqualIntervalBins(m,k,d);return Y(a,
r,b.sqlExpr||c,q,e,f,h).then(g=>({bins:g.map((p,w)=>({minValue:r[w][0],maxValue:r[w][1],count:"fulfilled"===p.status?p.value:0})),minValue:m,maxValue:k,normalizationTotal:n}))};l.getDomainsForFields=async function(a,b){if(!a.returnAllCodedValues)return[];const {field:c,field2:d,field3:e}=a;if(c&&!d)return(b=(a=c?b.getField(c):null)?b.getFieldDomain(a.name):null)?[b]:[];const f=[];c&&(f.push(E(c,a,b)),d&&(f.push(E(d,a,b)),e&&f.push(E(e,a,b))));return Promise.all(f)};l.getFeatureReductionFields=function(a){const b=
"featureReduction"in a?a.featureReduction:null;return((null!=b&&"fields"in b?b.fields:null)??[]).map(c=>{const d=M(c,a.fieldsIndex);return d?new U({type:d,name:c.name,alias:c.alias}):null}).filter(Q.isSome)};l.getFieldExpr=D;l.getHistogramFromFeatureSet=function(a,b,c,d,e){const f={};a&&a.features&&a.features.forEach(m=>{var k=m.attributes;m=I(k,"countOFExpr");k=z(k,"countOFExpr");null!=m&&null!=k&&0!==m&&(f[m]=k)});const h=[];y.getEqualIntervalBins(b,c,d).forEach((m,k)=>{k=(k+1).toString();h.push({minValue:m[0],
maxValue:m[1],count:f.hasOwnProperty(k)?f[k]:0})});return{bins:h,minValue:b,maxValue:c,normalizationTotal:e}};l.getMissingFields=function(a,b,c){const d=[];if(b)for(const e of b)(b=a.getField(e))&&c&&"availableFields"in c&&!c.availableFields?.includes(b.name)&&d.push(b.name);return d};l.getMissingFieldsForBinning=function(a,b){const c=[];a=a.layer;a="featureReduction"in a?a.featureReduction:null;const d=null!=a&&"fields"in a?a.fields?.map(e=>e.name?.toLowerCase()).filter(Boolean):[];if("binning"!==
a?.type||!b)return c;for(const e of b)d.includes(e.toLowerCase())||c.push(e);return c};l.getPredominantCategoriesFromUVInfos=function(a,b){const c=new Set(a.map(e=>e.value)),d=b.filter(e=>!c.has(e));for(const e of d)a.push({value:e,count:0});a.sort((e,f)=>b.indexOf(e.value)-b.indexOf(f.value));for(const e of a)e.value===V.noDominantCategoryField&&(e.value=null);return{predominantCategoryInfos:a}};l.getSQLExpressionForDateOrTimeField=N;l.getSummaryStatisticsFromFeatureSet=function(a,b){a=a&&a.features;
if(0===a?.length)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};a=a?.[0]?.attributes;const c={};for(const d in a)c[d.replace(Z,"").toLowerCase()]=a[d];null!=c.totalcount&&c.totalcount>=c.count&&(c.nullcount=c.totalcount-c.count);delete c.totalcount;c.min===c.max&&null!=c.min&&null==c.stddev&&(c.stddev=c.variance=0);b&&("min max avg stddev sum variance".split(" ").forEach(d=>{null!=c[d]&&(c[d]=Math.ceil(c[d]))}),c.min===c.max&&null!=c.min&&(c.avg=
c.min,c.stddev=c.variance=0));return c};l.getSummaryStatsQuery=function(a,b,c){const {field:d,normalizationType:e,normalizationField:f,normalizationTotal:h,minValue:m,maxValue:k,filter:n}=b;c=a.supportsSQLExpression?N(a,c)||b.sqlExpression:null;var q=D({field:d,normalizationType:e,normalizationField:f,normalizationTotal:h,layer:a});const r=c||q;q=r?u.getRangeExpr(r,m,k):null;var g=u.getSQLFilterForNormalization({field:d,normalizationField:f,normalizationType:e});g=u.mergeWhereClauses(b.sqlWhere,g);
q=u.mergeWhereClauses(g,q);const p=y.isNullCountSupported({normalizationField:f,normalizationType:e,sqlExpression:c,supportsSQLExpression:a.supportsSQLExpression,minValue:m,maxValue:k}),w=G.isStringField(a.getField(d??void 0)),{include:x,exclude:O}=b.outStatisticTypes||{};b=y.statisticTypes.filter(t=>(!x||x.includes(t))&&(!O||!O.includes(t))&&("nullcount"===t?p:w?"count"===t:!0));g=a.createQuery();g.where=u.mergeWhereClauses(g.where,q);g.sqlFormat=c?"standard":null;g.outStatistics=b.map(t=>{const A=
new H;let B=null,C=null,P=`${t}_value`;"variance"===t?(B="var",C=r):"nullcount"===t?(B="count",C=a.objectIdField,P="totalcount_value"):"median"===t?(B="percentile-continuous",C=r,A.statisticParameters={value:.5}):(B=t,C=r);A.statisticType=B;A.onStatisticField=C;A.outStatisticFieldName=P;return A});F(g,n);return g};l.getUVQuery=function(a,b){const {field:c,field2:d,field3:e,sqlExpression:f}=b;var h=!(!c||!d);a=a.createQuery();a.where=u.mergeWhereClauses(a.where,b.sqlWhere);a.sqlFormat=f?"standard":
null;var m=h?null:c;h=h?"1":f;const k="countOF"+(m||"Expr"),n=new H;n.statisticType="count";n.onStatisticField=h?"1":m;n.outStatisticFieldName=k;a.outStatistics=[n].filter(Boolean);a.groupByFieldsForStatistics=[c||f,d,e].filter(Boolean);F(a,b.filter);return a};l.getUniqueValuesFromFeatureSet=async function(a,b){var c=a&&a.features;const {field:d,field2:e,field3:f,fieldDelimiter:h,layer:m,view:k,signal:n,labels:q}=b;b=`countOF${d&&e?"Expr":d||"Expr"}`;a={};let r=!1;for(const w of c){var g=w.attributes;
c=z(g,b);var p=d?z(g,d):I(g,b);let x=e?z(g,e):null;g=f?z(g,f):null;null===p&&0===c&&(r=!0);if(null==p||"string"===typeof p&&""===p.trim())p=null;e&&(null==x||"string"===typeof x&&""===x.trim())&&(x=null);f&&(null==g||"string"===typeof g&&""===g.trim())&&(g=null);e&&(p=`${y.processNullValue(p)}${h}${y.processNullValue(x)}`,f&&(p=`${p}${h}${y.processNullValue(g)}`));null==a[p]?a[p]={count:c,data:p}:a[p].count+=c}if(d&&r)try{const w=await m.queryFeatureCount({whereClause:d+" is NULL",view:k,signal:n});
a["null"].count+=w;return J(a,q)}catch{R.throwIfAborted(n)}return J(a,q)};l.getViewInfoParams=function(a){return{viewingMode:"2d"===a.type?"map":a.viewingMode,scale:a.scale,spatialReference:a.spatialReference?.toJSON()}};l.msForTimeOnlyFieldSQL=L;l.msSinceUnixEpochSQL=K;l.updateQueryWithFeatureFilter=F;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});