// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/JSONSupport ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/RandomLCG ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../core/accessorSupport/decorators/writer ../../../geometry/SpatialReference ../../../networks/support/typeUtils ../../../networks/support/UNTraceConfiguration ./TraceLocation".split(" "),function(b,a,d,h,w,x,k,l,m,e,n,p){var f;a=f=class extends a.JSONSupport{static from(c){return h.ensureClass(f,
c)}constructor(c){super(c);this.gdbVersion=this.namedTraceConfigurationGlobalId=null;this.traceLocations=[];this.traceType=this.resultTypes=this.traceConfiguration=this.outSpatialReference=this.moment=null}writeOutSR(c,g,q){if(null!=c){const {wkid:r,latestWkid:t,wkt:u,wkt2:v}=c;g[q]=JSON.stringify({wkid:r??void 0,latestWkid:t??void 0,wkt:u??void 0,wkt2:v??void 0})}}};b.__decorate([d.property({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],
a.prototype,"namedTraceConfigurationGlobalId",void 0);b.__decorate([d.property({type:String,json:{write:!0}})],a.prototype,"gdbVersion",void 0);b.__decorate([d.property({type:[p],json:{write:!0}})],a.prototype,"traceLocations",void 0);b.__decorate([d.property({type:Date,json:{type:Number,write:{writer:(c,g)=>{g.moment=c?c.getTime():null}}}})],a.prototype,"moment",void 0);b.__decorate([d.property({type:m,json:{write:{allowNull:!0,target:"outSR"}}})],a.prototype,"outSpatialReference",void 0);b.__decorate([l.writer("outSpatialReference")],
a.prototype,"writeOutSR",null);b.__decorate([d.property({type:n,json:{write:!0}})],a.prototype,"traceConfiguration",void 0);b.__decorate([d.property({type:[Object],json:{write:!0}})],a.prototype,"resultTypes",void 0);b.__decorate([d.property({type:e.traceTypeKebabDict.apiValues,json:{type:e.traceTypeKebabDict.jsonValues,read:e.traceTypeKebabDict.read,write:e.traceTypeKebabDict.write}})],a.prototype,"traceType",void 0);return a=f=b.__decorate([k.subclass("esri.rest.networks.support.TraceParameters")],
a)});