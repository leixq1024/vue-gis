// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../request ../../../core/urlUtils ../../../geometry/support/jsonUtils ../../../geometry/support/normalizeUtils ../../../geometry/support/spatialReferenceUtils ../../operations/urlUtils".split(" "),function(f,m,h,n,p,g,q){function k(c){const b=c.geometry,a=c.toJSON();let d,e,l;null!=b&&(e=b.spatialReference,l=g.srToRESTValue(e),a.geometryType=n.getJsonType(b),a.geometry=JSON.stringify(b),a.inSR=l);a.outSR?(a.outSR=g.srToRESTValue(a.outSR),d=c.outSpatialReference):b&&(a.outSR=
a.inSR,d=e);a.bin&&(a.bin=JSON.stringify(a.bin));a.quantizationParameters&&(a.quantizationParameters=JSON.stringify(a.quantizationParameters));a.outStatistics&&(a.outStatistics=JSON.stringify(a.outStatistics));a.outTimeReference&&(a.outTimeReference=JSON.stringify(a.outTimeReference));c.defaultSpatialReference&&g.equals(e,d)&&(a.defaultSR=a.inSR,delete a.inSR,delete a.outSR);return a}async function r(c,b,a={}){c="string"===typeof c?h.urlToObject(c):c;const d=(await p.normalizeCentralMeridian(b.geometry?
[b.geometry]:[],null,{signal:a.signal}))?.[0];null!=d&&(b=b.clone(),b.geometry=d);b=q.mapParameters({...c.query,f:"json",...k(b)});return m(h.join(c.path,"queryBins"),{...a,query:{...b,...a.query}})}f.executeBinsQuery=async function(c,b,a){return r(c,b,a)};f.queryToQueryStringParameters=k;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});