// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../geometry ../../core/Clonable ../../core/jsonMap ../../core/JSONSupport ../../core/Logger ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/RandomLCG ../../core/has ../../core/accessorSupport/decorators/enumeration ../../core/accessorSupport/decorators/subclass ../../geometry/support/jsonUtils ../../layers/graphics/data/queryUtils ./AutoIntervalBinParameters ./BinParametersBase ./DateBinParameters ./FixedBoundariesBinParameters ./FixedIntervalBinParameters ./QuantizationParameters ./spatialRelationships ./StatisticDefinition ../../time/timeZoneUtils ../../geometry/SpatialReference".split(" "),
function(b,l,a,e,m,n,c,p,D,E,g,q,r,h,f,t,u,v,w,x,y,z,A,k){e=new e.JSONMap({asc:"ascending",desc:"descending"});f={base:t,key:"type",typeMap:{"auto-interval":f,date:u,"fixed-boundaries":v,"fixed-interval":w}};a=class extends a.ClonableMixin(m.JSONSupport){constructor(d){super(d);this.binParameters=null;this.binOrder="ascending";this.cacheHint=void 0;this.defaultSpatialReference=this.datumTransformation=null;this.distance=void 0;this.returnDistinctValues=this.quantizationParameters=this.outStatistics=
this.outSpatialReference=this.lowerBoundaryAlias=this.geometry=null;this.spatialRelationship="intersects";this.units=this.upperBoundaryAlias=null;this.where="1\x3d1"}set outTimeZone(d){this._set("outTimeZone",d);d&&!A.isTimeZoneValid(d)&&n.getLogger(this).warn("#outTimeZone",`the parsed value '${d}' may not be a valid IANA time zone`)}};b.__decorate([c.property({types:f,json:{name:"bin",write:!0}})],a.prototype,"binParameters",void 0);b.__decorate([g.enumeration(e)],a.prototype,"binOrder",void 0);
b.__decorate([c.property({type:Boolean,json:{write:!0}})],a.prototype,"cacheHint",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"datumTransformation",void 0);b.__decorate([c.property({type:k,json:{name:"defaultSR",write:!0}})],a.prototype,"defaultSpatialReference",void 0);b.__decorate([c.property({type:Number,json:{write:{overridePolicy(d){return{enabled:0<d}}}}})],a.prototype,"distance",void 0);b.__decorate([c.property({types:l.geometryTypes,json:{read:r.fromJSON,write:!0}})],
a.prototype,"geometry",void 0);b.__decorate([c.property({type:String,json:{write:!0}})],a.prototype,"lowerBoundaryAlias",void 0);b.__decorate([c.property({type:k,json:{name:"outSR",write:!0}})],a.prototype,"outSpatialReference",void 0);b.__decorate([c.property({type:[z],json:{write:{enabled:!0,overridePolicy(){return{enabled:null!=this.outStatistics&&0<this.outStatistics.length}}}}})],a.prototype,"outStatistics",void 0);b.__decorate([c.property({value:null,json:{name:"outTimeReference",read:{reader:d=>
d.ianaTimeZone},write:{writer:(d,B,C)=>{d&&(B[C]={ianaTimeZone:d})}}}})],a.prototype,"outTimeZone",null);b.__decorate([c.property({type:x,json:{write:!0}})],a.prototype,"quantizationParameters",void 0);b.__decorate([c.property({type:Boolean,json:{write:!0}})],a.prototype,"returnDistinctValues",void 0);b.__decorate([g.enumeration(y.spatialRelKebabDict,{name:"spatialRel"})],a.prototype,"spatialRelationship",void 0);b.__decorate([c.property({type:String,json:{write:!0}})],a.prototype,"upperBoundaryAlias",
void 0);b.__decorate([c.property({type:String,json:{read:h.unitsKebabDict.read,write:{writer:h.unitsKebabDict.write,overridePolicy(d){return{enabled:null!=d&&null!=this.distance&&0<this.distance}}}}})],a.prototype,"units",void 0);b.__decorate([c.property({type:String,json:{write:!0}})],a.prototype,"where",void 0);b=a=b.__decorate([q.subclass("esri.rest.support.BinsQuery")],a);a.from=p.ensureType(a);return b});