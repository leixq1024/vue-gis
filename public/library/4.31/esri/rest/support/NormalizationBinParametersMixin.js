// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/tslib.es6 ../../core/jsonMap ../../core/Logger ../../core/accessorSupport/decorators/property ../../core/has ../../core/RandomLCG ../../core/accessorSupport/decorators/enumeration ../../core/accessorSupport/decorators/subclass".split(" "),function(g,c,h,k,d,p,q,l,m){const n=h.strict()({naturalLog:"natural-log",squareRoot:"square-root",percentOfTotal:"percent-of-total",log:"log",field:"field"});g.NormalizationBinParametersMixin=a=>{a=class extends a{constructor(){super(...arguments);
this.normalizationTotal=this.normalizationMinValue=this.normalizationMaxValue=this.normalizationField=null}get normalizationType(){let b=this._get("normalizationType");const e=!!this.normalizationField,f=null!=this.normalizationTotal;if(e||f)b=e&&"field"||f&&"percent-of-total"||null,e&&f&&k.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!");else if("field"===b||"percent-of-total"===b)b=null;return b}set normalizationType(b){this._set("normalizationType",b)}};
c.__decorate([d.property({type:String,json:{name:"parameters.normalizationField",write:!0}})],a.prototype,"normalizationField",void 0);c.__decorate([d.property({type:Number,json:{name:"parameters.normalizationMaxValue",write:!0}})],a.prototype,"normalizationMaxValue",void 0);c.__decorate([d.property({type:Number,json:{name:"parameters.normalizationMinValue",write:!0}})],a.prototype,"normalizationMinValue",void 0);c.__decorate([d.property({type:Number,json:{name:"parameters.normalizationTotal",write:!0}})],
a.prototype,"normalizationTotal",void 0);c.__decorate([l.enumeration(n,{name:"parameters.normalizationType"})],a.prototype,"normalizationType",null);return a=c.__decorate([m.subclass("esri.rest.support.NormalizationBinParametersMixin")],a)};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});