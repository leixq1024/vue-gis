// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../core/JSONSupport ../../core/lang ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../geometry/Point ../../geometry/support/jsonUtils ../../layers/support/MosaicRule ../../layers/support/RasterFunction ../../time/TimeExtent".split(" "),function(c,b,n,d,u,v,p,g,q,r,m,k,t){var l;b=l=class extends b.JSONSupport{constructor(){super(...arguments);
this.pixelSize=this.rasterFunctions=this.geometry=null;this.returnPixelValues=this.returnCatalogItems=this.returnGeometry=!0;this.timeExtent=this.maxItemCount=null;this.viewId=this.raster=void 0;this.processAsMultidimensional=!1}writeGeometry(a,e,f){null!=a&&(e.geometryType=r.getJsonType(a),e[f]=JSON.stringify(a.toJSON()))}set mosaicRule(a){a?.mosaicMethod&&(a=m.fromJSON({...a.toJSON(),mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation}));this._set("mosaicRule",a)}writeMosaicRule(a,e,f){null!=
a&&(e[f]=JSON.stringify(a.toJSON()))}set rasterFunction(a){a?.rasterFunction&&(a=k.fromJSON({...a.toJSON(),rasterFunction:a.rasterFunction,rasterFunctionArguments:a.rasterFunctionArguments}));this._set("rasterFunction",a)}writeRasterFunction(a,e,f){null!=a&&(e[f]=JSON.stringify(a.toJSON()));a.rasterFunctionDefinition&&(e[f]=JSON.stringify(a.rasterFunctionDefinition))}writeRasterFunctions(a,e,f){null!=a&&(e[f]=JSON.stringify(a.map(h=>h.rasterFunctionDefinition||h.toJSON())))}writePixelSize(a,e,f){null!=
a&&(e[f]=JSON.stringify(a))}writeTimeExtent(a,e,f){if(null!=a){const h=null!=a.start?a.start.getTime():null;a=null!=a.end?a.end.getTime():null;e[f]=null!=h?null!=a?`${h},${a}`:`${h}`:null}}clone(){return new l(n.clone({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,
processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};c.__decorate([d.property({json:{write:!0}})],b.prototype,"geometry",void 0);c.__decorate([g.writer("geometry")],b.prototype,"writeGeometry",null);c.__decorate([d.property({type:m,json:{write:!0}})],b.prototype,"mosaicRule",null);c.__decorate([g.writer("mosaicRule")],b.prototype,"writeMosaicRule",null);c.__decorate([d.property({type:k,json:{write:!0,name:"renderingRule"}})],
b.prototype,"rasterFunction",null);c.__decorate([g.writer("rasterFunction")],b.prototype,"writeRasterFunction",null);c.__decorate([d.property({type:[k],json:{write:!0,name:"renderingRules"}})],b.prototype,"rasterFunctions",void 0);c.__decorate([g.writer("rasterFunctions")],b.prototype,"writeRasterFunctions",null);c.__decorate([d.property({type:q,json:{write:!0}})],b.prototype,"pixelSize",void 0);c.__decorate([g.writer("pixelSize")],b.prototype,"writePixelSize",null);c.__decorate([d.property({type:Boolean,
json:{write:!0}})],b.prototype,"returnGeometry",void 0);c.__decorate([d.property({type:Boolean,json:{write:!0}})],b.prototype,"returnCatalogItems",void 0);c.__decorate([d.property({type:Boolean,json:{write:!0}})],b.prototype,"returnPixelValues",void 0);c.__decorate([d.property({type:Number,json:{write:!0}})],b.prototype,"maxItemCount",void 0);c.__decorate([d.property({type:t,json:{write:{target:"time"}}})],b.prototype,"timeExtent",void 0);c.__decorate([g.writer("timeExtent")],b.prototype,"writeTimeExtent",
null);c.__decorate([d.property({json:{write:!0}})],b.prototype,"raster",void 0);c.__decorate([d.property({json:{write:!0}})],b.prototype,"viewId",void 0);c.__decorate([d.property({type:Boolean,json:{write:!0}})],b.prototype,"processAsMultidimensional",void 0);return b=l=c.__decorate([p.subclass("esri.rest.support.ImageIdentifyParameters")],b)});