// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/quantityUtils ./parsingAndFormattingUtils ./TooltipField ./TooltipFieldElevation ./TooltipFieldOrientation ./TooltipFieldSize ../../../support/angularMeasurementUtils".split(" "),function(d,e,f,k,n,p,q,g){function l(c){return new k.TooltipField({name:"distance",actual:e.zeroMeters,parse:f.makeQuantityParser({createQuantity:(a,b)=>e.createLength(Math.max(a,0),b.inputUnitInfos.length.unit)}),format:(a,b)=>b.formatters.length(a),formatForInputMode:(a,b)=>b.formatters.scalar(e.toUnit(a,
b.inputUnitInfos.length.unit)),suffix:a=>a.inputUnitInfos.length.abbreviation,title:a=>a.messages.sketch.distance,...c})}function m(c,a){return new k.TooltipField({actual:e.createScalar(0),parse:f.makeQuantityParser({createQuantity:b=>e.createScalar(b)}),format:(b,h)=>h.formatters.scalar(b),formatForInputMode:(b,h)=>h.formatters.scalar(b),title:b=>b.messages.sketch[c],...a})}d.makeAreaField=function(c){return new k.TooltipField({name:"area",actual:e.zeroSquareMeters,parse:f.makeQuantityParser({createQuantity:(a,
b)=>e.createArea(a,b.inputUnitInfos.area.unit)}),format:(a,b)=>b.formatters.area(a),formatForInputMode:(a,b)=>b.formatters.scalar(e.toUnit(a,b.inputUnitInfos.area.unit)),suffix:a=>a.inputUnitInfos.area.abbreviation,title:a=>a.messages.sketch.area,readOnly:!0,...c})};d.makeDirectionField=function(c){return new k.TooltipField({name:"direction",actual:e.zeroDegrees,parse:f.makeQuantityParser({createQuantity:(a,b)=>e.createAngle(a,b.inputUnitInfos.angle.unit,"geographic"),sanitize:f.sanitizeAngle}),format:(a,
b)=>{const h=b.sketchOptions.values.effectiveDirectionMode;a=g.getNormalizedDirection(a,h);switch(h){case g.DirectionMode.Absolute:return b.formatters.direction(a);case g.DirectionMode.Relative:return b.formatters.directionRelative(a);case g.DirectionMode.RelativeBilateral:return b.formatters.directionRelativeBilateral(a)}},formatForInputMode:(a,b)=>{a=g.getNormalizedDirection(a,b.sketchOptions.values.effectiveDirectionMode);return b.formatters.scalar(e.toUnit(a,b.inputUnitInfos.angle.unit))},suffix:a=>
a.inputUnitInfos.angle.abbreviation,title:a=>{const b=a.sketchOptions.values.effectiveDirectionMode,{absolute:h,relative:r}=a.messages.sketch.direction;switch(b){case g.DirectionMode.Absolute:return h;case g.DirectionMode.Relative:case g.DirectionMode.RelativeBilateral:return r}},...c})};d.makeDistanceField=function(c){return l({...c})};d.makeElevationField=function(c){return new n.TooltipFieldElevation(c)};d.makeLatitudeField=function(c){return new k.TooltipField({name:"y",actual:e.zeroDegrees,parse:f.parseLatitude,
format:(a,b)=>b.formatters.latitudeDecimalDegrees(a),formatForInputMode:a=>f.formatLatitudeDecimalDegreesForInputMode(a),suffix:a=>a.inputUnitInfos.angle.abbreviation,title:a=>a.messages.sketch.latitude,...c})};d.makeLengthField=l;d.makeLongitudeField=function(c){return new k.TooltipField({name:"x",actual:e.zeroDegrees,parse:f.parseLongitude,format:(a,b)=>b.formatters.longitudeDecimalDegrees(a),formatForInputMode:a=>f.formatLongitudeDecimalDegreesForInputMode(a),suffix:a=>a.inputUnitInfos.angle.abbreviation,
title:a=>a.messages.sketch.longitude,...c})};d.makeOrientationField=function(c){return new p.TooltipFieldOrientation(c)};d.makeRelativeDistanceField=function(c){return l({...c,parse:f.makeQuantityParser({createQuantity:(a,b)=>e.createLength(a,b.inputUnitInfos.length.unit)}),format:(a,b)=>b.formatters.lengthRelative(a)})};d.makeScaleField=function(c){return m("scale",{name:"scale",actual:null,parse:f.makeQuantityParser({createQuantity:a=>e.createScalar(Math.abs(a))}),...c})};d.makeSizeField=function(c){return new q.TooltipFieldSize(c)};
d.makeTotalLengthField=function(c){return l({format:(a,b)=>b.formatters.totalLength(a),title:a=>a.messages.sketch.totalLength,readOnly:!0,...c})};d.makeXField=function(c){return m("x",{name:"x",...c})};d.makeYField=function(c){return m("y",{name:"y",...c})};Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});