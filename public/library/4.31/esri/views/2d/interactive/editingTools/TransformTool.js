// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../geometry ../../../../Graphic ../../../../symbols ../../../../core/colorUtils ../../../../core/maybe ../../../../core/reactiveUtils ../../../../core/unitUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/libs/gl-matrix-2/math/vec2 ../../../../core/libs/gl-matrix-2/factories/vec2f64 ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../geometry/projection ../../../../chunks/boundedPlane ../../../../geometry/support/spatialReferenceUtils ../../../../layers/GraphicsLayer ../../../ViewingMode ./manipulations/DragManipulation ./manipulations/RotateManipulation ./manipulations/ScaleManipulation ./manipulations/utils ../../../input/keys ../../../interactive/InteractiveToolBase ../../../interactive/keybindings ../../../interactive/editGeometry/EditGeometry ../../../interactive/editGeometry/EditGeometryOperations ../../../interactive/editGeometry/interfaces ../../../interactive/editGeometry/operations/UpdateVertices ../../../interactive/editGeometry/support/editPlaneUtils ../../../support/hitTestSelectUtils ../../../support/screenUtils ../../../../geometry/Polygon ../../../../geometry/Point ../../../../symbols/SimpleFillSymbol ../../../../symbols/SimpleMarkerSymbol".split(" "),
function(g,l,x,u,aa,y,H,I,z,m,ba,ca,da,J,A,B,f,n,v,w,K,L,C,M,N,O,D,P,Q,k,R,S,E,T,U,V,W,X,p,Y,F){x={up:"ArrowUp",down:"ArrowDown",left:"ArrowLeft",right:"ArrowRight",plus:"+",minus:"-",toggleOpacity:"t",shift:"Shift",primaryKey:P.primaryKey};const Z=[[1,1],[1,-1],[-1,-1],[-1,1],[1,0],[0,-1],[-1,0],[0,1]];g.TransformTool=class extends Q.InteractiveToolBase{constructor(a){super(a);this._graphic=this._initialGeometry=this._initialControlPoints=null;this._planeCache=w.create();this._displayPlaneCache=
w.create();this._mainAxisCache=B.create();this._rotationHandleCache=n.create();this._cornerA=n.create();this._cornerB=n.create();this._cornerC=n.create();this._cornerD=n.create();this._avgAB=n.create();this._avgBC=n.create();this._avgCD=n.create();this._avgDA=n.create();this._preserveAspectRatio=new D.PreserveAspectRatio;this._snapRotation=new D.SnapRotation;this._graphicsLayer=new L({internal:!0,listMode:"hide",visible:!1});this._sharedUndoStack=[];this._sharedRedoStack=[];this._isOpacityToggled=
!1;this._factor=1;this.snapRotation=this.preserveAspectRatio=null;this.type="transform"}initialize(){this._initialize()}destroy(){const {map:a}=this.view;this._dragManipulation.destroy();this._rotateManipulation.destroy();this._scaleManipulations.forEach(b=>b.destroy());this._editGeometryOperations.destroy();a.removeMany([this._graphicsLayer]);this._graphicsLayer.removeAll();this._graphicsLayer=H.destroyMaybe(this._graphicsLayer);this._sharedRedoStack=this._sharedUndoStack=this._avgDA=this._avgCD=
this._avgBC=this._avgAB=this._cornerD=this._cornerC=this._cornerB=this._cornerA=this._mainAxisCache=this._rotationHandleCache=this._displayPlaneCache=this._planeCache=this._snapRotation=this._preserveAspectRatio=this._graphic=this._initialGeometry=this._initialControlPoints=null}get _plane(){const a=this._graphic.geometry;if(null==a)return null;const b=this._editGeometryOperations.data;var d=b.components[0].edges[0];d=A.subtract(this._mainAxisCache,d.leftVertex.pos,d.rightVertex.pos);A.normalize(d,
d);let e=80*this.view.resolution;const c=this.view.spatialReference;K.equals(c,a.spatialReference)&&(e*=z.getMetersPerUnitForSR(c)/z.getMetersPerUnitForSR(a.spatialReference));return U.calculateOrientedBounds(d,b,e,this._planeCache)}get _displayPlane(){var a=this._plane;if(!a)return null;const b=this._displayPlaneCache;w.copy(a,b);a=10*this.view.resolution;f.scale(b.basis1,b.basis1,1+a/f.length(b.basis1));f.scale(b.basis2,b.basis2,1+a/f.length(b.basis2));return b}get _backgroundGraphicGeometry(){const a=
this._displayPlane;if(!a)return null;const b=this.view.spatialReference;this._updateDisplayPlaneConrers(a);return new X({spatialReference:b,rings:[[this._cornerA,this._cornerB,this._cornerC,this._cornerD,this._cornerA]]})}get _rotateGraphicGeometry(){const a=this._plane;if(!a)return null;const b=this._rotationHandleCache;f.normalize(b,a.basis1);f.scale(b,b,30*this.view.resolution);f.add(b,b,a.origin);f.add(b,b,a.basis1);return new p({x:b[0],y:b[1],spatialReference:this.view.spatialReference})}get _scaleGraphicGeometries(){var a=
this._displayPlane;if(!a)return[];const b=this.view.spatialReference;this._updateDisplayPlaneConrers(a);const {_cornerA:d,_cornerB:e,_cornerC:c,_cornerD:h}=this;a=f.lerp(this._avgAB,d,e,.5);const q=f.lerp(this._avgBC,e,c,.5),r=f.lerp(this._avgCD,c,h,.5),t=f.lerp(this._avgDA,h,d,.5);return[new p({x:d[0],y:d[1],spatialReference:b}),new p({x:e[0],y:e[1],spatialReference:b}),new p({x:c[0],y:c[1],spatialReference:b}),new p({x:h[0],y:h[1],spatialReference:b}),new p({x:a[0],y:a[1],spatialReference:b}),new p({x:q[0],
y:q[1],spatialReference:b}),new p({x:r[0],y:r[1],spatialReference:b}),new p({x:t[0],y:t[1],spatialReference:b})]}onActivate(){this.visible=!0}onDeactivate(){this.visible=!1}onShow(){this._graphicsLayer.visible=!0}onHide(){this._graphicsLayer.visible=!1}canUndo(){return this._editGeometryOperations.canUndo}canRedo(){return this._editGeometryOperations.canRedo}undo(){this._editGeometryOperations.undo();this.updateGraphics()}redo(){this._editGeometryOperations.redo();this.updateGraphics()}refresh(){const {view:a,
target:b}=this,d=this._editGeometryOperations,e=d.data.components[0].vertices,c=R.EditGeometry.fromGeometry(v.project("georeference"in b?b.georeference.coords:b.geometry,a.spatialReference),C.ViewingMode.Local).components[0].vertices;e.forEach((h,q)=>{d.setVertexPosition(h,c[q].pos)});this.updateGraphics()}reset(){var {target:a}=this;"georeference"in a?(a=a.georeference,"control-points"===a.type&&(a.controlPoints=this._initialControlPoints)):a.geometry=this._initialGeometry;this.refresh();this._sharedUndoStack.length=
0;this._sharedRedoStack.length=0}updateGraphics(){const a=this._editGeometryOperations.data.geometry;"georeference"in this.target&&(this.target.georeference.coords=a);this._graphic.geometry=a;this._backgroundGraphic.geometry=this._backgroundGraphicGeometry;this._rotateGraphic.geometry=this._rotateGraphicGeometry;this._scaleGraphicGeometries.forEach((b,d)=>{this._scaleGraphics[d].geometry=b})}setSharedUndoStack(a){this._sharedUndoStack=a}setSharedRedoStack(a){this._sharedRedoStack=a}async _initialize(){const {view:a,
target:b}=this;if("georeference"in b){const c=b.georeference;this._graphic=new u({geometry:c.coords});this._initialControlPoints="control-points"===c.type?c.controlPoints:null}else this._graphic=b,this._initialGeometry=b.geometry;a.map.addMany([this._graphicsLayer]);a.focus();this.visible=!1;this.finishToolCreation();await this._loadProjectionEngine();this._editGeometryOperations=S.EditGeometryOperations.fromGeometry(v.project(this._graphic.geometry,a.spatialReference),C.ViewingMode.Local);this._backgroundGraphic=
new u({symbol:new Y({color:"transparent",outline:{type:"simple-line",color:a.effectiveTheme.accentColor,width:2}}),geometry:this._backgroundGraphicGeometry});this._rotateGraphic=new u({symbol:new F({color:y.getContrast(a.effectiveTheme.accentColor),outline:{type:"simple-line",color:a.effectiveTheme.accentColor,width:1}}),geometry:this._rotateGraphicGeometry});this._scaleGraphics=this._scaleGraphicGeometries.map(c=>new u({symbol:new F({size:6,style:"square",color:y.getContrast(a.effectiveTheme.accentColor),
outline:{type:"simple-line",color:a.effectiveTheme.accentColor,width:1}}),geometry:c}));this._graphicsLayer.graphics.addMany([this._backgroundGraphic,this._rotateGraphic,...this._scaleGraphics]);this._dragManipulation=new M.DragManipulation({tool:this,view:a,graphic:this._graphic});this._rotateManipulation=new N.RotateManipulation({tool:this,view:a,graphic:this._rotateGraphic,snapRotation:this._snapRotation});this._scaleManipulations=this._scaleGraphics.map((c,h)=>new O.ScaleManipulation({tool:this,
view:a,graphic:c,direction:Z[h],preserveAspectRatio:this._preserveAspectRatio}));this.addHandles([this._dragManipulation.createDragPipeline(this._getInfo.bind(this),this._updateGraphics.bind(this)),this._rotateManipulation.createDragPipeline(this._getInfo.bind(this),this._updateGraphics.bind(this)),...this._scaleManipulations.map(c=>c.createDragPipeline(this._getInfo.bind(this),this._updateGraphics.bind(this))),I.watch(()=>this.view.scale,()=>this.active?this.updateGraphics():null),a.on("click",async c=>
{if(null==a.activeTool||a.activeTool===this){c=W.createScreenPointFromEvent(c);var h=[];a.map.allLayers.forEach(r=>{"vector-tile"!==r.type&&"imagery"!==r.type||h.push(r)});c=await this.view.hitTest(c,{exclude:h});var q=c.results;if(0===q.length)a.activeTool=null;else{c=V.findFirstGraphicHit(c.results);const r="georeference"in b;q=q.map(G=>"media"===G.type?G.element:null).filter(Boolean);const t=new Set([...this._graphicsLayer.graphics,r?null:b].filter(Boolean));(r?q.includes(b)||null!=c&&t.has(c.graphic):
null!=c&&t.has(c.graphic))?null==a.activeTool&&(a.activeTool=this):a.activeTool=null}}})]);const d=c=>{this.addHandles(c.events.on("grab-changed",h=>{"georeference"in b&&("start"===h.action?b.opacity*=.5:"end"===h.action&&(b.opacity*=2))}))};this._dragManipulation.forEachManipulator(d);this._rotateManipulation.forEachManipulator(d);this._scaleManipulations.forEach(c=>c.forEachManipulator(d));const e=new k.KeyBindings;e.addToggle(k.mediaKeys.preserveAspectRatio,()=>{null==this.preserveAspectRatio&&
(this._preserveAspectRatio.enabled=!this._preserveAspectRatio.enabled)});e.addToggle(k.mediaKeys.rotateIncrements,()=>{null==this.snapRotation&&(this._snapRotation.enabled=!this._snapRotation.enabled)});e.add(k.mediaKeys.toggleOpacity,()=>{"georeference"in b&&(b.opacity*=this._isOpacityToggled?2:.5,this._isOpacityToggled=!this._isOpacityToggled)});e.addToggle(k.mediaKeys.factorModifier,c=>this._factor="key-down"===c.type?10:1);e.add(k.mediaKeys.scaleUp,()=>this._scale(this._factor));e.add(k.mediaKeys.scaleDown,
()=>this._scale(-this._factor));e.add(k.mediaKeys.moveUp,()=>this._move(0,this._factor));e.add(k.mediaKeys.moveDown,()=>this._move(0,-this._factor));e.add(k.mediaKeys.moveLeft,()=>this._move(-this._factor,0));e.add(k.mediaKeys.moveRight,()=>this._move(this._factor,0));this.addHandles([a.on("key-down",c=>{a.activeTool===this&&e.dispatch(a.inputManager,c)}),a.on("key-up",c=>{a.activeTool===this&&e.dispatch(a.inputManager,c)})])}async _loadProjectionEngine(){return v.initializeProjection(this._graphic.geometry.spatialReference,
this.view.spatialReference)}_updateDisplayPlaneConrers(a){const {basis1:b,basis2:d,origin:e}=a;a=this._cornerA;f.add(a,e,b);f.add(a,a,d);a=this._cornerB;f.add(a,e,b);f.subtract(a,a,d);a=this._cornerC;f.subtract(a,e,b);f.subtract(a,a,d);a=this._cornerD;f.subtract(a,e,b);f.add(a,a,d)}_getInfo(){return{editGeometryOperations:this._editGeometryOperations,plane:this._plane,displayPlane:this._displayPlane}}_updateGraphics(a,b){"start"===a.action&&(this._sharedUndoStack.push({tool:this,operation:b}),this._sharedRedoStack.length=
0);this.updateGraphics()}_scale(a){var b=this._editGeometryOperations;const d=b.data.geometry.extent?.width;a=(d+a*this.view.resolution)/d;b=b.scale(this._plane.origin,B.UNIT_X,a,a,E.AccumulationBehavior.NEW_STEP,T.AccumulationType.REPLACE);this._sharedUndoStack.push({tool:this,operation:b});this._sharedRedoStack.length=0;this.updateGraphics()}_move(a,b){a=this._editGeometryOperations.move(a*this.view.resolution,b*this.view.resolution,0,E.AccumulationBehavior.NEW_STEP);this._sharedUndoStack.push({tool:this,
operation:a});this._sharedRedoStack.length=0;this.updateGraphics()}};l.__decorate([m.property()],g.TransformTool.prototype,"_plane",null);l.__decorate([m.property()],g.TransformTool.prototype,"_backgroundGraphicGeometry",null);l.__decorate([m.property()],g.TransformTool.prototype,"_rotateGraphicGeometry",null);l.__decorate([m.property()],g.TransformTool.prototype,"_scaleGraphicGeometries",null);l.__decorate([m.property()],g.TransformTool.prototype,"preserveAspectRatio",void 0);l.__decorate([m.property()],
g.TransformTool.prototype,"snapRotation",void 0);l.__decorate([m.property({constructOnly:!0,nonNullable:!0})],g.TransformTool.prototype,"target",void 0);l.__decorate([m.property({readOnly:!0})],g.TransformTool.prototype,"type",void 0);l.__decorate([m.property({constructOnly:!0})],g.TransformTool.prototype,"view",void 0);g.TransformTool=l.__decorate([J.subclass("esri.views.2d.interactive.editingTools.TransformTool")],g.TransformTool);g.keys=x;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});