// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../geometry ../../Viewpoint ../../core/JSONSupport ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ../../core/libs/gl-matrix-2/math/common ../../core/libs/gl-matrix-2/math/mat2d ../../core/libs/gl-matrix-2/factories/mat2df32 ../../core/libs/gl-matrix-2/factories/mat2df64 ../../core/libs/gl-matrix-2/math/mat3 ../../core/libs/gl-matrix-2/factories/mat3f32 ../../core/libs/gl-matrix-2/math/vec2 ../../core/libs/gl-matrix-2/factories/vec2f32 ../../core/libs/gl-matrix-2/factories/vec2f64 ../../core/libs/gl-matrix-2/types/vec2 ../../geometry/support/normalizeUtils ./viewpointUtils ../../geometry/Extent ../../geometry/Point".split(" "),
function(p,g,y,D,q,L,M,N,E,F,t,G,u,r,v,h,z,H,w,I,n,J,K){var x;const k=[0,0];g=x=class extends D.JSONSupport{constructor(a){super(a);this._viewpoint2D={center:H.create(),rotation:0,scale:0,spatialReference:void 0};this.center=[0,0];this.extent=new J;this.id=0;this.inverseTransform=u.create();this.scale=this.rotation=this.resolution=0;this.transform=u.create();this.transformNoRotation=u.create();this.displayMat3=v.create();this.displayViewMat3=v.create();this.viewMat3=v.create();this.viewMat2d=G.create();
this.worldScreenWidth=0;this.size=[0,0]}set pixelRatio(a){this._set("pixelRatio",a);this._update()}set size(a){this._set("size",a);this._update()}set viewpoint(a){if(a){const b=this._viewpoint2D,c=a.targetGeometry;b.center[0]=c.x;b.center[1]=c.y;b.rotation=a.rotation;b.scale=a.scale;b.spatialReference=c.spatialReference}this._update()}get visibleArea(){const [a,b]=this.size,c=this.toMap([0,0],0,0),l=this.toMap([0,0],0,b),f=this.toMap([0,0],a,b),d=this.toMap([0,0],a,0);return[c,l,f,d]}copy(a){const b=
this.size,c=this.viewpoint;c&&b?(this.viewpoint=n.copy(c,a.viewpoint),this._set("size",h.copy(b,a.size))):(this.viewpoint=a.viewpoint.clone(),this._set("size",[a.size[0],a.size[1]]));this._set("pixelRatio",a.pixelRatio);return this}clone(){return new x({size:this.size,viewpoint:this.viewpoint.clone(),pixelRatio:this.pixelRatio})}toMap(a,b,c){if(w.isVec2(b))return h.transformMat2d(a,b,this.inverseTransform);k[0]=b;k[1]=c;return h.transformMat2d(a,k,this.inverseTransform)}toScreen(a,b,c){if(w.isVec2(b))return h.transformMat2d(a,
b,this.transform);k[0]=b;k[1]=c;return h.transformMat2d(a,k,this.transform)}toScreenNoRotation(a,b,c){if(w.isVec2(b))return h.transformMat2d(a,b,this.transformNoRotation);k[0]=b;k[1]=c;return h.transformMat2d(a,k,this.transformNoRotation)}wrapMapCoordinate(a,b){h.copy(a,b);[b]=b;const [c]=this.center,{extent:l,spatialReference:f}=this;let {xmin:d,xmax:m}=l;if(f.isWrappable){const e=n.getWorldWidth(f)/2;d=Math.max(d,c-e);m=Math.min(m,c+e)}if(b<d||b>m)a[0]=I.getClosestDenormalizedXToReference(b,c,f);
return a}getScreenTransform(a,b){const {center:c}=this._viewpoint2D,l=this._get("pixelRatio")||1,f=this._get("size");n.getMatrix(a,c,f,b,0,l);return a}_update(){const {center:a,spatialReference:b,scale:c,rotation:l}=this._viewpoint2D,f=this._get("pixelRatio")||1,d=this._get("size"),m=new y({targetGeometry:new K(a[0],a[1],b),scale:c,rotation:l});this._set("viewpoint",m);if(d&&b&&c){this.resolution=n.getResolution(m);this.rotation=l;this.scale=c;this.spatialReference=b;h.copy(this.center,a);r.set(this.displayMat3,
0!==d[0]?2/d[0]:0,0,0,0,0!==d[1]?-2/d[1]:0,0,-1,1,1);var e=r.identity(this.viewMat3),A=z.fromValues(d[0]/2,d[1]/2),B=z.fromValues(-d[0]/2,-d[1]/2),C=F.toRadian(l);r.translate(e,e,A);r.rotate(e,e,C);r.translate(e,e,B);r.multiply(this.displayViewMat3,this.displayMat3,e);e=t.fromTranslation(this.viewMat2d,A);t.rotate(e,e,C);t.translate(e,e,B);n.getExtent(this.extent,m,d);n.getTransform(this.transform,m,d,f);t.invert(this.inverseTransform,this.transform);n.getTransformNoRotation(this.transformNoRotation,
m,d,f);this.worldScreenWidth=n.getWorldScreenWidth(this.spatialReference,this.resolution);this._set("id",this.id+1);this.notifyChange("visibleArea");return this}}};p.__decorate([q.property({readOnly:!0})],g.prototype,"id",void 0);p.__decorate([q.property({value:1,json:{write:!0}})],g.prototype,"pixelRatio",null);p.__decorate([q.property({json:{write:!0}})],g.prototype,"size",null);p.__decorate([q.property()],g.prototype,"spatialReference",void 0);p.__decorate([q.property({type:y,json:{write:!0}})],
g.prototype,"viewpoint",null);p.__decorate([q.property({readOnly:!0})],g.prototype,"visibleArea",null);return g=x=p.__decorate([E.subclass("esri.views.2d.ViewState")],g)});