// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["../../../geometry/support/aaBoundingRect","./TileCache","./TileCoverage","./TileKey"],function(u,z,A,B){const l=new B(0,0,0,0),e=new Map,p=[],v=[];class C{constructor(a){this._previousScale=Number.POSITIVE_INFINITY;this.cachePolicy="keep";this.coveragePolicy="closest";this.resampling=!0;this.tileIndex=new Map;this.tiles=[];this.buffer=192;this.acquireTile=a.acquireTile;this.releaseTile=a.releaseTile;this.tileInfoView=a.tileInfoView;null!=a.resampling&&(this.resampling=a.resampling);a.cachePolicy&&
(this.cachePolicy=a.cachePolicy);a.coveragePolicy&&(this.coveragePolicy=a.coveragePolicy);null!=a.buffer&&(this.buffer=a.buffer);a.cacheSize&&(this._tileCache=new z(a.cacheSize,this.tileInfoView,d=>{this.releaseTile(d)}))}destroy(){this.tileIndex.clear()}update(a){const {resampling:d,tileIndex:b}=this,{scale:f,center:r,resolution:D}=a.state,{minScale:E,maxScale:F}=this.tileInfoView,w=!a.stationary&&f>this._previousScale;this._previousScale=f;if(!d&&(f>E||f<F))this.tiles.length=0,this.clear();else if(a=
this.tileInfoView.getTileCoverage(a.state,this.buffer,this.resampling,this.coveragePolicy)){var {spans:y,lodInfo:x}=a,{level:q}=x;this.tiles.length=0;b.forEach(c=>c.visible=!0);var t=0,n=0;if(0<y.length)for(const {row:c,colFrom:m,colTo:G}of y)for(var k=m;k<=G;k++){t++;const g=l.set(q,c,x.normalizeCol(k),x.getWorldForColumn(k)).id;let h=b.get(g);if(h)h.isReady?(e.set(g,h),n++):w||this._addParentTile(g,e);else{if(this._tileCache?.has(g)){if(h=this._tileCache.pop(g),this.tileIndex.set(g,h),h.isReady){e.set(g,
h);n++;continue}}else h=this.acquireTile(l),this.tileIndex.set(g,h);w||this._addParentTile(g,e)}}t=n===t;for(const [c,m]of b)e.has(c)||(l.set(c),n=this.tileInfoView.intersects(a,l),k="purge"===this.cachePolicy?l.level!==q:l.level>q,!n||!w&&t?!k&&n||p.push(m):m.isReady?k&&"purge"===this.cachePolicy&&this._hasReadyAncestor(l,q)?p.push(m):v.push(m):k&&p.push(m));for(const c of v)c.isReady&&e.set(c.key.id,c);for(const c of p)this._tileCache?this._tileCache.add(c):this.releaseTile(c),b.delete(c.key.id);
for(const c of e.values())this.tiles.push(c);for(const c of b.values())e.has(c.key.id)||(c.visible=!1);this._tileCache?.prune(q,r,D);A.pool.release(a);v.length=0;p.length=0;e.clear()}else this.tiles.length=0,this.clear()}clear(){const {tileIndex:a}=this;for(const d of a.values())this.releaseTile(d);a.clear()}refresh(a){for(const d of this.tileIndex.values())a(d);this._tileCache?.clear()}updateCacheSize(a){this._tileCache&&(this._tileCache.maxSize=a)}_addParentTile(a,d){let b=null;for(;;){a=this.tileInfoView.getTileParentId(a);
if(!a)break;if(this.tileIndex.has(a)){if(b=this.tileIndex.get(a),b?.isReady){d.has(b.key.id)||d.set(b.key.id,b);break}}else if(this._tileCache?.has(a)&&(b=this._tileCache.pop(a),this.tileIndex.set(a,b),b?.isReady)){d.has(b.key.id)||d.set(b.key.id,b);break}}}_hasReadyAncestor(a,d){const b=u.create();this.tileInfoView.getTileBounds(b,a,!0);for(const f of this.tileIndex.values())if(f.isReady&&f.key.level>=d&&f.key.level<a.level){const r=u.create();this.tileInfoView.getTileBounds(r,f.key,!0);if(u.contains(r,
b))return!0}return!1}}return C});