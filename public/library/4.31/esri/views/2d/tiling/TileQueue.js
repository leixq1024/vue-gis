// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/MapUtils ../../../core/maybe ../../../core/SetUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../core/libs/gl-matrix-2/math/vec2 ../../support/QueueProcessor".split(" "),function(h,d,p,q,r,k,w,x,y,t,u,v){const n=[0,0];d=class extends d{constructor(a){super(a);this._keyToItem=new Map;this._tilesByScale=
new Map;this.concurrency=6}initialize(){const {concurrency:a,process:c,scheduler:e,priority:f}=this;this._queue=new v.QueueProcessor({concurrency:a,scheduler:e,priority:f,process:(b,g)=>{b=this._keyToItem.get(b);return c(b,{signal:g})},peeker:b=>this._peek(b)})}destroy(){this.clear();this._queue=q.destroyMaybe(this._queue)}get length(){return this._queue?this._queue.length:0}abort(a){this._queue.abort("string"===typeof a?a:a.id)}clear(){this._queue.clear();this._keyToItem.clear();this._tilesByScale.clear()}has(a){return"string"===
typeof a?this._keyToItem.has(a):this._keyToItem.has(a.id)}pause(){this._queue.pause()}push(a){const c=a.key.id;if(this._queue.has(c))return this._queue.get(c);const e=this._queue.push(c),f=this.tileInfoView.getTileScale(a.key),b=p.getOrCreateMapValue(this._tilesByScale,f,()=>new Set),g=()=>{b.delete(a.key);0===b.size&&this._tilesByScale.delete(f);this._keyToItem.delete(c)};b.add(a.key);this._keyToItem.set(c,a);e.then(g,g);return e}reset(){this._queue.reset()}resume(){this._queue.resume()}_peek(a){if(!this.state)return a.values().next().value;
const c=new Set;for(var e of a)c.add(this._keyToItem.get(e).key);e=this.state.scale;let f=Number.POSITIVE_INFINITY,b;for(const [g,l]of this._tilesByScale)if(r.someSet(l,m=>c.has(m))){const m=Math.abs(g-e);m<f&&(b=l,f=m)}return this._getClosestTileKey(b,a).id}_getClosestTileKey(a,c){const e=this.tileInfoView,f=this.state.center;let b=Number.POSITIVE_INFINITY,g;for(const l of a)c.has(l.id)&&(e.getTileCoords(n,l),a=u.distance(n,f),a<b&&(b=a,g=l));return g}};h.__decorate([k.property({constructOnly:!0})],
d.prototype,"concurrency",void 0);h.__decorate([k.property({constructOnly:!0})],d.prototype,"priority",void 0);h.__decorate([k.property({constructOnly:!0})],d.prototype,"process",void 0);h.__decorate([k.property({constructOnly:!0})],d.prototype,"scheduler",void 0);h.__decorate([k.property()],d.prototype,"state",void 0);h.__decorate([k.property({constructOnly:!0})],d.prototype,"tileInfoView",void 0);return d=h.__decorate([t.subclass("esri.views.2d.tiling.TileQueue")],d)});