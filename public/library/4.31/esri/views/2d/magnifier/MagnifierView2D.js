// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../request ../../../core/asyncUtils ../../../core/Handles ../../../core/maybe ../../../core/reactiveUtils ../../../core/libs/gl-matrix-2/factories/mat3f32 ../../../core/support/UpdatingHandles ../engine/DisplayObject ../engine/webgl/enums ../engine/webgl/shaderGraph/techniques/magnifier/MagnifierTechnique ../../magnifier/resources".split(" "),function(f,k,l,g,e,m,n,p,q,r,t){class u extends p.DisplayObject{constructor(){super();this._handles=new l;this._magnifierTechnique=new r.MagnifierTechnique;
this.updatingHandles=new n.UpdatingHandles;this.visible=!1}destroy(){this._handles=g.destroyMaybe(this._handles);this._magnifierTechnique.shutdown();this._resourcesTask=g.abortMaybe(this._resourcesTask)}get backgroundColor(){return this._backgroundColor}set backgroundColor(a){this._backgroundColor=a;this.requestRender()}get magnifier(){return this._magnifier}set magnifier(a){this._magnifier=a;this._handles.removeAll();this._handles.add([e.watch(()=>a.version,()=>{this.visible=a.visible&&null!=a.position&&
0<a.size;this.requestRender()},e.initial),e.watch(()=>[a.maskUrl,a.overlayUrl],()=>this._reloadResources()),e.watch(()=>a.size,()=>{this._magnifierTechnique.shutdown();this.requestRender()})])}_createTransforms(){return{displayViewScreenMat3:m.create()}}doRender(a){if(!this._resourcesTask)this._reloadResources();else if(a.drawPhase===q.WGLDrawPhase.MAP&&this._canRender()){var c=this._magnifier;if(null!=c.position){this._magnifierTechnique.updateResources(a,this._mask,this._overlay,c);var b=this.backgroundColor;
this._magnifierTechnique.render(a,{background:b?[b.a*b.r/255,b.a*b.g/255,b.a*b.b/255,b.a]:[1,1,1,1],maskEnabled:c.maskEnabled?1:0,overlayEnabled:c.overlayEnabled?1:0})}}}_canRender(){return this._mask&&this._overlay&&null!=this._magnifier}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const a=null!=this._magnifier?this._magnifier.maskUrl:null,c=null!=this._magnifier?this._magnifier.overlayUrl:null;this._resourcesTask=k.createTask(async b=>{const h=null==a||null==c?t.loadMagnifierResources(b):
null,v=null!=a?f(a,{responseType:"image",signal:b}).then(d=>d.data):h.then(d=>d.mask);b=null!=c?f(c,{responseType:"image",signal:b}).then(d=>d.data):h.then(d=>d.overlay);const [w,x]=await Promise.all([v,b]);this._mask=w;this._overlay=x;this._magnifierTechnique.shutdown();this.requestRender()});this.updatingHandles.addPromise(this._resourcesTask.promise)}}return u});