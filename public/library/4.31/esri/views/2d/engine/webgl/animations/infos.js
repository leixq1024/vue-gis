// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","./instructions"],function(e,l){function u(a){return a instanceof m?a:"object"===typeof a&&"type"in a?v[a.type].hydrate(a):new f(a)}class m{constructor(a){this.inputs=a}encode(){const a=[];for(const b of this.inputs)a.push(...b.encode());a.push(...this.instructions);return a}}class f extends m{constructor(a){super([]);this.value=a}simplify(){return this}get instructions(){if(Array.isArray(this.value)){const [a,b,g,c]=this.value;return null!=c?l.instructions.vector4.encode([a,b||
0,g||0,c]):l.instructions.vector3.encode([a,b||0,g||0])}return l.instructions.scalar.encode(this.value)}}class r extends m{constructor(a,b){super([b]);this._config=a;this._parent=b}static hydrate(a){return new r(a,u(a.parent))}simplify(){if(this._config.relativeTranslation||this._config.absoluteScale)return this;var a=this._parent.simplify();if(!(a instanceof f))return this;const [b,g,c,d]=a.value,h=this._config.translation.from[0],k=this._config.translation.from[1],n=this._config.rotation.from,p=
this._config.scale.from;if(h===this._config.translation.to[0]&&k===this._config.translation.to[1]&&n===this._config.rotation.to&&p===this._config.scale.to){a=Math.sin(c);const q=Math.cos(c);return new f([q*d*h-a*d*k+b,a*d*h+q*d*k+g,c+n,d*p])}return new r(this._config,a)}get instructions(){return l.instructions.animatedTransform.encode(this._config)}}class t extends m{constructor(a,b){super([b]);this._config=a;this._parent=b}static hydrate(a){return new t(a,u(a.parent))}simplify(){const a=this._parent.simplify();
if(!(a instanceof f))return this;const [b,g,c,d]=a.value,h=this._config.color.from[0],k=this._config.color.from[1],n=this._config.color.from[2];let p=this._config.color.from[3];const q=this._config.opacity.from;return h===this._config.color.to[0]&&k===this._config.color.to[1]&&n===this._config.color.to[2]&&p===this._config.color.to[3]&&q===this._config.opacity.to?new f([b*h,g*k,c*n,d*p*q]):new t(this._config,a)}get instructions(){return l.instructions.animatedColor.encode(this._config)}}const v={AnimatedTransform:r,
AnimatedColor:t};e.AAnimationInfo=m;e.AnimatedColor=t;e.AnimatedTransform=r;e.Constant=f;e.hydrate=u;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});