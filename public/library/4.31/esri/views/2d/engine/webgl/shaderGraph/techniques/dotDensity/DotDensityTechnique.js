// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../definitions ../../utils ../FeatureTechnique ../featureTechniqueUtils ../TechniqueType ./DotDensityPointShader ./DotDensityPolygonShader ./DotDensityResources ../shaders/FillShader ../../../../../../webgl/enums".split(" "),function(n,e,p,q,d,r,t,u,v,w,x){class y extends q.FeatureTechnique{constructor(){super(...arguments);this.type=r.TechniqueType.DotDensity;this.shaders={polygon:new u.DotDensityPolygonShader,point:new t.DotDensityPointShader,fill:new w.FillShader};this._resources=
new Map}render(a,c){d.isHighlight(a)||d.isHittest(a)?this._renderPolygons(a,c):this._renderDotDensity(a,c)}_renderPolygons(a,c){const {painter:b}=a;b.setShader({shader:this.shaders.fill,uniforms:{...d.getFeatureUniforms(a,c.target),visualVariableColor:null,visualVariableOpacity:null},defines:{...d.getSelectionDefines(a)},optionalAttributes:{zoomRange:!1},useComputeBuffer:d.isHittest(a)});b.setPipelineState(d.getFeaturePipelineState(a));b.submitDraw(a,c)}_renderDotDensity(a,c){const {context:b,painter:h,
requiredLevel:z}=a,g=c.instance.getInput().uniforms,m=this._getOrCreateResourcesRecord(b);var f=m.getDotDensityTextures(b,e.tileSize,g.seed),l=1/2**(z-c.target.key.level),k=e.tileSize;k=k*window.devicePixelRatio*k*window.devicePixelRatio;const A=1/l*(g.dotScale?a.state.scale/g.dotScale:1)*g.dotValue*(1/l);h.setShader({shader:this.shaders.polygon,uniforms:{...d.getFeatureUniforms(a,c.target),instance:{isActive:g.isActive,colors:g.colors,dotValue:Math.max(1,A)},draw:{dotTexture0:{unit:e.textureBindingRenderer0,
texture:f[0]},dotTexture1:{unit:e.textureBindingRenderer1,texture:f[1]},tileZoomFactor:l,pixelRatio:window.devicePixelRatio,tileDotsOverArea:k/(e.tileSize*window.devicePixelRatio*e.tileSize*window.devicePixelRatio)}},defines:{...d.getSelectionDefines(a),blending:g.blending},optionalAttributes:{},useComputeBuffer:!1});f=b.getViewport();b.setViewport(0,0,e.tileSize,e.tileSize);l=b.getBoundFramebufferObject();k=m.getFBO(b);b.bindFramebuffer(k);b.setClearColor(0,0,0,0);b.clear(x.FramebufferBit.COLOR);
h.setPipelineState({color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1});h.updatePipelineState(b);h.submitDraw(a,c);b.bindFramebuffer(l);b.setViewport(f.x,f.y,f.width,f.height);f=m.getFBO(b).colorTexture;c={shader:this.shaders.point,uniforms:{view:d.getViewUniforms(a,c.target),instance:{dotSize:g.dotSize},draw:{locations:{unit:e.textureBindingRenderer0,texture:f},tileZoomFactor:1,pixelRatio:window.devicePixelRatio}},defines:{...d.getSelectionDefines(a)},optionalAttributes:{},useComputeBuffer:!1};
h.setPipelineState(d.getFeaturePipelineState(a));h.submitDrawMesh(b,c,m.getDotDensityMesh(b,p.getLocations(this.shaders.point)))}shutdown(a){super.shutdown(a);this._resources.get(a)?.destroy();this._resources.delete(a)}_getOrCreateResourcesRecord(a){let c=this._resources.get(a);null==c&&(c=new v.DotDensityResources,this._resources.set(a,c));return c}}n.DotDensityTechnique=y;Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});