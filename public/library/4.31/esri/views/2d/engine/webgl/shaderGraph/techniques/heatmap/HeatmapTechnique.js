// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../enums ../FeatureTechnique ../featureTechniqueUtils ../TechniqueType ./HeatmapResources ../shaders/HeatmapAccumulateShader ../shaders/HeatmapResolveShader ../../../../../../webgl/enums".split(" "),function(p,m,u,l,v,w,x,y,h){function q(a){return a.key.level+1}function r(a,b){const {referenceScale:c,radius:d}=a.uniforms;return d*(0!==c?c/b.scale:1)}class z extends u.FeatureTechnique{constructor(){super(...arguments);this.type=v.TechniqueType.Heatmap;this.drawPhase=m.WGLDrawPhase.MAP|
m.WGLDrawPhase.HITTEST|m.WGLDrawPhase.DEBUG;this.shaders={accumulate:new x.HeatmapAccumulateShader,resolve:new y.HeatmapResolveShader};this._isBound=!1;this._resources=new Map}shutdown(a){super.shutdown(a);this._resources.get(a)?.destroy();this._resources.delete(a);this._prevFBO=null;this._unbind()}render(a,b){const {context:c,painter:d,state:e}=a;var f=b.instance.getInput();const {isFieldActive:g}=f.uniforms,k=this._getOrCreateResourcesRecord(c),n=k.loadQualityProfile(c);l.isHittest(a)||this._bind(a,
k,f);d.setShader({shader:this.shaders.accumulate,uniforms:{...l.getFeatureUniforms(a,b.target),kernelControls:{radius:r(f,e),isFieldActive:g?1:0}},defines:{...l.getSelectionDefines(a),...n.defines},optionalAttributes:{},useComputeBuffer:l.isHittest(a)});f=l.isHittest(a)?A:t;d.setPipelineState(f);d.submitDraw(a,b)}getStencilReference(a){return q(a)}renderResolvePass(a,b){if(!l.isHittest(a)){var {context:c,painter:d}=a,e=this._resources.get(c);if(null!=this._prevFBO&&null!=this._prevViewport&&e?.initialized){({defines:a}=
e.loadQualityProfile(c));var {minDensity:f,maxDensity:g,radius:k}=b.getInput().uniforms;b=e.accumulateFramebuffer;e=e.resolveGradientTexture;a={shader:this.shaders.resolve,uniforms:{accumulatedDensity:{texture:{unit:8,texture:b.colorTexture},minAndInvRange:[f,1/(g-f)],normalization:3/(k*k*Math.PI)},gradient:{texture:{unit:9,texture:e}}},defines:a,optionalAttributes:{},useComputeBuffer:!1};c.bindFramebuffer(this._prevFBO);c.setViewport(0,0,this._prevViewport.width,this._prevViewport.height);c.bindTexture(b.colorTexture,
8);c.bindTexture(e,9);d.setPipelineState(B);d.submitDrawMesh(c,a,d.quadMesh);this._unbind()}}}_getOrCreateResourcesRecord(a){let b=this._resources.get(a);null==b&&(b=new w.HeatmapResources,this._resources.set(a,b));return b}_unbind(){this._prevViewport=this._prevFBO=null;this._isBound=!1}_bind(a,b,c){if(!this._isBound){var {context:d,state:e,pixelRatio:f}=a;a=d.getBoundFramebufferObject();var g=d.getViewport();this._prevFBO=a;this._prevViewport=g;var {gradient:k,gradientHash:n}=c.uniforms;b.ensureResolveGradientTexture(d,
n,k);var {width:C,height:D}=g;c=r(c,e);g=1.5<f?.25:.5;c=c<1/(2*g)?1:g;b=b.ensureAccumulateFBO(d,C*c,D*c);d.blitFramebuffer(a,b,0,0,a.width,a.height,0,0,b.width,b.height,h.FramebufferBit.STENCIL,h.TextureSamplingMode.NEAREST);d.bindFramebuffer(b);d.setViewport(0,0,b.width,b.height);d.setColorMask(!0,!0,!0,!0);d.setClearColor(0,0,0,0);d.clear(h.FramebufferBit.COLOR);this._isBound=!0}}}const t={color:{write:[!0,!0,!0,!0],blendMode:"additive"},depth:!1,stencil:{write:!1,test:{ref:q,compare:h.CompareFunction.GEQUAL,
mask:255,op:{fail:h.StencilOperation.KEEP,zFail:h.StencilOperation.KEEP,zPass:h.StencilOperation.REPLACE}}}},A={...t,stencil:!1},B={color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1};p.HeatmapTechnique=z;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});