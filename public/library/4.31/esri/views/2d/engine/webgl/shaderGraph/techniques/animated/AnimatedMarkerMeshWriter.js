// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../core/screenUtils ../../../definitions ./AnimatedMeshWriter ../fill/meshWriterUtils ../shaders/constants ../../../../../../webgl/enums".split(" "),function(p,n,r,q,t,u,h){class v extends q.AAnimatedMeshWriter{get vertexSpec(){return{createComputedParams:a=>{let {pixelDimensions:b,texelDimensions:d,baseSize:e,referenceSize:f,strokeWidth:c,sizeRatio:g}=a;b||=a.sprite.sdf?[0,0]:[a.sprite.width,a.sprite.height];d||=a.sprite.sdf?[0,0]:b;e=n.pt2px(e);f=n.pt2px(f);c=n.pt2px(c);
return{...a,pixelDimensions:b,texelDimensions:d,baseSize:e,referenceSize:f,strokeWidth:c,sdfDecodeCoeff:(a.sprite.sdfDecodeCoeff??1)*g}},optionalAttributes:{zoomRange:{type:h.DataType.SHORT,count:2,packPrecisionFactor:r.minMaxZoomPrecisionFactor,pack:({scaleInfo:a},{tileInfo:b})=>t.getMinMaxZoom(a,b)}},attributes:{id:{type:h.DataType.UNSIGNED_BYTE,count:3,pack:"id"},bitset:{type:h.DataType.UNSIGNED_BYTE,count:1,pack:q.packAnimatedBitset},pos:{type:h.DataType.SHORT,count:2,pack:"position",packPrecisionFactor:1},
offset:{type:h.DataType.FLOAT,count:2,packAlternating:{count:4,pack:a=>{a=a.texelDimensions;return[[-.5*a[0],-.5*a[1]],[.5*a[0],-.5*a[1]],[-.5*a[0],.5*a[1]],[.5*a[0],.5*a[1]]]}}},uv:{type:h.DataType.SHORT,count:2,packPrecisionFactor:1,packAlternating:{count:4,packTessellation:({texXmax:a,texXmin:b,texYmax:d,texYmin:e})=>[[b,e],[a,e],[b,d],[a,d]]}},animationPointerAndBaseSizeAndReferenceSize:{type:h.DataType.UNSIGNED_SHORT,count:4,packPrecisionFactor:1,pack:({animations:a,baseSize:b,referenceSize:d})=>
[a.dataColumn,a.dataRow,b,d]},sizing:{type:h.DataType.UNSIGNED_SHORT,count:4,packPrecisionFactor:8,pack:({strokeWidth:a,pixelDimensions:b,baseSize:d,sprite:e,sizeRatio:f})=>[b[0],b[1],a,e.sdfDecodeCoeff*Math.max(d*e.width/e.height,d)*f]},angle:{type:h.DataType.BYTE,count:1,packTessellation:({angle:a})=>a}}}}_write(a,b){var {textureBinding:d}=this.evaluatedMeshParams.sprite;a.recordStart(this.instanceId,this.attributeLayout,d);const e=b.getDisplayId();if("esriGeometryPolygon"===b.geometryType){b=b.readCentroidForDisplay();
if(!b)return;const [f,c]=b.coords;this._writeQuad(a,e,f,c)}else if("esriGeometryPoint"===b.geometryType)d=b.readXForDisplay(),b=b.readYForDisplay(),this._writeQuad(a,e,d,b);else if(b=b.readGeometryForDisplay())if({angleToLine:d}=this.evaluatedMeshParams,d){let f=!0,c=null,g=null;b.forEachVertex((k,l)=>{if(null!=c&&null!=g){const m=Math.atan2(l-g,k-c)/u.c256ToRad;f&&(this._writeQuad(a,e,c,g,m),f=!1);this._writeQuad(a,e,k,l,m)}c=k;g=l})}else b.forEachVertex((f,c)=>{this._writeQuad(a,e,f,c)});a.recordEnd()}_writeQuad(a,
b,d,e,f=0){var {rect:c}=this.evaluatedMeshParams.sprite,g=c.x+2;const k=c.y+2,l=c.x+c.width-2,m=c.y+c.height-2;c=a.vertexCount();a.recordBounds(d,e,64,64);f={texXmin:g,texYmin:k,texXmax:l,texYmax:m,angle:f};for(g=0;4>g;g++)this._writeVertex(a,b,d,e,f);a.indexEnsureSize(6);a.indexWrite(c);a.indexWrite(c+1);a.indexWrite(c+2);a.indexWrite(c+1);a.indexWrite(c+3);a.indexWrite(c+2)}}p.AnimatedMarkerMeshWriter=v;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});