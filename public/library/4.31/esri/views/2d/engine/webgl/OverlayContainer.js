// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../../core/libs/gl-matrix-2/math/common ../../../../core/libs/gl-matrix-2/math/mat3 ../../../../core/libs/gl-matrix-2/factories/mat3f32 ../../../../core/libs/gl-matrix-2/factories/vec2f32 ../../../../core/libs/gl-matrix-2/factories/vec3f32 ../../../../geometry/support/normalizeUtils ../../../../geometry/support/spatialReferenceUtils ../../viewpointUtils ./enums ./WGLContainer ./shaderGraph/techniques/overlay/OverlayTechnique".split(" "),function(v,m,y,z,A,B,C,D,E,F,G){class H extends F{constructor(){super(...arguments);
this._viewStateId=-1;this._dvsMat3=y.create();this._overlayTechnique=new G.OverlayTechnique}get dvsMat3(){return this._dvsMat3}beforeRender(a){this._updateMatrices(a);this._updateOverlays(a,this.children);for(const d of this.children)d.beforeRender(a)}doRender(a){if(a.drawPhase===E.WGLDrawPhase.MAP&&this.visible){super.doRender(a);var d=this._overlayTechnique;for(const k of this.children)k.draw(a,d)}}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(a){var {state:d}=a;const {id:k,size:h,
pixelRatio:n,resolution:p,rotation:r,viewpoint:t,displayMat3:q}=d;if(this._viewStateId!==k){a=v.toRadian(r);var b=n*h[0],e=n*h[1];this._localOrigin=t.targetGeometry.clone();var {x:g,y:f}=this._localOrigin;d=B.normalizeMapX(g,d.spatialReference);this._localOrigin.x=d;this._localOrigin.y=f;d=p*b;var l=p*e,c=m.identity(this._dvsMat3);m.multiply(c,c,q);m.translate(c,c,z.fromValues(b/2,e/2));m.scale(c,c,A.fromValues(b/d,-e/l,1));m.rotate(c,c,-a);this._viewStateId=k}}_updateOverlays(a,d){({state:a}=a);
const {rotation:k,spatialReference:h,worldScreenWidth:n,size:p,viewpoint:r}=a,t=this._localOrigin;let q=0;var b=C.getInfo(h);if(b&&h.isWrappable){var e=p[0];var g=p[1],f=v.toRadian(k);f=Math.round(e*Math.abs(Math.cos(f))+g*Math.abs(Math.sin(f)));const [c,w]=b.valid;b=D.getWorldWidth(h);const {x,y:I}=r.targetGeometry;e=[0,0];a.toScreen(e,[x,I]);g=[0,0];f=f>n?.5*n:.5*f;var l=Math.floor((x+.5*b)/b);const J=c+l*b;l=w+l*b;const u=[e[0]+f,0];a.toMap(g,u);g[0]>l&&(q=b);u[0]=e[0]-f;a.toMap(g,u);g[0]<J&&(q=
-b);e={worldWidth:b,xBounds:[c,w]}}for(const c of d)c.updateDrawCoords(t,q,h,e)}}return H});