// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../../core/Error ../../../../core/events ../../../../core/Handles ../../../../core/Logger ../../../../core/maybe ../../../../core/perspectiveUtils ../../../../core/reactiveUtils ../../../../core/libs/gl-matrix-2/factories/mat3f64 ../../../../core/libs/gl-matrix-2/math/vec2 ../../../../core/libs/gl-matrix-2/factories/vec2f64 ../../../../symbols/cim/enums ../DisplayObject ./animatedFormats/utils ../../../webgl/enums ../../../webgl/Texture ../../../webgl/TextureDescriptor".split(" "),function(C,
m,D,E,r,F,e,G,H,I,q,J,K,L,t,M){function N(b){return b?{type:"CIMAnimatedSymbolProperties",...b,playAnimation:b.playing,repeatType:b.repeatType?O[b.repeatType]:void 0}:{type:"CIMAnimatedSymbolProperties"}}const u=[1,1],k=G.create(),O={none:q.AnimatedSymbolRepeatType.None,loop:q.AnimatedSymbolRepeatType.Loop,oscillate:q.AnimatedSymbolRepeatType.Oscillate};class P extends J.DisplayObject{constructor(b){super();this.elementView=b;this.isWrapAround=!1;this.wrapAroundShift=0;this.perspectiveTransform=I.create();
this._handles=new D;this._vertices=new Float32Array(8);this._indices=new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]);this._handles.add([e.watch(()=>this.elementView.element.opacity,c=>this.opacity=c,e.initial),e.watch(()=>[this.elementView.coords],()=>{this.requestRender()},e.initial),e.watch(()=>["animationOptions"in this.elementView.element&&this.elementView.element.animationOptions],()=>{this._handles.remove("play");this.texture=r.disposeMaybe(this.texture);this.requestRender()},e.initial),
e.when(()=>this.elementView.element.loaded,()=>{const c=this.elementView.element;this.ready();"video"===c.type&&null!=c.content&&(this._handles.add([m.on(c.content,"play",()=>this.requestRender()),m.on(c.content,"loadeddata",()=>this.requestRender()),m.on(c.content,"loaded",()=>this.requestRender())]),"requestVideoFrameCallback"in c.content?c.content.requestVideoFrameCallback(()=>this.requestRender()):this._handles.add([m.on(c.content,"seeked",()=>this.requestRender())]),this.requestRender())},e.initial)]);
b.element.load().catch(c=>{E.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new C("element-load-error","Element cannot be displayed",{element:b,error:c}))})}getMesh(b){throw Error("Method not implemented.");}destroy(){this._handles.destroy();this.texture=r.disposeMaybe(this.texture)}get textureSize(){return u}get dvsMat3(){return this.parent.dvsMat3}beforeRender(b){const {context:c}=b,a=this.elementView.element.content;if(null!=a){var f=a instanceof HTMLImageElement;const g=a instanceof
HTMLVideoElement;var h=f?a.naturalWidth:g?a.videoWidth:a.width;f=f?a.naturalHeight:g?a.videoHeight:a.height;this._updatePerspectiveTransform(h,f);if(this.texture)g&&(this.texture.setData(a),this.texture.generateMipmap(),"requestVideoFrameCallback"in a?a.requestVideoFrameCallback(()=>this.requestRender()):a.paused||this.requestRender());else{const d=new M.TextureDescriptor;d.wrapMode=L.TextureWrapMode.CLAMP_TO_EDGE;d.preMultiplyAlpha=!0;d.width=h;d.height=f;"getFrame"in a?(h=l=>{this.texture?this.texture.setData(l):
this.texture=new t.Texture(c,d,l);this.requestRender()},"animationOptions"in this.elementView.element&&this._handles.add(K.play(a,N(this.elementView.element.animationOptions),null,h),"play")):this.texture=new t.Texture(c,d,a);this.texture.generateMipmap();g&&("requestVideoFrameCallback"in a?a.requestVideoFrameCallback(()=>this.requestRender()):a.paused||this.requestRender())}}super.beforeRender(b)}_createTransforms(){return null}draw(b,c){this.isReady&&null!=this.texture?c.render(b,{transform:{dvs:this.dvsMat3},
config:{perspective:this.perspectiveTransform,texSize:u,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._indices}):this.requestRender()}updateDrawCoords(b,c,a,f){const {coords:h,bounds:g}=this.elementView;if(null!=h&&null!=g){var [d,l,v,w]=h.rings[0];a=this._vertices;var {x:n,y:p}=b;a.set([l[0]-n,l[1]-p,d[0]-n,d[1]-p,v[0]-n,v[1]-p,w[0]-n,w[1]-p]);b=c;if(f){const [x,,y]=g,{worldWidth:z,
xBounds:Q}=f,[A,B]=Q;x<A&&y>A?b=z:y>B&&x<B&&(b=-z)}this.wrapAroundShift=b;this.isWrapAround=0!==b}}_updatePerspectiveTransform(b,c){const a=this._vertices;F.getProjectiveTransform(k,[0,0,b,0,0,c,b,c],[a[0],a[1],a[4],a[5],a[2],a[3],a[6],a[7]]);H.set(this.perspectiveTransform,k[6]/k[8]*b,k[7]/k[8]*c)}}return P});