// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Error ../../../../core/Logger ../../../../symbols/cim/enums ../../../../core/RandomLCG ../../../../core/has ../../../webgl/checkWebGLError ../../../webgl/enums ../../../webgl/FramebufferObject ../../../webgl/GLObjectType ../../../webgl/getDataTypeBytes ../../../webgl/Texture ../../../webgl/TextureDescriptor ../../../webgl/VertexElementDescriptor".split(" "),function(e,k,r,g,y,z,A,h,B,C,t,u,v,w){function p(b){const a=new Map;for(const d in b){let c=0;a.set(d,b[d].map(f=>
{const m=new w.VertexElementDescriptor(f.name,f.count,f.type,c,0,f.normalized||!1);c+=f.count*t.getDataTypeBytes(f.type);return m}));a.get(d).forEach(f=>f.stride=c)}return a}const l=()=>r.getLogger("esri.views.2d.engine.webgl.Utils"),x=b=>{const a={};b.forEach((d,c)=>a[c]=d?.length?d[0].stride:0);return a},n=new Map;e.charCodes=function(b){const a=[];for(let d=0;d<b.length;d++)a.push(b.charCodeAt(d));return a};e.createAttributeLayout=p;e.createProgramDescriptor=(b,a)=>{if(!n.has(b)){const d=p(a),
c=x(d),f=new Map;for(const m in a)for(const q of a[m])f.set(q.name,q.location);n.set(b,{strides:c,bufferLayouts:d,attributes:f})}return n.get(b)};e.createTexture=function(b,a,d){const c=new v.TextureDescriptor(a.width,a.height);c.dataType=a.dataType;a.depth&&(c.depth=a.depth);a.flipped&&(c.flipped=a.flipped);a.hasMipmap&&(c.hasMipmap=a.hasMipmap);c.internalFormat=a.internalFormat;a.isImmutable&&(c.isImmutable=a.isImmutable);a.isOpaque&&(c.isOpaque=a.isOpaque);a.maxAnisotropy&&(c.maxAnisotropy=a.maxAnisotropy);
c.pixelFormat=a.pixelFormat;a.preMultiplyAlpha&&(c.preMultiplyAlpha=a.preMultiplyAlpha);a.samplingMode&&(c.samplingMode=a.samplingMode);a.target&&(c.target=a.target);c.uniform=a.uniform;a.unpackAlignment&&(c.unpackAlignment=a.unpackAlignment);a.wrapMode&&(c.wrapMode=a.wrapMode);return new u.Texture(b,c,d)};e.discardUrlIfHasUrlHash=function(b){return"url"in b&&"urlHash"in b?{...b,url:""}:b};e.getCapType=function(b){switch(b){case "butt":return g.CapType.BUTT;case "round":return g.CapType.ROUND;case "square":return g.CapType.SQUARE;
default:return l().error(new k("mapview-invalid-type",`Cap type ${b} is not a valid option. Defaulting to round`)),g.CapType.ROUND}};e.getJoinType=function(b){switch(b){case "miter":return g.JoinType.MITER;case "bevel":return g.JoinType.BEVEL;case "round":return g.JoinType.ROUND;default:return l().error(new k("mapview-invalid-type",`Join type ${b} is not a valid option. Defaulting to round`)),g.JoinType.ROUND}};e.getPixelArrayCtor=function(b){switch(b){case h.PixelType.UNSIGNED_BYTE:return Uint8Array;
case h.PixelType.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case h.PixelType.FLOAT:return Float32Array;default:l().error(new k("webgl-utils",`Unable to handle type ${b}`))}};e.getPixelBytes=function(b){switch(b){case h.PixelType.UNSIGNED_BYTE:return 1;case h.PixelType.UNSIGNED_SHORT_4_4_4_4:return 2;case h.PixelType.FLOAT:return 4;default:l().error(new k("webgl-utils",`Unable to handle type ${b}`))}};e.isSVGImage=b=>b.includes("data:image/svg+xml");e.isValidSVG=b=>{if(!b)return!1;b=b.trim();return/^[mzlhvcsqta]\s*[-+.0-9][^mlhvzcsqta]+/i.test(b)&&
/[\dz]$/i.test(b)&&4<b.length?!0:!1};Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});