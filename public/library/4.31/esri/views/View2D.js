// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("require ../chunks/tslib.es6 ../geometry ../Viewpoint ../core/Collection ../core/CollectionFlattener ../core/Error ../core/has ../core/Logger ../core/maybe ../core/reactiveUtils ../core/workers/workers ../core/accessorSupport/decorators/property ../core/accessorSupport/decorators/cast ../core/RandomLCG ../core/accessorSupport/decorators/subclass ../core/accessorSupport/ensureType ../geometry/projection ../layers/support/TileInfo ./BreakpointsOwner ./DOMContainer ./PopupView ./View ./2d/AnimationManager ./2d/FrameTask ./2d/GoToManager ./2d/layerViewModuleImportUtils ./2d/MapViewConstraints ./2d/tiling/TileInfoView ./2d/tiling/TileKey ./2d/tiling/TileQueue ./2d/tiling/TileStrategy ./2d/viewpointUtils ./2d/ViewStateManager ./2d/input/MapViewInputManager ./2d/layers/features/support/TileStore ./2d/layers/support/util ./2d/support/clippingUtils ./2d/support/HighlightGroup ./2d/support/highlightGroupUtils ./2d/support/HighlightOptions ./2d/support/hitTestUtils ./2d/support/screenshotUtils ./2d/support/StationaryManager ./2d/support/Timeline ./support/screenUtils ./support/WebGLRequirements ./ui/DefaultUI ./ui/2d/DefaultUI2D ../webmap/utils ../webmap/background/ColorBackground ../geometry/Polygon".split(" "),
function(v,d,c,L,w,M,N,r,x,O,l,P,e,Q,ua,R,S,T,U,V,W,X,Y,Z,aa,ba,y,z,ca,va,wa,xa,da,ea,fa,ha,ia,ja,ka,t,la,ma,A,na,B,C,oa,pa,D,u,qa,ra){async function sa(){const [,{GraphicsView2D:a,GraphicContainer:b,LabelManager:f,MapViewNavigation:g,MagnifierView2D:m,GridView2D:p,Stage:q}]=await Promise.all([new Promise((h,k)=>v(["./2d/webglDeps"],h,k)),new Promise((h,k)=>v(["./2d/mapViewDeps"],h,k))]);E=a;F=b;G=f;H=g;I=m;J=p;K=q}let K,E,F,G,H,I,J;c=class extends V.BreakpointsOwner(X.PopupView(W.DOMContainer(Y))){constructor(a){super(a);
this.stage=this._gridView=this._magnifierView=null;this._resolveWhenReady=[];this.rootLayerViews=new M({getCollections:()=>[this.basemapView?.baseLayerViews,this.layerViews,this.basemapView?.referenceLayerViews],getChildrenFunction:()=>null});this.featuresTilingScheme=null;this.fullOpacity=1;this.goToManager=new ba.GoToManager({view:this});this.graphicsView=null;this.stateManager=new ea.ViewStateManager({constraints:new z({view:this})});this.stationaryManager=new na.StationaryManager;this.mapViewNavigation=
this.labelManager=null;this.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0};this.supersampleScreenshotsEnabled=!0;this.supportsGround=!1;this.frameTask=new aa(this);this.floors=new w;this.grid=null;this.highlights=t.createInitialHighlightGroups();this.inputManager=new fa({view:this});this.map=null;this.spatialReferenceLocked=!1;this.timeline=new B.Timeline;this.type="2d";this.view2dType=null;this.ui=new D;this.test={takeScreenshot:async b=>
A.takeRawScreenshot(this._getScreenshotView(b),b)};this.padding={top:0,right:0,bottom:0,left:0};this.addHandles([l.watch(()=>this.viewpoint,()=>this.stationaryManager.flip(),l.sync),this.on("resize",b=>this.stateManager.resize(b.width,b.height))]);P.initialize()}destroy(){this.layerViewManager.clear();this._set("preconditionsReady",!1);this.frameTask=O.destroyMaybe(this.frameTask);this.goToManager.destroy();this.rootLayerViews.destroy();this.inputManager.destroy();this._set("inputManager",null)}get graphicsTileStore(){return new ha(this.featuresTilingScheme)}get constraintsInfo(){const a=
this.defaultsFromMap?.tileInfo,b=this.spatialReference;return{lods:a?.spatialReference?.equals(b)?a.lods:null,spatialReference:b}}get state(){return this.stateManager.state}get initialExtentRequired(){if(!this.stateManager)return!1;const {scale:a,constraints:b,center:f,viewpoint:g,extent:m}=this;let p=this.zoom;if(this.map&&"initialViewProperties"in this.map&&this.map.initialViewProperties?.viewpoint||m)return!1;b?.effectiveLODs||(p=-1);return f&&(0!==a||-1!==p)||null!=g?.targetGeometry&&("extent"===
g.targetGeometry.type||g.scale)?!1:!0}get defaultsFromMapSettings(){return{required:{extent:!1,heightModelInfo:!1,tileInfo:!0},requiresExtentInSpatialReference:this.spatialReferenceLocked}}get scheduler(){return this.frameTask.scheduler}get typeSpecificPreconditionsReady(){const a=this._getDefaultViewpoint();return a?T.isLoadedOrLoadFor(a.targetGeometry.spatialReference,this.spatialReference):!1}set animation(a){var b=this._get("animation");a!==b&&(b&&b.stop(),a!==this.animationManager.animation&&
this.animationManager.stop(),!a||a.isFulfilled()?this._set("animation",null):(this._set("animation",a),b=()=>{this.destroyed||a!==this._get("animation")||(this._set("animation",null),this.frameTask?.requestFrame())},a.when(b,b)))}get background(){return u.isWebMap(this.map)?this.map.initialViewProperties.background:null}set background(a){this._override("background",a)}get center(){return this.stateManager?.center??null}set center(a){this.stateManager.center=a}get constraints(){return this.stateManager?.constraints}set constraints(a){a.view=
this;const b=this.stateManager.constraints;this.stateManager.constraints=a;b?.destroy()}get extent(){return this.stateManager?.extent??null}set extent(a){this.stateManager.extent=a}get highlightOptions(){return t.getDefaultHighlightOptions(this)}set highlightOptions(a){t.setDefaultHighlightOptions(this,a)}get padding(){return this.stateManager?.padding}set padding(a){this.stateManager&&(this.stateManager.padding=a)}get rendering(){return this.stage?.renderRequested??!1}get resizeAlign(){return this.stateManager.resizeAlign}set resizeAlign(a){this.stateManager.resizeAlign=
a}get resolution(){return this.stateManager.resolution??0}get rotation(){return this.stateManager.rotation??0}set rotation(a){const {rotationEnabled:b}=this.constraints;this.constraints.rotationEnabled=!0;this.stateManager.rotation=a;this.constraints.rotationEnabled=b}get scale(){return this.stateManager?.scale??0}set scale(a){this.stateManager&&(this.stateManager.scale=a)}get stationary(){return!this.animation&&!this.navigating&&!this.resizing&&this.stationaryManager.stationary}get tileInfo(){return this.featuresTilingScheme?.tileInfo}get updating(){const a=
!(!this.magnifier.visible||null===this.magnifier.position||!this._magnifierView?.updatingHandles.updating),b=!this.destroyed&&(!this.layerViewManager||!this.labelManager||!this.graphicsView||!0===this.layerViewManager.updating||!0===this.labelManager.updating||!0===this.graphicsView.updating||this.allLayerViews.some(f=>!f.destroyed&&!("layerViews"in f)&&!0===f.updating)||a);if(r("esri-2d-log-updating")){const f=this.allLayerViews.reduce((g,m)=>({...g,[`${m.layer.id}(${m.layer.type})`]:!m.destroyed&&
!("layerViews"in m)&&m.updating}),{});console.log(`Updating MapView: ${b}\n-> Null LayerViewManager: ${!this.layerViewManager}\n-> Null LabelManager: ${!this.labelManager}\n-> Null GraphicsView: ${!this.graphicsView}\n-> layerViewManager.updating: ${this.layerViewManager?.updating}\n-> labelManager.updating: ${this.labelManager?.updating}\n-> graphicsView.updating: ${this.graphicsView?.updating}\n-> allLayerViews: ${JSON.stringify(f)}\n-> updatingMagnifier: ${a}\n`)}return b}get viewpoint(){return this.stateManager.viewpoint??
null}set viewpoint(a){this.stateManager.viewpoint=a;this.frameTask.requestFrame()}get visibleArea(){const a=this.stateManager.visibleArea;return a?new ra({rings:[a.map(b=>[b[0],b[1]])],spatialReference:this.spatialReference}):a}get zoom(){return this.stateManager.zoom??-1}set zoom(a){this.stateManager.zoom=a}get navigating(){return this.mapViewNavigation?.interacting??!1}goTo(a,b){return this.goToManager.goTo(a,b)}async hitTest(a,b){return ma.hitTest(this,a,b)}async takeScreenshot(a){return A.takeScreenshot(this._getScreenshotView(a),
a)}toMap(a){if(!this.ready)return null;a=C.isSupportedScreenPointEvent(a)?C.createScreenPointFromSupportedEvent(this,a):a;return this.stateManager.toMap(a)}toScreen(a,b){return this.stateManager.toScreen(a,b)}on(a,b,f,g){return(f=this.inputManager&&this.viewEvents.on(a,b,f,g))?f:super.on(a,b)}hasEventListener(a){return super.hasEventListener(a)||this.viewEvents.hasHandler(a)}whenLayerView(a){return super.whenLayerView(a)}graphicChanged(a){this.graphicsView&&this.graphicsView.graphicUpdateHandler(a)}whenReady(){return new Promise(a=>
{this.ready?a(this):this._resolveWhenReady.push(a)})}forceDOMReadyCycle(){this.forceReadyCycle()}getDefaultSpatialReference(){return this.map&&"initialViewProperties"in this.map&&this.map.initialViewProperties.spatialReference||this.defaultsFromMap?.spatialReference||null}getDefaultTimeZone(){return u.isWebMap(this.map)?this.map.initialViewProperties.timeZone:null}getDefaultTimeExtent(){return u.isWebMap(this.map)?this.map.initialViewProperties.timeExtent:null}hasLayerViewModule(a){return y.layerView2DImporter.hasLayerViewModule(a)}importLayerView(a){return y.layerView2DImporter.importLayerView(a)}pixelSizeAt(){return this.ready?
this.resolution:(x.getLogger(this).error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)}async popupHitTest(a){const b=this.toMap(a),f=await this.hitTest(a),g=this.allLayerViews.toArray().filter(n=>n.clips.every(ta=>ja.clipContainsPoint(this,ta,a,b))).reverse(),m=new globalThis.Map(g.map(n=>[n.layer.uid,n])),p=[];let q=0,h=0;for(;q<f.results.length||h<g.length;){var k=f.results.at(q);if(k&&"graphic"!==k.type){++q;continue}const n=m.get((k?.layer??k?.graphic.layer)?.uid);(!k||
n)&&h<g.length&&g.at(h)!==n?(k=g.at(h),"fetchPopupFeaturesAtLocation"in k&&p.push({mapPoint:b,layerView:k}),++h):k&&(p.push({graphic:k.graphic,layerView:n}),++q)}return{hits:p,location:b}}requestUpdate(){this.ready&&this.frameTask.requestUpdate()}async validate(){let a=oa.check(this.type);r("safari")&&9>r("safari")&&(a=new N("mapview:browser-not-supported","This browser is not supported by MapView (Safari \x3c 9)",{type:"safari",requiredVersion:9,detectedVersion:r("safari")}));if(null!=a)throw x.getLogger(this).warn("#validate()",
a.message),a;}loadAsyncDependencies(){return sa()}_getDefaultViewpoint(){const {constraints:a,initialExtent:b,map:f,padding:g,size:m}=this;if(!a)return null;var p=f&&"initialViewProperties"in f?f.initialViewProperties:void 0;const q=this.stateManager.getUserStartupOptions(this.size);var h=p?.viewpoint;const k=h?.targetGeometry?.extent??b;var n=k?.center;p=h?.rotation??0;h=h?.scale||k&&da.extentToScale(k,[m[0]-g.left-g.right,m[1]-g.top-g.bottom]);n=q.center??n;h=q.scale??h;return n&&h?new L({targetGeometry:n,
scale:h,rotation:q.rotation??p}):null}_startup(){this.timeline.begin("MapView Startup");var a=this._getDefaultViewpoint();this.stateManager.startup(a,this.size,this.spatialReference,this.defaultsFromMap.extent?.center);this.graphics.owner=this;const b=new K(this.surface,{canvas:this.renderCanvas,contextOptions:{disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},renderingOptions:this.renderingOptions,timeline:this.timeline});this.stage=b;this._magnifierView=
new I;this._magnifierView.magnifier=this.magnifier;this._gridView=new J;a=new G({view:this});this._set("labelManager",a);a=new Z({view:this});this._set("animationManager",a);a=new H({view:this,animationManager:a});this._set("mapViewNavigation",a);this._setupSpatialReferenceDependentProperties();this.addHandles([this.rootLayerViews.on("change",()=>this._updateStageChildren()),b.on("webgl-error",f=>this.fatalError=f.error),l.watch(()=>this.stationary,f=>b.stationary=f,l.syncAndInitial),l.watch(()=>
this.background,f=>{b.backgroundColor=f?.color;this._magnifierView.backgroundColor=f?.color},l.syncAndInitial),l.watch(()=>this.magnifier,f=>this._magnifierView.magnifier=f,l.syncAndInitial),l.watch(()=>this.grid,f=>this._gridView.grid=f,l.syncAndInitial),l.watch(()=>this.renderingOptions,f=>b.renderingOptions=f,l.syncAndInitial),l.watch(()=>this.highlights.items.map(f=>({name:f.name,options:{fillColor:f.options.color,haloColor:f.options.haloColor,fillOpacity:f.options.fillOpacity,haloOpacity:f.options.haloOpacity,
haloWidth:f.options.haloWidth,haloBlur:f.options.haloBlur}})),()=>{b.highlightGradient=ia.createOrReuseHighlightGradient(b.highlightGradient,this.highlights.items)},l.syncAndInitial),l.watch(()=>this.state.id,()=>b.state=this.state,l.syncAndInitial)],"map-view");this._updateStageChildren();a=this._resolveWhenReady;this._resolveWhenReady=[];a.forEach(f=>f(this));this.timeline.end("MapView Startup");this.frameTask.start();this._set("ready",!0)}_teardown(){this._destroySpatialReferenceDependentProperties();
this.removeHandles("map-view");this.mapViewNavigation.destroy();this._set("mapViewNavigation",null);this.animation=null;this.animationManager.destroy();this._set("animationManager",null);this.layerViewManager.clear();this.labelManager.destroy();this._magnifierView.destroy();this._gridView.destroy();this.stage.destroy();this.stage=null;this._set("graphicsView",null);this._gridView=this._magnifierView=null;this._set("labelManager",null);this._set("mapViewNavigation",null);this.graphics.owner=null;this.frameTask.stop();
this.stationaryManager.clear();this._set("ready",!1);this.stateManager.teardown()}_updateStageChildren(){this.stage.removeAllChildren();this.rootLayerViews.forEach(a=>{this.stage.addChild(a.container)});this.stage.addChild(this.graphicsView.container);this.stage.addChild(this._magnifierView);this.stage.addChild(this._gridView)}_setupSpatialReferenceDependentProperties(){var a=new ca(U.create({spatialReference:this.spatialReference,size:512,numLODs:36}));this._set("featuresTilingScheme",a);a=new E({view:this,
graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new F(a)});this._set("graphicsView",a)}_destroySpatialReferenceDependentProperties(){const a=this.graphicsView;this._set("graphicsView",null);a.destroy();this._set("featuresTilingScheme",null)}_getScreenshotView(a){const {allLayerViews:b,padding:f,size:g,stage:m}=this;return{allLayerViews:b,backgroundColor:a?.ignoreBackground?null:this.background?.color,padding:f,size:g,stage:m}}_spatialReferenceChanged(a){if(this.ready){this.frameTask.stop();
for(const b of this.allLayerViews)b.processDetach();this._destroySpatialReferenceDependentProperties();this.stateManager.changeSpatialReference(a);this.stage.state=this.state;this._setupSpatialReferenceDependentProperties();for(const b of this.allLayerViews)b.processAttach();this.frameTask.requestFrame();this.frameTask.start();this._updateStageChildren()}}};c.type="2d";d.__decorate([e.property({readOnly:!0})],c.prototype,"animationManager",void 0);d.__decorate([e.property({constructOnly:!0})],c.prototype,
"deactivatedWebGLExtensions",void 0);d.__decorate([e.property({constructOnly:!0})],c.prototype,"debugWebGLExtensions",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"featuresTilingScheme",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"fullOpacity",void 0);d.__decorate([e.property()],c.prototype,"goToManager",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"graphicsTileStore",null);d.__decorate([e.property()],c.prototype,"graphicsView",void 0);d.__decorate([e.property()],
c.prototype,"stateManager",void 0);d.__decorate([e.property()],c.prototype,"constraintsInfo",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"state",null);d.__decorate([e.property()],c.prototype,"initialExtentRequired",null);d.__decorate([e.property()],c.prototype,"labelManager",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"mapViewNavigation",void 0);d.__decorate([e.property({constructOnly:!0})],c.prototype,"renderCanvas",void 0);d.__decorate([e.property()],c.prototype,
"renderingOptions",void 0);d.__decorate([e.property({constructOnly:!0})],c.prototype,"supersampleScreenshotsEnabled",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"supportsGround",void 0);d.__decorate([e.property()],c.prototype,"defaultsFromMapSettings",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"typeSpecificPreconditionsReady",null);d.__decorate([e.property()],c.prototype,"animation",null);d.__decorate([e.property({type:qa})],c.prototype,"background",null);d.__decorate([e.property()],
c.prototype,"center",null);d.__decorate([e.property({type:z})],c.prototype,"constraints",null);d.__decorate([e.property()],c.prototype,"extent",null);d.__decorate([e.property()],c.prototype,"floors",void 0);d.__decorate([e.property()],c.prototype,"grid",void 0);d.__decorate([e.property({type:la})],c.prototype,"highlightOptions",null);d.__decorate([e.property({type:w.ofType(ka.HighlightGroup)})],c.prototype,"highlights",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"inputManager",void 0);
d.__decorate([e.property()],c.prototype,"map",void 0);d.__decorate([e.property()],c.prototype,"padding",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"rendering",null);d.__decorate([e.property()],c.prototype,"resizeAlign",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"resolution",null);d.__decorate([e.property()],c.prototype,"rotation",null);d.__decorate([e.property()],c.prototype,"scale",null);d.__decorate([e.property({constructOnly:!0})],c.prototype,"spatialReferenceLocked",
void 0);d.__decorate([e.property()],c.prototype,"stationary",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"tileInfo",null);d.__decorate([e.property({type:B.Timeline,readOnly:!0})],c.prototype,"timeline",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"type",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"updating",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"view2dType",void 0);d.__decorate([e.property()],c.prototype,"viewpoint",null);d.__decorate([e.property({readOnly:!0})],
c.prototype,"visibleArea",null);d.__decorate([e.property()],c.prototype,"zoom",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"navigating",null);d.__decorate([e.property(),Q.cast(a=>a instanceof pa?a:S.ensureClass(D,a))],c.prototype,"ui",void 0);return c=d.__decorate([R.subclass("esri.views.View2D")],c)});