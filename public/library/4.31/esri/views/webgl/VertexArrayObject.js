// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../core/Logger ../../core/maybe ../../core/typedArrayUtil ./enums ./Util".split(" "),function(h,l,m,n,k,p){const e=()=>l.getLogger("esri.views.webgl.VertexArrayObject");h.VertexArrayObject=class{constructor(a,b,c,d,f=null){this._context=a;this._locations=b;this._layout=c;this._buffers=d;this._indexBuffer=f;this._glName=null;this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Array.from(this._buffers.values()).reduce((a,
b)=>a+b.usedMemory,null!=this._indexBuffer?this._indexBuffer.usedMemory:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*n.typedArrayStaticSize}dispose(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._buffers.forEach(a=>a.dispose()),this._buffers.clear(),this._indexBuffer=m.disposeMaybe(this._indexBuffer),this.disposeVAOOnly()):(this._glName||
0<Object.getOwnPropertyNames(this._buffers).length)&&e().warn("Leaked WebGL VAO")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(k.ResourceType.VertexArrayObject,this));this._context=null}initialize(){if(!this._initialized){var {gl:a}=this._context,b=a.createVertexArray();a.bindVertexArray(b);this._bindLayout();a.bindVertexArray(null);this._glName=b;this._context.instanceCounter.increment(k.ResourceType.VertexArrayObject,
this);this._initialized=!0}}bind(){this.initialize();this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const {_buffers:a,_layout:b,_indexBuffer:c}=this;a||e().error("Vertex buffer dictionary is empty!");const d=this._context.gl;this._buffers.forEach((f,g)=>{(g=b.get(g))?p.bindVertexBufferLayout(this._context,this._locations,f,g):e().error("Vertex element descriptor is empty!")});null!=c&&d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,c.glName)}unbind(){this.initialize();this._context.gl.bindVertexArray(null)}};
Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});