// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/scheduling","./GamepadInputDevice","./GamepadState"],function(h,m,n,f){function k(a){for(const c of navigator.getGamepads()){var b;a:if((b=c)&&b.connected){for(let d=0;d<b.axes.length;d++)if(isNaN(b.axes[d])){b=!1;break a}b=!0}else b=!1;b&&a(c)}}class p{constructor(a,b){this._element=a;this._input=b;this._hasEventListeners=!1;this._onConnectGamepad=c=>{this._connectGamepad(c.gamepad)};this._onDisconnectGamepad=c=>{c=c.gamepad;const d=c.index,e=this._inputDevices[d];
e&&(this._emitGamepadEvent(c,f.extractState(e),!1),this._inputDevices.splice(d,1),this._latestUpdate.splice(d,1),this._input.gamepad.devices.remove(e),this.ensurePollingState())};this._frameTask=null;this._latestUpdate=[];this._inputDevices=[];this._callback=null;a=window.isSecureContext;if(this.supported="getGamepads"in window.navigator&&a)k(c=>this._connectGamepad(c)),window.addEventListener("gamepadconnected",this._onConnectGamepad),window.addEventListener("gamepaddisconnected",this._onDisconnectGamepad),
this.ensurePollingState()}destroy(){this.hasEventListeners=!1;this.supported&&(window.removeEventListener("gamepadconnected",this._onConnectGamepad),window.removeEventListener("gamepaddisconnected",this._onDisconnectGamepad))}set hasEventListeners(a){this._hasEventListeners!==a&&(this._hasEventListeners=a,this.ensurePollingState())}get _eventsEnabled(){return this.supported&&0<this._inputDevices.length&&this._hasEventListeners}set onEvent(a){this._callback=a}_connectGamepad(a){const b=new n(a);"unknown"!==
b.deviceType&&(this._inputDevices[a.index]=b,this._input.gamepad.devices.add(b));this.ensurePollingState()}ensurePollingState(){this._eventsEnabled?this._startPolling():this._stopPolling()}_startPolling(){null==this._frameTask&&(this._frameTask=m.addFrameTask({update:()=>this._readGamepadState()}))}_stopPolling(){null!=this._frameTask&&(this._frameTask.remove(),this._frameTask=null,this._latestUpdate=[])}_readGamepadState(){const a=document.hasFocus(),b=this._element.contains(document.activeElement),
c="document"===this._input.gamepad.enabledFocusMode&&!a||"view"===this._input.gamepad.enabledFocusMode&&!b;k(d=>{var e=this._inputDevices[d.index];if(e){var g=this._latestUpdate[d.index];e=f.extractState(e);var l=c||f.stateIdle(e);g&&(g.timestamp===d.timestamp||!g.active&&l||f.stateEqual(g.state,e))||this._emitGamepadEvent(d,e,!l)}})}_emitGamepadEvent(a,b,c){var d=this._latestUpdate[a.index];if((d=d&&d.active)||c)this._latestUpdate[a.index]={timestamp:a.timestamp,state:b,active:c},this._callback&&
this._callback({device:this._inputDevices[a.index],state:b,action:!d&&c?"start":d&&c?"update":"end"})}}h.GamepadSource=p;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});