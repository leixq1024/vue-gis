// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/mathUtils","../../../core/time"],function(k,l,f){class m{get time(){return this._time}constructor(a){a&&this.update(a)}update(a){a&&(this.definition?this.definition.copyFrom(a):this.definition=a.clone());this._updatePrecomputedVariables();this._updatePixelFlow()}_updatePrecomputedVariables(){var a=this.definition;const b=a.compared,c=b.sourceZoom;this._zoomSign=c>b.targetZoom?1:-1;this._panPixelsAtSource=b.pan*a.source.pixelsPerPanAtZoom(c);a=(a.source.pixelsPerRotate()+
a.target.pixelsPerRotate())/2;this._rotatePixels=b.rotate*a}_updatePixelFlow(){var a=this.definition.compared.sourceZoom,b=this.definition.compared.targetZoom;const {hasZoom:c,hasPan:g,hasRotate:h}=this.definition;var d=0,e=0;c&&(g&&(d=(b/a-1)/(-1/(this._zoomSign*this.definition.halfWindowSize)*Math.LN2*this._panPixelsAtSource)),h&&(e=Math.log(a/b)/Math.LN2*this._zoomSign*this.definition.halfWindowSize/this._rotatePixels));this._rotatePixelFlow=this._panPixelFlow=this._zoomPixelFlow=0;a=this.definition.desiredPixelFlow;
c&&g&&h?(b=d+e+d*e,this._zoomPixelFlow=d*e/b*a,this._panPixelFlow=e/b*a,this._rotatePixelFlow=d/b*a):c&&g?(e=1+d,this._zoomPixelFlow=d/e*a,this._panPixelFlow=1/e*a):c&&h?(d=1+e,this._zoomPixelFlow=e/d*a,this._rotatePixelFlow=1/d*a):g&&h?(d=this._panPixelsAtSource/this._rotatePixels,e=1+d,this._panPixelFlow=d/e*a,this._rotatePixelFlow=1/e*a):g?this._panPixelFlow=a:c?this._zoomPixelFlow=a:h&&(this._rotatePixelFlow=a);this._time=f.Seconds(Math.max(this.rotateTime,this.zoomTime,this.panTime));this.fovTime>
this._time&&(a=this.fovTime/this._time,this._time=this.fovTime,this._zoomPixelFlow/=a,this._panPixelFlow/=a,this._rotatePixelFlow/=a)}get rotateTime(){return this.definition.hasRotate?f.Seconds(this._rotatePixels/this._rotatePixelFlow):f.Seconds(0)}get zoomTime(){return this.definition.hasZoom?f.Seconds(Math.log(this.definition.compared.sourceZoom/this.definition.compared.targetZoom)/Math.LN2*this._zoomSign*this.definition.halfWindowSize/this._zoomPixelFlow):f.Seconds(0)}get fovTime(){return this.definition.hasFov?
f.Seconds(Math.abs(this.definition.compared.fov)/n):f.Seconds(0)}get panTime(){if(!this.definition.hasPan)return f.Seconds(0);if(this.definition.hasZoom){const a=-1/(this._zoomSign*this.definition.halfWindowSize)*Math.LN2;return f.Seconds(Math.log(this._zoomPixelFlow/this._panPixelFlow*this._panPixelsAtSource*a+1)/(a*this._zoomPixelFlow))}return f.Seconds(this._panPixelsAtSource/this._panPixelFlow)}_interpolateComponentsZoom(a){if(0===a||1===a)return a;if(this.definition.hasZoom){const b=this.definition.compared.sourceZoom,
c=this.definition.compared.targetZoom;return(b*(b/c)**-a-b)/(c-b)}return a}_interpolateComponentsFov(a){if(0===a)return this.definition.segmentStart;if(1===a)return this.definition.segmentEnd;if(this.definition.hasFov){const {segmentStart:b,segmentEnd:c}=this.definition;return b+a*(c-b)}return this.definition.segmentStart}_interpolateComponentsPan(a){if(0===a||1===a)return a;if(this.definition.hasPan&&this.definition.hasZoom){const b=-1/(this._zoomSign*this.definition.halfWindowSize)*this._zoomPixelFlow;
return 1/this._panPixelsAtSource*this._panPixelFlow*(2**(b*a*this._time)-1)/(b*Math.LN2)}return a}_interpolateComponentsRotate(a){return a}interpolateComponentsAt(a,b){a=Math.min(Math.max(a,0),1);b.zoom=this._interpolateComponentsZoom(a);b.pan=this._interpolateComponentsPan(a);b.rotate=this._interpolateComponentsRotate(a);b.zoomOffset=0;b.fov=this._interpolateComponentsFov(a)}}const n=l.deg2rad(45);k.Segment=m;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});