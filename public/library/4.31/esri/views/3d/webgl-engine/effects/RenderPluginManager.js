// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/has ../../../../core/PooledArray ../../../../core/promiseUtils ../../../../core/signal ../core/shaderLibrary/ShaderOutput ./RenderPlugin ../lib/depthRange ../lib/Material ../lib/RenderSlot".split(" "),function(f,u,k,g,l,m,n,h,p,q){class r{constructor(a){this.context=a;this._renderPlugins=new k;this._slots=[];this._version=l.signal(0);for(a=0;a<q.RenderSlot.MAX_SLOTS;++a)this._slots[a]=[]}destroy(){this._renderPlugins.forEach(a=>a.destroy());this._renderPlugins.clear()}get plugins(){return this._renderPlugins}add(a,
b){const c=()=>{if(b?.aborted)throw a.uninitializeRenderContext(),g.createAbortError();this._renderPlugins.push(a);a.produces.forEach((e,t)=>this._slots[t].push(a));this.context.requestRender();this._version.value++},d=a.initializeRenderContext(this.context,b);if(g.isPromiseLike(d))return d.then(c);c()}remove(a){this._renderPlugins.removeUnordered(a);a.uninitializeRenderContext();for(let b=0;b<this._slots.length;++b)this._slots[b]=this._slots[b].filter(c=>c!==a);this.context.requestRender();this._version.value++}prepareRender(){this._renderPlugins.forAll(a=>
{a.prepareRender&&a.prepareRender(this.context.renderContext)})}updateAnimation(a){let b=!1;this._renderPlugins.forAll(c=>b=c.updateAnimation?.(a)||b);return b}renderFeatureChanged(){this._renderPlugins.forAll(a=>{a.renderFeatureChanged&&a.renderFeatureChanged()})}precompile(...a){++this.context.techniques.precompiling;const b=this.context.renderContext.bind.slot;for(const c of a)this.context.renderContext.bind.slot=c,this._slots[c].forEach(d=>{d.produces.get(c)?.(this.context.renderContext.output)&&
d.precompile(this.context.renderContext)});this.context.renderContext.bind.slot=b;--this.context.techniques.precompiling}_acquireRenderables(){const a=this.context.renderContext.bind.slot,b=this.context.renderContext.output??m.ShaderOutput.Color,c=new Map;this._slots[a].forEach(d=>{if(d.produces.get(a)?.(b)&&(!d.isDecoration||this.context.renderContext.bind.decorations)){var e=d.acquireTechniques(this.context.renderContext);e&&c.set(d,e)}});return c}render(a,...b){for(const c of b)this.context.renderContext.bind.slot=
c,this._acquireRenderables().forEach((d,e)=>{e.render(this.context.renderContext,d,a);n.releaseTechniques(d)})}queryDepthRange(a){const b=new h.DepthRange;this._renderPlugins.forAll(c=>{c=c.queryDepthRange?.(a);h.union(b,c)});return b}get updating(){return 0<=this._version.value&&this._renderPlugins.some(a=>a.running)}produces(a,...b){for(const c of b)if(this._slots[c].some(d=>(d=d.produces.get(c))?d(a):!1))return!0;return!1}consumes(a){return this._renderPlugins.some(b=>b.consumes().required.includes(a))}get hasDecorations(){return this._renderPlugins.some(a=>
a.isDecoration)}get hasOccludees(){return this._renderPlugins.some(a=>a.hasOccludees)}get hasEmissions(){return this._renderPlugins.some(a=>a.hasEmissions)}get renderOccludedFlags(){return this._renderPlugins.reduce((a,b)=>a|b.renderOccludedFlags,p.RenderOccludedFlag.None)}get usedMemory(){return this._renderPlugins.reduce((a,b)=>b.material?a:a+(b.usedMemory??0),0)}get test(){}}f.RenderPluginManager=r;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});