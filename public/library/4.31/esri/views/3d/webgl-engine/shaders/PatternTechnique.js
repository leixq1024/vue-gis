// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("require exports ../core/shaderLibrary/ShaderOutput ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../effects/geometry/olidUtils ../lib/OITPass ../lib/OrderIndependentTransparency ../lib/StencilUtils ../lib/VertexAttribute ../../../../chunks/Pattern.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(t,f,m,u,v,w,n,d,g,a,x,y,h){class z extends v.ShaderTechnique{constructor(b,k,c){super(b,k,new u.ReloadableShaderModule(x.Pattern,()=>
new Promise((e,l)=>t(["./Pattern.glsl"],e,l))),c,w.olidEnabled()?p:q)}_setPipelineState(b,k){const {oitPass:c,output:e,cullFace:l,draped:A,hasOccludees:r,polygonOffset:B,enableOffset:C}=b,D=c===n.OITPass.NONE,E=c===n.OITPass.FrontFace;return h.makePipelineState({blending:e===m.ShaderOutput.Color?d.blending(c):null,culling:h.cullingParams(l),depthTest:A?null:{func:d.oitDepthTest(c)},depthWrite:d.depthWrite(b),drawBuffers:e===m.ShaderOutput.Depth?{buffers:[y.SpecialDrawBuffers.NONE]}:d.getDrawBuffers(c,
e),colorWrite:h.defaultColorWrite,stencilWrite:r?g.stencilWriteMaskOn:null,stencilTest:r?k?g.stencilToolMaskBaseParams:g.stencilBaseAllZerosParams:null,polygonOffset:D||E?B?F:null:d.getOITPolygonOffset(C)})}initializePipeline(b){this._occludeePipelineState=this._setPipelineState(b,!0);return this._setPipelineState(b,!1)}getPipeline(b){return b?this._occludeePipelineState:super.getPipeline()}}const F={factor:1,units:1},q=new Map([[a.VertexAttribute.POSITION,0],[a.VertexAttribute.COLOR,3],[a.VertexAttribute.UVMAPSPACE,
4],[a.VertexAttribute.COLORFEATUREATTRIBUTE,5],[a.VertexAttribute.BOUNDINGRECT,6]]),p=new Map([[a.VertexAttribute.POSITION,0],[a.VertexAttribute.COLOR,3],[a.VertexAttribute.UVMAPSPACE,4],[a.VertexAttribute.COLORFEATUREATTRIBUTE,5],[a.VertexAttribute.BOUNDINGRECT,6],[a.VertexAttribute.OBJECTANDLAYERIDCOLOR,9]]);f.PatternTechnique=z;f.vertexAttributeLocations=q;f.vertexAttributeLocationsOID=p;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});