// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("require exports ../core/shaderLibrary/ShaderOutput ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../lib/OITPass ../lib/OrderIndependentTransparency ../lib/VertexAttribute ../../../../chunks/ShadedColorMaterial.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(q,e,r,t,u,m,b,f,v,g,h){class w extends u.ShaderTechnique{constructor(c,a,d){super(c,a,new t.ReloadableShaderModule(v.ShadedColorMaterial,()=>new Promise((k,l)=>q(["./ShadedColorMaterial.glsl"],
k,l))),d,n)}initializePipeline(c){const {oitPass:a,output:d,transparent:k,cullFace:l,shadingEnabled:x}=c,y=a===m.OITPass.NONE,p=a===m.OITPass.FrontFace;return h.makePipelineState({blending:d===r.ShaderOutput.Color&&k?b.blending(a):null,culling:h.cullingParams(l),depthTest:{func:p?g.CompareFunction.LESS:x?g.CompareFunction.LEQUAL:g.CompareFunction.LESS},depthWrite:b.depthWrite(c),drawBuffers:b.getDrawBuffers(a,d),colorWrite:h.defaultColorWrite,polygonOffset:y||p?null:b.OITPolygonOffset})}}const n=
new Map([[f.VertexAttribute.POSITION,0],[f.VertexAttribute.NORMAL,1],[f.VertexAttribute.OFFSET,2]]);e.ShadedColorMaterialTechnique=w;e.vertexAttributeLocations=n;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});