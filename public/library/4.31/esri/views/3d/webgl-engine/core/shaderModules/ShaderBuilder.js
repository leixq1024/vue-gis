// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/Error ../../../../../core/has ../../../../../core/Logger ../shaderTechnique/BindType ../../lib/Util".split(" "),function(h,t,D,y,p,u){class q{constructor(){this._includedModules=new Map}include(a,c){this._includedModules.has(a)?this._includedModules.get(a):(this._includedModules.set(a,c),a(this.builder,c))}}class z extends q{constructor(){super(...arguments);this.vertex=new r;this.fragment=new r;this.attributes=new A;this.varyings=new B;this.extensions=new l;this.outputs=
new m}get fragmentUniforms(){return this.fragment.uniforms.entries}get builder(){return this}generate(a){const c=this.extensions.generateSource(a),b=this.attributes.generateSource(a),d=this.varyings.generateSource(a);var e="vertex"===a?this.vertex:this.fragment;const g=e.uniforms.generateSource(),k=e.code.generateSource(),n=e.main.generateSource(),C="vertex"===a?"precision highp float;\nprecision highp sampler2D;":"#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  precision highp sampler2D;\n#else\n  precision mediump float;\n  precision mediump sampler2D;\n#endif";
e=e.constants.generateSource();a=this.outputs.generateSource(a);return`#version 300 es\n${c.join("\n")}\n\n${C}\n\n${e.join("\n")}\n\n${g.join("\n")}\n\n${b.join("\n")}\n\n${d.join("\n")}\n\n${a.join("\n")}\n\n${k.join("\n")}\n\n${n.join("\n")}`}generateBindPass(a){const c=new Map;this.vertex.uniforms.entries.forEach(e=>{const g=e.bind[p.BindType.Pass];g&&c.set(e.name,g)});this.fragment.uniforms.entries.forEach(e=>{const g=e.bind[p.BindType.Pass];g&&c.set(e.name,g)});const b=Array.from(c.values()),
d=b.length;return(e,g)=>{for(let k=0;k<d;++k)b[k](a,e,g)}}generateBindDraw(a){const c=new Map;this.vertex.uniforms.entries.forEach(e=>{const g=e.bind[p.BindType.Draw];g&&c.set(e.name,g)});this.fragment.uniforms.entries.forEach(e=>{const g=e.bind[p.BindType.Draw];g&&c.set(e.name,g)});const b=Array.from(c.values()),d=b.length;return(e,g,k)=>{for(let n=0;n<d;++n)b[n](a,k,e,g)}}}class v{constructor(a){this._stage=a;this._entries=new Map}add(...a){for(const c of a)this._add(c);return this._stage}get(a){return this._entries.get(a)}_add(a){if(null==
a)y.getLogger("esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder").error(`Trying to add null Uniform from ${Error().stack}.`);else{if(this._entries.has(a.name)&&!this._entries.get(a.name).equals(a))throw new t(`Duplicate uniform name ${a.name} for different uniform type`);this._entries.set(a.name,a)}}generateSource(){return Array.from(this._entries.values()).map(a=>null!=a.arraySize?`uniform ${a.type} ${a.name}[${a.arraySize}];`:`uniform ${a.type} ${a.name};`)}get entries(){return Array.from(this._entries.values())}}
class w{constructor(a){this._stage=a;this._bodies=[]}add(a){this._bodies.push(a);return this._stage}generateSource(){if(0<this._bodies.length)return[`void main() {\n ${this._bodies.join("\n")||""} \n}`];throw new t("Shader does not contain main function body.");}}class x{constructor(a){this._stage=a;this._entries=[]}add(a){this._entries.push(a);return this._stage}generateSource(){return this._entries}}class r extends q{constructor(){super(...arguments);this.uniforms=new v(this);this.main=new w(this);
this.code=new x(this);this.constants=new f(this)}get builder(){return this}}class A{constructor(){this._entries=[]}add(a,c){this._entries.push([a,c])}generateSource(a){return"fragment"===a?[]:this._entries.map(c=>`in ${c[1]} ${c[0]};`)}}class B{constructor(){this._entries=new Map}add(a,c){this._entries.has(a)&&u.assert(this._entries.get(a)===c);this._entries.set(a,c)}generateSource(a){const c=[];this._entries.forEach((b,d)=>c.push("vertex"===a?`out ${b} ${d};`:`in ${b} ${d};`));return c}}class l{constructor(){this._entries=
new Set}add(a){this._entries.add(a)}generateSource(a){const c="vertex"===a?l.ALLOWLIST_VERTEX:l.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter(b=>c.includes(b)).map(b=>`#extension ${b} : enable`)}}l.ALLOWLIST_FRAGMENT=["GL_EXT_shader_texture_lod","GL_OES_standard_derivatives"];l.ALLOWLIST_VERTEX=[];class m{constructor(){this._entries=new Map}add(a,c,b=0){const d=this._entries.get(b);d?u.assert(d.name===a&&d.type===c,`Fragment shader output location ${b} occupied`):this._entries.set(b,
{name:a,type:c})}generateSource(a){if("vertex"===a)return[];0===this._entries.size&&this._entries.set(0,{name:m.DEFAULT_NAME,type:m.DEFAULT_TYPE});const c=[];this._entries.forEach((b,d)=>c.push(`layout(location = ${d}) out ${b.type} ${b.name};`));return c}}m.DEFAULT_TYPE="vec4";m.DEFAULT_NAME="fragColor";class f{constructor(a){this._stage=a;this._entries=new Set}add(a,c,b){let d="ERROR_CONSTRUCTOR_STRING";switch(c){case "float":d=f._numberToFloatStr(b);break;case "int":d=f._numberToIntStr(b);break;
case "bool":d=b.toString();break;case "vec2":d=`vec2(${f._numberToFloatStr(b[0])},                            ${f._numberToFloatStr(b[1])})`;break;case "vec3":d=`vec3(${f._numberToFloatStr(b[0])},                            ${f._numberToFloatStr(b[1])},                            ${f._numberToFloatStr(b[2])})`;break;case "vec4":d=`vec4(${f._numberToFloatStr(b[0])},                            ${f._numberToFloatStr(b[1])},                            ${f._numberToFloatStr(b[2])},                            ${f._numberToFloatStr(b[3])})`;
break;case "ivec2":d=`ivec2(${f._numberToIntStr(b[0])},                             ${f._numberToIntStr(b[1])})`;break;case "ivec3":d=`ivec3(${f._numberToIntStr(b[0])},                             ${f._numberToIntStr(b[1])},                             ${f._numberToIntStr(b[2])})`;break;case "ivec4":d=`ivec4(${f._numberToIntStr(b[0])},                             ${f._numberToIntStr(b[1])},                             ${f._numberToIntStr(b[2])},                             ${f._numberToIntStr(b[3])})`;
break;case "mat2":case "mat3":case "mat4":d=`${c}(${Array.prototype.map.call(b,e=>f._numberToFloatStr(e)).join(", ")})`}this._entries.add(`const ${c} ${a} = ${d};`);return this._stage}static _numberToIntStr(a){return a.toFixed(0)}static _numberToFloatStr(a){return Number.isInteger(a)?a.toFixed(1):a.toString()}generateSource(){return Array.from(this._entries)}}h.Code=x;h.Includes=q;h.Main=w;h.ShaderBuilder=z;h.Stage=r;h.Uniforms=v;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});