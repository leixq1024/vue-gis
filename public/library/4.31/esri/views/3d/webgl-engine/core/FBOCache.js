// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Error ../../webgl/formats ../../webgl/ManagedColorAttachment ../../webgl/ManagedDepthAttachment ../../webgl/ManagedFBO ../../webgl/ManagedFBObject ./FBOPool ../../../webgl/enums ../../../webgl/FramebufferObject ../../../webgl/Renderbuffer ../../../webgl/RenderbufferDescriptor ../../../webgl/Texture ../../../webgl/TextureDescriptor".split(" "),function(w,E,g,F,y,z,G,x,c,H,I,J,A,f){class K{constructor(b){this.rctx=b;this._acquired=new Set;this._cache=new x.FBOPool(b.newCache,
"FBOCache");this._depthCache=new x.FBOPool(b.newCache,"DepthAttachmentCache");this._colorCache=new x.FBOPool(b.newCache,"ColorAttachmentCache")}destroy(){this._cache.destroy();this._depthCache.destroy();this._colorCache.destroy()}clean(){this._cache.clean();this._colorCache.clean();this._depthCache.clean()}frameStart(){this._cache.frame();this._colorCache.frame();this._depthCache.frame();this.debugCallback&&this.debugCallback()}frameEnd(){const b=this.debugCallback;b&&this._acquired.forEach(d=>d.type===
G.AttachmentType.FBO&&b(d.name,d.fbo,d.numberOfColorAttachments))}get usedMemory(){return Array.from(this._acquired.values()).reduce((b,d)=>b+("getTexture"in d?d.getTexture()?.usedMemory??0:d.usedMemory),this._cache.usedMemory+this._colorCache.usedMemory+this._depthCache.usedMemory)}set interactive(b){this._cache.interactive=this._colorCache.interactive=this._depthCache.interactive=b}acquire(b,d,h,k=g.ColorFormat.RGBA){const l=`${k}x${b}x${d}`;let a=this._cache.pop(l);if(a){a.retain();a.setName(h);
h=this.rctx.getBoundFramebufferObject();this.rctx.bindFramebuffer(a.fbo);this.rctx.setDrawBuffers([c.ColorAttachment.COLOR_ATTACHMENT0]);if(a.fbo)this.rctx.unbindTexture(a.fbo.colorTexture);else throw new E("attempt to use a not existing framebuffer");this.rctx.bindFramebuffer(h)}else a=new z(l,h,new H.FramebufferObject(this.rctx,{...B[k],width:b,height:d}),e=>{e??=g.DepthFormat.DEPTH_STENCIL_TEXTURE;e=this._acquireDepth(e,a.fbo.width,a.fbo.height,`${a.name} depth`);a.attachDepth(e);e.release();return a},
(e,m,L)=>{m??=g.ColorFormat.RGBA;m=this._acquireColor(m,b,d,L??`${a.name} color ${e}`);this.rctx.unbindTexture(m.attachment);a.attachColor(m,e);m.release();return a},()=>{this.debugCallback&&this.debugCallback(a.name,a.fbo,a.numberOfColorAttachments);this._acquired.delete(a);a.detachAll();this._cache.put(a)});return this._trackHandle(a)}acquireDepth(b,d,h,k){return this._acquireDepth(b,d,h,k)}_acquireDepth(b,d,h,k){const l=`${b}x${d}x${h}`,a=this._depthCache.pop(l);if(a)return a.retain(),a.name=k,
this._trackHandle(a);const e=b===g.DepthFormat.DEPTH_STENCIL_TEXTURE?new y.ManagedDepthAttachment(l,new A.Texture(this.rctx,{...C[b],width:d,height:h}),()=>{this._acquired.delete(e);this._depthCache.put(e)}):new y.ManagedDepthAttachment(l,new I.Renderbuffer(this.rctx,{...C[b],width:d,height:h}),()=>{this._acquired.delete(e);this._depthCache.put(e)});e.name=k;return this._trackHandle(e)}_acquireColor(b,d,h,k){const l=`${b}x${d}x${h}`,a=this._colorCache.pop(l);if(a)return a.retain(),a.name=k,this._trackHandle(a);
const e=new F.ManagedColorAttachment(l,new A.Texture(this.rctx,{...B[b],width:d,height:h}),()=>{this._acquired.delete(e);this._colorCache.put(e)});e.name=k;return this._trackHandle(e)}_trackHandle(b){this._acquired.add(b);return b}}const q=new z("default","default",null,()=>q,()=>q,()=>{});q.release=()=>!1;const r=new f.TextureDescriptor;r.pixelFormat=c.PixelFormat.RED;r.internalFormat=c.SizedPixelFormat.R8;r.wrapMode=c.TextureWrapMode.CLAMP_TO_EDGE;const t=new f.TextureDescriptor;t.pixelFormat=c.PixelFormat.RG;
t.internalFormat=c.SizedPixelFormat.RG8;t.wrapMode=c.TextureWrapMode.CLAMP_TO_EDGE;const u=new f.TextureDescriptor;u.internalFormat=c.SizedPixelFormat.RGBA4;u.dataType=c.PixelType.UNSIGNED_SHORT_4_4_4_4;u.wrapMode=c.TextureWrapMode.CLAMP_TO_EDGE;const D=new f.TextureDescriptor;D.wrapMode=c.TextureWrapMode.CLAMP_TO_EDGE;const n=new f.TextureDescriptor;n.wrapMode=c.TextureWrapMode.CLAMP_TO_EDGE;n.samplingMode=c.TextureSamplingMode.LINEAR_MIPMAP_LINEAR;n.hasMipmap=!0;n.maxAnisotropy=8;const p=new f.TextureDescriptor;
p.pixelFormat=c.PixelFormat.RED;p.dataType=c.PixelType.HALF_FLOAT;p.internalFormat=c.SizedPixelFormat.R16F;p.samplingMode=c.TextureSamplingMode.NEAREST;const v=new f.TextureDescriptor;v.dataType=c.PixelType.HALF_FLOAT;v.internalFormat=c.SizedPixelFormat.RGBA16F;v.samplingMode=c.TextureSamplingMode.NEAREST;const B={[g.ColorFormat.RED]:r,[g.ColorFormat.RG]:t,[g.ColorFormat.RGBA4]:u,[g.ColorFormat.RGBA]:D,[g.ColorFormat.RGBA_MIPMAP]:n,[g.ColorFormat.R16F]:p,[g.ColorFormat.RGBA16F]:v};f=new f.TextureDescriptor;
f.pixelFormat=c.PixelFormat.DEPTH_STENCIL;f.dataType=c.PixelType.UNSIGNED_INT_24_8;f.samplingMode=c.TextureSamplingMode.NEAREST;f.wrapMode=c.TextureWrapMode.CLAMP_TO_EDGE;f.internalFormat=c.PixelFormat.DEPTH24_STENCIL8;const C={[g.DepthFormat.DEPTH_STENCIL_TEXTURE]:f,[g.DepthFormat.DEPTH16_BUFFER]:new J.RenderbufferDescriptor(c.RenderbufferFormat.DEPTH_COMPONENT16,4)};w.FBOCache=K;w.defaultWebGLFBO=q;Object.defineProperty(w,Symbol.toStringTag,{value:"Module"})});