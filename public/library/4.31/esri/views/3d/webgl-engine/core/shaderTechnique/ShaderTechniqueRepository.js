// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/Error","../../../../../core/has","../../../../../core/NestedMap","./ShaderTechniqueConfiguration"],function(e,h,r,k,l){async function m(a){let c=!0;a.forEach(async b=>{await b.technique.reload(c);c=!1})}class n{constructor(a){this.context=a;this._precompiling=(this._debug=!1,1);this._cache=new k.NestedMap;this._frameCounter=0;this._keepAliveFrameCount=-1}get precompiling(){return this._precompiling}set precompiling(a){this._precompiling=a;0===a&&this.context.rctx.gl.flush()}get viewingMode(){return this.context.viewingMode}destroy(){this._debug&&
this._cache.forEach((a,c)=>{a.forEach(b=>{0<b.refCount&&console.error(`Unreleased ${c} shader technique, refCount ${b.refCount}`)})});this._cache.forAll(a=>a.technique.destroy());this._cache.clear()}precompile(a,c=f){++this.precompiling;this.acquire(a,c).release();--this.precompiling}acquire(a,c=f){var b=c.key.code;let d=this._cache.get(a,b);if(null==d){if(0===this._precompiling)throw b=`Uncached shader compile in ${Error().stack}\n  for configuration\n${c.decode()}`,a=this._cache.getInner(a),a?.size&&
(b=b+"\n\n  cached configurations:\n"+Array.from(a.values()).map(p=>c.decode(p.technique.key)).sort().join("\n\n")),console.log(b),new h(b);const g=new a(this.context,c,()=>this._release(g));d=new q(g);this._cache.set(a,b,d)}++d.refCount;return d.technique}_release(a){null==a||this._cache.empty||(a=this._cache.get(a.constructor,a.key.code),null!=a&&(--a.refCount,0===a.refCount&&(a.refZeroFrame=this._frameCounter)))}frameUpdate(){this._frameCounter++;-1!==this._keepAliveFrameCount&&this._cache.forEach((a,
c)=>{a.forEach((b,d)=>{0===b.refCount&&b.refZeroFrame+this._keepAliveFrameCount<this._frameCounter&&(b.technique.destroy(),this._cache.delete(c,d))})})}async reloadAll(){const a=[];this._cache.forEach(c=>a.push(m(c)));await Promise.all(a)}}class q{constructor(a){this.technique=a;this.refZeroFrame=this.refCount=0}}const f=new l.ShaderTechniqueConfiguration;e.NoConfiguration=f;e.ShaderTechniqueRepository=n;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});