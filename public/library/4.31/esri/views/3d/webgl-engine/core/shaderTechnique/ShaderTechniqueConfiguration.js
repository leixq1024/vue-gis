// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/Error","../shaderModules/interfaces","./ShaderTechniqueConfigurationKey"],function(k,l,n,p){class q extends n.NoParameters{constructor(){super();this._parameterBits=this._parameterBits?.map(()=>0)??[];this._parameterNames??(this._parameterNames=[])}get key(){this._key??(this._key=new p.ShaderTechniqueConfigurationKey(this._parameterBits));return this._key}decode(e=this.key){const a=this._parameterBits;this._parameterBits=[...e.bits];e=this._parameterNames.map(c=>
`    ${c}: ${this[c]}`).join("\n");this._parameterBits=a;return e}}k.ShaderTechniqueConfiguration=q;k.parameter=function(e={}){return(a,c)=>{a.hasOwnProperty("_parameterNames")||Object.defineProperty(a,"_parameterNames",{value:a._parameterNames?.slice()??[],configurable:!0,writable:!0});a.hasOwnProperty("_parameterBits")||Object.defineProperty(a,"_parameterBits",{value:a._parameterBits?.slice()??[0],configurable:!0,writable:!0});a._parameterNames.push(c);const m=Math.ceil(Math.log2(e.count||2)),f=
a._parameterBits;let b=0;for(;16<f[b]+m;)b++,b>=f.length&&f.push(0);const h=f[b],g=(1<<m)-1<<h;f[b]+=m;e.count?Object.defineProperty(a,c,{get(){return(this._parameterBits[b]&g)>>h},set(d){if(this[c]!==d)if(this._key=null,this._parameterBits[b]=this._parameterBits[b]&~g|+d<<h&g,"number"===typeof d){if(null==e.count)throw new l(`Configuration value for ${c} must provide a count option`);}else throw new l(`Configuration value for ${c} must be a number, got ${typeof d}`);}}):Object.defineProperty(a,c,
{get(){return!!((this._parameterBits[b]&g)>>h)},set(d){if(this[c]!==d&&(this._key=null,this._parameterBits[b]=this._parameterBits[b]&~g|+d<<h&g,"boolean"!==typeof d))throw new l(`Configuration value for ${c} must be boolean, got ${typeof d}`);}})}};Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});