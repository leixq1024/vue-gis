// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../geometry/support/buffer/BufferView ../core/shaderLibrary/ShaderOutput ../lib/basicInterfaces ../lib/GLTextureMaterial ../lib/Material ../lib/OrderIndependentTransparency ../lib/RenderSlot ../lib/Util ../lib/VertexAttribute ./DefaultBufferWriter ./DefaultLayouts ./TriangleMaterial ./internal/bufferWriterUtils ../shaders/ImageMaterialTechnique ../shaders/ImageMaterialTechniqueConfiguration".split(" "),function(g,r,c,t,u,v,w,d,x,h,y,z,A,k,l,B){class C extends A.TriangleMaterial{constructor(b){super(b,
m);this._configuration=new B.ImageMaterialTechniqueConfiguration;this.vertexAttributeLocations=l.vertexAttributeLocations;this.supportsEdges=!0;this.produces=new Map([[d.RenderSlot.OPAQUE_MATERIAL,a=>c.isHighlightOrOID(a)],[d.RenderSlot.TRANSPARENT_MATERIAL,a=>c.isColor(a)&&this.parameters.writeDepth],[d.RenderSlot.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,a=>c.isColor(a)&&!this.parameters.writeDepth],[d.RenderSlot.DRAPED_MATERIAL,a=>c.isColor(a)||c.isHighlightOrOID(a)]])}getConfiguration(b,a){this._configuration.output=
b;this._configuration.cullFace=this.parameters.cullFace;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.writeDepth=this.parameters.writeDepth;this._configuration.hasOccludees=a.hasOccludees;this._configuration.oitPass=a.oitPass;this._configuration.enableOffset=a.camera.relativeElevation<w.OITPolygonOffsetLimit;this._configuration.terrainDepthTest=a.terrainDepthTest;this._configuration.cullAboveTerrain=a.cullAboveTerrain;this._configuration.perspectiveInterpolation=
this.parameters.perspectiveInterpolation;return this._configuration}get visible(){return!0}createGLMaterial(b){return new D(b)}createBufferWriter(){const b=z.PositionUVLayout.clone();this.parameters.perspectiveInterpolation&&b.f32(h.VertexAttribute.PERSPECTIVEDIVIDE);return new E(b)}}class D extends u.GLTextureMaterial{constructor(b){super({...b,...b.material.parameters})}beginSlot(b){this.updateTexture(this._material.parameters.textureId);this._material.setParameters(this.textureBindParameters);
return this.acquireTechnique(l.ImageMaterialTechnique,b)}}class E extends y.DefaultBufferWriter{write(b,a,F,e,n,p){for(const f of this.vertexBufferLayout.fields.keys())if(e=F.get(f))if(f===h.VertexAttribute.PERSPECTIVEDIVIDE){x.assert(1===e.size);const q=n.getField(f,r.BufferViewFloat);q&&k.writeBufferFloat(e,q,p)}else k.writeDefaultAttribute(f,e,b,a,n,p)}}class m extends v.MaterialParameters{constructor(){super(...arguments);this.writeDepth=!0;this.hasSlicePlane=!1;this.cullFace=t.CullFaceOptions.None;
this.opacity=1;this.textureId=null;this.initTextureTransparent=!0;this.perspectiveInterpolation=!1}}g.ImageMaterial=C;g.Parameters=m;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});