// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/string ../../../../core/libs/gl-matrix-2/factories/vec2f32 ../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../core/shaderLibrary/util/AlphaCutoff ../lib/GLMaterial ../lib/Material ../lib/RenderSlot ../lib/VertexAttribute ./internal/bufferWriterUtils ../shaders/LineCalloutTechnique ../shaders/LineCalloutTechniqueConfiguration".split(" "),function(h,w,e,x,y,p,q,z,r,k,c,l,A,B){function m({renderOccluded:a,
isDecoration:d,horizontalScreenOffset:b,color:t,size:f,occlusionTest:g,shaderPolygonOffset:C,hudDepthAlignStart:D,centerOffsetUnits:E,hasSlicePlane:F,screenSizePerspective:G,verticalOffset:n,borderColor:H}){return w.safeToString`${a}:${d}:${b}:[${t}]:${f}:${g}:${C}:${D}:${E}:${F}:${null!=G}:{${n.screenLength}:${n.minWorldLength}:${n.maxWorldLength}}:[${H}]`}class I extends r.Material{constructor(a,d){super(a,u);this.produces=new Map([[k.RenderSlot.LINE_CALLOUTS,b=>b===p.ShaderOutput.Color],[k.RenderSlot.LINE_CALLOUTS_HUD_DEPTH,
b=>b===p.ShaderOutput.Color]]);this._configuration=new B.LineCalloutTechniqueConfiguration(d);this._uniqueMaterialIdentifier=m(this.parameters)}passParameters(){return this.parameters}getConfiguration(a,d){a=d.slot===k.RenderSlot.LINE_CALLOUTS_HUD_DEPTH;this._configuration.occlusionTestEnabled=this.parameters.occlusionTest;this._configuration.hasVerticalOffset=null!=this.parameters.verticalOffset;this._configuration.hasScreenSizePerspective=null!=this.parameters.screenSizePerspective;this._configuration.hudDepth=
a;this._configuration.hudDepthAlignStart=!!this.parameters.hudDepthAlignStart;this._configuration.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.terrainDepthTest=d.terrainDepthTest;return this._configuration}get visible(){return this.parameters.color[3]>=q.alphaCutoff||(this.parameters.borderColor?.[3]??0)>=q.alphaCutoff}intersect(){}createGLMaterial(a){return new J(a)}createBufferWriter(){return new K}validateParameters(a){this._uniqueMaterialIdentifier=
m(a)}get uniqueMaterialIdentifier(){return this._uniqueMaterialIdentifier}}class J extends z{beginSlot(a){return this.acquireTechnique(A.LineCalloutTechnique,a)}}class u extends r.MaterialParameters{constructor(){super(...arguments);this.horizontalScreenOffset=0;this.color=x.fromValues(0,0,0,1);this.size=1;this.occlusionTest=!1;this.shaderPolygonOffset=1E-5;this.hudDepthAlignStart=!1;this.centerOffsetUnits="world";this.hasSlicePlane=!1}}const L=y.newLayout().vec3f(c.VertexAttribute.POSITION).vec3f(c.VertexAttribute.NORMAL).vec2f(c.VertexAttribute.UV0).vec4f(c.VertexAttribute.CENTEROFFSETANDDISTANCE),
v=[e.fromValues(0,0),e.fromValues(1,0),e.fromValues(0,1),e.fromValues(1,0),e.fromValues(1,1),e.fromValues(0,1)];class K{constructor(){this.vertexBufferLayout=L}elementCount(a){return 6*a.get(c.VertexAttribute.POSITION).indices.length}write(a,d,b,t,f,g){l.writePosition(b.get(c.VertexAttribute.POSITION),a,f.position,g,6);l.writeNormal(b.get(c.VertexAttribute.NORMAL),d,f.normal,g,6);l.writeBufferVec4(b.get(c.VertexAttribute.CENTEROFFSETANDDISTANCE),f.centerOffsetAndDistance,g,6);for(a=0;a<v.length;++a)f.uv0.setVec(g+
a,v[a])}}h.LineCalloutMaterial=I;h.Parameters=u;h.uniqueMaterialIdentifier=m;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});