// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../../../geometry/support/buffer/BufferView ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../core/shaderLibrary/util/AlphaCutoff ../effects/geometry/olidUtils ../lib/basicInterfaces ../lib/GLMaterial ../lib/OrderIndependentTransparency ../lib/RenderSlot ../lib/Util ../lib/VertexAttribute ./DefaultBufferWriter ./PatternStyle ./TriangleMaterial ./VisualVariablePassParameters ./internal/bufferWriterUtils ../shaders/PatternTechnique ../shaders/PatternTechniqueConfiguration".split(" "),
function(p,E,x,F,g,G,y,H,I,J,h,z,d,K,L,M,N,A,q,O){class P extends M.TriangleMaterial{constructor(c){super(c,B);this._configuration=new O.PatternTechniqueConfiguration;this.vertexAttributeLocations=y.olidEnabled()?q.vertexAttributeLocationsOID:q.vertexAttributeLocations;this.supportsEdges=!0;this.produces=new Map([[h.RenderSlot.OPAQUE_MATERIAL,a=>g.isHighlightOrOID(a)],[h.RenderSlot.TRANSPARENT_MATERIAL,a=>g.isColor(a)],[h.RenderSlot.TRANSPARENT_MATERIAL_WITHOUT_NORMALS,a=>g.isDepth(a)],[h.RenderSlot.DRAPED_MATERIAL,
a=>this.parameters.draped&&g.isColorHighlightOrOID(a)]])}getConfiguration(c,a){this._configuration.output=c;this._configuration.cullFace=this.parameters.cullFace;this._configuration.hasVertexColors=this.parameters.hasVertexColors&&!this.parameters.vvColor;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.polygonOffset=this.parameters.polygonOffset;this._configuration.style=this.parameters.style;this._configuration.draped=this.parameters.draped;this._configuration.oitPass=
a.oitPass;this._configuration.enableOffset=a.camera.relativeElevation<J.OITPolygonOffsetLimit;this._configuration.terrainDepthTest=a.terrainDepthTest;this._configuration.cullAboveTerrain=a.cullAboveTerrain;this._configuration.vvColor=!!this.parameters.vvColor;return this._configuration}get visible(){return this.parameters.color[3]>=G.alphaCutoff}createGLMaterial(c){return new Q(c)}createBufferWriter(){const c=F.newLayout().vec3f(d.VertexAttribute.POSITION).vec4f(d.VertexAttribute.UVMAPSPACE);this.parameters.draped||
c.mat3f(d.VertexAttribute.BOUNDINGRECT);this.parameters.vvColor?c.f32(d.VertexAttribute.COLORFEATUREATTRIBUTE):c.vec4u8(d.VertexAttribute.COLOR);y.olidEnabled()&&c.vec4u8(d.VertexAttribute.OBJECTANDLAYERIDCOLOR);return new R(c)}}class Q extends I{beginSlot(c){return this.acquireTechnique(q.PatternTechnique,c)}}class R extends K.DefaultBufferWriter{write(c,a,C,b,r,t){A.writeDefaultAttributes(C,b,this.vertexBufferLayout,c,a,r,t);for(const k of this.vertexBufferLayout.fields.keys())if(b=C.get(k),a=b?.indices,
b&&a)switch(k){case d.VertexAttribute.UVMAPSPACE:z.assert(4===b.size);(a=r.getField(k,x.BufferViewVec4f))&&A.writeBufferVec4(b,a,t);break;case d.VertexAttribute.BOUNDINGRECT:z.assert(9===b.size);var f=r.getField(k,x.BufferViewMat3f);if(f){a=t;const {data:l,indices:D}=b;b=c;const m=f.typedBuffer;f=f.typedBufferStride;const S=D.length;a*=f;for(let u=0;u<S;++u){const n=9*D[u];var e=l[n];const v=l[n+1],w=l[n+2];m[a]=b[0]*e+b[4]*v+b[8]*w+b[12];m[a+1]=b[1]*e+b[5]*v+b[9]*w+b[13];m[a+2]=b[2]*e+b[6]*v+b[10]*
w+b[14];for(e=3;9>e;++e)m[a+e]=l[n+e];a+=f}}}}}class B extends N.VisualVariablePassParameters{constructor(){super(...arguments);this.color=E.fromValues(1,1,1,1);this.hasSlicePlane=this.polygonOffset=this.hasVertexColors=!1;this.cullFace=H.CullFaceOptions.None;this.hasOccludees=!1;this.style=L.Style.Cross;this.draped=!0}}p.Parameters=B;p.PatternMaterial=P;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});