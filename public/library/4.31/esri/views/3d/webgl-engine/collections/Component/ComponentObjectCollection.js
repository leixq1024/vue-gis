// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../core/Logger ../../../../../core/PooledArray ../../../../../core/typedArrayUtil ../../../../../chunks/vec32 ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../geometry/support/aaBoundingBox ../../../../../geometry/support/Indices ../../../../../chunks/vec3 ../../../../../chunks/vec33 ../../../../ViewingMode ../../../layers/support/symbolColorUtils ../../../support/orientedBoundingBox ../../../support/buffer/glUtil ../../../support/buffer/InterleavedLayout ./ComponentData ./ComponentObject ./IntersectionGeometry ./Renderable ./RenderGeometry ./RenderSubmitSystem ./SourceGeometry ./UniformComponentParameters ./Material/ComponentMaterial ./Material/ComponentTechnique ./Material/shader/ComponentData.glsl ../../effects/geometry/olidUtils ../../lib/ComponentUtils ../../lib/Util ../../lib/VertexAttribute ../../lib/verticalOffsetUtils ../../lib/TextureBackedBuffer/BufferManager ../../../../webgl/BufferObject ../../../../webgl/enums ../../../../webgl/VertexArrayObject".split(" "),
function(B,C,M,D,N,O,P,Q,R,S,T,E,F,U,G,V,W,X,Y,Z,aa,ba,ca,da,r,ea,fa,H,I,ha,ia,J,ja,z,y,ka){function A(a,b){return a===b?r.ComponentParameterSummary.All:0===a?r.ComponentParameterSummary.None:r.ComponentParameterSummary.Some}const K=()=>M.getLogger("esri.views.3d.webgl-engine.collections.Component.ComponentObjectCollection");class la{constructor(a,b){this._renderManager=a;this._viewingMode=b;this._elevationRangeCacheMax=this._elevationRangeCacheMin=this._elevationRangeCacheVerticalOffset=NaN;this._visible=
new D;this._hidden=new D;this._renderSubmit=new ba.RenderSubmitSystem(this);this._renderManager.register(this._renderSubmit);this._componentBufferManager=new ja.BufferManager(a.rctx,2+(H.olidEnabled()?1:0))}destroy(){ha.assert(0===this._hidden.length&&0===this._visible.length,"ObjectCollection should be empty upon disposal");this._componentBufferManager.destroy();this._visible.forAll(a=>a.destroy());this._hidden.forAll(a=>a.destroy());this._visible.clear();this._hidden.clear()}createObject(a){var b=
a.geometry;const c=new W(this._componentBufferManager,R.compactIndices(b.componentOffsets)),d=this._createRenderable(a,c);b=new Y.IntersectionGeometry(this._viewingMode,b.positionData,c);a=new X.ComponentObject(a.transform,a.toMapSpace,a.obb.clone(),c,d,b);(a.visible?this._visible:this._hidden).push(a);return a}destroyObject(a){(a.visible?this._visible:this._hidden).removeUnordered(a);a.destroy();this._notifyDirty()}setObjectVisibility(a,b){b!==a.visible&&(b?(this._hidden.removeUnordered(a),this._visible.push(a)):
(this._visible.removeUnordered(a),this._hidden.push(a)),a.visible=b,this._notifyDirty())}preSubmit(a){const b=a.camera.eye;this.visibleObjects.forAll(c=>c.renderable.meta.cameraDepthSquared=O.squaredDistance(b,c.obb.center))}getMaterial(a){return a.renderable.material}updateMaterial(a,b){a=a.renderable.material;b(a);a.dirty&&this._notifyDirty()}setAllComponentVisibilities(a,b){a.components.visibility.reset(b);a.components.visibilityDirty();this._notifyDirty()}forEachVisibleComponent(a,b){return a.components.visibility.forEachComponent(b)}getComponentCount(a){const b=
a.components.visibility.componentCount;return{visible:b,invisible:a.components.count-b}}setComponentData(a,b){const c=a.renderable.material,d=a.components;var e=d.materialDataBuffer;const k=d.materialDataIndices,g=new da.UniformComponentParameters;e=e.textureBuffer;const f=new Uint8Array(4),h=new Uint32Array(f.buffer);let m=0,p=0,l=0,n=d.verticalOffsets,t=Infinity,v=-Infinity,w=!1,u=!1,L=0;for(let q=0;q<d.count;q++){b(q,g);m+=+(1>g.externalColor[3]);p+=+(g.externalColorMixMode===F.ColorMixModeEnum.Replace&&
1===g.externalColor[3]);l+=+g.castShadows;F.encodeSymbolColor(g.externalColor,g.externalColorMixMode,f);f[2]=f[2]&254|+g.castShadows;e.setData(k[q],0,f[0],f[1],f[2],f[3]);w||=0<q&&L!==h[0];L=h[0];u||=0!==g.elevationOffset;u&&null==n&&(n=Array(q).fill(0));null!=n&&(n[q]=g.elevationOffset);t=Math.min(t,g.elevationOffset);v=Math.max(v,g.elevationOffset);fa.encodeElevationOffset(g.elevationOffset,f);e.setData(k[q],1,f[0],f[1],f[2],f[3]);const x=g.objectAndLayerIdColor;null!=x&&e.setData(k[q],2,x[0],x[1],
x[2],x[3]);g.pickable!==I.getVisibility(d.pickability,q)&&(d.pickability=I.updateVisibilityWithCount(d.pickability,d.count,q,g.pickable))}d.verticalOffsets=u?n:null;a.offsetObb=u?U.computeOffsetObb(a.obb,t,v,this._viewingMode,a.offsetObb??a.obb.clone()):null;w||u||H.olidEnabled()?(c.componentParameters=new r.ComponentParametersVarying,c.componentParameters.castShadows=A(l,d.count),c.componentParameters.transparent=A(m,d.count),c.componentParameters.opaqueOverride=A(p,d.count),c.componentParameters.texture=
e,e.updateTexture()):(c.componentParameters=new r.ComponentParametersUniform,c.componentParameters.castShadows=g.castShadows?r.ComponentParameterSummary.All:r.ComponentParameterSummary.None,c.componentParameters.externalColor=g.externalColor,c.componentParameters.externalColorMixMode=g.externalColorMixMode);this._elevationRangeCacheVerticalOffset=NaN;this._notifyDirty()}getComponentAabb(a,b,c,d=!1){a.intersectionGeometry.getComponentAabb(b,c);const e=a.components.verticalOffsets;if(d||null==e)return c;
b=e[b];if(this._viewingMode===E.ViewingMode.Local||0===b)return c[2]+=b,c[5]+=b,c;b=J.getVerticalOffsetI3S(b);b.localOrigin=a.transform.position;return b.applyToAabb(c)}getComponentObb(a){return a.obb}getObjectTransform(a){return a.transform}getComponentPositions(a,b,c){return a.intersectionGeometry.getComponentPositions(b,c)}expandRangeWithComponentObjectElevationRange(a,b,c,d){Number.isNaN(this._elevationRangeCacheVerticalOffset)||this._elevationRangeCacheVerticalOffset!==b||d.expandElevationRangeValues(this._elevationRangeCacheMin,
this._elevationRangeCacheMax);var e=a.components;const k=e.count;e=e.verticalOffsets;const g=this._viewingMode===E.ViewingMode.Local,f=a.intersectionGeometry.getComponentAabbs(),h=ma;let m=Infinity,p=-Infinity;for(let t=0;t<k;t++){var l=6*t,n=e?.[t]??0;let v=Infinity,w=-Infinity;if(g)v=f[l+2]+n+b,w=f[l+5]+n+b;else{h[0]=f[l];h[1]=f[l+1];h[2]=f[l+2];h[3]=f[l+3];h[4]=f[l+4];h[5]=f[l+5];0!==n&&(l=J.getVerticalOffsetI3S(n),l.localOrigin=a.transform.position,l.applyToAabb(h));l=Math.max(Math.abs(h[3]),
Math.abs(h[0]));n=Math.max(Math.abs(h[4]),Math.abs(h[1]));const u=b+h[5]+c;d.expandElevationRangeValues(b+h[2],Math.sqrt(l*l+n*n+u*u)-c)}d.expandElevationRangeValues(v,w);m=Math.min(m,v);p=Math.max(p,w)}this._elevationRangeCacheVerticalOffset=b;this._elevationRangeCacheMin=m;this._elevationRangeCacheMax=p}intersect(a,b,c,d,e,k,g){const {transform:f}=a,{position:h}=f;null!=e&&(e.localOrigin=h);return a.intersectionGeometry.intersect(b,c,d,e,a.components.verticalOffsets,f,k,g)}addEdges(a,b,c,d,e){const {indices:k,
positions:g}=a.intersectionGeometry;return b.addComponentObject(a,g,k,a.components.offsets,c,d,e)}async extractEdgeInformation(a,b,c){var d=a.components.visibility;if(d.allInvisible())return{extractComponentsEdgeLocationsLayout:b}=await new Promise((h,m)=>B(["../../lib/edgeRendering/edgeProcessing"],h,m)),{buffer:b.createBuffer(0),origin:[0,0,0]};const {indices:e,positions:k}=a.intersectionGeometry,g=a.components.offsets;var {EdgeInputBufferLayout:f}=await new Promise((h,m)=>B(["../../lib/edgeRendering/bufferLayouts"],
h,m));f=f.createBuffer(k.length/3);T.copy(f.position.typedBuffer,k,f.position.typedBufferStride,3);S.transformMat3View(f.position,f.position,a.transform.rotationScale);this._setComponentIndices(f.componentIndex,e,g);d=this._computeVisibilityIndices(e,d,g,f.count);a=P.clone(a.transform.position);b=await b.extractComponentsEdgeLocations({indices:d,indicesLength:d.length,skipDeduplicate:!0,data:f,writerSettings:{reducedPrecision:!1,variants:0}},c);return{origin:a,buffer:b}}_setComponentIndices(a,b,c){let d=
0;for(let k=0;k<c.length-1;k++){var e=c[k];const g=c[k+1];for(;e<g;e++)a.set(b?b[e]:e,d);d++}}_computeVisibilityIndices(a,b,c,d){if(a&&b.allVisible())return a;let e=0;b.forEachComponentRange((f,h)=>{e+=c[h]-c[f];return!0});const k=N.isArray(a)?Array(e):2===a?.BYTES_PER_ELEMENT||65536>=d?new Uint16Array(e):new Uint32Array(e);let g=0;b.forEachComponentRange((f,h)=>{f=c[f];for(h=c[h];f<h;f++)k[g++]=a?a[f]:f;return!0});return k}addComponentHighlight(a,b,c){a=a.components;let d=a.highlightCounts,e=a.highlightGroups;
if(null==d||null==e)d=new Uint32Array(a.count+1),a.highlightCounts=d,e=Array(a.count+1),a.highlightGroups=e;e[b]=c;0===d[b]++&&(a.highlightsDirty(),this._notifyDirty());d[a.count]++}removeComponentHighlight(a,b){a=a.components;const c=a.highlightCounts;if(null==c)K().warn("Removing non-existing highlight.");else{var d=c[b];if(0===d)K().warn("Removing non-existing highlight.");else{var e=c[a.count];1<d?(c[b]=d-1,c[a.count]=e-1):(c[b]=0,a.highlightsDirty(),this._notifyDirty(),1===e?(a.highlightCounts=
null,a.highlightGroups=null):c[a.count]=e-1)}}}clearHighlights(a){a=a.components;null!=a.highlightCounts&&(a.highlightCounts=null,a.highlightGroups=null,a.highlightsDirty(),this._notifyDirty())}getObjectGPUMemoryUsage(a){return a.renderable.meta.gpuMemoryEstimate}get visibleObjects(){return this._visible}_createRenderable(a,b){var c=this._renderManager.rctx;const d=a.geometry;var e=d.vertices.layoutParameters;const k=z.BufferObject.createVertex(c,y.Usage.STATIC_DRAW,d.vertices.data),g=d.indices?z.BufferObject.createIndex(c,
y.Usage.STATIC_DRAW,d.indices):null,f=G.glLayout(ca.createVertexBufferLayout(e)),h=new Uint16Array(d.vertices.count);for(let p=0;p<b.count;p++){var m=b.offsets[p];const l=b.offsets[p+1],n=b.materialDataIndices[p];if(null!=d.indices)for(;m<l;m++)h[d.indices[m]]=n;else for(;m<l;m++)h[m]=n}b=z.BufferObject.createVertex(c,y.Usage.STATIC_DRAW,h.buffer);a=new r.ComponentMaterial(a.transform,a.toMapSpace);c=new ka.VertexArrayObject(c,ea.vertexAttributeLocations,new Map([["data",f],["componentIndices",na]]),
new Map([["data",k],["componentIndices",b]]),g);e=new aa.RenderGeometry(c,y.PrimitiveType.TRIANGLES,e,null!=g);return new Z.Renderable(a,e,{cameraDepthSquared:.5,gpuMemoryEstimate:k.usedMemory+b.usedMemory+(null!=g?g.usedMemory:0)})}_notifyDirty(){this._renderManager.notifyDirty()}}const na=G.glLayout(V.newLayout().u16(ia.VertexAttribute.COMPONENTINDEX)),ma=Q.create();C.ComponentObjectCollection=la;Object.defineProperty(C,Symbol.toStringTag,{value:"Module"})});