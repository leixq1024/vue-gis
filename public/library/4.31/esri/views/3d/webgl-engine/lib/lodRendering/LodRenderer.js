// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/arrayUtils ../../../../../core/Error ../../../../../core/MapUtils ../../../../../core/maybe ../../../../../core/promiseUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/Logger ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../../../chunks/vec32 ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../../support/debugFlags ../../../support/buffer/glUtil ../../../support/buffer/InterleavedLayout ../../../webgl/RenderCamera ../../core/shaderLibrary/ShaderOutput ../../effects/RenderPlugin ../DefaultVertexAttributeLocations ../IntersectorInterfaces ../Octree ../RenderSlot ../Util ../VertexAttribute ./InstanceData ./InstanceOctree ./LevelSelector ./LodLevel ./RenderInstanceData ../../materials/internal/MaterialUtil ../../materials/renderers/utils ../../shaders/DefaultMaterialTechnique ../../../../support/Scheduler ../../../../webgl/Util".split(" "),
function(q,r,U,F,V,W,G,u,qa,ra,X,Y,w,D,A,H,Z,aa,ba,x,ca,I,da,J,E,C,y,m,ea,fa,ha,ia,ja,ka,la,K,L){function M(a,b,c){const f=a.allocateHead();a=a.view;ka.encodeDoubleVec3(b.modelOrigin,c,a.modelOriginHi,a.modelOriginLo,f);a.model.copyFrom(f,b.model,c);a.modelNormal.copyFrom(f,b.modelNormal,c);b.color&&a.color&&a.color.copyFrom(f,b.color,c);b.objectAndLayerIdColor&&a.objectAndLayerIdColor&&a.objectAndLayerIdColor.copyFrom(f,b.objectAndLayerIdColor,c);b.featureAttribute&&a.featureAttribute&&a.featureAttribute.copyFrom(f,
b.featureAttribute,c)}function ma(a){let b=aa.newLayout().vec3f(y.VertexAttribute.INSTANCEMODELORIGINHI).vec3f(y.VertexAttribute.INSTANCEMODELORIGINLO).mat3f(y.VertexAttribute.INSTANCEMODEL).mat3f(y.VertexAttribute.INSTANCEMODELNORMAL);null!=a&&a.includes("featureAttribute")&&(b=b.vec4f(y.VertexAttribute.INSTANCEFEATUREATTRIBUTE));null!=a&&a.includes("color")&&(b=b.vec4u8(y.VertexAttribute.INSTANCECOLOR));null!=a&&a.includes("objectAndLayerIdColor")&&(b=b.vec4u8(y.VertexAttribute.INSTANCEOBJECTANDLAYERIDCOLOR));
return b}const na=a=>{const b=a.baseBoundingSphere.radius;a=a.levels.map(c=>c.minScreenSpaceRadius);return new fa.LevelSelector(b,a)};q.LodRenderer=class extends ca.AsyncRenderPlugin{constructor(a,b){super(a);this.type=da.IntersectorType.LOD;this.isGround=!1;this._levels=[];this._defaultRenderInstanceData=[];this._highlightRenderInstanceDataMap=new Map;this._cycleStartIndex=this._instanceIndex=0;this._slicePlane=!1;this._camera=new ba;this._updateCyclesWithStaticCamera=-1;this._needFullCycle=!1;this.produces=
new Map([[E.RenderSlot.OPAQUE_MATERIAL,c=>this._produces(c)],[E.RenderSlot.TRANSPARENT_MATERIAL,c=>this._hasTransparentLevels()?this._produces(c):!1]]);this._instanceData=new m.InstanceData({shaderTransformation:a.shaderTransformation},a.optionalFields);this.addHandles(b.registerTask(K.TaskPriority.LOD_RENDERER,this))}initialize(){this._instanceBufferLayout=ma(this.optionalFields);this._glInstanceBufferLayout=Z.glLayout(this._instanceBufferLayout,1);this.addHandles([this._instanceData.events.on("instances-changed",
()=>this._requestUpdateCycle()),this._instanceData.events.on("instance-transform-changed",({index:a})=>{this._requestUpdateCycle();this.metadata.notifyGraphicGeometryChanged(a)}),this._instanceData.events.on("instance-visibility-changed",({index:a})=>{this._requestUpdateCycle(!0);this.metadata.notifyGraphicVisibilityChanged(a)}),this._instanceData.events.on("instance-highlight-changed",()=>this._requestUpdateCycle(!0))])}get _allRenderInstanceData(){const a=[this._defaultRenderInstanceData];for(const b of this._highlightRenderInstanceDataMap)a.push(b[1]);
return a}get _enableLevelSelection(){return 1<this.symbol.levels.length}get levels(){return this._levels}get baseBoundingBox(){return this._levels[this._levels.length-1].boundingBox}get baseBoundingSphere(){return this._levels[this._levels.length-1].boundingSphere}get baseMaterial(){return this._levels[this._levels.length-1].components[0].material}get slicePlaneEnabled(){return this._slicePlane}set slicePlaneEnabled(a){this._slicePlane=a}get layerUid(){return this.metadata.layerUid}get instanceData(){return this._instanceData}get hasEmissions(){return this.baseMaterial.hasEmissions}get usedMemory(){return this._allRenderInstanceData.reduce((a,
b)=>b.reduce((c,f)=>c+f.usedMemory,a),0)}get renderStats(){const a=this._instanceData.size,b=[];this._levels.forEach((c,f)=>{f=this._allRenderInstanceData[0][f].size+this._allRenderInstanceData[1][f].size;c=c.triangleCount;b.push({renderedInstances:f,renderedTriangles:f*c,trianglesPerInstance:c})});return{totalInstances:a,renderedInstances:b.reduce((c,f)=>c+f.renderedInstances,0),renderedTriangles:b.reduce((c,f)=>c+f.renderedTriangles,0),levels:b}}_createRenderInstanceDataArray(a=[]){const {rctx:b}=
this._context.renderContext;this.symbol.levels.map(c=>{a.push(new ia.RenderInstanceData(b,this._instanceBufferLayout))});return a}async initializeRenderContext(a,b){this._context=a;this._createRenderInstanceDataArray(this._defaultRenderInstanceData);const c=await Promise.allSettled(this.symbol.levels.map(d=>ha.LodLevel.create(a,d,b))),f=c.map(d=>"fulfilled"===d.status?d.value:null).filter(U.isSome);if(G.isAborted(b)||f.length!==c.length){f.forEach(d=>d.destroy());G.throwIfAborted(b);for(const d of c)if("rejected"===
d.status)throw d.reason;}this._levels=f;this._levelSelector=na(this)}uninitializeRenderContext(){this._invalidateOctree();this._levels.forEach(a=>a.destroy());this._defaultRenderInstanceData.forEach(a=>a.destroy());this._highlightRenderInstanceDataMap.forEach(a=>a.forEach(b=>b.destroy()))}_hasTransparentLevels(){return this._levels.some(a=>a.components.some(b=>b.material.produces.get(E.RenderSlot.TRANSPARENT_MATERIAL)?.(x.ShaderOutput.Color)))}hasHighlights(){return V.someMap(this._highlightRenderInstanceDataMap,
a=>a.some(b=>0<b.size))}_produces(a){return a!==x.ShaderOutput.Highlight&&a!==x.ShaderOutput.ShadowHighlight||this.hasHighlights()}prepareRender(a){if(!H.debugFlags.LOD_INSTANCE_RENDERER_DISABLE_UPDATES){if(this._enableLevelSelection){const b=a.bind.contentCamera.equals(this._camera);this._camera.copyFrom(a.bind.contentCamera);b||this._requestUpdateCycle()}this._needFullCycle&&(this.runTask(K.noBudget),this._needFullCycle=!1)}}acquireTechniques(a){if(!this.baseMaterial.visible||!this.baseMaterial.isVisibleForOutput(a.output))return null;
const b=this._getInstanceDatas(a);if(!b)return null;const c=[],f=this.levels;b.forEach(d=>f.forEach(({components:k},l)=>k.forEach(g=>c.push(this._beginComponent(a,d[l],g)))));return c}render(a,b){const c=this._getInstanceDatas(a);if(c&&null!=b){var f=0;a.rctx.bindVAO();var d=this.levels;c.forEach(k=>d.forEach(({components:l},g)=>l.forEach(e=>this._renderComponent(a,b[f++],k[g],e,g))))}}_getInstanceDatas(a){const {output:b,bind:c}=a;a=b===x.ShaderOutput.Highlight;const f=b!==x.ShaderOutput.ShadowExcludeHighlight;
if(!a&&b!==x.ShaderOutput.ShadowHighlight)return f?this._allRenderInstanceData:[this._defaultRenderInstanceData];if(f){if(a){var {highlightGroupName:d}=c;return d?(d=this._highlightRenderInstanceDataMap.get(d))?[d]:null:null}a=[];for(d of this._highlightRenderInstanceDataMap)a.push(d[1]);return a}return null}intersect(a,b,c,f){if(this.baseMaterial.visible&&null!=this._octree){var d=D.create();w.subtract(d,f,c);var k=l=>{this._instanceData.getCombinedModelTransform(l,N);a.transform.set(N);w.transformMat4(O,
c,a.transform.inverse);w.transformMat4(P,f,a.transform.inverse);const g=this._instanceData.getState(l),e=this._instanceData.getLodLevel(l),z=this._levels.length;C.assert(0!==(g&m.StateFlags.ACTIVE),"invalid instance state");C.assert(0<=e&&e<z,"invaid lod level");this._levels[e].intersect(a,b,O,P,l,this.metadata,z)};this.baseMaterial.parameters.verticalOffset?this._octree.forEach(k):this._octree.forEachAlongRay(c,d,k)}}notifyShaderTransformationChanged(){this._invalidateOctree();this._requestUpdateCycle()}get _octree(){if(null==
this._octreeCached){const a=this._instanceData,b=a.view?.state;if(!b)return null;this._octreeCached=new ea.InstanceOctree(a,this.baseBoundingSphere);for(let c=0;c<a.capacity;++c)b.get(c)&m.StateFlags.ACTIVE&&this._octreeCached.addInstance(c)}return this._octreeCached}_invalidateOctree(){this._octreeCached=W.destroyMaybe(this._octreeCached)}queryDepthRange(a){if(null==this._octree)return{near:Infinity,far:-Infinity};var b=a.viewForward,c=this._octree.findClosest(b,J.DepthOrder.FRONT_TO_BACK,a.frustum);
const f=this._octree.findClosest(b,J.DepthOrder.BACK_TO_FRONT,a.frustum);if(null==c||null==f)return{near:Infinity,far:-Infinity};const d=a.eye,k=this._instanceData.view;k.boundingSphere.getVec(c,t);w.subtract(t,t,d);c=w.dot(t,b)-t[3];k.boundingSphere.getVec(f,t);w.subtract(t,t,d);b=w.dot(t,b)+t[3];return{near:Math.max(a.near,c),far:Math.min(a.far,b)}}_requestUpdateCycle(a=!1){this._updateCyclesWithStaticCamera=-1;this._cycleStartIndex=this._instanceIndex;a&&(this._needFullCycle=!0,this._context.requestRender())}_startUpdateCycle(){this._updateCyclesWithStaticCamera++;
this._allRenderInstanceData.forEach(a=>a.forEach(b=>b.startUpdateCycle()))}get running(){return 0<this._instanceData.size&&1>this._updateCyclesWithStaticCamera}runTask(a){const {_enableLevelSelection:b,_camera:c,_levelSelector:f}=this;this._allRenderInstanceData.forEach(v=>v.forEach(n=>n.beginUpdate()));const d=this._instanceData,k=d.view;let l=d.size;const g=d.capacity;let e=this._instanceIndex;const z=Math.ceil(g/500);for(let v=0;v<l&&!a.done;++v){e===this._cycleStartIndex&&this._startUpdateCycle();
const n=k.state.get(e);var h=0;if(!(n&m.StateFlags.ALLOCATED)){e=e+1===g?0:e+1;l++;continue}const Q=k.lodLevel.get(e);n&m.StateFlags.DEFAULT_ACTIVE&&this._defaultRenderInstanceData[Q].freeTail();n&m.StateFlags.HIGHLIGHT_ACTIVE&&d.foreachHighlightGroupPrev(e,p=>{if(p=this._highlightRenderInstanceDataMap.get(p))p[Q].freeTail();else throw new F("Internal error in lodRenderer");});if(n&m.StateFlags.REMOVE)d.freeInstance(e);else if(n&m.StateFlags.VISIBLE){let p=0;b&&(k.modelOrigin.getVec(e,R),p=f.selectLevel(R,
d.getCombinedMedianScaleFactor(e),c));h=n&~(m.StateFlags.ACTIVE|m.StateFlags.TRANSFORM_CHANGED);0<=p&&(n&m.StateFlags.HIGHLIGHT?(d.foreachHighlightGroup(e,S=>{let B=this._highlightRenderInstanceDataMap.get(S);B||(B=this._createRenderInstanceDataArray(),B.forEach(oa=>oa.beginUpdate()),this._highlightRenderInstanceDataMap.set(S,B));if(p>=B.length)throw new F(`LodRenderer internal error - missing lodLevel ${p}`);M(B[p],k,e)}),h|=m.StateFlags.HIGHLIGHT_ACTIVE):(M(this._defaultRenderInstanceData[p],k,
e),h|=m.StateFlags.DEFAULT_ACTIVE));k.state.set(e,h);k.lodLevel.set(e,p)}else h=n&~(m.StateFlags.ACTIVE|m.StateFlags.TRANSFORM_CHANGED),k.state.set(e,h);if(null!=this._octreeCached){const p=!!(n&m.StateFlags.ACTIVE);h=!!(h&m.StateFlags.ACTIVE);!p&&h?this._octreeCached.addInstance(e):p&&!h?this._octreeCached.removeInstance(e):p&&h&&n&m.StateFlags.TRANSFORM_CHANGED&&(this._octreeCached.removeInstance(e),this._octreeCached.addInstance(e))}e=e+1===g?0:e+1;0===e%z&&a.madeProgress()}this._instanceIndex=
e;this._allRenderInstanceData.forEach(v=>v.forEach(n=>n.endUpdate()));this._context.requestRender()}_beginComponent(a,b,c){return 0===b.size?null:c.glMaterials.load(a.rctx,a.bind.slot,a.output)?.beginSlot(a.bind)}_renderComponent(a,b,c,f,d){if(b){var {bind:k,rctx:l}=a;l.runAppleAmdDriverHelper();var g=l.bindTechnique(b,k,f.material.parameters,pa);l.bindVAO(f.vao);b.ensureAttributeLocations(f.vao);H.debugFlags.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL&&a.output===x.ShaderOutput.Color&&(g.setUniform4fv("externalColor",
T[Math.min(d,T.length-1)]),g.setUniform1i("colorMixMode",ja.colorMixModes.replace));a=c.capacity;d=c.headIndex;g=c.tailIndex;var e=c.firstIndex,z=this._glInstanceBufferLayout,h=(v,n)=>{L.bindVertexBufferLayout(l,I.Default3D,c.buffer,z,v);l.drawArraysInstanced(b.primitiveType,0,f.vertexCount,n-v);L.unbindVertexBufferLayout(l,I.Default3D,c.buffer,z)};f.material.parameters.transparent&&null!=e?d>g?(C.assert(e>=g&&e<=d,"invalid firstIndex"),h(e,d),h(g,e)):d<g&&(e<=d?(C.assert(0<=e&&e<=d,"invalid firstIndex"),
h(e,d),h(g,a),h(0,e)):(C.assert(e>=g&&e<=a,"invalid firstIndex"),h(e,a),h(0,d),h(g,e))):d>g?h(g,d):d<g&&(h(0,d),h(g,a));l.bindVAO(null)}}};r.__decorate([u.property({constructOnly:!0})],q.LodRenderer.prototype,"symbol",void 0);r.__decorate([u.property({constructOnly:!0})],q.LodRenderer.prototype,"optionalFields",void 0);r.__decorate([u.property({constructOnly:!0})],q.LodRenderer.prototype,"metadata",void 0);r.__decorate([u.property({constructOnly:!0})],q.LodRenderer.prototype,"shaderTransformation",
void 0);r.__decorate([u.property()],q.LodRenderer.prototype,"_instanceData",void 0);r.__decorate([u.property()],q.LodRenderer.prototype,"_cycleStartIndex",void 0);r.__decorate([u.property({readOnly:!0})],q.LodRenderer.prototype,"_enableLevelSelection",null);r.__decorate([u.property()],q.LodRenderer.prototype,"_updateCyclesWithStaticCamera",void 0);r.__decorate([u.property({readOnly:!0})],q.LodRenderer.prototype,"running",null);q.LodRenderer=r.__decorate([X.subclass("esri.views.3d.webgl-engine.lib.lodRendering.LodRenderer")],
q.LodRenderer);const R=D.create(),t=A.create(),N=Y.create(),O=D.create(),P=D.create(),T=[A.fromValues(1,0,1,1),A.fromValues(0,0,1,1),A.fromValues(0,1,0,1),A.fromValues(1,1,0,1),A.fromValues(1,0,0,1)],pa=new la.DefaultMaterialDrawParameters;Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});