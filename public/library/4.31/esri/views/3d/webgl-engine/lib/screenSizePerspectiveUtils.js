// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/mathUtils","../../../../chunks/boundedPlane","../../../../chunks/sphere","../../../ViewingMode"],function(h,e,A,m,B){function r(a,c,b){b=b.parameters;n.scale=Math.min(b.divisor/(c-b.offset),1);n.factor=Math.abs(a*a*a);return n}function p(a,c){return e.lerp(a*Math.max(c.scale,c.minScaleFactor),a,c.factor)}class q{get minScaleFactor(){return null!=this._fontHeight?Math.min(this._description.minPixelSize/this._fontHeight,1):0}constructor(a,c,b,d={camera:{distance:0,
fovY:0},divisor:0,offset:0},f){this._viewingMode=a;this._description=c;this._ellipsoidRadius=b;this.parameters=d;this._fontHeight=f;this._viewingMode===B.ViewingMode.Local?(this._coverageCompensation=this._surfaceCoverageCompensationLocal,this._calculateCurvatureDependentParameters=this._calculateCurvatureDependentParametersLocal):(this._coverageCompensation=this._surfaceCoverageCompensationGlobal,this._calculateCurvatureDependentParameters=this._calculateCurvatureDependentParametersGlobal)}update(a){if(this.parameters&&
this.parameters.camera.fovY===a.fovY&&this.parameters.camera.distance===a.distance)return!1;this._calculateParameters(a,this._ellipsoidRadius,this.parameters);return!0}overrideFontHeight(a){return a!==this._fontHeight?new q(this._viewingMode,this._description,this._ellipsoidRadius,this.parameters,a):this}_calculateParameters(a,c,b){const {scaleStart:d,scaleFallOffRange:f}=this._description,{fovY:k,distance:l}=a;var g=this._calculateCurvatureDependentParameters(a,c);c=this._coverageCompensation(a,
c,g);const {tiltAngle:t,scaleFallOffFactor:u}=g,v=Math.sin(t)*l,w=.5*Math.PI-t-k*(.5-d*c);g=v/Math.cos(w);c=(g-v/Math.cos(w+k*f*c)*u)/(1-u);b.camera.fovY=a.fovY;b.camera.distance=a.distance;b.offset=c;b.divisor=g-c;return b}_calculateCurvatureDependentParametersLocal(a,c,b=x){b.tiltAngle=this._description.curvatureDependent.min.tiltAngle;b.scaleFallOffFactor=this._description.curvatureDependent.min.scaleFallOffFactor;return b}_calculateCurvatureDependentParametersGlobal(a,c,b=x){const d=this._description.curvatureDependent;
a=1+a.distance/c;a=Math.sqrt(a*a-1);const [f,k]=[d.min.curvature,d.max.curvature];a=e.clamp((a-f)/(k-f),0,1);const [l,g]=[d.min,d.max];b.tiltAngle=e.lerp(l.tiltAngle,g.tiltAngle,a);b.scaleFallOffFactor=e.lerp(l.scaleFallOffFactor,g.scaleFallOffFactor,a);return b}_surfaceCoverageCompensationLocal(a,c,b){return A.cameraFrustumCoverage(b.tiltAngle,a.fovY)}_surfaceCoverageCompensationGlobal(a,c,b){m.fromRadius(y,c);return m.cameraFrustumCoverage(y,b.tiltAngle,a.distance,a.fovY)}}const z={curvatureDependent:{min:{curvature:e.deg2rad(10),
tiltAngle:e.deg2rad(12),scaleFallOffFactor:.5},max:{curvature:e.deg2rad(70),tiltAngle:e.deg2rad(40),scaleFallOffFactor:.8}},scaleStart:.3,scaleFallOffRange:.65,minPixelSize:0},n={scale:0,factor:0,minScaleFactor:0},x={tiltAngle:0,scaleFallOffFactor:0},y=m.create();h.applyPrecomputedScaleFactor=function(a,c,b=[0,0]){c=Math.min(Math.max(c.scale,c.minScaleFactor),1);b[0]=a[0]*c;b[1]=a[1]*c;return b};h.applyScaleFactor=p;h.getLabelSettings=function(a,c){const {curvatureDependent:b,scaleStart:d,scaleFallOffRange:f}=
z;return new q(a,{curvatureDependent:{min:{curvature:b.min.curvature,tiltAngle:b.min.tiltAngle,scaleFallOffFactor:.7},max:{curvature:b.max.curvature,tiltAngle:b.max.tiltAngle,scaleFallOffFactor:.95}},scaleStart:d,scaleFallOffRange:f,minPixelSize:14},c)};h.getSettings=function(a,c){return new q(a,z,c)};h.precomputeScaleFactor=function(a,c,b,d){a=r(a,c,b);a.minScaleFactor=0;a=p(1,a);d.scale=a;d.factor=0;d.minScaleFactor=b.minScaleFactor};h.scale=function(a,c,b,d){return p(a,r(c,b,d))};Object.defineProperty(h,
Symbol.toStringTag,{value:"Module"})});