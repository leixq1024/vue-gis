// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../featureData/FeatureData","../featureData/interfaces","./TestObjectSymbol","./TestSymbol"],function(g,l,h,m,n){class p{constructor(a){this._symbols=new Map;this._context=a}async load(){this._symbols.set(0,new n.TestSymbol(this._context));this._symbols.set(1,new m.TestObjectSymbol(this._context))}async add(a,c){await this._provisionFeatureData(a,this._context);a=this._partition(a);await Promise.all(a.map(async d=>{const e=await this._provisionSymbol(d.partitionInfo?.index,c);e&&
await e.add(d,c)}))}async remove(a,c){a=a.partitions;if(!a)throw Error("partitioned featureset expected");await Promise.all(a.map(async d=>{const e=await this._provisionSymbol(d.partitionInfo?.index,c);e&&await e.remove(d,c)}))}async _provisionFeatureData(a,c){await a.provision([h.FeatureDataItem.PARTITION_ID,h.FeatureDataItem.OBJECT_ID],c)}async _provisionSymbol(a,c){if(null==a)return null;a=this._symbols.get(a);if(!a)return null;a.loaded||await a.load(c);return a}_partition(a){const {numFeatures:c,
objectIds:d,partitionIds:e}=a,k=[[],[]];for(let b=0;b<c;++b){const f=d[b]%2;k[f].push(b);e[b]=f}a.partitions=k.filter(b=>0<b.length).map((b,f)=>{const q=b.length;b={index:f,tileIndices:new Uint32Array(b)};return new l.FeatureData(a.tile,q,b)});return a.partitions}}g.UniqueValueFeatureRenderer=p;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});