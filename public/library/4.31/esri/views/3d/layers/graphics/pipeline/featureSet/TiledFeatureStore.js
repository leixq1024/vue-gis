// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../core/Evented","../../../../../../core/libs/rbush/PooledRBush","../../../../../../layers/graphics/centroid","../../../../../../layers/graphics/OptimizedGeometry"],function(h,m,l,n,p){class g{constructor(a,b){this._index=a;this._view=b}getObjectId(){return this._view.getObjectId(this._index)}getAttribute(a){return this._view.getAttribute(this._index,a)}getAttributeAsTimestamp(a){return this._view.getAttributeAsTimestamp(this._index,a)}getAttributes(){return this._view.getAttributes(this._index)}getOptimizedGeometry(){return this._view.getOptimizedGeometry(this._index)}getCentroid(a){return this._view.getCentroid(this._index,
a)}getBounds(){return this._view.getBounds(this._index)}getBoundingBox(){return this._view.getBoundingBox(this._index)}cloneWithGeometry(a){return new q(this._index,this._view,a)}}class q extends g{constructor(a,b,c){super(a,b);this._geometryOverride=c}getOptimizedGeometry(){return this._geometryOverride}getCentroid(a){return n.getCentroidOptimizedGeometry(new p,this._geometryOverride,a.hasZ,a.hasM)}}class r{constructor(){this._storedTiles=new Map;this._pageBounds=new Map;this.events=new m;this.featureAdapter=
k.shared}addTile(a){this._storedTiles.set(a.descriptor.id,a);for(const b of a.pages)this._addPage(b)}removeTile(a){const b=this._storedTiles,c=b.get(a);if(null!=c){b.delete(a);for(const d of c.pages)this._removePage(d)}}_addPage(a){const {featureCount:b}=a;if(0!==b){var c=new l.PooledRBush(9,e=>a.getBounds(e)),d=[];for(let e=0;e<b;++e)d[e]=e;c.load(d);this._pageBounds.set(a,c);this.events.emit("changed")}}_removePage(a){this._pageBounds.delete(a);this.events.emit("changed")}clear(){this._storedTiles.clear();
this._pageBounds.clear();this.events.emit("changed")}forEach(a){for(const [b,c]of this._pageBounds)c.all(d=>a(new g(d,b)))}forEachInBounds(a,b){f.minX=a[0];f.minY=a[1];f.maxX=a[2];f.maxY=a[3];for(const [c,d]of this._pageBounds)d.search(f,e=>b(new g(e,c)))}forEachBounds(a,b){for(const c of a)b(c.getBoundingBox())}getFullExtent(a){let b=Infinity,c=Infinity,d=-Infinity,e=-Infinity;for(const t of this._pageBounds.values()){const {minX:u,minY:v,maxX:w,maxY:x}=t.toJSON();b=Math.min(b,u);c=Math.min(c,v);
d=Math.min(d,w);e=Math.min(e,x)}return{xmin:b,ymin:c,xmax:d,ymax:e,spatialReference:a}}}class k{getObjectId(a){return a.getObjectId()}getAttribute(a,b){return a.getAttribute(b)}getAttributeAsTimestamp(a,b){return a.getAttributeAsTimestamp(b)}getAttributes(a){return a.getAttributes()}getGeometry(a){return a.getOptimizedGeometry()}getCentroid(a,b){return a.getCentroid(b)}cloneWithGeometry(a,b){return a.cloneWithGeometry(b)}}k.shared=new k;const f=new l.BBox;h.FeatureHandle=g;h.TiledFeatureStore=r;Object.defineProperty(h,
Symbol.toStringTag,{value:"Module"})});