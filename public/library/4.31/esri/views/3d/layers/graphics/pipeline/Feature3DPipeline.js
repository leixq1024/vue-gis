// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/Error ../../../../../core/handleUtils ../../../../../core/Promise ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/Logger ../../../../../core/RandomLCG ../../../../../core/accessorSupport/decorators/subclass ../../FeatureLayerViewPerformanceInfo ./Feature3DPipelineWorkerHandle ./rendering/FeaturePipelineRenderManager ../../support/highlightUtils ../../support/LayerViewPerformanceInfo ../../../webgl-engine/lib/UpdatePolicy".split(" "),
function(e,f,g,k,l,m,h,z,A,B,n,p,q,r,t,u,v){e.Feature3DPipeline=class extends l.EsriPromise{constructor(b){super(b);this._renderer=null;this.graphicsQuery={queryForSymbologySnapping:(a,c)=>{throw new g("unsupported-symbology-snapping");},executeQuery:async(a,c)=>await this._workerHandle.executeQuery(a,c),executeQueryForIds:async(a,c)=>await this._workerHandle.executeQueryForIds(a,c),executeQueryForCount:async(a,c)=>await this._workerHandle.executeQueryForCount(a,c),executeQueryForExtent:async(a,c)=>
await this._workerHandle.executeQueryForExtent(a,c),executeQueryForLatestObservations:async(a,c)=>await this._workerHandle.executeQueryForLatestObservations(a,c)};this.maximumNumberOfFeatures=1E3}initialize(){if("point"!==this.layerView.layer.geometryType)throw new g("unsupported-geometry-type",`${this.layerView.layer.geometryType} is not supported`);this.addResolvingPromise(this.setup())}async setup(){const {layer:b,view:a}=this.layerView,{spatialReference:c,renderSpatialReference:w,resourceController:x}=
a,y=a.state.viewingMode;this._renderer=new r.FeaturePipelineRenderManager({view:a,layerUid:b.uid});if("feature"!==b.type)throw Error("Only FeatureLayer is supported");this._workerHandle=await (new q.Feature3DPipelineWorkerHandle({schedule:d=>x.immediate.schedule(d),layer:b,viewSpatialReference:c,renderSpatialReference:w,viewingMode:y,dispatchRenderCommands:d=>this._renderer.executeRenderCommands(d)})).when();this.addHandles([this.layerView.view.featureTiles.addClient(),m.on(()=>this.layerView.view.featureTiles.tiles,
"change",d=>{this._workerHandle.onTileTreeChange(d)},{onListenerAdd:d=>this._workerHandle.onTileTreeChange({added:d.toArray(),removed:[]}),onListenerRemove:d=>this._workerHandle.onTileTreeChange({added:[],removed:d.toArray()})})])}get legendEnabled(){return!1}get hasAllFeatures(){return!1}get hasAllFeaturesInView(){return!1}get hasFullGeometries(){return!1}get symbologySnappingSupported(){return!1}get scaleVisibilitySuspended(){return!1}get suspendInfo(){return{}}get updating(){return this._workerHandle.updating}get dataUpdating(){return!1}get updatePolicy(){return v.UpdatePolicy.ASYNC}get maximumNumberOfFeaturesExceeded(){return!1}get updatingProgressValue(){return 1}get usedMemory(){return 100}get unloadedMemory(){return 0}get ignoresMemoryFactor(){return!0}get performanceInfo(){return new p.FeatureLayerViewPerformanceInfo(new u.LayerViewPerformanceInfo(this.usedMemory,
0,0,this.maximumNumberOfFeatures,0,null),0,0,!0,"tiles","n/a")}get suspendResumeExtentMode(){return"computed"}forEachGraphic(b){}findGraphic(b){return null}highlight(b){return t.emptyHighlightHandle}maskOccludee(b){return k.makeHandle()}async whenGraphicBounds(b,a){return null}computeAttachmentOrigin(b,a){return null}elevationAlignPointsInFeatures(b,a){throw new g("unsupported-elevation-alignment");}async doRefresh(b){}setVisibility(b,a){}getMissingAttributesForFeature(b){return null}getHydratedGeometry(b){return null}};
f.__decorate([h.property()],e.Feature3DPipeline.prototype,"layerView",void 0);f.__decorate([h.property()],e.Feature3DPipeline.prototype,"updating",null);e.Feature3DPipeline=f.__decorate([n.subclass("esri.views.3d.layers.graphics.pipeline.Feature3DPipeline")],e.Feature3DPipeline);Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});