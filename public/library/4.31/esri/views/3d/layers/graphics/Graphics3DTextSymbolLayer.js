// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Error ../../../../core/has ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/screenUtils ../../../../core/libs/gl-matrix-2/factories/vec2f64 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../../../symbols/callouts/calloutUtils ./ElevationAligners ./elevationAlignmentUtils ./ElevationContext ./Graphics3DObject3DGraphicLayer ./Graphics3DObjectMetadata ./Graphics3DSymbolLayer ./graphicUtils ./LabelParameters ./placementUtils ./pointUtils ../../webgl-engine/lib/FontMetrics ../../webgl-engine/lib/GeometryUtil ../../webgl-engine/lib/TextRenderParameters ../../webgl-engine/lib/TextTextureFactory ../../webgl-engine/materials/HUDMaterial".split(" "),
function(A,E,F,G,H,I,v,J,K,B,L,z,M,N,O,P,Q,C,r,n,R,S,T,U,V){function D(a,b,d){a&&a.forEach(c=>{const f=b(c);null!=f&&d(f,c.graphic)})}function W(a,b){if("baseline"===b.verticalPlacement)return v.fromValues(r.horizontalPlacementToAnchorX[b.horizontalPlacement],null!=a?a.baselineAnchorY:0);a=r.anchorFromPlacements(b.horizontalPlacement,b.verticalPlacement);return r.namedAnchorToHUDMaterialAnchorPos[a]}const X=J.freeze(0,0,1);class Y extends P.Graphics3DSymbolLayer{constructor(a,b,d,c){super(a,b,d,c);
this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1};this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const a=Q.validateSymbolLayerSize(this.symbolLayer.size);if(a)throw new E("graphics3dtextsymbollayer:invalid-size",a);}await this._createTextRenderParameters()}async _createTextRenderParameters(){this._textRenderParameters=await T.TextRenderParameters.fromSymbol(this.symbolLayer,this._context.graphicsCoreOwner.view.state.rasterPixelRatio)}destroy(){super.destroy()}createGraphics3DGraphic(a){a=
a.graphic;const b=n.placePointOnGeometry(a.geometry);if(null==b)return this.logger.warn(`unsupported geometry type for text symbol: ${a.geometry.type}`),null;const d=this.symbolLayer.text;if(null==d||""===d)return null;var c=B.hasCalloutSupport(this.symbol)&&this.symbol.hasVisibleVerticalOffset()?this.symbol.verticalOffset:null;if(null!=c&&!B.textSymbolLayerSupportsVerticalOffset(this.symbolLayer))return this.logger.errorOncePerTick("Callouts and vertical offset on text symbols are currently only supported with 'center' "+
`horizontal alignment (not with '${this.symbolLayer.horizontalAlignment}' alignment)`),null;var {verticalAlignment:f}=this.symbolLayer;c=new C.LabelPlacement(c);r.verticalScreenOffsetFromAlignment(f,c.screenOffset);f=new C.LabelParameters(c,this.symbolLayer.horizontalAlignment,r.verticalPlacementFromAlignment(f));return this._createAs3DShape(a,b,d,f)}createLabel(a,b,d,c,f){a=a.graphic;const g=n.placePointOnGeometry(a.geometry);if(null==g)return this.logger.warn(`unsupported geometry type for label: ${a.geometry.type}`),
null;const t=b.text;return!t||/^\s+$/.test(t)?null:this._createAs3DShape(a,g,t,b,d,c,f)}setGraphicElevationContext(a,b,d=0){super.setGraphicElevationContext(a,b);b.addOffsetRenderUnits(d);return b}layerOpacityChanged(){this.logger.warn("layer opacity change not yet implemented in Graphics3DTextSymbolLayer");return!1}layerElevationInfoChanged(a,b){D(a,b,(d,c)=>{this.updateGraphicElevationContext(c,d)});return z.SymbolUpdateType.UPDATE}slicePlaneEnabledChanged(a,b){D(a,b,d=>{for(const c of d.stageObject.geometries)c.material.setParameters({hasSlicePlane:this._context.slicePlaneEnabled})});
return!0}physicalBasedRenderingChanged(){return!0}get pixelRatioChanged(){return!1}updateGraphicElevationContext(a,b){const d=b.elevationContext;this.setGraphicElevationContext(a,d,null!=b.metadata?b.metadata.elevationOffset:0);b.needsElevationUpdates=z.needsElevationUpdates2D(d.mode)||"absolute-height"===d.mode}updateGeometry(a,b){if(this.draped||!this._validateGeometry(b))return!1;const {elevationContext:d,stageObject:c}=a;if(d.mode!==this.getGeometryElevationMode(b))return!1;b=n.placePointOnGeometry(b);
if(!b)return!1;const f=n.updateStageObjectGeometry(c,this._context,b,d);if(null==f)return!1;const g=n.getLocalOriginForPoint(this._context,b);if(c.geometries[0].localOrigin!==g)return!1;a.alignedSampledElevation=f;n.extendPointGraphicElevationContext(a,b,this._context.elevationProvider);return!0}_defaultElevationInfoNoZ(){return Z}_createAs3DShape(a,b,d,c,f=null,g=null,t=()=>c.placement.elevationOffset){const w=this.setGraphicElevationContext(a,new M.ElevationContext,c.placement.elevationOffset);
var l="polyline"===a.geometry?.type,u=a.uid;let k=null,p=null;if(null==g){var e=r.textRenderAlignmentFromHorizontalPlacement(c.horizontalPlacement);k=new U(d,e,this._textRenderParameters);let h=null;if(null!=this._context.sharedResources.textures){p=this._context.sharedResources.textures.fromData(k.key,()=>k.create());p.texture.events.on("unloaded",()=>h=G.releaseMaybe(h));e=this._context.stage.renderView.textures.acquire(p.texture.id);if(null==e||H.isPromiseLike(e))return p.release(),null;h=e}}e=
!!F("enable-feature:non-occluded-hud");var m=W(k,c);e={occlusionTest:!e,occludedFragmentFade:e,horizonCullingEnabled:e,screenOffset:c.placement.screenOffset,anchorPosition:m,polygonOffset:!0,color:[1,1,1,1],centerOffsetUnits:c.placement.centerOffsetUnits,depthEnabled:!1,drawInSecondSlot:!0,isLabel:!0};l&&(e.shaderPolygonOffset=1E-4);g?e.textureId=g.id:p&&(e.textureId=p.texture.id);if(null!=c.placement.verticalOffset){const {screenLength:h,minWorldLength:q,maxWorldLength:x}=c.placement.verticalOffset;
e.verticalOffset={screenLength:I.pt2px(h),minWorldLength:q||0,maxWorldLength:null!=x?x:Infinity}}l={screenOffset:e.screenOffset,anchorPosition:m,centerOffsetUnits:e.centerOffsetUnits,verticalOffset:e.verticalOffset,shaderPolygonOffset:e.shaderPolygonOffset,occlusionTest:e.occlusionTest};if(this._context.screenSizePerspectiveEnabled){const {screenSizePerspectiveSettings:h,screenSizePerspectiveSettingsLabels:q}=this._context.sharedResources;m=R.getFontMetrics(this._textRenderParameters);e.screenSizePerspective=
q.overrideFontHeight(m.maxHeight);e.screenSizePerspectiveAlignment=h;l.fontHeight=m.maxHeight}e.hasSlicePlane=this._context.slicePlaneEnabled;m=this._context.spherical;var y=f?JSON.stringify(l):"";l=f?.get(y);null==l&&(l=new V.HUDMaterial(e,m),f?.add(y,l));e=c.placement.translation;m=k?v.fromValues(k.displayWidth,k.displayHeight):v.ZEROS;y=c.placement.centerOffset;g=g?K.fromValues(0,0,0,0):null;g=S.createPointGeometry(l,X,e,null,null,m,y,g,null);u=n.createStageObject(this._context,b,g,w,u);if(null==
u)return null;f=new N.Graphics3DObject3DGraphicLayer(this,u.object,[g],null==f?[l]:null,p,(h,q,x,aa,ba,ca)=>{const da=t()||c.placement.elevationOffset;q=this.setGraphicElevationContext(a,q,da);return L.perObjectElevationAligner(h,q,x,aa,ba,ca)},w);f.alignedSampledElevation=u.sampledElevation;f.needsElevationUpdates=z.needsElevationUpdates2D(w.mode)||"absolute-height"===w.mode;f.getScreenSize=(h=v.create())=>{h[0]=k?k.displayWidth:c.displaySize[0];h[1]=k?k.displayHeight:c.displaySize[1];return h};
d=new O.Graphics3DObjectMetadata(c.placement.elevationOffset,d);f.metadata=d;n.extendPointGraphicElevationContext(f,b,this._context.elevationProvider);return f}}const Z={mode:"relative-to-ground",offset:0};A.Graphics3DTextSymbolLayer=Y;Object.defineProperty(A,Symbol.toStringTag,{value:"Module"})});