// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../chunks/tslib.es6 ../../../../../../core/Accessor ../../../../../../core/handleUtils ../../../../../../core/maybe ../../../../../../core/Logger ../../../../../../core/has ../../../../../../core/RandomLCG ../../../../../../core/Error ../../../../../../core/accessorSupport/decorators/subclass ../../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../../../../ViewingMode ../../placementUtils ./DirectRenderer ./LodRenderer ../../../../support/engineContent/sdfPrimitives ../../../../webgl-engine/lib/basicInterfaces ../../../../webgl-engine/materials/DefaultMaterial ../../../../webgl-engine/materials/HUDMaterial ../../../../webgl-engine/materials/pbrUtils".split(" "),
function(e,f,q,r,t,G,H,I,J,u,l,v,w,x,y,z,k,m,A,B,C){function n(b,a){const c={anchorPosition:x.namedAnchorToHUDMaterialAnchorPos.center,occlusionTest:!0,hasSlicePlane:!1,color:[1,0,0,1],outlineColor:[0,0,0,1],outlineSize:1};null!=b&&(b=b.fromData("circle-icon",()=>k.createTexture("circle")),c.textureId=b.texture.id,c.textureIsSignedDistanceField=!0,c.sampleSignedDistanceFieldTexelCenter=k.requiresHalfTexelOffset("circle"));c.distanceFieldBoundingBox=D;return[new B.HUDMaterial(c,a),null]}function p(b,
a,c){const d={usePBR:a.physicalBasedRenderingEnabled,isSchematic:!0,mrrFactors:C.schematicMRRFactors,ambient:l.ONES,diffuse:l.ONES,hasSlicePlane:a.slicePlaneEnabled,hasSliceHighlight:!1,castShadows:a.castShadows,offsetTransparentBackfaces:!a.isPrimitive},h=d.opacity??1,g=1>h;d.transparent=g;d.opacity=h;d.cullFace=g?m.CullFaceOptions.None:m.CullFaceOptions.Back;a.screenSizePerspectiveEnabled&&(d.screenSizePerspective=b.screenSizePerspectiveSettings);d.externalColor=v.ONES;d.isInstanced=!0;return new A.DefaultMaterial(d,
{spherical:c,doublePrecisionRequiresObfuscation:!0})}e.FeaturePipelineRenderManager=class extends q{constructor(b){super();this.layerUid=this.view=null;this._renderGeometries=new Map;this._materials=new Map;this._directRenderers=new Map;this._lodRenderers=new Map;this.view=b.view;this.layerUid=b.layerUid}initialize(){}destroy(){}async executeRenderCommands(b){for(const a of b)switch(a.id){case "create-material":await this._createMaterial(a);break;case "create-direct-renderer":await this._createDirectRenderer(a);
break;case "add-direct-renderer-geometry":await this._addDirectRendererGeometry(a);break;case "remove-direct-renderer-geometry":await this._removeDirectRendererGeometry(a);break;case "create-lod-renderer":await this._createLodRenderer(a);break;case "add-lod-instances":await this._addLodInstances(a);break;case "remove-lod-instances":await this._removeLodInstances(a)}}async _createMaterial(b){const {view:a}=this,{sharedSymbolResources:c}=a;if(null==c)throw Error("No shared symbol resources found!");
const {textures:d}=c,h=a.state.viewingMode===w.ViewingMode.Global;let g=null;switch(b.type){case "default":g=p(c,{physicalBasedRenderingEnabled:!0,slicePlaneEnabled:!1,castShadows:!0,isPrimitive:!0,screenSizePerspectiveEnabled:!0,doublePrecisionRequiresObfuscation:a._stage.renderView.renderingContext.driverTest.doublePrecisionRequiresObfuscation.result},h);break;case "hud":const [E,F]=n(d,h);this.addHandles([r.makeHandle(()=>t.releaseMaybe(F))]);g=E;break;default:throw Error(`unable to create unknown material type ${b.type}`);
}this._materials.set(b.materialId,g)}_getMaterial(b){return this._materials.get(b)}async _createDirectRenderer(b){b=b.materialId;var a=this._getMaterial(b);if(null==a)throw Error(`material not found ${b}`);const {view:c}=this;a=new y.DirectRenderer({material:a});this._directRenderers.set(b,a);c._stage.addRenderPlugin(a);c._stage.renderView.renderer.updateHasFlags()}async _addDirectRendererGeometry(b){const a=b.renderGeometryId,c=b.materialId;null!=this._renderGeometries.get(a)&&await this._removeDirectRendererGeometry({renderGeometryId:a});
const d=this._directRenderers.get(c);null==d?console.error("no renderer assigned to provided material"):(b=d.addRenderGeometry(a,b.renderGeometryBuffer,b.localOrigin),this._renderGeometries.set(a,{renderGeometry:b,materialId:c}),this.view._stage.renderView.requestRender())}async _removeDirectRendererGeometry(b){var a=this._renderGeometries.get(b.renderGeometryId);null!=a&&(a=this._directRenderers.get(a.materialId),null==a?console.error("no renderer assigned to provided material"):a.removeRenderGeometry(b.renderGeometryId))}async _createLodRenderer(b){const a=
new z.LodRenderer({view:this.view,layerUid:this.layerUid}),c=new AbortController;await a.doLoad(b.lodRenderGeometry,d=>this._getMaterial(d),c.signal);this._lodRenderers.set(b.lodRendererId,a)}async _addLodInstances(b){const a=this._lodRenderers.get(b.lodRendererId);if(null==a)throw Error("no lod renderer assigned to provided lod renderer Id");a.addInstances(b.data)}async _removeLodInstances(b){const a=this._lodRenderers.get(b.lodRendererId);if(null==a)throw Error("no lod renderer assigned to provided lod renderer Id");
a.removeInstances(b.featureIds)}};e.FeaturePipelineRenderManager=f.__decorate([u.subclass("esri.views.3d.layers.graphics.pipeline.rendering.FeaturePipelineRenderManager")],e.FeaturePipelineRenderManager);f=k.defaultSymbolSizeRatio;const D=[f/2,f/2,1-f/2,1-f/2];e.createDefaultMaterial=p;e.createHudMaterial=n;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});