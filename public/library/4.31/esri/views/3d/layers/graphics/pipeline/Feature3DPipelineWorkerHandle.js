// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/Promise ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/Logger ../../../../../core/RandomLCG ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/workers/WorkerHandle ../../../../../geometry/Extent ../../../../../rest/support/FeatureSet".split(" "),function(c,d,k,e,t,u,v,l,m,n,h){function p({id:a,lij:b,extent:f}){return{id:a,lij:b,extent:f}}function q({id:a}){return a}
c.Feature3DPipelineWorkerHandle=class extends k.EsriPromise{constructor(a){super(a);this.schedule=null;this._workerUpdating=!0}get updating(){return this._workerUpdating}initialize(){this._workerHandle=new r(this.schedule,this);const {layer:a,viewSpatialReference:b,renderSpatialReference:f}=this;this.addResolvingPromise((async()=>await this._workerHandle.invokeMethod("setup",{url:a.parsedUrl?.path??"",baseQuery:a.createQuery().toJSON(),viewSpatialReference:b.toJSON(),renderSpatialReference:f.toJSON(),
viewingMode:this.viewingMode,objectIdField:a.objectIdField,capabilities:a.capabilities,timeInfo:a.timeInfo?.toJSON(),fieldsIndex:a.fieldsIndex.toJSON()}))());this.addHandles(this._workerHandle.on("notify-updating",({updating:g})=>{this._workerUpdating=g}))}async onTileTreeChange({added:a,removed:b}){if(0!==a.length||0!==b.length)a=a.map(p),b=b.map(q),await this._workerHandle.invokeMethod("onTileTreeChange",{added:a,removed:b})}async executeQuery(a,b){a=await this._workerHandle.invokeMethod("executeQuery",
a?.toJSON(),b);a=h.fromJSON(a);this._ensureLayerOnFeatures(a);return a}async executeQueryForIds(a,b){return await this._workerHandle.invokeMethod("executeQueryForIds",a?.toJSON(),b)}async executeQueryForCount(a,b){return await this._workerHandle.invokeMethod("executeQueryForCount",a?.toJSON(),b)}async executeQueryForExtent(a,b){const {count:f,extent:g}=await this._workerHandle.invokeMethod("executeQueryForExtent",a?.toJSON(),b);return{count:f,extent:n.fromJSON(g)}}async executeQueryForLatestObservations(a,
b){a=await this._workerHandle.invokeMethod("executeQueryForLatestObservations",a?.toJSON(),b);a=h.fromJSON(a);this._ensureLayerOnFeatures(a);return a}_ensureLayerOnFeatures(a){const {layer:b}=this;for(const f of a.features)f.layer=b,f.sourceLayer=b}};d.__decorate([e.property()],c.Feature3DPipelineWorkerHandle.prototype,"updating",null);d.__decorate([e.property({constructOnly:!0})],c.Feature3DPipelineWorkerHandle.prototype,"schedule",void 0);d.__decorate([e.property({constructOnly:!0})],c.Feature3DPipelineWorkerHandle.prototype,
"layer",void 0);d.__decorate([e.property({constructOnly:!0})],c.Feature3DPipelineWorkerHandle.prototype,"viewSpatialReference",void 0);d.__decorate([e.property({constructOnly:!0})],c.Feature3DPipelineWorkerHandle.prototype,"renderSpatialReference",void 0);d.__decorate([e.property({constructOnly:!0})],c.Feature3DPipelineWorkerHandle.prototype,"viewingMode",void 0);d.__decorate([e.property({constructOnly:!0})],c.Feature3DPipelineWorkerHandle.prototype,"dispatchRenderCommands",void 0);d.__decorate([e.property()],
c.Feature3DPipelineWorkerHandle.prototype,"_workerUpdating",void 0);c.Feature3DPipelineWorkerHandle=d.__decorate([l.subclass("esri.views.3d.layers.graphics.pipeline.Feature3DPipelineWorkerHandle")],c.Feature3DPipelineWorkerHandle);class r extends m.WorkerHandle{constructor(a,b){super("Feature3DPipelineWorker","setup",{},a,{strategy:"dedicated",client:b})}}Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});