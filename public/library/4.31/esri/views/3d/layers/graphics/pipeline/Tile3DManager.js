// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/Accessor ../../../../../core/asyncUtils ../../../../../core/promiseUtils ../../../../../core/ReactiveMap ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/Logger ../../../../../core/RandomLCG ../../../../../core/accessorSupport/decorators/subclass".split(" "),function(b,d,k,l,m,n,e,r,t,u,p){b.Tile3DManager=class extends k{constructor(a){super(a);this._removing=0;this._tiles=new n}destroy(){for(const a of this._tiles.values())a.remove();
this._tiles.clear()}get updating(){if(0<this._removing)return!0;for(const a of this._tiles.values())if(!a.finished)return!0;return!1}async onTileTreeChange(a){const {added:f,removed:q}=a;a=this._tiles;const h=[];for(const c of q){const g=a.get(c);null!=g&&(g.abort(),a.delete(c),h.push({tileId:c}))}for(const c of f)a.has(c.id)||a.set(c.id,l.createTask(g=>this._addTile(c,g)));await this._removeTiles(h)}async _addTile(a,f){a=await this.addTile(a,f);m.throwIfAborted(f);return a}async _removeTiles(a){this._removing++;
await this.removeTiles(a);this._removing--}};d.__decorate([e.property()],b.Tile3DManager.prototype,"updating",null);d.__decorate([e.property({constructOnly:!0})],b.Tile3DManager.prototype,"addTile",void 0);d.__decorate([e.property({constructOnly:!0})],b.Tile3DManager.prototype,"removeTiles",void 0);d.__decorate([e.property()],b.Tile3DManager.prototype,"_removing",void 0);b.Tile3DManager=d.__decorate([p.subclass("esri.views.3d.layers.graphics.pipeline.Tile3DManager")],b.Tile3DManager);Object.defineProperty(b,
Symbol.toStringTag,{value:"Module"})});