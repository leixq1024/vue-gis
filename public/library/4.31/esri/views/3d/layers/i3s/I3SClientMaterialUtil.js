// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../Color ../../../../core/Error ../../../../support/requestUtils ../../glTF/internal/resourceUtils ./enums ../../webgl-engine/core/shaderLibrary/util/AlphaCutoff ../../webgl-engine/lib/basicInterfaces ../../webgl-engine/lib/textureUtils ../../webgl-engine/materials/pbrUtils".split(" "),function(m,k,q,r,t,f,u,n,p,l){async function h(a,g,e,c){if(null==a)return-1;const d=e.length;var b=a.data;a=a.url;if(null!=b){if(b instanceof HTMLImageElement||b instanceof HTMLCanvasElement)return b=
p.downsampleImage(b),e.push({id:d,usage:c,data:b,encoding:f.TextureEncoding.PNG,downsampled:!1}),g.push({id:d,usage:c,encodings:[{name:void 0,encoding:f.TextureEncoding.PNG}]}),d;if(!(b instanceof HTMLVideoElement)){if(b instanceof ImageData)throw new q("ImageData textures not supported yet for client side I3S nodes");if(b instanceof t.EncodedMeshTexture)return e.push({id:d,usage:c,data:b.data,encoding:f.TextureEncoding.KTX2,downsampled:!1}),g.push({id:d,usage:c,encodings:[{name:void 0,encoding:f.TextureEncoding.KTX2}]}),
d}}else if(null!=a)return b=new Image,b.src=a,b=await r.loadImageAsync(b,b.src,!1,void 0),b=p.downsampleImage(b),e.push({id:d,usage:c,data:b,encoding:f.TextureEncoding.PNG,downsampled:!1}),g.push({id:d,usage:c,encodings:[{name:void 0,encoding:f.TextureEncoding.PNG}]}),d;return-1}m.convertMeshMaterialToPBRMaterial=async function(a){const g=[],e=[];if(null==a)return{material:{alphaMode:"opaque",alphaCutoff:u.alphaCutoff,doubleSided:!0,cullFace:0,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,
emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[1,1,1,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6000000238418579},wrapTextures:!1,hasParametersFromSource:!0},requiredTextures:g,textureData:e};const c=a.hasOwnProperty("metallicRoughnessTexture");"auto"===a.alphaMode&&console.warn('alphaMode "auto" not supported by I3S PBRMaterial - defaulting to "blend".');const d=l.useSchematicPBR({normalTexture:a.normalTexture,emissiveTexture:c?a.emissiveTexture:
null,emissiveFactor:c?k.toUnitRGB(a.emissiveColor):null,occlusionTexture:c?a.occlusionTexture:null,metallicRoughnessTexture:c?a.metallicRoughnessTexture:null,metallicFactor:c?a.metallic:null,roughnessFactor:c?a.roughness:null}),b=d?l.schematicMRRFactors[0]:c?a.metallic:0,v=d?l.schematicMRRFactors[1]:c?a.roughness:0;return{material:{alphaMode:"auto"===a.alphaMode?"blend":a.alphaMode,alphaCutoff:a.alphaCutoff,doubleSided:a.doubleSided,cullFace:a.doubleSided?n.CullFaceOptions.None:n.CullFaceOptions.Back,
normalTextureId:await h(a.normalTexture,g,e,f.TextureUsage.Normal),emissiveTextureId:c?await h(a.emissiveTexture,g,e,f.TextureUsage.Emissive):-1,occlusionTextureId:c?await h(a.occlusionTexture,g,e,f.TextureUsage.Occlusion):-1,emissiveFactor:c&&null!=a.emissiveColor?k.toUnitRGB(a.emissiveColor):[0,0,0],metallicRoughness:{baseColorFactor:null!=a.color?k.toUnitRGBA(a.color):[1,1,1,1],baseColorTextureId:await h(a.colorTexture,g,e,f.TextureUsage.Color),metallicRoughnessTextureId:c?await h(a.metallicRoughnessTexture,
g,e,f.TextureUsage.MetallicRoughness):-1,metallicFactor:b,roughnessFactor:v},wrapTextures:!0,hasParametersFromSource:d},requiredTextures:g,textureData:e}};Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});