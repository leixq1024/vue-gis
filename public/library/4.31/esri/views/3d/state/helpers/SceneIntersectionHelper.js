// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/PooledArray ../../../../core/screenUtils ../../../../core/unitUtils ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../../../../support/elevationInfoUtils ../../../ViewingMode ../../support/hitTest ../../support/geometryUtils/ray ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/IntersectorInterfaces ../../webgl-engine/lib/intersectorUtils ../../webgl-engine/materials/HUDMaterial".split(" "),
function(D,K,B,L,v,F,w,M,u,N,O,G,H,z,q,E,P){function I(a){C&&C.viewingMode===a||(C=z.newIntersector(a));return C}class Q{constructor(a,b,c){this.viewingMode=a;this._forEachLayer=b;this._view=c;this._externalIntersectionHandlers=new K;this._tolerance=z.defaultTolerance;this._tmpRay=M.create();this._tmpRegion=w.create();this._validateHUDIntersector=z.newIntersector(this.viewingMode);this._validateHUDIntersector.options.hud=!1}intersectScreen(a,b,c){return this.intersectRay(this._getPickRay(a,this._tmpRay),
I(this.viewingMode),b,c)}intersectScreenFreePointFallback(a,b,c){return this.intersectRayFreePointFallback(this._getPickRay(a,this._tmpRay),b,c)}intersectRayFreePointFallback(a,b,c){return this.intersectRay(a,I(this.viewingMode),b,c)||this._intersectRayFreePointLocal(a,b)}intersectRay(a,b,c,k){b.options.selectionMode=!1;b.options.store=q.StoreResults.MIN;this.computeIntersection(a,b,k);return b.results.min?b.results.min.getIntersectionPoint(c):!1}getCenterRayWithSubpixelOffset(a,b,c=.5,k=.5){a.getRenderCenter(x,
c,k);x[0]+=.0466;x[1]-=.0123;return H.fromRenderAtEye(a,x,b)}intersectIntersectorScreen(a,b,c){this.computeIntersection(this._getPickRay(a,this._tmpRay),b,c)}intersectToolIntersectorScreen(a,b,c){a=this._getPickRay(a,this._tmpRay);this.intersectToolIntersectorRay(a,b,c)}intersectToolIntersectorRay(a,b,c){b.options.selectionMode=!0;this.computeIntersection(a,b,c);const k=b.results.min;this._view.basemapTerrain&&this._view.basemapTerrain.opaque||E.isValidIntersectorResult(k)&&k.intersector!==q.IntersectorType.TERRAIN||
(b.options.selectionMode=!1,this.computeIntersection(a,b,c))}setTolerance(a=z.defaultTolerance){this._tolerance=a}addIntersectionHandler(a){this._externalIntersectionHandlers.push(a);this._externalIntersectionHandlers.sort((b,c)=>b.type===q.IntersectorType.TERRAIN?1:c.type===q.IntersectorType.TERRAIN?-1:0)}removeIntersectionHandler(a){null!=this._externalIntersectionHandlers.removeUnordered(a)&&this._externalIntersectionHandlers.sort((b,c)=>b.type===q.IntersectorType.TERRAIN?1:c.type===q.IntersectorType.TERRAIN?
-1:0)}_getPickRay(a,b){return H.fromScreen(this._view.state.camera,a,b)}_intersectRayFreePointLocal(a,b){if(this.viewingMode!==O.ViewingMode.Local||null==a)return!1;v.add(b,a.origin,v.normalize(u.sv3d.get(),a.direction));return!1}intersectElevationFromScreen(a,b,c=0,k=null){return this._intersectElevation(this._getPickRay(a,this._tmpRay),b,c,k)}_intersectElevation(a,b,c=0,k=null){if(null==a)return null;var d=this._view,{renderCoordsHelper:l}=d,h=L.getMetersPerVerticalUnitForSR(d.spatialReference),
m=null!=b?b.mode:"absolute-height";b=N.getElevationOffsetInMeters(b)/h;const p=("on-the-ground"!==m?b+c:0)*h/l.unitInMeters;({camera:h}=d.state);if("absolute-height"===m)return c=l?.getAltitude(h.eye),m=v.dot(v.normalize(A,a.direction),l.worldUpAtPosition(h.eye,R)),c<p&&0>m||c>=p&&0<m?null:l.intersectInfiniteManifold(a,p,A)?(d=G.computeMapPointFromVec3d(d,A),d.z??(d.z=0),d.z-=b,d):null;const n=B.castRenderScreenPointArray3(u.sv3d.get());h.projectToRenderScreen(a.origin,n);l=new J(null,this._forEachLayer);
({slicePlane:b}=d);const r=null!=b?E.sliceFilterPredicate(b):null,e=z.newIntersector(this.viewingMode);e.options.store=q.StoreResults.MIN;e.options.verticalOffset=p;e.options.normalRequired=!1;b=a.origin;a=v.add(u.sv3d.get(),b,a.direction);e.reset(b,a,h);e.point=n;const g=k?"type"in k&&"graphics"===k.type?f=>f.layerUid!==k.uid:f=>f.graphicUid!==k.uid:null;switch(m){case "relative-to-scene":e.intersect(l.layers,n,this._tolerance,null,f=>(!g||g(f))&&!!f.lastValidElevationBB);this._externalIntersectionHandlers.forAll(f=>
{f.type!==q.IntersectorType.I3S&&f.type!==q.IntersectorType.TERRAIN&&f.type!==q.IntersectorType.TILES3D||f.intersect(e,f.slicePlaneEnabled?r:null,e.rayBegin,e.rayEnd,n)});break;case "on-the-ground":case "relative-to-ground":this._externalIntersectionHandlers.forAll(f=>{f.isGround&&f.intersect(e,f.slicePlaneEnabled?r:null,e.rayBegin,e.rayEnd,n)})}return e.results.min.getIntersectionPoint(A)?(d=G.computeMapPointFromVec3d(d,A),d.z=c,d):null}computeIntersection(a,b,c,k){if(null!=a){var d=this._view.state.camera,
l=B.castRenderScreenPointArray3(u.sv3d.get());d.projectToRenderScreen(a.origin,l);var h=new J(c,this._forEachLayer);b.options.selectOpaqueTerrainOnly=!c||!("include"in c||"exclude"in c);var m=a.origin,p=v.add(u.sv3d.get(),a.origin,a.direction);b.reset(m,p,d);b.intersect(h.layers,l,this._tolerance);a=this._view.slicePlane;var n=null!=a?E.sliceFilterPredicate(a):null;b.intersect(h.sliceableLayers,l,this._tolerance,n);var r=c&&(c.requiresGroundFeedback||c.enableDraped);this._externalIntersectionHandlers.forAll(e=>
{var g=e.layerUid;const f=Array.isArray(g);g=f?g:[g];f&&(b.options.filteredLayerUids=[]);let t=!1;for(const y of g)h.filterLayerUid(y)?t=!0:f&&b.options.filteredLayerUids.push(y);b.options.isFiltered=!t;(e.isGround&&r||!b.options.isFiltered)&&e.intersect(b,e.slicePlaneEnabled?n:null,m,p,l,k)});a=u.sv3d.get();d=this._view.basemapTerrain;if(c&&c.enableDraped&&null!=d.spatialReference&&b.results.ground.getIntersectionPoint(a)){c=d.overlayManager.renderer;const e=this._view.renderCoordsHelper.spatialReference,
g=u.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(a,g,d.spatialReference);g[2]=this._view.elevationProvider?.getElevation(a[0],a[1],a[2],e,"ground")??0;c.intersect(b,g,b.results.ground,f=>h.filterRenderGeometry(f))}b.sortResults();this._processHUDResults(b)}}_processHUDResults(a){var b=a.results.hud;w.copy(this._tmpRegion,w.negativeInfinity);const c=this._view.state.camera,k=[],d=this._tmpRegion;var l=e=>{const g=new S(e),f=g.result.target.object.geometries.every(t=>t.material instanceof
P.HUDMaterial&&t.material.parameters.occlusionTest);k.push({item:g,occlusionTest:f});f&&(c.projectToRenderScreen(e.target.center,g.screenPoint),g.screenPoint[0]=Math.floor(g.screenPoint[0]),g.screenPoint[1]=Math.floor(g.screenPoint[1]),w.expandPointInPlace(d,g.screenPoint))};a.sortResults(b.all);null!=b.min.dist&&l(b.min);for(var h of b.all)b.min.target.object!==h.target.object&&b.max.target.object!==h.target.object&&l(h);null!=b.max.dist&&b.max.target.object!==b.min.target.object&&l(b.max);if(k.length){d[0]===
d[2]&&(d[2]+=1);d[1]===d[3]&&(d[3]+=1);b=c.fullWidth;l=c.fullHeight;var m=Math.max(0,d[0]-1),p=Math.max(0,d[1]-1);h=Math.min(w.width(d)+2,b-m);var n=Math.min(w.height(d)+2,l-p),r=0<h&&0<n?new Uint8Array(h*n*4):null;r&&this._view._stage.renderer.readHUDVisibility(m,p,h,n,r);m=!0;p=null==a.results.max.dist;n=0;for(const {item:e,occlusionTest:g}of k){let f=!g;if(g&&r)for(const t of T){const y=4*(Math.min(e.screenPoint[0]+t[0],b)-d[0]+(Math.min(e.screenPoint[1]+t[1],l)-d[1])*h);if(0<=y&&y<r.length&&r[y]){f=
!0;break}}f&&(m&&(a.results.min.copy(e.result),m=!1),p&&a.results.max.copy(e.result),a.options.store===q.StoreResults.ALL&&a.results.all.splice(n++,0,e.result))}}}}const T=(()=>{const a=[];for(let b=-1;1>=b;b++)for(let c=-1;1>=c;c++)a.push([c+1,b+1]);return a})();class S{constructor(a){this.result=a;this.screenPoint=B.createRenderScreenPointArray3()}}let C;class J{constructor(a,b){this.layers=[];this.sliceableLayers=[];this.include=a?.include;this.exclude=a?.exclude;b(c=>{c.pickable&&this.filterLayerUid(c.apiLayerUid)&&
(c.sliceable?this.sliceableLayers:this.layers).push(c)})}filterLayerUid(a){const {include:b,exclude:c}=this;return null==a?null==b&&null==c:(null==b||b.has(a))&&(null==c||!c.has(a))}filterRenderGeometry(a){return this.filterLayerUid(a.layerUid)}}const A=F.create(),R=F.create(),x=B.createRenderScreenPointArray3();D.SceneIntersectionHelper=Q;D.isIntersectionHandler=function(a){return"object"===typeof a&&"intersect"in a};Object.defineProperty(D,Symbol.toStringTag,{value:"Module"})});