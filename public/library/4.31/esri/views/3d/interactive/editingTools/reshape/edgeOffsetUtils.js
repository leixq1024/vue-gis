// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/quantityUtils ../../../../../core/screenUtils ../../../../../core/unitUtils ../../../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../../../chunks/vec32 ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../geometry/projection ../../../../../geometry/projection/projectVectorToVector ../../../../../geometry/support/geodesicUtils ../../../../../geometry/support/plane ../../../../../layers/graphics/dehydratedPoint ../../../../../support/elevationInfoUtils ../../../../interactive/editGeometry/operations/OffsetEdgeVertex".split(" "),
function(h,z,r,A,B,f,g,C,t,q,m,D,E,u){function v(a,b,c){c=D.makeDehydratedPoint(b.x+c[0],b.y+c[1],b.z+c[2],b.spatialReference);const e=g.create(),d=g.create();return a.renderCoordsHelper.toRenderCoords(b,e)&&a.renderCoordsHelper.toRenderCoords(c,d)?f.direction(d,e,d):null}h.createEdgeOffsetIntersectionPlane=function(a,b,c){const e=g.create();if(!a.renderCoordsHelper.toRenderCoords(b,e))return null;var d=v(a,b,m.getNormal(c.plane));a=v(a,b,c.edgeDirection);if(null==d||null==a)return null;d=f.cross(g.create(),
d,a);return m.fromPositionAndNormal(e,d,m.create())};h.createEdgeOffsetOperation=function(a,b,c){return new u.OffsetEdgeVertex(a,"on-the-ground"===c.mode?u.PlaneType.XY:u.PlaneType.XYZ,b,0)};h.edgeOffsetRotationMatrix=function(a,b,c){a=m.getNormal(a);b=f.direction(g.create(),b,c);c=f.cross(g.create(),b,a);a=f.cross(g.create(),b,c);return B.fromValues(b[0],b[1],b[2],0,c[0],c[1],c[2],0,a[0],a[1],a[2],0,0,0,0,1)};h.getDistanceInGeometrySR=function(a,b,c,{data:{coordinateHelper:e,spatialReference:d}}){const k=
z.valueInUnit(a,"meters");var n=A.getMetersPerUnitForSR(d);const w=Math.sign(k*c.selectedArrow),l=q.geodesicCompatibleSpatialReference(d);a=m.getNormal(c.plane);const p=e.pointToXYZ(b);e=g.create();f.scaleAndAdd(e,p,a,10/n*w);c=k*c.selectedArrow/n;if(!l||!t.projectVectorToVector(p,d,p,l)||!t.projectVectorToVector(e,d,e,l))return c;n=new q.InverseGeodeticSolverResult;q.inverseGeodeticSolver(n,p,e,l);q.directGeodeticSolver(e,p,n.azimuth,k,l);if(!t.projectVectorToVector(e,l,e,d))return c;d=e[0]-b.x;
b=e[1]-b.y;b=Math.sqrt(d*d+b*b)*w;const [x,y]=a;a=Math.sqrt(x*x+y*y);return 0===a?0:b/a};h.getMapPointAtEdgeOffsetManipulatorElevation=function(a,b,c,e){const {elevationInfo:d,operations:k}=c;if(!k||!a)return null;c=E.getZForElevationMode(e.manipulator.elevationAlignedLocation,b,d);return(a=b.sceneIntersectionHelper.intersectElevationFromScreen(r.createScreenPointArray(a.x,a.y),d,c))&&C.projectPoint(a,a,k.data.spatialReference)?a:null};h.screenEdgeLengthSquared=function(a,b,c){a=c.projectToRenderScreen(a,
r.createRenderScreenPointArray3());b=c.projectToRenderScreen(b,r.createRenderScreenPointArray3());return null!=a&&null!=b?f.squaredLength(f.subtract(a,a,b)):0};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});