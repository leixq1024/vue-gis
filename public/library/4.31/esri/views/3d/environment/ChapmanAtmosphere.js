// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/tslib.es6 ../../../core/colorUtils ../../../core/mathUtils ../../../core/maybe ../../../core/reactiveUtils ../../../core/Logger ../../../core/has ../../../core/RandomLCG ../../../core/Error ../../../core/accessorSupport/decorators/subclass ../../../core/libs/gl-matrix-2/math/vec2 ../../../chunks/vec32 ../../../chunks/vec42 ../../../core/libs/gl-matrix-2/factories/vec4f64 ../../../geometry/support/Ellipsoid ../webgl ./atmosphereUtils ./ChapmanAtmosphereTechnique ./ChapmanAtmosphereTechniqueConfiguration ../webgl/formats ../webgl-engine/effects/OpaqueEnvironment ../webgl-engine/lib/basicInterfaces ../webgl-engine/lib/glUtil3D ../webgl-engine/lib/textureUtils ../../../chunks/AtmosphereCompositing.glsl ../webgl-engine/shaders/AtmosphereCompositingTechnique ../../webgl/enums ../../../webscene/background/ColorBackground".split(" "),
function(h,z,A,q,B,f,N,O,P,Q,C,D,r,E,F,k,G,t,l,H,I,J,u,v,w,K,x,y,L){h.ChapmanAtmosphere=class extends J.OpaqueEnvironment{constructor(a){super(a);this.requireGeometryDepth=!0;this._compositingPassParameters=new K.AtmosphereCompositingPassParameters;this._vao=null;this._passParameters=new l.ChapmanAtmospherePassParameters;this._configuration=new H.ChapmanAtmosphereTechniqueConfiguration;({techniques:a}=a);a.precompile(l.ChapmanAtmosphereTechnique,this._configuration);a.precompile(x.AtmosphereCompositingTechnique);
this._configuration.reduced=!0;a.precompile(l.ChapmanAtmosphereTechnique,this._configuration);this._configuration.reduced=!1}initialize(){this.addHandles([f.watch(()=>this.view.environment.background,a=>{a=a instanceof L?A.unitRGBAFromColor(a.color):F.ZEROS;r.set(this._passParameters.backgroundColor,a[0]*a[3],a[1]*a[3],a[2]*a[3])},f.syncAndInitial),f.watch(()=>this.view._stage?.renderer?.fullResolutionAtmosphere,a=>this._configuration.reduced=!a,f.syncAndInitial),f.watch(()=>this.view.environment.atmosphereEnabled,
a=>a?this._enable():this._disable(),f.syncAndInitial)])}destroy(){this._vao=B.disposeMaybe(this._vao)}render(a){a=a.find(({name:M})=>M===G.InternalRenderCategory.OPAQUE_ENVIRONMENT);if(!this.bindParameters.mainDepth)return a;const b=this.renderingContext;this._vao??(this._vao=v.createQuadVAO(b,v.Layout.Pos2Tex));const m=a.getAttachment(b.gl.DEPTH_STENCIL_ATTACHMENT);this._update();const d=this.techniques.acquire(l.ChapmanAtmosphereTechnique,this._configuration);if(!d.compiled)return d.release(),this.requestRender(u.RenderRequestType.UPDATE),
a;if(!this._configuration.reduced)return a.detachDepth(),b.bindFramebuffer(a.fbo),b.bindTechnique(d,this.bindParameters,this._passParameters),b.bindVAO(this._vao),b.drawArrays(y.PrimitiveType.TRIANGLE_STRIP,0,4),a.attachDepth(m),d.release(),a;const n=this.techniques.acquire(x.AtmosphereCompositingTechnique);if(!n.compiled)return d.release(),n.release(),this.requestRender(u.RenderRequestType.UPDATE),a;const p=b.getViewport();var c=this.bindParameters.camera,g=r.length(c.eye)-k.earth.radius;var e=k.earth.atmosphereHeight;
e=g<e?q.lerp(.2,.3,Math.min(1,Math.max(0,g/e))):q.lerp(.3,.6,Math.min(1,Math.max(0,(g-e)/(15*e))));g=w.applyTextureResizeModulo(Math.round(e*c.fullViewport[2]));c=w.applyTextureResizeModulo(Math.round(e*c.fullViewport[3]));b.setViewport(0,0,g,c);c=this.fboCache.acquire(g,c,"chapman",I.ColorFormat.RGBA);b.bindFramebuffer(c.fbo);b.clearFramebuffer([0,0,0,1],!0,!0);b.bindTechnique(d,this.bindParameters,this._passParameters);b.bindVAO(this._vao);b.drawArrays(y.PrimitiveType.TRIANGLE_STRIP,0,4);b.setViewport(p.x,
p.y,p.width,p.height);this._compositingPassParameters.color=c.getTexture();a.detachDepth();b.bindFramebuffer(a.fbo);b.bindTechnique(n,this.bindParameters,this._compositingPassParameters);b.screen.draw();a.attachDepth(m);d.release();n.release();c.release();return a}_update(){var a=r.squaredLength(this.bindParameters.camera.eye);const b=Math.sqrt(a),m=a-this._passParameters.radii[1]**2,d=q.clamp((b-this._passParameters.radii[0])/k.earth.atmosphereHeight,0,1);E.set(this._passParameters.heightParameters,
b,a,m,d);a=this.view.basemapTerrain.getLowerBoundRadius();D.set(this._passParameters.radii,a,a+k.earth.atmosphereHeight);this._passParameters.innerFadeDistance=2*Math.sqrt((2*a-t.innerAtmosphereDepth)*t.innerAtmosphereDepth);this._passParameters.altitudeFade=t.computeInnerAltitudeFade(b-a)}};h.ChapmanAtmosphere=z.__decorate([C.subclass("esri.views.3d.environment.ChapmanAtmosphere")],h.ChapmanAtmosphere);Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});