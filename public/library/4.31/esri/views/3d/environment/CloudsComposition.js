// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/tslib.es6 ../../../core/maybe ../../../core/reactiveUtils ../../../core/Logger ../../../core/has ../../../core/RandomLCG ../../../core/Error ../../../core/accessorSupport/decorators/subclass ../../../geometry/ellipsoidUtils ../webgl ./CloudsCompositionTechnique ../webgl-engine/core/shaderModules/interfaces ../webgl-engine/effects/OpaqueEnvironment ../webgl-engine/lib/basicInterfaces ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),function(b,k,l,e,y,z,A,B,
m,n,p,f,q,r,g,t,u){b.CloudsComposition=class extends r.OpaqueEnvironment{constructor(a){super(a);a.techniques.precompile(f.CloudsCompositionTechnique);this._planetRadius=n.getReferenceEllipsoid(a.view.spatialReference).radius}initialize(){this.addHandles([e.watch(()=>null!=this.view.environment.weather&&this.view.environment.atmosphereEnabled,a=>a?this._enable():this._disable(),e.initial)])}destroy(){this._vao=l.disposeMaybe(this._vao)}render(a){a=a.find(({name:v})=>v===p.InternalRenderCategory.OPAQUE_ENVIRONMENT);
const h=this.bindParameters.clouds;if(!h.data)return a;const c=this.techniques.acquire(f.CloudsCompositionTechnique);if(!c.compiled)return this.requestRender(g.RenderRequestType.UPDATE),c.release(),a;const d=this.renderingContext;this._vao??(this._vao=t.createQuadVAO(d));const x=d.bindTechnique(c,this.bindParameters,w);d.bindVAO(this._vao);x.assertCompatibleVertexAttributeLocations(this._vao);d.drawArrays(u.PrimitiveType.TRIANGLE_STRIP,0,4);c.release();h.isFading&&this.requestRender(g.RenderRequestType.UPDATE);
return a}};b.CloudsComposition=k.__decorate([m.subclass("esri.views.3d.environment.CloudsComposition")],b.CloudsComposition);const w=new q.NoParameters;Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});