// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Evented","../../../core/ObservableChangesType","../../../core/signal"],function(d,f,c,g){class h extends f{constructor(){super(...arguments);this._set=new Set;this._length=g.signal(0)}clear(){if(0<this._set.size){const a=this.toArray();this._set.clear();this.emit("after-changes",{type:c.ObservableChangesType.REMOVE});this.emit("change",{added:[],removed:a})}}get length(){return this._length.value}addMany(a){if(0!==a.length){for(const b of a)this._set.add(b);this._length.value=
this._set.size;this.emit("after-changes",{type:c.ObservableChangesType.ADD});this.emit("change",{added:a,removed:[]})}}remove(a){this._set.delete(a)&&(this._length.value=this._set.size,this.emit("after-changes",{type:c.ObservableChangesType.REMOVE}),this.emit("change",{added:[],removed:[a]}))}removeMany(a){const b=[];for(const e of a)this._set.delete(e)&&b.push(e);0<b.length&&(this._length.value=this._set.size,this.emit("after-changes",{type:c.ObservableChangesType.REMOVE}),this.emit("change",{added:[],
removed:b}))}toArray(){return Array.from(this._set.values())}find(a){for(const b of this._set.values())if(a(b))return b}some(a){for(const b of this._set.values())if(a(b))return!0;return!1}forEach(a){this._set.forEach(b=>a(b))}}d.EventedSet=h;Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});