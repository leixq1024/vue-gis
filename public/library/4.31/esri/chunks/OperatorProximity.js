// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","./Geometry","./QuadraticBezier","./SideCalculator2D-CsYV5zVZ","./Transformation2D"],function(u,d,r,m,n){class v{getOperatorType(){return 10500}accelerateGeometry(a,b,f){return!1}canAccelerateGeometry(a){return!1}supportsCurves(){return!0}getNearestCoordinate(a,b,f,e){b.isNAN()&&d.throwInvalidArgumentException("NAN xy coordinates are not allowed");if(a.isEmpty())return m.makeEmptyProximity2DResult();switch(a.getGeometryType()){case d.GeometryType.enumPoint:return this.pointGetNearestVertex(a,
b);case d.GeometryType.enumMultiPoint:return this.multiVertexGetNearestVertex(a,b);case d.GeometryType.enumPolyline:case d.GeometryType.enumPolygon:return this.multiPathGetNearestCoordinate(a,b,f,e);default:d.throwNotImplementedException("")}}getNearestVertex(a,b){b.isNAN()&&d.throwInvalidArgumentException("NAN xy coordinates are not allowed");if(a.isEmpty())return m.makeEmptyProximity2DResult();switch(a.getGeometryType()){case d.GeometryType.enumPoint:return this.pointGetNearestVertex(a,b);case d.GeometryType.enumMultiPoint:case d.GeometryType.enumPolyline:case d.GeometryType.enumPolygon:return this.multiVertexGetNearestVertex(a,
b);default:d.throwNotImplementedException("")}}getNearestVertices(a,b,f,e){0===e&&d.throwInvalidArgumentException("");b.isNAN()&&d.throwInvalidArgumentException("NAN xy coordinates are not allowed");if(a.isEmpty())return[];switch(a.getGeometryType()){case d.GeometryType.enumPoint:return this.pointGetNearestVertices(a,b,f,e);case d.GeometryType.enumMultiPoint:case d.GeometryType.enumPolyline:case d.GeometryType.enumPolygon:return this.multiVertexGetNearestVertices(a,b,f,e);default:d.throwNotImplementedException("")}}multiPathGetNearestCoordinate(a,
b,f,e){if(a.getGeometryType()===d.GeometryType.enumPolygon&&f){var c=new r.Envelope2D;a.queryEnvelope(c);c=r.calculateToleranceFromGeometryForRel(null,c,!1);if(0!==(e?r.isPoint2DInPolygon2D(a,b,0):r.isPoint2DInPolygon2D(a,b,c)))return b=m.makeProximity2DResult(b,-1,0),e&&(b.m_bRightSide=!0),b}c=a.querySegmentIterator();var g=new n.Point2D;let k=-1,h=-1,l=Number.MAX_VALUE,q=0;for(;c.nextPath();)for(;c.hasNextSegment();){var p=c.nextSegment(),t=p.getClosestCoordinate(b,!1);p=p.getCoord2D(t);t=n.Point2D.sqrDistance(p,
b);t<l?(q=1,g.assign(p),k=c.getStartPointIndex(),h=c.getPathIndex(),l=t):t===l&&q++}-1===k&&d.throwInvalidArgumentException("");g=m.makeProximity2DResult(g,k,Math.sqrt(l));e&&(a.getGeometryType()!==d.GeometryType.enumPolygon?(e=!1,1<q?(b=m.calculateSide(a,b,k,h),e=0!==b&&3!==b):(c.resetToVertex(k,h),a=c.nextSegment(),e=0!==m.calculateSide(a,b)),g.m_bRightSide=e):f||0===r.isPoint2DInPolygon2D(a,b,0)||(g.m_bRightSide=!0));return g}pointGetNearestVertex(a,b){a=a.getXY();b=n.Point2D.distance(a,b);return m.makeProximity2DResult(a,
0,b)}multiVertexGetNearestVertex(a,b){const f=a.getAttributeStreamRef(0);a=a.getPointCount();let e=-1;const c=new n.Point2D;let g=Number.MAX_VALUE;const k=new n.Point2D;for(let h=0;h<a;h++){f.queryPoint2D(2*h,k);const l=n.Point2D.sqrDistance(k,b);l<g&&(c.assign(k),e=h,g=l)}return m.makeProximity2DResult(c,e,Math.sqrt(g))}pointGetNearestVertices(a,b,f,e){const c=[];0!==e&&(f*=f,a=a.getXY(),b=n.Point2D.sqrDistance(a,b),b<=f&&c.push(m.makeProximity2DResult(a,0,Math.sqrt(b))));return c}multiVertexGetNearestVertices(a,
b,f,e){const c=[];if(0!==e){const k=a.getAttributeStreamRef(0);a=a.getPointCount();c.length=e+1;f*=f;for(let h=0;h<a;h++){const l=k.read(2*h),q=k.read(2*h+1);var g=b.x-l;const p=b.y-q;g=g*g+p*p;g<=f&&c.push(m.makeProximity2DResult(n.Point2D.construct(l,q),h,Math.sqrt(g)))}c.sort((h,l)=>h.m_distance-l.m_distance)}return c.slice(0,e)}}u.OperatorProximity2D=v});