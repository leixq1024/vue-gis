// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","./tslib.es6","./Geometry","./QuadraticBezier","./Transformation2D"],function(D,E,k,q,g){function F(){return{outPoint:new g.Point2D,index:-1,t:Number.NaN}}function G(a,b,c){return{outPoint:a.clone(),index:b,t:c}}function r(a,b,c,d){a.outPoint.assign(b);a.index=c;a.t=d}function B(a,b){a.outPoint.assign(b.outPoint);a.index=b.index;a.t=b.t}function L(a,b,c,d){a.index=c;a.t=d;b.queryCoord2D(a.t,a.outPoint)}function H(a,b){const c=F();B(c,a);B(a,b);B(b,c)}function M(a,b,c,d,e,f){if(a.getGeometryType()===
k.GeometryType.enumPolygon){for(;d.nextPath();)if(d.hasNextSegment()){const h=d.nextSegment();if(0!==q.isPoint2DInPolygon2D(a,h.getEndXY(),0))return r(e,h.getEndXY(),-1,Number.NaN),r(f,h.getEndXY(),-1,Number.NaN),!0}d.resetToFirstPath()}if(b.getGeometryType()===k.GeometryType.enumPolygon){for(;c.nextPath();)if(c.hasNextSegment()&&(a=c.nextSegment(),0!==q.isPoint2DInPolygon2D(b,a.getEndXY(),0)))return r(e,a.getEndXY(),-1,Number.NaN),r(f,a.getEndXY(),-1,Number.NaN),!0;c.resetToFirstPath()}return!1}
function N(a){const b=a.getPathCount(),c=Array(a.getSegmentCount());let d=0;for(let e=0;e<b;++e){const f=d+a.getSegmentCountPath(e);for(let h=d,m=a.getPathStart(e);h<f;++h,++m)c[h]=m;d=f}q.shuffle(a.getPointCount(),c);return c}function I(a){const b=new q.Polygon;b.addEnvelope(a,!1);return b}class P{constructor(a,b){this.m_env2DgeometryB=this.m_env2DgeometryA=null;this.m_progressCounter=0;this.m_progressTracker=b;this.m_maxSqrDistance=a*a;this.m_maxDistance=a;this.m_bIsNearCalc=!1;Number.isNaN(this.m_maxDistance)?
this.m_maxDistance=Number.POSITIVE_INFINITY:this.m_maxDistance=a;this.m_maxSqrDistance=this.m_maxDistance*this.m_maxDistance;if(Number.isFinite(this.m_maxSqrDistance))for(a=Math.sqrt(this.m_maxSqrDistance);a<this.m_maxDistance;)this.m_maxSqrDistance*=1+Number.EPSILON,a=Math.sqrt(this.m_maxSqrDistance)}calculate(a,b,c,d){if(a.getGeometryType()!==q.Point.type||b.getGeometryType()!==q.Point.type){this.m_env2DgeometryA=new q.Envelope2D;this.m_env2DgeometryB=new q.Envelope2D;a.queryEnvelope(this.m_env2DgeometryA);
b.queryEnvelope(this.m_env2DgeometryB);var e=this.m_env2DgeometryA.distanceFromEnvelope(this.m_env2DgeometryB),f=this.m_maxDistance;if(!(Number.isNaN(f)||e<=f))return Number.POSITIVE_INFINITY}e=G(new g.Point2D,g.indexTypeMax(),Number.NaN);f=G(new g.Point2D,g.indexTypeMax(),Number.NaN);a=this._ExecuteBruteForce(a,b,e,f);b=this.m_maxDistance;if(!(Number.isNaN(b)||a<=b))return Number.POSITIVE_INFINITY;null!==c&&B(c,e);null!==d&&B(d,f);return a}isNear(a,b){this.m_bIsNearCalc=!0;if(a.isEmpty()||b.isEmpty())return!1;
if(a===b)return!0;var c=!0;a.getGeometryType()!==q.Point.type&&a.getGeometryType()!==q.Envelope.type||b.getGeometryType()!==q.Point.type&&b.getGeometryType()!==q.Envelope.type||(c=!1);if(c)if(this.m_env2DgeometryA=new q.Envelope2D,this.m_env2DgeometryB=new q.Envelope2D,a.queryEnvelope(this.m_env2DgeometryA),b.queryEnvelope(this.m_env2DgeometryB),this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)>this.m_maxSqrDistance){if(this.m_env2DgeometryA.sqrDistanceEnvelope(this.m_env2DgeometryB,
null,null)>this.m_maxSqrDistance)return!1}else return!0;c=G(new g.Point2D,g.indexTypeMax(),Number.NaN);const d=G(new g.Point2D,g.indexTypeMax(),Number.NaN);return this._ExecuteBruteForce(a,b,c,d)<=this.m_maxDistance?!0:!1}progress_(a){}_ExecuteBruteForce(a,b,c,d){switch(a.getGeometryType()){case k.GeometryType.enumPoint:return this.distancePointGeometry(a,b,c,d);case k.GeometryType.enumMultiPoint:return this.distanceMultipointGeometry(a,b,c,d);case k.GeometryType.enumEnvelope:return this.distanceEnvelopeGeometry(a,
b,c,d);case k.GeometryType.enumPolyline:case k.GeometryType.enumPolygon:return this.distanceMultipathGeometry(a,b,c,d);default:return Number.NaN}}distancePointGeometry(a,b,c,d){switch(b.getGeometryType()){case k.GeometryType.enumPoint:return this.distancePointPoint(a,b,c,d);case k.GeometryType.enumMultiPoint:return this.distancePointMultipoint(a,b,c,d);case k.GeometryType.enumPolyline:case k.GeometryType.enumPolygon:return this.distancePointMultipath(a,b,c,d);case k.GeometryType.enumEnvelope:return this.distancePointEnvelope(a,
b,c,d);default:return Number.NaN}}distancePointPoint(a,b,c,d){a=a.getXY();b=b.getXY();r(c,a,0,0);r(d,b,0,0);return Math.sqrt(g.Point2D.sqrDistance(a,b))}distancePointMultipoint(a,b,c,d){a=a.getXY();let e=this.m_maxSqrDistance,f=e,h=!1;const m=b.getPointCount(),n=new g.Point2D;for(let l=0;l<m;++l)if(b.queryXY(l,n),f=g.Point2D.sqrDistance(a,n),this.m_bIsNearCalc){if(f<=e)return 0}else if(!(f>e)&&(!h&&f===e||f<e)&&(e=f,r(c,a,0,0),r(d,n,l,0),h=!0,0===e))return 0;return h?Math.sqrt(e):Number.POSITIVE_INFINITY}distancePointMultipath(a,
b,c,d){var e=!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB);a=a.getXY();if(!e&&b.getGeometryType()===k.GeometryType.enumPolygon&&0!==q.isPoint2DInPolygon2D(b,a,0))return r(c,a,0,0),r(d,a,-1,Number.NaN),0;b.getImpl().getAccelerators();var f=e=this.m_maxSqrDistance,h=-1;const m=new q.Envelope2D;b=b.querySegmentIterator();let n=!1;for(;b.nextPath();)for(;b.hasNextSegment();){f=b.nextSegment();f.queryEnvelope(m);h=m.sqrDistance(a);if(h>e)continue;if(!this.m_bIsNearCalc&&n&&h===e)continue;
h=f.getClosestCoordinate(a,!1);const l=f.getCoord2D(h);f=g.Point2D.sqrDistance(a,l);if(this.m_bIsNearCalc){if(f<=e)return 0}else if(!(f>e)&&(!n||f<e)&&(e=f,r(c,a,0,0),r(d,l,b.getStartPointIndex(),h),n=!0,0===e))return 0}return n?Math.sqrt(e):Number.POSITIVE_INFINITY}distancePointEnvelope(a,b,c,d){a=a.getXY();r(c,a,0,0);r(d,a,-1,Number.NaN);b=b.asEnvelope2D();return b.contains(a)?0:Math.sqrt(b.sqrDistance(a,d.outPoint))}distanceMultipointGeometry(a,b,c,d){switch(b.getGeometryType()){case k.GeometryType.enumPoint:return this.m_env2DgeometryB=
g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),a=this.distancePointMultipoint(b,a,d,c),this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),a;case k.GeometryType.enumMultiPoint:return this.distanceMultipointMultipoint(a,b,c,d,1,1);case k.GeometryType.enumPolyline:case k.GeometryType.enumPolygon:return this.distanceMultipointMultipath(a,b,c,d);case k.GeometryType.enumEnvelope:return this.distanceMultipointMultipath(a,I(b),c,d);default:return Number.NaN}}distanceMultipointMultipoint(a,
b,c,d,e,f){const h={stack:[],error:void 0,hasError:!1};try{if(this.m_bIsNearCalc&&1===e&&1===f){var m=Math.trunc(g.snap(Math.sqrt(a.getPointCount())+1,1,g.intMax()));const t=Math.trunc(g.snap(Math.sqrt(b.getPointCount())+1,1,g.intMax()));if((4<=m||4<=t)&&this.distanceMultipointMultipoint(a,b,c,d,m,t)<=this.m_maxSqrDistance)return 0}let l=this.m_maxSqrDistance;a=[a];b=[b];var n=this.swapGeometriesIfBGtA(a,b);n&&(this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),
f=g.swap(e,e=f),H(c,d));E.__addDisposableResource(h,g.makeScopedCall(()=>{H(c,d);this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)},!n),!1);const u=a[0].getImpl(),w=b[0].getImpl(),p=u.getPointCount(),x=w.getPointCount();n=1<x;b=!1;const y=new g.Point2D,v=new g.Point2D;for(a=0;a<p;a+=e){u.queryXY(a,y);if(n){const t=this.m_env2DgeometryB.sqrDistance(y);if(this.m_bIsNearCalc)if(t>l)continue;else{if(this.m_env2DgeometryB.sqrMaxMinDistance(y)<=l)return 0}else if(t>=
l)continue}for(m=0;m<x;m+=f){w.queryXY(m,v);const t=g.Point2D.sqrDistance(y,v);if(this.m_bIsNearCalc){if(t<=l)return 0}else if(!(t>l||b&&t===l)&&(!b||t<l)&&(r(c,y,a,0),r(d,v,m,0),b=!0,l=t,0===l))return b?Math.sqrt(l):Number.POSITIVE_INFINITY}}return b?Math.sqrt(l):Number.POSITIVE_INFINITY}catch(l){h.error=l,h.hasError=!0}finally{E.__disposeResources(h)}}distanceMultipointMultipath(a,b,c,d){let e=!!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)&&b.getGeometryType()===k.GeometryType.enumPolygon;
const f=b.querySegmentIterator();f.stripAttributes();const h=new q.Envelope2D,m=new g.Point2D;let n=this.m_maxSqrDistance;a=a.getImpl();const l=a.getPointCount(),u=1<l;let w=!1;for(;f.nextPath();)for(;f.hasNextSegment();){const x=f.nextSegment();x.queryLooseEnvelope(h);if(u){var p=h.sqrDistanceEnvelope(this.m_env2DgeometryA,null,null);if(this.m_bIsNearCalc){if(p>n)continue}else if(p>n||w&&p===n)continue}for(p=0;p<l;p++){a.queryXY(p,m);if(e&&0!==q.isPoint2DInPolygon2D(b,m,0))return r(c,m,-1,Number.NaN),
r(d,m,p,0),0;if(h.sqrDistance(m)>n)continue;const y=x.getClosestCoordinate(m,!1),v=x.getCoord2D(y);m.subThis(v);const t=m.sqrLength();if(this.m_bIsNearCalc){if(t<=n)return 0}else if(!(t>n)&&(!w||t<n)&&(n=t,r(c,a.getXY(p),p,0),r(d,v,f.getStartPointIndex(),y),w=!0,0===n))return 0}e=!1}return w?Math.sqrt(n):Number.POSITIVE_INFINITY}distanceEnvelopeGeometry(a,b,c,d){switch(b.getGeometryType()){case k.GeometryType.enumPoint:return this.distancePointEnvelope(b,a,d,c);case k.GeometryType.enumMultiPoint:return this.m_env2DgeometryB=
g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),a=this.distanceMultipointMultipath(b,I(a),d,c),this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),a;case k.GeometryType.enumPolyline:case k.GeometryType.enumPolygon:return this.distanceMultipathMultipath(I(a),b,c,d);case k.GeometryType.enumEnvelope:return this.distanceEnvelopeEnvelope(a,b,c,d);default:return Number.NaN}}distanceEnvelopeEnvelope(a,b,c,d){c.t=Number.NaN;c.index=-1;
d.t=Number.NaN;d.index=-1;a=a.asEnvelope2D();b=b.asEnvelope2D();return Math.sqrt(a.sqrDistanceEnvelope(b,c.outPoint,d.outPoint))}distanceMultipathGeometry(a,b,c,d){switch(b.getGeometryType()){case k.GeometryType.enumPoint:return this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),a=this.distancePointMultipath(b,a,d,c),this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),a;case k.GeometryType.enumMultiPoint:return this.m_env2DgeometryB=
g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),a=this.distanceMultipointMultipath(b,a,d,c),this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),a;case k.GeometryType.enumPolyline:case k.GeometryType.enumPolygon:return this.distanceMultipathMultipath(a,b,c,d);case k.GeometryType.enumEnvelope:return this.distanceMultipathMultipath(a,I(b),c,d);default:return Number.NaN}}distanceMultipathMultipath(a,b,c,d){const e={stack:[],error:void 0,
hasError:!1};try{a=[a];b=[b];var f=this.swapGeometriesIfAGtB(a,b);f&&(this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),H(c,d));E.__addDisposableResource(e,g.makeScopedCall(()=>{H(c,d);this.m_env2DgeometryB=g.swap(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)},!f),!1);const u=a[0],w=b[0];var h=u.querySegmentIterator();h.stripAttributes();const p=w.querySegmentIterator();p.stripAttributes();if(this.m_bIsNearCalc&&this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)<=
this.m_maxSqrDistance)return 0;if(this.m_bIsNearCalc){var m=Math.trunc(g.snap(Math.sqrt(u.getPointCount())+1,1,g.intMax())),n=Math.trunc(g.snap(Math.sqrt(u.getPointCount())+1,1,g.intMax()));if(this.distanceMultipointMultipoint(u,w,c,d,m,n)<=this.m_maxSqrDistance)return 0}if(this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)){var l=F();const z=F();if(M(u,w,h,p,l,z))return B(c,l),B(d,z),0}const x=N(u);f=[];const y=new q.SegmentBuffer,v=new q.Envelope2D,t=new q.Envelope2D,O=new q.Envelope2D;
let A=this.m_maxSqrDistance;h=!0;m=!1;for(let z=0,Q=x.length;z<Q;++z){u.querySegment(x[z],y,!0);const J=y.get();J.queryEnvelope(v);if(!(v.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>A)){if(this.m_bIsNearCalc&&v.sqrMaxDistanceEnvelope(this.m_env2DgeometryB)<=A)return 0;for(;p.nextPath();){this.progress_();if(h)w.queryPathEnvelope(p.getPathIndex(),O),f[p.getPathIndex()]=O.clone();else if(v.sqrDistanceEnvelope(f[p.getPathIndex()],null,null)>A)continue;for(;p.hasNextSegment();){const K=p.nextSegment();
K.queryEnvelope(t);if(v.sqrDistanceEnvelope(t,null,null)<=A){const R=!v.isIntersecting(t);n=[0];l=[0];let C=J.distance(K,R,n,l);C*=C;if(this.m_bIsNearCalc&&C<=this.m_maxSqrDistance)return 0;if(C<A||C===A&&x[z]<c.index){m=!0;L(c,J,x[z],n[0]);L(d,K,p.getStartPointIndex(),l[0]);if(0===C)return 0;A=C}}}}p.resetToFirstPath();h=!1}}return m?Math.sqrt(A):Number.POSITIVE_INFINITY}catch(u){e.error=u,e.hasError=!0}finally{E.__disposeResources(e)}}swapGeometriesIfAGtB(a,b){const c=k.vertexCount(a[0]),d=k.vertexCount(b[0]);
return c>d?(b[0]=g.swap(a[0],a[0]=b[0]),!0):!1}swapGeometriesIfBGtA(a,b){return this.swapGeometriesIfAGtB(b,a)}}D.DistanceCalculator=P;D.makeOutput=F;D.shuffleMultipathSegments=N;D.weakIntersectionTest=M});