// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ./tslib.es6 ./Geometry ./SideCalculator2D-CsYV5zVZ ./QuadraticBezier ./Transformation2D ./SimpleGeometryCursor ./OperatorShapePreservingDensify".split(" "),function(J,E,t,x,a,y,N,O){function H(d,g,b){const h={stack:[],error:void 0,hasError:!1};try{0===b.getCoordinateSystemType()&&t.throwInvalidArgumentException("Cannot use local SR");if(1!==b.getCoordinateSystemType()){const u=Array(2);u[0]=d.getXY();u[1]=g.clone();const k=y.makeObjectArray(y.Point2D,2);2!==a.projectPointsToGCS(b,
u,2,k)&&t.throwInvalidArgumentException("Point cannot be projected to GCS");const v=b.getGCS(),q=H(new a.Point(k[0]),k[1],v);return x.makeProximity2DResult(q.m_coordinate,0,q.m_distance)}const l=b.getUnit().getUnitToBaseFactor(),r=d.getXY();r.scale(l);const e=g.clone();e.scale(l);const c=a.makeSpheroidData();b.querySpheroidData(c);const f=E.__addDisposableResource(h,new a.PeDoubleClass,!1);a.peLineType.geodeticDistance(c.majorSemiAxis,c.e2,r.x,r.y,e.x,e.y,f,null,null,a.peDefs.PE_LINETYPE_GEODESIC);
const m=d.getXY();return x.makeProximity2DResult(m,0,f.val)}catch(l){h.error=l,h.hasError=!0}finally{E.__disposeResources(h)}}function K(d,g,b,h=0){0===b.getCoordinateSystemType()&&t.throwInvalidArgumentException("Cannot use local SR");var l=d.getAttributeStreamRef(0),r=d.getPointCount(),e=b.getGCS(),c=g.clone();if(1!==b.getCoordinateSystemType()){l=b.getSRToGCSTransform();a.transformInPlace(l,[g],1,[c],null);if(c.isNAN())return x.makeProximity2DResult(y.Point2D.getNAN(),-1,Number.NaN);g=(new a.OperatorProject).execute(d,
l,null);l=g.getAttributeStreamRef(0);r=g.getPointCount()}g=e.getUnit().getUnitToBaseFactor();b=y.makePrimitiveArray(r,0);for(var f=0;f<r;++f)b[f]=f;a.shuffle(r,b);f=a.makeSpheroidData();e.querySpheroidData(f);const m=c.clone();m.scale(g);const u=a.curvToCart(f.majorSemiAxis,f.e2,m);e=-1;c=Number.MAX_VALUE;var k=a.calculateLargeRadius(f.majorSemiAxis,f.e2);const v=new y.Point2D,q=new y.Point2D;for(var p=0;p<r;)if(l.queryPoint2D(2*b[p],v),!v.isNAN()){q.assign(v);q.scale(g);var n=a.curvToCart(f.majorSemiAxis,
f.e2,q);a.Point3D.distance(n,u)>c?(b[r-1]=y.swap(b[p],b[p]=b[r-1]),r--):(n=a.sphericalDistance(k,n,u),n<c&&(e=b[p],c=n),p++)}if(0!==f.e2){k={stack:[],error:void 0,hasError:!1};try{const z=E.__addDisposableResource(k,new a.PeDoubleClass,!1);for(p=0;p<r;p++){l.queryPoint2D(2*b[p],v);if(v.isNAN())continue;q.assign(v);q.scale(g);const A=a.curvToCart(f.majorSemiAxis,f.e2,q);a.Point3D.distance(A,u)>c||(a.peLineType.geodeticDistance(f.majorSemiAxis,f.e2,m.x,m.y,q.x,q.y,z,null,null,h),z.val<c&&(e=b[p],c=
z.val))}}catch(z){k.error=z,k.hasError=!0}finally{E.__disposeResources(k)}}h=new y.Point2D;-1!==e&&h.assign(d.getXY(e));return x.makeProximity2DResult(h,e,c)}function L(d,g,b,h,l=0){0===h.getCoordinateSystemType()&&t.throwInvalidArgumentException("Cannot use local SR");var r=h.getGCS(),e=b.clone();if(1!==h.getCoordinateSystemType()){var c=h.getSRToGCSTransform();a.transformInPlace(c,[b],1,[e],null);if(e.isNAN())return x.makeEmptyProximity2DResult();var f=y.makeObjectArray(y.Point2D,g);a.transformInPlace(c,
d,g,f,null);l=L(f,g,b,r,l);return l.isEmpty()?l:x.makeProximity2DResult(d[l.m_vertexIndex],l.m_vertexIndex,l.m_distance)}b=r.getUnit().getUnitToBaseFactor();h=y.makePrimitiveArray(g,0);for(var m=0;m<g;++m)h[m]=m;a.shuffle(g,h);m=a.makeSpheroidData();r.querySpheroidData(m);const u=e.clone();u.scale(b);const k=a.curvToCart(m.majorSemiAxis,m.e2,u);r=-1;e=Number.MAX_VALUE;var v=a.calculateLargeRadius(m.majorSemiAxis,m.e2);for(var q=0;q<g;){var p=d[h[q]];p.isNAN()||(p=p.clone(),p.scale(b),p=a.curvToCart(m.majorSemiAxis,
m.e2,p),a.Point3D.distance(p,k)>e?(h[g-1]=y.swap(h[q],h[q]=h[g-1]),g--):(p=a.sphericalDistance(v,p,k),p<e&&(r=h[q],e=p),q++))}if(0!==m.e2){v={stack:[],error:void 0,hasError:!1};try{for(c=E.__addDisposableResource(v,new a.PeDoubleClass,!1),q=0;q<g;q++){f=d[h[q]];if(f.isNAN())continue;const n=f.clone();n.scale(b);const z=a.curvToCart(m.majorSemiAxis,m.e2,n);a.Point3D.distance(z,k)>e||(a.peLineType.geodeticDistance(m.majorSemiAxis,m.e2,u.x,u.y,n.x,n.y,c,null,null,l),c.val<e&&(r=h[q],e=c.val))}}catch(n){v.error=
n,v.hasError=!0}finally{E.__disposeResources(v)}}l=new y.Point2D;-1!==r&&l.assign(d[r]);return x.makeProximity2DResult(l,r,e)}function P(d,g,b,h,l){const r={stack:[],error:void 0,hasError:!1};try{0===b.getCoordinateSystemType()&&t.throwInvalidArgumentException("Cannot use local SR");let u=d.getAttributeStreamRef(0);var e=d.getPointCount(),c=b.getGCS(),f=g.clone();if(1!==b.getCoordinateSystemType()){const w=b.getSRToGCSTransform();a.transformInPlace(w,[g],1,[f],null);if(f.isNAN())return[];const D=
(new a.OperatorProject).execute(d,w,null);u=D.getAttributeStreamRef(0);e=D.getPointCount()}const k=c.getUnit().getUnitToBaseFactor(),v=y.makePrimitiveArray(e,0);for(d=0;d<e;++d)v[d]=d;a.shuffle(e,v);const q=a.makeSpheroidData();c.querySpheroidData(q);const p=f.clone();p.scale(k);var m=a.curvToCart(q.majorSemiAxis,q.e2,p);c=[];const n=new y.Point2D,z=new y.Point2D;for(f=0;f<e;){u.queryPoint2D(2*v[f],n);if(n.isNAN())continue;z.assign(n);z.scale(k);const w=a.curvToCart(q.majorSemiAxis,q.e2,z);a.Point3D.distance(w,
m)>h?(v[e-1]=y.swap(v[f],v[f]=v[e-1]),e--):f++}const A=E.__addDisposableResource(r,new a.PeDoubleClass,!1);for(m=0;m<e;m++)u.queryPoint2D(2*v[m],n),n.isNAN()||(a.peLineType.geodeticDistance(q.majorSemiAxis,q.e2,p.x,p.y,n.x*k,n.y*k,A,null,null,a.peDefs.PE_LINETYPE_GEODESIC),A.val<h&&c.push(x.makeProximity2DResult(n,v[m],A.val)));c.sort((w,D)=>w.m_distance-D.m_distance);return c.slice(0,l)}catch(u){r.error=u,r.hasError=!0}finally{E.__disposeResources(r)}}class Q{getOperatorType(){return 10501}supportsCurves(){return!1}accelerateGeometry(d,
g,b){return!1}canAccelerateGeometry(d){return!1}getNearestCoordinate(d,g,b,h,l,r){g.isNAN()&&t.throwInvalidArgumentException("NAN xy coordinates are not allowed");if(d.isEmpty())return x.makeEmptyProximity2DResult();Number.isNaN(h)&&(h=0);0<=h||t.throwInvalidArgumentException("maxDeviationMeters");if(0===d.getDimension())return this.getNearestVertex(d,g,b);var e=d.getGeometryType();if(e===t.GeometryType.enumGeometryCollection){e=x.makeEmptyProximity2DResult();for(let B=0,F=d.getGeometryCount();B<
F;++B){var c=d.getGeometry(B);c=this.getNearestCoordinate(c,g,b,h,l,r);if(!c.isEmpty()){if(0===c.m_distance)return c;c.m_distance>=e.m_distance||(e=c,e.m_geometryIndex=B)}}return e}if(e===t.GeometryType.enumEnvelope)return e=new a.Polygon,e.addEnvelope(d,!1),this.getNearestCoordinate(e,g,b,h,l,r);t.isMultiPath(e)||t.throwNotImplementedException("Operation is not implemented for this geometry type");if((l||r)&&e===t.GeometryType.enumPolygon)if(e=()=>{const B=x.makeProximity2DResult(g,-1,0);B.m_bRightSide=
!0;return B},b.isPannable()){c=(new a.OperatorProject).foldInto360Range(new a.Point(g),b);if(c.isEmpty())return x.makeEmptyProximity2DResult();var f=(new a.OperatorProject).foldInto360Range(d,b);if(f.isEmpty())return x.makeEmptyProximity2DResult();if((new a.OperatorContains).execute(f,c,b,null)&&l)return e()}else{c=(new a.OperatorProject).clipToSpatialReference(new a.Point(g),b,null,1);if(c.isEmpty())return x.makeEmptyProximity2DResult();f=a.processWithPCSHorizon(d,b,0,null);if(f.isEmpty())return x.makeEmptyProximity2DResult();
if((new a.OperatorContains).execute(f,c,b,null)&&l)return e()}l=b!==b.getGCS()?b.getSRToGCSTransform():null;e=new y.Point2D;l?(new a.OperatorProject).transform(l,[g],1,[e],!1):e.assign(g);if(e.isNAN())return x.makeEmptyProximity2DResult();f=K(d,g,b,1);c=f.m_distance;if(0===c)return f;c=Number.isNaN(c)?Number.POSITIVE_INFINITY:1.0000001*c;f=b.getGCS();const m=f.getUnit().getUnitToBaseFactor();var u=e.clone();u.scale(m);var k=a.makeSpheroidData();b.querySpheroidData(k);const v=a.curvToCart(k.majorSemiAxis,
k.e2,u),q=a.calculateSmallRadius(k.majorSemiAxis,k.e2);u=new R(d.querySegmentIterator());0===h&&(h=.01);var p=k.majorSemiAxis*a.convertToRadians(45);p=(new O.OperatorShapePreservingDensify).executeMany(u,b,p,h,0,null);const n=[];h=-1;const z=new a.Point3D;u=new a.SegmentBuffer;for(var A=p.next();null!==A;A=p.next()){if(A.isEmpty())continue;const B=p.getGeometryID();var w=d.getPathIndexFromPointIndex(B);d.isClosedPath(w)&&d.getPathEnd(w)===B+1;for(let F=0,S=A.getPathCount();F<S;++F){n.length=0;for(let C=
A.getPathStart(F),I=A.getPathEnd(F);C<I;++C)n.push(A.getXY(C));l&&(new a.OperatorProject).transform(l,n,n.length,n,!1);3<n.length&&(w=L(n,n.length,e,f,1),w.m_distance<c&&(c=w.m_distance,z.assign(a.curvToCart(k.majorSemiAxis,k.e2,w.m_coordinate.mul(m))),h=B,w=w.m_vertexIndex,w+1===n.length&&--w,A.getSegmentBuffer(w,u,!0)));n.forEach(C=>C.mulThis(m));w=a.curvToCart(k.majorSemiAxis,k.e2,n[0]);const T=new a.Point3D;for(let C=1,I=n.length;C<I;++C){const G=a.curvToCart(k.majorSemiAxis,k.e2,n[C]);if(a.sphericalDistancePointToSegment(q,
v,w,G,T)<c){var {second:D}=a.closestCoordinate(k.majorSemiAxis,k.e2,v,w,G,2,null);if(D<=c){D=new a.Point3D;const {second:M}=a.closestCoordinate(k.majorSemiAxis,k.e2,v,w,G,0,D);M<c&&(c=M,z.assign(D),h=B,A.getSegmentBuffer(C-1,u,!0))}}w.assign(G)}}}if(!Number.isFinite(c))return x.makeEmptyProximity2DResult();-1===h&&t.throwInvalidArgumentException("");f=a.cartToCurv(k.majorSemiAxis,k.e2,z);f.divThis(m);c=f.clone();(k=b!==b.getGCS()?b.getGCSToSRTransform():null)&&(new a.OperatorProject).transform(k,
[f],1,[c],!1);c.isNAN()&&t.throwInternalErrorException("closestPoint2DSr.isNAN()");t.geometryReleaseAssert(!u.empty());k=u.get().getClosestCoordinate(c,!1);c.assign(u.get().getCoord2D(k));l?(new a.OperatorProject).transform(l,[c],1,[f],!1):f.assign(c);t.geometryReleaseAssert(!f.isNAN());b=this.getNearestVertex(new a.Point(f),e,b.getGCS());b=x.makeProximity2DResult(c,h,b.m_distance);r&&0<d.getDimension()&&(d=x.calculateSide(d,g,-1,-1),b.m_bRightSide=0!==d&&3!==d);return b}getNearestVertex(d,g,b){g.isNAN()&&
t.throwInvalidArgumentException("NAN xy coordinates are not allowed");if(d.isEmpty())return x.makeEmptyProximity2DResult();switch(d.getGeometryType()){case t.GeometryType.enumPoint:return H(d,g,b);case t.GeometryType.enumMultiPoint:case t.GeometryType.enumPolyline:case t.GeometryType.enumPolygon:return K(d,g,b);default:t.throwNotImplementedException("")}}getNearestVertexPoint2D(d,g,b,h){t.geometryReleaseAssert(0);return{}}getNearestVertices(d,g,b,h,l){g.isNAN()&&t.throwInvalidArgumentException("NAN xy coordinates are not allowed");
if(d.isEmpty())return[];switch(d.getGeometryType()){case t.GeometryType.enumPoint:return d=H(d,g,b),!d.isEmpty()&&d.m_distance<h&&1<=l?(h=[],h.push(d),h):[];case t.GeometryType.enumMultiPoint:case t.GeometryType.enumPolyline:case t.GeometryType.enumPolygon:return P(d,g,b,h,l);default:t.throwNotImplementedException("")}}}class R extends N.GeometryCursor{constructor(d){super();this.m_first=!0;this.m_segIter=d;this.m_segIter.stripAttributes()}tock(){return!0}getRank(){return 1}next(){if(this.m_first){if(!this.m_segIter.nextPath())return null;
this.m_first=!1}for(;;){if(this.m_segIter.hasNextSegment())return this.m_segIter.nextSegment().clone();if(!this.m_segIter.nextPath())break}return null}getGeometryID(){return this.m_segIter.getStartPointIndex()}}J.OperatorProximityGeodesic=Q;Object.defineProperty(J,Symbol.toStringTag,{value:"Module"})});