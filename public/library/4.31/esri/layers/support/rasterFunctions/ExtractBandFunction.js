// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ./bandIndexUtils ./BaseRasterFunction ./ExtractBandFunctionArguments ./pixelUtils".split(" "),function(x,y,r,I,J,A,B,C,D,E){function F(a,c){a=a.bandInfos.map(({name:d})=>d.toLowerCase());const b=[];for(let d=0;d<c.length;d++){const f=c[d].toLowerCase();let e=a.indexOf(f);-1===e&&"nearinfrared"===f&&(e=a.findIndex(g=>
g.startsWith("nearinfrared_1")),-1===e&&(e=a.findIndex(g=>g.startsWith("nearinfrared"))));if(-1===e)return null;b.push(e)}return b}function G(a,c,b){const {bandCount:d}=a;return!c?.length||b&&c.some(f=>0>f||f>=d)?null:c}function H(a,c,{wavelengthMatchTolerance:b},d){var {bandInfos:f}=a;a=[];for(var e=0;e<f.length;e++){const {minWavelength:g,maxWavelength:k}=f[e];if(!g||!k)return null;a.push({minWavelength:g,maxWavelength:k})}f=[];for(e=0;e<c.length;e++){const g=c[e];let k=!1,t=-1,n=Number.MAX_VALUE;
for(let p=0;p<a.length;p++){const h=a[p],l=Math.abs(g-(h.minWavelength+h.maxWavelength)/2);g>=h.minWavelength&&g<=h.maxWavelength?l<n&&(k=!0,t=p,n=l):!k&&l<n&&(t=p,n=l)}!k&&b&&n<b&&(k=!0);if(!k&&d)return null;f.push(t)}return f}r=class extends C{constructor(){super(...arguments);this.functionName="ExtractBand";this.functionArguments=null;this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const {functionArguments:a,sourceRasterInfos:c}=this;var b=c[0];const {method:d,bandNames:f,bandWavelengths:e,
bandIds:g,missingBandAction:k}=a,t=f?.length&&("name"===d||"id"!==d&&!g?.length),n=e?.length&&("wavelength"===d||"id"!==d&&!g?.length),p=k===E.MissingBandAction.fail,h=t?F(b,f):n?H(b,e,this.functionArguments,p):G(b,g,p);if(null==h)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${t?"band names":n?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=h;this.functionArguments.method="id";this.outputPixelType=this._getOutputPixelType("f32");
b=b.clone();b.pixelType=this.outputPixelType;b.bandCount=h.length;const {statistics:l,histograms:u}=b;null!=l&&l.length&&(b.statistics=h.map(m=>l[m]||l[l.length-1]));null!=u&&u.length&&(b.histograms=h.map(m=>u[m]||u[u.length-1]));b.multidimensionalInfo&&b.multidimensionalInfo.variables.forEach(m=>{const {statistics:v,histograms:w}=m;null!=v&&v.length&&(m.statistics=h.map(z=>v[z]||v[v.length-1]));null!=w&&w.length&&(m.histograms=h.map(z=>w[z]||w[w.length-1]))});let q=b.keyProperties?.BandProperties;
q?.length&&(q=h.map(m=>m>=q.length?q[q.length-1]:q[m]),b.keyProperties={...b.keyProperties,BandProperties:q});this.rasterInfo=b;return{success:!0,supportsGPU:3>=b.bandCount}}_processPixels(a){a=a.pixelBlocks?.[0];if(null==a)return null;const c=a.pixels.length,b=this.functionArguments.bandIds.map(d=>d>=c?c-1:d);return a.extractBands(b)}_getWebGLParameters(){let a;if(this.isInputBandIdsSwizzled)a=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{a=[...this.functionArguments.bandIds];
0===a.length?a=[0,1,2]:3>a.length&&(a[1]=a[1]??a[0],a[2]=a[2]??a[1]);for(let c=0;3>c;c++)a[c]=Math.min(a[c],2)}return{bandIndexMat3:B.getBandMatrix3(a)}}_getInputBandIds(a){const c=a.length;return this.functionArguments.bandIds.map(b=>b>=c?c-1:b).map(b=>a[b])}};x.__decorate([y.property({json:{write:!0,name:"rasterFunction"}})],r.prototype,"functionName",void 0);x.__decorate([y.property({type:D,json:{write:!0,name:"rasterFunctionArguments"}})],r.prototype,"functionArguments",void 0);x.__decorate([y.property()],
r.prototype,"rasterArgumentNames",void 0);return r=x.__decorate([A.subclass("esri.layers.support.rasterFunctions.ExtractBandFunction")],r)});