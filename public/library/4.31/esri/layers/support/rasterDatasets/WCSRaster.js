// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/Logger ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../ogc/crsUtils ../../ogc/wcsUtils ../DimensionalDefinition ./BaseRaster ./multipartParser ./wcsCoverageParser ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../../../geometry/Extent".split(" "),function(F,A,z,I,G,W,X,K,L,J,M,N,O,P,Q,R,S){function H(a,
c=!1){return(c?new Date(864E5*(a-25569)):new Date(a)).toISOString()}const T=["nearest neighbor","bilinear","bicubic"],U=["nearest","linear","cubic"],V=new Set(["1.0.0","1.1.0","1.1.1","1.1.2","2.0.1"]);A=class extends N{constructor(){super(...arguments);this.datasetFormat="WCSServer";this.tileType="Raster"}async fetchRawTile(a,c,f,b={}){if(this.isBlockOutside(a,c,f))return null;const {nativePixelSize:d,spatialReference:h}=this.rasterInfo;var e=2**a,g=d.x*e;const q=d.y*e,{blockWidth:u,blockHeight:l}=
this.getBlockWidthHeight(a);({origin:a}=this.rasterInfo.storageInfo.tileInfo);const m=this.getTileExtent({x:g,y:q},c,f,a,h,[u,l]),w=this.rasterInfo.extent,x=m.xmax>w.xmax,r=m.ymin<w.ymin;c=x||r;let k=m;f=u;a=l;c&&(k=m.clone().intersection(w),null!=k&&(x&&(f=Math.floor((k.xmax-k.xmin)/g),k.xmax=k.xmin+g*f),r&&(a=Math.floor((k.ymax-k.ymin)/q),k.ymin=k.ymax-q*a)));if(null==k||1>=f||1>=a)return null;e=await this._getCoverage(k,f,a,e,b);if(!e)return null;({coverageDescription:g}=this.coverageInfo);let {noDataValue:p,
multidimensionalInfo:B}=this.rasterInfo;({multidimensionalDefinition:b}=b);if(null!=B&&null!=b&&b.length){const v=b[0].variableName;"2.0"===g.version?p=g.rangeType[0].find(n=>n.name===v)?.nilValue:"1.1"===g.version&&(p=g.range.find(n=>n.identifier===v)?.nullValues)}b=await this.decodePixelBlock(e,{width:f,height:a,planes:null,pixelType:null,noDataValue:Array.isArray(p)?p[0]:p});if(null==b)return null;if(b&&(b.width!==f||b.height!==a))throw new z("wcsraster-fetch",`the response has unexpected dimension width: ${b.width}, height: {pixelBlock.height}`);
return c?R.clip(b,{x:0,y:0},{width:l,height:l}):b}async _open(a){var {customFetchParameters:c}=this.ioConfig;a=a?.signal;const f=await J.getCapabilities(this.url,{version:this.version,customParameters:c,signal:a});this.capabilities=f;if(!this.version){var b=f.version.slice(0,3);this.version="2.0"===b||"1.1"===b||"1.0"===b?f.version:b=f.supportedVersions.find(e=>"2.0.1"===e)||f.supportedVersions.find(e=>"2.0"===e.slice(0,3))||f.supportedVersions.find(e=>"1.1"===e.slice(0,3))||f.supportedVersions.find(e=>
"1.0"===e.slice(0,3))||"1.0.0"}if(!V.has(this.version))throw new z("wcsraster-open",`unsupported WCS version ${this.version}`);({gridCoverages:b}=f);if(!b.length)throw new z("wcsraster-open","cannot find rectified grid coverages");null==this.coverageId&&(this.coverageId=b[0].id);b=b.find(e=>e.id===this.coverageId);if(null==b)throw new z("wcsraster-open",`the coverageId ${this.coverageId} does not exist in capabilities`);this.coverageInfo=(await J.describeCoverage(this.url,{coverageIds:[this.coverageId],
version:this.version,customParameters:c,signal:a}))[0];"2.0"===this.version.slice(0,3)&&(this.coverageInfo.lonLatEnvelope=b.lonLatEnvelope,this.coverageInfo.supportedInterpolations=P.standardizeInterpolations(f.supportedInterpolations));this.datasetName=this.coverageInfo.title;({rasterInfo:c}=this.coverageInfo);this.createRemoteDatasetStorageInfo(c,512,512);this._set("rasterInfo",c);if(null==c.spatialReference)throw new z("wcsraster-open",`coverage without spatial reference is not supported: ${this.coverageId}`);
const {pixelType:d,bandCount:h}=await this._getPixelTypeAndBandCount(a);c.pixelType=d;1===c.bandCount&&1<h&&(c.bandCount=h);this.updateTileInfo()}async _getPixelTypeAndBandCount(a){const {pixelSize:c,extent:f,multidimensionalInfo:b}=this.rasterInfo;var d=f.center;d=new S({xmin:d.x-c.x,xmax:d.x+c.x,ymin:d.y-c.y,ymax:d.y+c.y,spatialReference:f.spatialReference});let h=[];if(null!=b){const l=b.variables[0];h=[];l.dimensions.forEach(m=>{h.push(new M({variableName:l.name,dimensionName:m.name,values:m.hasRegularIntervals?
m.extent?.[0]:m.values?.[0],isSlice:!0}))})}var {coverageDescription:e}=this.coverageInfo;a={interpolation:"nearest",multidimensionalDefinition:h,signal:a};({version:e}=e);const {ioConfig:g}=this,q="2.0"===e&&null==g.allowAnyMediaType||"1.1"===e&&null==g.use2GridOffsets;try{var u=await this._getCoverage(d,2,2,1,a,!0)}catch(l){if(!q)throw l;if("1.1"===e)if(l.details?.isResolutionMismatch)g.use2GridOffsets=!0;else throw l;}!u&&q&&("2.0"===e&&(g.allowAnyMediaType=!0),(u=await this._getCoverage(d,2,2,
1,a))&&I.getLogger(this).warn("wcsraster:getcoverage","response is not a supported multipart/related mediaType with inline tiff,  switching to compatibility mode"));if(!u)throw new z("wcsraster-open","unable to determine pixel type");u=await this.decodePixelBlock(u,{width:2,height:2,planes:null,pixelType:null});if(null==u)throw new z("wcsraster-open","unable to determine pixel type");return{pixelType:u.pixelType,bandCount:u.getPlaneCount()??0}}async _getCoverage(a,c,f,b,d,h=!1){const {coverageDescription:e}=
this.coverageInfo;var {version:g}=e;a="2.0"===g?this._getCoverage201Parameters(a,c,f,b,d,e):"1.1"===g?this._getCoverage110Parameters(a,c,f,d,e):this._getCoverage100Parameters(a,c,f,d);d="2.0"===g?await this.request(this._constructWCS201Url(a),{signal:d.signal,responseType:"array-buffer"}):await this.request(this.url,{query:a,signal:d.signal,responseType:"array-buffer"});if("1.0"===g)return d.data;if("2.0"===g&&!1!==this.ioConfig.allowAnyMediaType&&"tiff"===Q.getFormat(d.data))return h&&(this.ioConfig.allowAnyMediaType=
!0,I.getLogger(this).warn("wcsraster:getcoverage","response is not a supported multipart/related mediaType with inline tiff,  switching to compatibility mode")),d.data;g=O.parse(d);if(g.isMultipart&&g.data)return g=g.data.find(q=>q.contentType?.toLowerCase().includes("image")&&null!=q.contentData),h&&"base64"===g?.contentTransferEncoding&&I.getLogger(this).warn("wcsraster:getcoverage","response is base64 encoded which may impact layer display performance"),g?.contentData;g=new Uint8Array(d.data,0,
Math.min(d.data.byteLength,2E3));g=(h=String.fromCharCode.apply(null,g).toLowerCase().includes("exception"))&&String.fromCharCode.apply(null,g).includes("A non-zero RESX/RESY or WIDTH/HEIGHT is required but neither was provided");if(h)throw new z("wcsraster:getcoverage","server returns an exception",{isResolutionMismatch:g});throw new z("wcsraster:getcoverage","response is not a supported multipart mediaType with inline tiff");}_getInterpolationIndex(a){return a&&this.coverageInfo.supportedInterpolations?.includes(a)?
"nearest"===a?0:"bilinear"===a?1:"cubic"===a?2:0:0}_getCoverage100Parameters(a,c,f,b){const d=`${a.xmin},${a.ymin},${a.xmax},${a.ymax}`;a=a.spatialReference.wkid;const h=(this.coverageInfo.supportedFormats||[]).find(m=>m.toLowerCase().includes("tiff"))||"GEOTIFF",{bandIds:e,interpolation:g}=b;var q=this._getInterpolationIndex(g);const u=e?e.map(m=>this.coverageInfo.bandNames[m]):null;q=T[q];({multidimensionalDefinition:b}=b);let l;null!=b&&null!=this.rasterInfo.multidimensionalInfo&&(b=b.find(m=>
"StdTime"===m.dimensionName)?.values)&&0<b.length&&(Array.isArray(b[0])&&(b=b[0]),l=b.map(m=>H(m)).join(","));return{service:"WCS",request:"GetCoverage",version:this.version,coverage:this.coverageId,format:h,crs:`EPSG:${a}`,bbox:d,width:c,height:f,time:l,interpolation:q,band:u?.join(",")}}_getCoverage110Parameters(a,c,f,b,d){const {multidimensionalDefinition:h,bandIds:e,interpolation:g}=b;b=a.spatialReference.wkid;const q=`urn:ogc:def:crs:EPSG::${b}`,u=(this.coverageInfo.supportedFormats||[]).find(v=>
v.toLowerCase().includes("tiff"))||"image/tiff";var l=this._getInterpolationIndex(g);l=U[l];const m=null==g||0===this.coverageInfo.supportedInterpolations?.indexOf(g);var w=d.domain.spatialDomain,x=w.origin.x<=w.envelope.xmin&&w.origin.y<=w.envelope.ymin,r=a.width/c,k=a.height/f*(x?1:-1);f=x?[a.xmin,a.ymin]:[a.xmin,a.ymax];f=(c=w.useEPSGAxis&&L.isAxesOrderReversedForWkid(b))?`${f[1]},${f[0]}`:`${f[0]},${f[1]}`;w=this.ioConfig.use2GridOffsets;w=c?w?`${k},${r}`:`${k},0,0,${r}`:w?`${r},${k}`:`${r},0,0,${k}`;
x=r/2;r=a.xmin+x;x=a.xmax-x;var p=Math.abs(k)/2;k=a.ymin+p;a=a.ymax-p;a=c?`${k},${r},${a},${x},${q}`:`${r},${k},${x},${a},${q}`;c=(c=d.range.find(v=>v.axis.some(n=>n.identifier.toLowerCase().includes("band"))))&&l&&e?m?`${c.identifier}[${c.axis[0].identifier}[${e.join(",")}]]`:`${c.identifier}:${l}[${c.axis[0].identifier}[${e.join(",")}]]`:null;let B;if(null!=h&&h.length)for(k=0;k<h.length;k++){r=h[k].values;const v=h[k].dimensionName?.toLowerCase(),n=h[k].variableName?.toLowerCase();0<r.length&&
(Array.isArray(r[0])&&(r=r[0]),"stdtime"===v?B=r.map(t=>H(t)).join(","):(x=d.range.find(t=>t.identifier.toLowerCase()===n))&&(p=x.axis.find(t=>t.identifier.toLowerCase()===v))&&(c=m?x.identifier+"["+p.identifier+"["+r.join(",")+"]]":x.identifier+":"+l+"["+p.identifier+"["+r.join(",")+"]]"))}return{service:"WCS",request:"GetCoverage",version:this.version,identifier:this.coverageId,format:u,crs:`EPSG:${b}`,boundingbox:a,gridCS:"urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS",gridType:"urn:ogc:def:method:WCS:1.1:2dGridIn2dCrs",
gridOrigin:f,gridOffsets:w,gridBaseCRS:q,timeSequence:B,rangeSubset:c}}_getCoverage201Parameters(a,c,f,b,d,h){const {multidimensionalDefinition:e,interpolation:g}=d;var q=this._getInterpolationIndex(g);let u=null;var {supportedInterpolations:l}=this.capabilities;if(l?.length)switch(q){case 0:u=l.find(y=>y.toLowerCase().includes("nearest"));break;case 1:u=l.find(y=>y.toLowerCase().includes("linear"));break;case 2:u=l.find(y=>y.toLowerCase().includes("cubic")||y.toLowerCase().includes("quadratic"))}q=
(this.coverageInfo.supportedFormats||[]).find(y=>y.toLowerCase().includes("tiff"))||"image/tiff";const {bandNames:m}=this.coverageInfo,{boundedBy:w,domainSet:x,rangeType:r}=h;var k=w.isEastFirst?0:1,{axisLabels:p}=w;l=p[k];k=p[1-k];const B=`http://www.opengis.net/def/crs/EPSG/0/${a.spatialReference.wkid}`,v=[];v.push(`${l}(${a.xmin},${a.xmax})`);v.push(`${k}(${a.ymin},${a.ymax})`);a=[];if(2<p.length)for(var n=2;n<p.length;n++){var t=x.origin[n];if(p[n].toLowerCase().includes("time")){let y=t.toString();
w.uomLabels?.[n].toLowerCase().includes("ole")&&(a.push(p[n]),y=H(t,!0));v.push(p[n]+",http://www.opengis.net("+y+")")}else v.push(p[n]+",http://www.opengis.net("+t+")")}a=null;if(null!=e&&e.length){const y=[];r.forEach(C=>C.forEach(D=>y.push(D.name)));d=[];for(let C=0;C<e.length;C++){const D=p.find(E=>E===e[C].dimensionName);n=y.find(E=>E===e[C].variableName);d.includes(n)||d.push(n);D&&(t=e[C].values,0<t.length&&(Array.isArray(t[0])&&(t=t[0]),n="",n=D.toLowerCase().includes("time")?t.map(E=>H(E)).join(","):
t.join(","),t=v.findIndex(E=>0===E.indexOf(D+",http://www.opengis.net")),-1===t&&v.push(D+",http://www.opengis.net("+n+")"),-1===t||v[t].includes("("+n+")")||v.splice(t,1,D+",http://www.opengis.net("+n+")")))}d.length&&(a=d.join(","))}else 2<=m?.length&&(a=(d.bandIds?d.bandIds.map(y=>m[y]):m).join(","));p=v.join("\x26subset\x3d");h=!h.domainSet.hasSameAxisLabelsAsBoundedBy&&!1!==this.ioConfig.allowScaleFactor;return{service:"WCS",request:"GetCoverage",version:this.version,coverageId:this.coverageId,
rangesubset:a,interpolation:u,scaleSize:h?null:`${l}(${c}),${k}(${f})`,scaleFactor:h?1/b:null,subset:p,format:q,mediaType:this.ioConfig.allowAnyMediaType?null:"multipart/related",outputcrs:B,subsettingcrs:B}}_constructWCS201Url(a){const c={...this.ioConfig.customFetchParameters,...a},f=[];Object.keys(c).forEach(d=>{const h=c[d];null!=h&&("subset"!==d?f.push(`${d}=${encodeURIComponent(h)}`):"string"===typeof h&&h.split("\x26subset\x3d").forEach(e=>{e&&f.push(`subset=${encodeURIComponent(e)}`)}))});
a=encodeURI(this.url);const b=f.join("\x26");return`${a}?${b}`}};F.__decorate([G.property({type:String,json:{write:!0}})],A.prototype,"datasetFormat",void 0);F.__decorate([G.property({readOnly:!0})],A.prototype,"tileType",void 0);F.__decorate([G.property({type:String,json:{write:!0}})],A.prototype,"version",void 0);F.__decorate([G.property({type:String,json:{write:!0}})],A.prototype,"coverageId",void 0);return A=F.__decorate([K.subclass("esri.layers.support.rasterDatasets.WCSRaster")],A)});