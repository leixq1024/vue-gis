// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/Clonable ../../../core/Error ../../../core/JSONSupport ../../../core/Logger ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/decorators/cast ../../../core/accessorSupport/decorators/enumeration ../../../core/accessorSupport/decorators/reader ../../../core/accessorSupport/decorators/subclass ../../../core/accessorSupport/decorators/writer ../../../geometry/support/zscale ./CameraOrientation ./cameraOrientationFactory ./utils ../enums/CameraOrientationType ../transformations/utils ../../../geometry/Point".split(" "),
function(d,n,c,u,y,v,g,z,A,k,B,w,C,D,E,p,F,G,q){n=a=>({cast:b=>{b=parseFloat(b);return Number.isFinite(b)?b:void 0},json:{name:a,write:{writer:(b,e,f)=>{e[f]=Number.isFinite(b)?b:void 0}}}});const r=a=>({cast:b=>"string"===typeof b?b.split(";").map(Number):b,json:{default:a,write:{writer:(b,e,f)=>{e[f]=b?.join(";")}}}});c=class extends c.ClonableMixin(y.JSONSupport){constructor(a){super(a);this.sourceMap=this.name=this.elevationSource=this.elevation=this.cameraOrientation=null}read(a,b){const e={},
{attributes:f,layer:h,geometry:l}=a;a={};for(const m in f)e[m.toLowerCase()]=f[m],a[m.toLowerCase()]=m;super.read({geometry:l,layer:h??{},sourceMap:a,...e},b)}write(a,b){a=super.write(a,b);({sourceMap:b}=this);if(!b||!a)return a;const e={};for(const f in a){const h=b[f.toLowerCase()];h&&(e[h]=a[f])}return e}readCameraHeading(a,b){const {cameraheading:e,camheading:f,layer:h}=b;return e??f??h.cameraHeading}readCameraHeight(a,b){const {cameraheight:e,avghtag:f,layer:h}=b;return e??f??h.cameraHeight}readCamOffset(a,
b){const {cameraoffset:e,camoffset:f}=b;return e?.split(";").map(Number)??f?.split(";").map(Number)??null}writeCameraOffset(a,b){a&&(b.cameraOffset=a.join(";"))}readCameraOrientation(a,b){const {cameraorientation:e,camori:f}=b;return e??f}readCameraPitch(a,b){const {camerapitch:e,campitch:f,layer:h}=b;return e??f??h.cameraPitch}readCameraRoll(a,b){const {cameraroll:e,camroll:f,layer:h}=b;return e??f??h.cameraRoll}readDepthImage(a,b){const {depthimage:e,depthimg:f,layer:h}=b,{depthImagePathPrefix:l,
depthImagePathSuffix:m}=h??{};return p.appendPrefixAndSuffix(e??f??null,l,m)}readElevationSource(a,b){const {elevationsource:e,layer:f}=b,{demPathSuffix:h,demPathPrefix:l}=f;return e?(a=this._parseIfJSON(e),p.getEffectiveElevationSource(a,l,h)):f.effectiveElevationSource}readFarDistance(a,b){const {fardistance:e,fardist:f,layer:h}=b;return e??f??h.farDistance}readHFOV(a,b){const {horizontalfieldofview:e,hfov:f,layer:h}=b;return e??f??h.horizontalFieldOfView}readImageURL(a,b){const {imagepath:e,layer:f}=
b;if(!e)throw new u("exposure-point:missing-attribute-value","a value for imagePath is missing in attribute table",{exposurePoint:this});const {imagePathPrefix:h,imagePathSuffix:l}=f;return p.appendPrefixAndSuffix(e,h,l)}readImageRotation(a,b){const {imagerotation:e,imgrot:f,layer:h}=b;return e??f??h.imageRotation}get isHorizontal(){return"horizontal"===this.orientedImageryType}get isInspection(){return"inspection"===this.orientedImageryType}get isNadir(){return"nadir"===this.orientedImageryType}get isOblique(){return"oblique"===
this.orientedImageryType}get isSpherical(){return"360"===this.orientedImageryType}get location(){const {cameraOrientation:a,cameraHeight:b,elevation:e}=this;if(a){const {type:l,x:m,y:H,z:I,horizontalWKID:t,verticalWKID:x}=a;var f="number"===typeof t?{wkid:t}:{wkt:t};if(l===F.CameraOrientationType.LTP){const {latitude:J,longitude:K,ellipsoidRadius:L,squaredEccentricity:M,properties:N}=a,{x:O,y:P,z:Q}=N;return new q(G.ltpToGeographic([O,P,Q],[J,K,L,M]))}var h=new q({x:m,y:H,z:I,spatialReference:f});
(f=x?C.getGeometryZScaler("point",{wkid:x},f):null)&&f(h);return h}if("number"!==typeof b){throw new u("exposure-point:missing-default-value","a value for cameraHeight is missing in default properties");throw void 0;}h=this.geometry.clone();h.z=h.hasZ?h.z:(e??0)+b;return h}set matrix(a){a&&9===a.length?this._set("matrix",a):(v.getLogger(this).warn("Ignoring rotation matrix because it doesn't have 9 values",{value:a}),this._set("matrix",null))}readNearDistance(a,b){const {neardistance:e,neardist:f,
layer:h}=b;return e??f??h.nearDistance}readOrientationAccuracy(a,b){const {accuracy:e,orientationaccuracy:f}=b;return f?.split(";").map(Number)??e?.split(";").map(Number)??null}writeOrientationAccuracy(a,b){a&&(b.orientationAccuracy=a.join(";"))}readOIType(a,b){const {orientedimagerytype:e,oitype:f,camerapitch:h,campitch:l,layer:m}=b;a=p.orientedImageryTypeMap.read(e??f??m.orientedImageryType);b=h??l??m.cameraPitch;return"oblique"===a?10>b?"nadir":"oblique":a}set radial(a){if(a)if("string"===typeof a){const [b,
e,f]=a.split(";").map(Number);this._set("radial",[b??0,e??0,f??0])}else this._set("radial",a);else this._set("radial",[0,0,0])}set tangential(a){if(a)if("string"===typeof a){const [b,e]=a.split(";").map(Number);this._set("tangential",[b??0,e??0])}else this._set("tangential",a);else this._set("tangential",[0,0])}readVFOV(a,b){const {verticalfieldofview:e,vfov:f,layer:h}=b;return e??f??h.verticalFieldOfView}_parseIfJSON(a){let b=null;try{b=JSON.parse(a)}catch(e){v.getLogger(this).error("couldn't parse the given elevation source JSON",
a,e)}return b}};d.__decorate([g.property(n())],c.prototype,"a0",void 0);d.__decorate([g.property(n())],c.prototype,"a1",void 0);d.__decorate([g.property(n())],c.prototype,"a2",void 0);d.__decorate([g.property({type:Date,json:{write:{enabled:!0,target:"acquisitionDate"},name:"acquisitiondate"}})],c.prototype,"acquisitionDate",void 0);d.__decorate([g.property(n())],c.prototype,"b0",void 0);d.__decorate([g.property(n())],c.prototype,"b1",void 0);d.__decorate([g.property(n())],c.prototype,"b2",void 0);
d.__decorate([g.property({type:Number,json:{write:!0,read:{source:["cameraheading","camheading","layer.cameraHeading"]}}})],c.prototype,"cameraHeading",void 0);d.__decorate([k.reader("cameraHeading")],c.prototype,"readCameraHeading",null);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"cameraHeight",void 0);d.__decorate([k.reader("cameraHeight",["cameraheight","avghtag","layer.cameraHeight"])],c.prototype,"readCameraHeight",null);d.__decorate([g.property()],c.prototype,"cameraOffset",
void 0);d.__decorate([k.reader("cameraOffset",["cameraoffset","camoffset"])],c.prototype,"readCamOffset",null);d.__decorate([w.writer("cameraOffset")],c.prototype,"writeCameraOffset",null);d.__decorate([g.property({json:{write:{writer:(a,b,e)=>{b[e]=a.toString()}}},type:D}),z.cast(a=>a?E.getCameraOrientation(a):null)],c.prototype,"cameraOrientation",void 0);d.__decorate([k.reader("cameraOrientation",["cameraorientation","camori"])],c.prototype,"readCameraOrientation",null);d.__decorate([g.property({type:Number,
json:{write:!0}})],c.prototype,"cameraPitch",void 0);d.__decorate([k.reader("cameraPitch",["camerapitch","campitch","layer.cameraPitch"])],c.prototype,"readCameraPitch",null);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"cameraRoll",void 0);d.__decorate([k.reader("cameraRoll",["cameraroll","camroll","layer.cameraRoll"])],c.prototype,"readCameraRoll",null);d.__decorate([g.property({json:{write:!0},type:String})],c.prototype,"depthImage",void 0);d.__decorate([k.reader("depthImage",
["depthimage","depthimg"])],c.prototype,"readDepthImage",null);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"elevation",void 0);d.__decorate([g.property({json:{write:!0},clonable:"reference"})],c.prototype,"elevationSource",void 0);d.__decorate([k.reader("elevationSource",["elevationsource","layer.effectiveElevationSource"])],c.prototype,"readElevationSource",null);d.__decorate([g.property({json:{name:"exposurestationid",write:{target:"exposureStationId"}},type:String})],c.prototype,
"exposureStationId",void 0);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"farDistance",void 0);d.__decorate([k.reader("farDistance",["fardistance","fardist","layer.farDistance"])],c.prototype,"readFarDistance",null);d.__decorate([g.property(n("focallength"))],c.prototype,"focalLength",void 0);d.__decorate([g.property({type:q,json:{name:"geometry"}})],c.prototype,"geometry",void 0);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"horizontalFieldOfView",
void 0);d.__decorate([k.reader("horizontalFieldOfView",["horizontalfieldofview","hfov","layer.horizontalFieldOfView"])],c.prototype,"readHFOV",null);d.__decorate([g.property({json:{write:!0},type:String})],c.prototype,"imagePath",void 0);d.__decorate([k.reader("imagePath",["imagepath"])],c.prototype,"readImageURL",null);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"imageRotation",void 0);d.__decorate([k.reader("imageRotation",["imagerotation","imgrot","layer.imageRotation"])],
c.prototype,"readImageRotation",null);d.__decorate([g.property()],c.prototype,"isHorizontal",null);d.__decorate([g.property()],c.prototype,"isInspection",null);d.__decorate([g.property()],c.prototype,"isNadir",null);d.__decorate([g.property()],c.prototype,"isOblique",null);d.__decorate([g.property()],c.prototype,"isSpherical",null);d.__decorate([g.property()],c.prototype,"location",null);d.__decorate([g.property(r())],c.prototype,"matrix",null);d.__decorate([g.property({json:{write:!0},type:String})],
c.prototype,"name",void 0);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"nearDistance",void 0);d.__decorate([k.reader("nearDistance",["neardistance","neardist","layer.nearDistance"])],c.prototype,"readNearDistance",null);d.__decorate([g.property({json:{write:!0,name:"objectid"},type:Number})],c.prototype,"objectId",void 0);d.__decorate([g.property()],c.prototype,"orientationAccuracy",void 0);d.__decorate([k.reader("orientationAccuracy",["accuracy","orientationaccuracy"])],
c.prototype,"readOrientationAccuracy",null);d.__decorate([w.writer("orientationAccuracy")],c.prototype,"writeOrientationAccuracy",null);d.__decorate([A.enumeration(p.orientedImageryTypeMap)],c.prototype,"orientedImageryType",void 0);d.__decorate([k.reader("orientedImageryType",["orientedimagerytype","oitype","layer.orientedImageryType"])],c.prototype,"readOIType",null);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"principalX",void 0);d.__decorate([g.property({type:Number,json:{write:!0}})],
c.prototype,"principalY",void 0);d.__decorate([g.property(r([0,0,0]))],c.prototype,"radial",null);d.__decorate([g.property({type:Number,json:{name:"sortorder",write:{target:"sortOrder"}}})],c.prototype,"sortOrder",void 0);d.__decorate([g.property({type:Object})],c.prototype,"sourceMap",void 0);d.__decorate([g.property(r([0,0]))],c.prototype,"tangential",null);d.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"verticalFieldOfView",void 0);d.__decorate([k.reader("verticalFieldOfView",
["verticalfieldofview","vfov","layer.verticalFieldOfView"])],c.prototype,"readVFOV",null);return c=d.__decorate([B.subclass("esri.layers.orientedImagery.core.ExposurePoint")],c)});