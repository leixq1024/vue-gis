// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../geometry ../../../chunks/languageUtils ../../../core/Error ../../../core/JSONSupport ../../../core/mathUtils ../../../core/promiseUtils ../../../core/libs/gl-matrix-2/factories/mat3f64 ../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../core/libs/gl-matrix-2/factories/vec4f64 ../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../core/libs/gl-matrix-2/math/mat3 ../../../core/libs/gl-matrix-2/math/mat4 ../../../chunks/vec32 ../../../geometry/projection ../../../geometry/support/Ellipsoid ../../../geometry/support/spatialReferenceUtils ../../../chunks/vec3 ../core/ElevationSourceDefinitions ./updateElevationUtils ../../../widgets/PanoramicViewer/constants ../../../geometry/SpatialReference ../../../geometry/Point".split(" "),
function(h,xa,M,E,ea,p,fa,F,B,ha,q,N,G,y,O,ia,ja,ka,A,la,P,ma,na){function Q(a,b,c){const [d,e,f,g]=b,[k,l,n,m]=c;R(d,e,f,g);b=R(k,l,n,m);var r=H(d,e,f,g);c=H(k,l,n,m);r=G.invertOrIdentity(B.create(),r);c=G.mul(B.create(),r,c);const [t,w,u]=a;a=[0,0,0,0];a[0]=t*c[0]+w*c[1]+u*c[2]+c[3];a[1]=t*c[4]+w*c[5]+u*c[6]+c[7];a[2]=t*c[8]+w*c[9]+u*c[10]+c[11];c=t*c[12]+w*c[13]+u*c[14]+c[15];a[3]=0===c?1:c;const [v,x,C,z]=a;return[v/z,x/z,b?0:C/z]}function R(a,b,c,d){return 0===a[2]&&0===b[2]&&0===c[2]&&0===d[2]?
(a[2]=b[2]=c[2]=d[2]=1,!0):!1}function H(a,b,c,d){var e=S(ha.fromArray([...d,1]),G.invertOrIdentity(Array(16),B.fromValues(a[0],b[0],c[0],0,a[1],b[1],c[1],0,a[2],b[2],c[2],0,1,1,1,1)));d=e[0];const f=e[1];e=e[2];const g=B.create();g[0]=d*a[0];g[1]=f*b[0];g[2]=e*c[0];g[3]=0;g[4]=d*a[1];g[5]=f*b[1];g[6]=e*c[1];g[7]=0;g[8]=d*a[2];g[9]=f*b[2];g[10]=e*c[2];g[11]=0;g[12]=d;g[13]=f;g[14]=e;g[15]=1;return g}function T(a,b,c,d,e=q.zeros()){e[0]=a[0]+b[0]*c;e[1]=a[1]+b[1]*c;e[2]=a[2]+c/d*b[2];return e}function I(a,
b,c){const d=q.zeros();d[0]=a[0]*b;d[1]=a[1]*b;d[2]=b/c*a[2];return d}function D(a,b){const [c,d,e]=a;a=q.zeros();a[0]=c*b[0]+d*b[3]+e*b[6];a[1]=c*b[1]+d*b[4]+e*b[7];a[2]=c*b[2]+d*b[5]+e*b[8];return a}function S(a,b){const [c,d,e,f]=a;a=Array(4);a[0]=c*b[0]+d*b[1]+e*b[2]+f*b[3];a[1]=c*b[4]+d*b[5]+e*b[6]+f*b[7];a[2]=c*b[8]+d*b[9]+e*b[10]+f*b[11];a[3]=c*b[12]+d*b[13]+e*b[14]+f*b[15];return a}function oa(a,b,c,d=!0){if(!Number.isFinite(a))throw new E("InvalidRotationAngle","Please specify a valid angle for rotation");
c*=d?p.deg2rad(a):a;a=Math.cos(c);c=Math.sin(c);d=F.create();switch(b){case 0:d[4]=a;d[5]=-c;d[7]=c;d[8]=a;break;case 1:d[0]=a;d[2]=c;d[6]=-c;d[8]=a;break;case 2:d[0]=a;d[1]=-c;d[3]=c;d[4]=a;break;default:throw new E("InvalidRotationAxis","Please specify either 0, 1 or 2 for X, Y or Z axis respectively");}return d}function J(a,b,c=!0){if(3!==a?.length||3!==b?.length)throw new E("InvalidRotationAngles","Please specify three angles with config for rotation");const d=F.create();for(let e=0;3>e;e++){const [f,
g]=b[e],k=oa(a[e],f,g,c);N.multiply(d,k,d)}return d}function U(a,b=!0){return J(a,V.OPK,b)}function K(a,b=!0){return J(a,V.HPR,b)}function W(a,b){const c=p.deg2rad(a[1]);var d=p.deg2rad(a[0]);a=a[2];const [e,f,g,k]=b;b=p.deg2rad(e);var l=p.deg2rad(f);const n=g/Math.sqrt(1-k*Math.sin(b)**2);d-=l;l=g/Math.sqrt(1-k*Math.sin(b)**2);const m=k*(n*Math.sin(b)-l*Math.sin(c));return[(l+a)*Math.cos(c)*Math.sin(d),(l+a)*(Math.sin(c)*Math.cos(b)-Math.sin(b)*Math.cos(b)*Math.cos(d))+m*Math.cos(b),(l+a)*(Math.sin(c)*
Math.sin(b)+Math.cos(b)*Math.cos(c)*Math.cos(d))-n+m*Math.sin(b)]}function X(a,b,c,d){return{x:c/2+a/(360/c),y:d-b/(180/d),heading:a,pitch:b}}function Y(a,b){b=p.rad2deg(Math.acos(-a.z/b));return{heading:p.rad2deg(Math.atan2(a.x,a.y)),pitch:b}}function Z({a0:a,a1:b,a2:c,b0:d,b1:e,b2:f},g,k,l){a=[a??g/2-.5,b,c??0,d??k/2-.5,e??0,f].map(pa);return null!=l&&aa(a)?{affines:a,focalLength:l}:{affines:[g/2-.5,1,0,k/2-.5,0,-1]}}function pa(a,b){if(null==a)return null;a=parseFloat(`${a}`);return isNaN(a)?null:
a}function aa(a){return null!=a[1]&&null!=a[5]}function ba(a,b,c){const {a0:d,a1:e,a2:f,b0:g,b1:k,b2:l,cameraHeading:n,cameraOrientation:m,cameraPitch:r,cameraRoll:t,focalLength:w,horizontalFieldOfView:u,location:v,matrix:x,principalX:C,principalY:z,radial:qa,tangential:ra,verticalFieldOfView:sa}=a,{affines:ta,focalLength:ua}=Z({a0:d,a1:e,a2:f,b0:g,b1:k,b2:l},b,c,w);a=null!=x?x:2===m?.type?U([m.omega,m.phi,m.kappa]):1===m?.type?K([m.heading,m.pitch,m.roll]):K([n,r,t??0]);const va=null!=C&&null!=z?
[C,z]:void 0;return{affineTransformations:m?.affineTransformations??ta,cameraLocation:v.clone(),focalLength:m?.focalLength??ua,horizontalFieldOfView:u,imageHeight:c,imageWidth:b,principalOffsetPoint:m?.principalOffsetPoint??va,radialDistortionCoefficients:m?.radialDistortionCoefficients??qa,rotationMatrix:a,tangentialDistortionCoefficients:m?.tangentialDistortionCoefficients??ra,verticalFieldOfView:sa}}const V={HPR:[[2,-1],[0,1],[2,-1]],OPK:[[0,1],[1,1],[2,1]]},L=(...a)=>a.some(b=>b),ca=a=>null!=
a&&"elevationSample"in a&&null!=a.elevationSample,da=a=>A.isElevationSource(a?.elevationSource)&&null!=a?.extent;var wa;(function(a){a[a.CLOCKWISE=-1]="CLOCKWISE";a[a.COUNTERCLOCKWISE=1]="COUNTERCLOCKWISE"})(wa||={});h.computeFarplaneVertices=function(a){const {cameraLocation:b,farDistance:c,horizontalFieldOfView:d,rotationMatrix:e,scalingFactor:f,verticalFieldOfView:g}=a;var k=F.create();N.transpose(k,e);var l=2*Math.tan(p.deg2rad(g)/2)*c*f,n=2*Math.tan(p.deg2rad(d)/2)*c*f,m=D([0,0,-1],k);a=T([b.x,
b.y,b.z],m,a.farDistance*f,f);m=D([0,1,0],k);k=D([1,0,0],k);l=I(m,l/2,f);k=I(k,n/2,f);n=y.sub(q.zeros(),l,k);l=y.add(q.zeros(),l,k);return[y.add(q.zeros(),a,n),y.add(q.zeros(),a,l),y.sub(q.zeros(),a,n),y.sub(q.zeros(),a,l)]};h.computeHFOVAndVFOV=function(a,b,c){const d=Math.sin(p.deg2rad(c)),e=Math.cos(p.deg2rad(c)),f=[[a,0],[a,b],[0,b]];f.forEach((g,k)=>{f[k]=[e*g[0]-d*g[1],d*g[0]+e*g[1]]});return{hfov:Math.abs(Math.max(0,f[0][0],f[1][0],f[2][0])-Math.min(0,f[0][0],f[1][0],f[2][0])),vfov:Math.abs(Math.max(0,
f[0][1],f[1][1],f[2][1])-Math.min(0,f[0][1],f[1][1],f[2][1]))}};h.computeNewReferenceCoordinates=function(a,b,c,d){return[[-b,-b],[+b,-b],[+b,+b],[-b,+b]].map(([e,f])=>Q(ka.translate(q.zeros(),c,[e,f,0]),d,a))};h.convertHeadingPitchToSphereVertex=function(a,b,c=P.defaultImageSphereSize/2){const d=Math.sin(p.deg2rad(a))*Math.sin(p.deg2rad(b));a=Math.cos(p.deg2rad(a))*Math.sin(p.deg2rad(b));b=Math.cos(p.deg2rad(180-b));return[c*d,c*a,c*b]};h.convertOrientationToPixelLocation=X;h.convertPixelToHeadingPitch=
function(a,b,c){return{heading:360/b*(a.x-b/2),pitch:90-180/c*(a.y-c/2)}};h.convertSphereVertexToOrientation=Y;h.convertSphereVertexToPixelLocation=function(a,b,c,d=P.defaultImageSphereSize/2){const {heading:e,pitch:f}=Y(a,d);return X(e,f,b,c)};h.convertToLTP=async function(a,b,c){a=await O.projectWithZConversion(a,ma.WGS84,c);fa.throwIfAborted(c);return W(a.toArray(),b)};h.createRotationMatrix=J;h.createRotationMatrixFromHPR=K;h.createRotationMatrixFromOPK=U;h.geographicToLTP=W;h.getAffinesAndFocalLength=
Z;h.getImageToWorldPanoramicProperties=function(a,b,c){const {cameraHeading:d,cameraHeight:e,elevation:f,farDistance:g,horizontalFieldOfView:k,location:l,verticalFieldOfView:n}=a;return{averageElevation:f??(l.z??0)-e,cameraLocation:l,cameraHeading:d,farDistance:g,horizontalFieldOfView:k,imageHeight:c,imageWidth:b,verticalFieldOfView:n}};h.getImageToWorldProperties=function(a,b,c){const {cameraHeight:d,cameraPitch:e,cameraRoll:f,elevation:g,farDistance:k,horizontalFieldOfView:l,location:n,verticalFieldOfView:m}=
a,r=g??(n.z??0)-d;return{...ba(a,b,c),averageElevation:r,cameraPitch:e,cameraRoll:f??0,farDistance:k,horizontalFieldOfView:l,verticalFieldOfView:m}};h.getInitialAngle=async function(a,b,c){b=await O.projectWithZConversion(b,a.spatialReference,c);a=p.rad2deg(Math.atan2(b.y-a.y,b.x-a.x));return a=0<=a&&90>=a?90-a:90<a&&180>=a?360-a+90:90+Math.abs(a)};h.getPlaneLineIntersectionPoint=function(a,b,c,d,e,f){const g=c*(b.x-a.x)+d*(b.y-a.y)+e*(b.z-a.z);if(0===g)return null;c=-(c*a.x+d*a.y+e*a.z+f)/g;return{x:a.x+
c*(b.x-a.x),y:a.y+c*(b.y-a.y),z:a.z+c*(b.z-a.z)}};h.getUpdateElevationProps=async(a,b)=>null!=b&&(ca(b)||A.isConstantElevation(b?.elevationSource))?b:da(b)?{elevationSample:await la.getElevationSampler({...(ea.isSerializable(b.elevationSource)?b.elevationSource.toJSON():b.elevationSource),extent:b.extent}),elevationSource:new A.ConstantElevation({constantElevation:a})}:{elevationSource:new A.ConstantElevation({constantElevation:a})};h.getWebMercatorScalingFactor=function(a,b){return ja.isWebMercator(b)?
1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*a/ia.earth.radius))):1};h.getWorldToImageProperties=ba;h.hasAngles=a=>M.isNumber(a?.heading)&&M.isNumber(a?.pitch);h.hasCameraOrientationLTP=function(a){return 4===a?.type};h.hasHeadingPitchRoll=a=>1===a?.type;h.hasOmegaPhiKappa=a=>2===a?.type;h.isElevationSampler=a=>null!=a&&"queryExtent"in a;h.isUpdateElevationWithElevationSampler=ca;h.isUpdateElevationWithElevationSource=da;h.isUpdateUsingConstantElevation=a=>A.isConstantElevation(a?.elevationSource);
h.isValidAffines=aa;h.linearEquationSolve=H;h.ltpToGeographic=function(a,b){const c=Number(a[0]);var d=Number(a[1]),e=Number(a[2]);const [f,g,k,l]=b;a=p.deg2rad(f);b=p.deg2rad(g);const n=k/Math.sqrt(1-l*Math.sin(a)**2);d/=n;const m=e/n;e=Math.cos(a)-Math.sin(a)*d+Math.cos(a)*m;const r=Math.sin(a)+Math.cos(a)*d+Math.sin(a)*m,t=Math.sqrt(e**2+(c/n)**2),w=l*n*Math.sin(a),u=(v,x=5)=>{if(0===x)return v;v=u(v,x-1);return Math.atan(r/t-(w-k/Math.sqrt(1-l*Math.sin(v)**2)*l*Math.sin(v))/(n*t))};a=u(a);d=Math.atan(c/
(n*e))+b;e=p.rad2deg(a);return[p.rad2deg(d),e,c/(Math.cos(a)*Math.sin(d-b))-k/Math.sqrt(1-l*Math.sin(a)**2)]};h.or=L;h.pointToArray=a=>a.toArray();h.projectiveTransform=Q;h.reducerFn=(a,b)=>[[-a,-b],[a,-b],[a,b],[-a,b]];h.rotatePixel=function(a,b,c){const d=Math.cos(c);c=Math.sin(c);const e=[1,0,0,1,0,0],f=e[1]*d+e[3]*c,g=-e[0]*c+e[2]*d,k=-e[1]*c+e[3]*d;e[0]=e[0]*d+e[2]*c;e[1]=f;e[2]=g;e[3]=k;return[a*e[0]+b*e[2]+e[4],a*e[1]+b*e[3]+e[5]]};h.scaleAndAddWithFactor=T;h.scaleWithFactor=I;h.transformMat3=
D;h.transformMat4=S;h.validatePixelsToTransform=function(a,b){if(L(0===a.length,a.some(({x:c,y:d})=>L(null==c,null==d)),!b.hasZ))throw Error("Input pixels must have x, y and camera location must have z value");};h.validatePointsToTransform=function(a,b){if(a.some(c=>null==c.z)||null==b.z)throw Error("Input points and camera location must have z value");};h.validateRotationMatrix=function(a){if(9!==a?.length)throw Error("Rotation matrix is not provided or is not a valid 3x3 matrix");};h.vecToPoint=
a=>b=>new na(b,a);Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});