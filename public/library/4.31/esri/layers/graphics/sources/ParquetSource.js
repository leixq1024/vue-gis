// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/tslib.es6 ../../../core/Error ../../../core/Loadable ../../../core/promiseUtils ../../../core/urlUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/decorators/subclass ./support/clientSideDefaults ../../support/parquetLayerUtils ../../../libs/parquet/parquet ../../../views/2d/layers/support/util".split(" "),function(b,d,c,k,l,m,e,n,p,q,r,g){const t=["parquet"];b.ParquetSource=class extends k{constructor(a){super(a);this.type="parquet"}load(a){this.addResolvingPromise(this._initialize(null!=
a?a.signal:null));return Promise.resolve(this)}async _initialize(a){const f=this.loadOptions.url;if(null==f)throw new c("missing-metadata","Unable to create parquet source: no url specified",this.loadOptions);const h=this.loadOptions.metadata??await r.ParquetMetadata.create(f,()=>this.customParameters);l.throwIfAborted(a);a=this._createGeometrySource(h,this.loadOptions);if(null==a)throw new c("missing-metadata","Unable to create parquet source: cannot infer geometrySource",this.loadOptions);this.geometryInfo=
a;this.sourceJSON={name:m.getFilename(f,t)||"parquet",drawingInfo:p.createDrawingInfo(g.toJSONGeometryType(a.geometryType)),geometryType:g.toJSONGeometryType(a.geometryType),spatialReference:a.spatialReference,objectIdField:this.loadOptions.objectIdField??"__OBJECTID",fields:h.fields}}_createGeometrySource(a,f){a=f.geometrySourceInfo??q.inferGeometrySource(a);if(!a)return null;switch(a.type){case "location":return this._createLocationInfo(a);case "geometry":return this._createGeometryInfo(a)}}_createLocationInfo(a){if(null==
a.latitudeFieldName)throw new c("missing-metadata","Missing latitudeFieldName",a);if(null==a.longitudeFieldName)throw new c("missing-metadata","Missing longitudeFieldName",a);return{type:"location",latitudeFieldName:a.latitudeFieldName,longitudeFieldName:a.longitudeFieldName,geometryType:"point",spatialReference:a.spatialReference??{wkid:4326}}}_createGeometryInfo(a){if(null==a.geometryType)throw new c("missing-metadata","Missing geometryType",a);if(null==a.spatialReference)throw new c("missing-metadata",
"Missing spatialReference",a);if(null==a.primaryFieldName)throw new c("missing-metadata","Missing primaryFieldName",a);if("WKB"!==a.format)throw new c("unsupported","Geometry encoding must be 'WKB'",a);return{type:"geometry",format:"WKB",spatialReference:a.spatialReference,primaryFieldName:a.primaryFieldName,geometryType:a.geometryType}}};d.__decorate([e.property()],b.ParquetSource.prototype,"type",void 0);d.__decorate([e.property()],b.ParquetSource.prototype,"loadOptions",void 0);d.__decorate([e.property()],
b.ParquetSource.prototype,"sourceJSON",void 0);d.__decorate([e.property()],b.ParquetSource.prototype,"geometryInfo",void 0);d.__decorate([e.property()],b.ParquetSource.prototype,"customParameters",void 0);b.ParquetSource=d.__decorate([n.subclass("esri.layers.graphics.sources.ParquetSource")],b.ParquetSource);Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});