// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/tslib.es6 ../../geometry ../../core/Accessor ../../core/Error ../../core/Logger ../../core/MapUtils ../../core/sql ../../core/accessorSupport/decorators/property ../../core/has ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ../../geometry/Polygon ../../geometry/projection ../../geometry/support/spatialReferenceUtils ./layerUtils ./SessionMemoryStorage ./supportUtils ../../rest/knowledgeGraphService ../../rest/knowledgeGraph/GraphQueryStreaming ../../rest/support/Query ../../geometry/Extent".split(" "),
function(y,A,W,R,L,M,E,P,C,X,Y,S,T,I,F,t,O,U,J,D,V,Q){y.KnowledgeGraphLayerDataManager=class extends R{constructor(b){super(b);this._processingCacheUpdatesLookup=new Map;this.knowledgeGraph=null;this.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map};this.entityTypeNames=new Set;this.relationshipTypeNames=new Set;this.geographicLookup=new Map;this.sublayerCaches=new Map;this.nodeConnectionsLookup=new Map;this.relationshipConnectionsLookup=new Map;this.memberIdTypeLookup=
new Map;const a=new Map;b.knowledgeGraph.dataModel.entityTypes?.forEach(f=>{f.name&&(a.set(f.name,"entity"),this._processingCacheUpdatesLookup.set(f.name,[]),b.inclusionModeDefinition&&!b.inclusionModeDefinition?.generateAllSublayers||this.entityTypeNames.add(f.name),f.properties?.forEach(c=>{c.geometryType&&"esriGeometryNull"!==c.geometryType&&this.geographicLookup.set(f.name,{name:c.name??"",geometryType:c.geometryType})}))});b.knowledgeGraph.dataModel.relationshipTypes?.forEach(f=>{f.name&&(a.set(f.name,
"relationship"),this._processingCacheUpdatesLookup.set(f.name,[]),b.inclusionModeDefinition&&!b.inclusionModeDefinition?.generateAllSublayers||this.relationshipTypeNames.add(f.name),f.properties?.forEach(c=>{c.geometryType&&"esriGeometryNull"!==c.geometryType&&this.geographicLookup.set(f.name,{name:c.name??"",geometryType:c.geometryType})}))});b.inclusionModeDefinition?.namedTypeDefinitions.forEach((f,c)=>{if("entity"===a.get(c))this.entityTypeNames.add(c);else if("relationship"===a.get(c))this.relationshipTypeNames.add(c);
else{M.getLogger(this).warn(`A named type, ${c}, was in the inclusion list that wasn't in the data model and will be removed`);b.inclusionModeDefinition?.namedTypeDefinitions.delete(c);return}const n=new Map;f.members?.forEach(p=>{E.getOrCreateMapValue(this.memberIdTypeLookup,p.id,()=>new Set).add(c);const h=this.getById(p.id);h&&n.set(p.id,h)});this.sublayerCaches.set(c,n)})}addToLayer(b){b.forEach(({typeName:a,id:f})=>{if(!this.inclusionModeDefinition)throw new L("knowledge-graph:layer-data-manager",
"You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");if(this.inclusionModeDefinition.namedTypeDefinitions.has(a))this.inclusionModeDefinition.namedTypeDefinitions.has(a)&&(c=this.inclusionModeDefinition.namedTypeDefinitions.get(a),c.members||(c.members=new Map),c.members.set(f,{id:f}),E.getOrCreateMapValue(this.memberIdTypeLookup,f,()=>new Set).add(a));else{var c=new Map;c.set(f,{id:f});this.inclusionModeDefinition.namedTypeDefinitions.set(a,{useAllData:!1,
members:c});E.getOrCreateMapValue(this.memberIdTypeLookup,f,()=>new Set).add(a)}})}getById(b){return O.getInstance().readFromStoreById(b)}async getData(b,a,f){if(a.objectType.name&&this.inclusionModeDefinition?.namedTypeDefinitions&&0<this.inclusionModeDefinition.namedTypeDefinitions.size&&!this.inclusionModeDefinition.namedTypeDefinitions.has(a.objectType.name))return[];b=b?b:new V({where:"1\x3d1",outFields:["*"]});if("link-chart"===a.parentCompositeLayer.type){const c=a.parentCompositeLayer;f=this._processingCacheUpdatesLookup.get(a.objectType.name??
"");const n=b.outFields;n&&1===n.length&&n[0]===t.systemOidFieldName&&"1\x3d1"===b.where||await Promise.all(f??[]);const p=[];(this.sublayerCaches.has(a.objectType.name??"")?Array.from(this.sublayerCaches.get(a.objectType.name)?.values()):[]).forEach(h=>{if(this.relationshipTypeNames.has(a.objectType.name)){h.geometry=c.relationshipLinkChartDiagramLookup.get(h.attributes[a.objectIdField]);var x=this.memberIdTypeLookup.get(h.attributes[t.systemOriginIdFieldName]),d=this.memberIdTypeLookup.get(h.attributes[t.systemDestinationIdFieldName]);
x=this._isEndEntitySpatial(x,h,t.systemOriginIdFieldName);d=this._isEndEntitySpatial(d,h,t.systemDestinationIdFieldName);h.attributes[t.systemIsSpatialFieldName]=Number(x&&d)}else h.geometry=c.entityLinkChartDiagramLookup.get(h.attributes[a.objectIdField]),d=this.geographicLookup.get(a.objectType.name),h.attributes[t.systemIsSpatialFieldName]=d&&h.attributes[d.name]?1:0;h.attributes[t.systemLayoutGeometryFieldName]=h.geometry;p.push(h)});return p}return this.retrieveDataFromService(b,a,f)}async getConnectedRecordIds(b,
a){const f=[];let c="";const n=[],p=new Map;b.forEach(e=>{if(this.memberIdTypeLookup.has(e))for(const k of this.memberIdTypeLookup.get(e)){if(!this.entityTypeNames.has(k))break;p.has(k)?p.get(k)?.push(e):p.set(k,[e])}});if(a&&0!==a?.length){for(var h of a)c=c+h+"|";c=c.slice(0,-1)}const x={};let d="";b=-1;for(const [e,k]of p)b++,0!==b&&(d+=" UNION "),h=`${e}_ids`,x[h]=k,d=a&&0!==a?.length?d+`MATCH (n:${e}) WHERE id(n) IN $${h} WITH n MATCH (n)-[r:${c}]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`:
d+`MATCH (n:${e}) WHERE id(n) IN $${h} WITH n MATCH (n)-[r]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`;if(!d)return f;a=new Promise(e=>{(async()=>{const k=(await J.executeQueryStreaming(this.knowledgeGraph,new D({openCypherQuery:d,bindParameters:x}))).resultRowsStream.getReader();try{for(;;){const {done:g,value:r}=await k.read();if(g)break;for(let l=0;l<r.length;l++){const q=r[l];f.push({id:q[0],typeName:q[1]});f.push({id:q[2],typeName:q[3]})}}}catch(g){if("AbortError"===g.name)M.getLogger(this).info("Request aborted as expected");
else throw g;}})().then(()=>{e()})});n.push(a);this.refreshCacheContent();await Promise.all(n);return f}async getRelationshipsBetweenNodes(b,a){const f=[];b=(await J.executeQueryStreaming(this.knowledgeGraph,new D({openCypherQuery:"MATCH (n)-[r]-\x3e(m) WHERE id(n) IN $nodeIds AND id(m) in $nodeIds AND NOT id(r) IN $relationshipExclusionIds return id(r), type(r)",bindParameters:{nodeIds:b,relationshipExclusionIds:a}}))).resultRowsStream.getReader();try{for(;;){const {done:c,value:n}=await b.read();
if(c)break;for(a=0;a<n.length;a++){const p=n[a];f.push({id:p[0],typeName:p[1]})}}}catch(c){if("AbortError"===c.name)M.getLogger(this).info("Request aborted as expected");else throw c;}return f}async getRelationshipsFromNodes(b,a,f){const c=[];b=(await J.executeQueryStreaming(this.knowledgeGraph,new D({openCypherQuery:"MATCH (n)-[r]-(m) WHERE id(n) IN $targetEntityIds AND id(m) in $possibleConnectionEntityIds AND NOT id(r) IN $relationshipExclusionIds return id(r), type(r)",bindParameters:{targetEntityIds:b,
possibleConnectionEntityIds:a,relationshipExclusionIds:f}}))).resultRowsStream.getReader();try{for(;;){const {done:n,value:p}=await b.read();if(n)break;for(a=0;a<p.length;a++){const h=p[a];c.push({id:h[0],typeName:h[1]})}}}catch(n){if("AbortError"===n.name)M.getLogger(this).info("Request aborted as expected");else throw n;}return c}async refreshCacheContent(b,a,f,c=!0){const n=O.getInstance(),p=[],h=new Map,x=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach(d=>{d.name&&x.set(d.name,d)});
this.knowledgeGraph.dataModel.relationshipTypes?.forEach(d=>{d.name&&x.set(d.name,d)});b||this.inclusionModeDefinition?b?b.forEach(d=>{if(this.memberIdTypeLookup.has(d))for(const e of this.memberIdTypeLookup.get(d))h.has(e)?h.get(e)?.push(d):h.set(e,[d])}):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach((d,e)=>{d.useAllData?h.set(e,null):d.members&&d.members.forEach(k=>{h.has(e)&&null!==h.get(e)?h.get(e)?.push(k.id):h.set(e,[k.id])})}):(this.knowledgeGraph.dataModel.entityTypes?.forEach(d=>
{d.name&&h.set(d.name,null)}),this.knowledgeGraph.dataModel.entityTypes?.forEach(d=>{d.name&&h.set(d.name,null)}));for(const [d,e]of h)b=new Promise(k=>{(async()=>{const g=new Set,r=[];let l="",q=!1;a||x.get(d)?.properties?.forEach(v=>{v.name&&g.add(v.name)});if(f&&this.geographicLookup.has(d)){var w=this.geographicLookup.get(d)?.name;w&&g.add(w)}if(this.entityTypeNames.has(d))l=`MATCH (n:${d}) ${e?"WHERE id(n) IN $ids ":""}return ID(n)`,g.forEach(v=>{l+=`, n.${v}`;r.push(v)});else if(this.relationshipTypeNames.has(d))q=
!0,l=`MATCH ()-[n:${d}]->() ${e?"WHERE id(n) IN $ids ":""}return ID(n), id(startNode(n)), id(endNode(n))`,g.forEach(v=>{l+=`, n.${v}`;r.push(v)});else throw new L("knowledge-graph:layer-data-manager",`The graph type of ${d} could not be determined. Was this type set in the KG data model and inclusion definition?`);w=e?new D({openCypherQuery:l,bindParameters:{ids:e}}):new D({openCypherQuery:l});for(w=(await J.executeQueryStreaming(this.knowledgeGraph,w)).resultRowsStream.getReader();;){const {done:v,
value:G}=await w.read();if(v)break;var H=[];for(let u=0;u<G.length;u++){const K=G[u];let B=0,N=0;const z={properties:{}};z.id=K[B];B++;N++;q&&(z.originId=K[B],B++,N++,z.destinationId=K[B],B++,N++,E.getOrCreateMapValue(this.nodeConnectionsLookup,z.originId,()=>new Set).add(z.id),E.getOrCreateMapValue(this.nodeConnectionsLookup,z.destinationId,()=>new Set).add(z.id),E.getOrCreateMapValue(this.relationshipConnectionsLookup,z.id,()=>[z.originId,z.destinationId]));for(;B<K.length;B++)z.properties[r[B-
N]]=K[B];H.push(z)}H=n.writeToStore(H,t.systemOidFieldName,this.geographicLookup.get(d)?.name);this.sublayerCaches.has(d)||this.sublayerCaches.set(d,new Map);c&&!this.inclusionModeDefinition?.namedTypeDefinitions.has(d)&&this.inclusionModeDefinition?.namedTypeDefinitions.set(d,{useAllData:!1,members:new Map});c&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(d).members&&(this.inclusionModeDefinition.namedTypeDefinitions.get(d).members=new Map);const m=this.sublayerCaches.get(d);H.forEach(u=>
{m?.set(u.attributes[t.systemOidFieldName],u);c&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(d).members.has(u.attributes[t.systemOidFieldName])&&(this.inclusionModeDefinition?.namedTypeDefinitions.get(d).members.set(u.attributes[t.systemOidFieldName],{id:u.attributes[t.systemOidFieldName]}),E.getOrCreateMapValue(this.memberIdTypeLookup,u.attributes[t.systemOidFieldName],()=>new Set).add(d))})}})().then(()=>{k(null)})}),p.push(b),this._processingCacheUpdatesLookup.get(d)?.push(b);await Promise.all(p)}removeFromLayer(b){const a=
new Set,f=new Set(b.map(c=>c.id));for(const c of b)a.add(c.typeName),1===this.memberIdTypeLookup.get(c.id)?.size?this.memberIdTypeLookup.delete(c.id):this.memberIdTypeLookup.get(c.id)?.delete(c.typeName),this.inclusionModeDefinition?.namedTypeDefinitions.forEach((n,p)=>{p===c.typeName&&n.members?.has(c.id)&&n.members.delete(c.id)});a.forEach(c=>{this.sublayerCaches.get(c)?.forEach((n,p)=>{f.has(p)&&this.sublayerCaches.get(c)?.delete(p)})})}async retrieveDataFromService(b,a,f){const c=O.getInstance(),
n=new Set,p=[];let h="",x=[];const d="relationship"===a.graphType;var e=this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData,k=a.parentCompositeLayer.sublayerIdsCache.get(a.objectType.name);e=!e&&k?Array.from(k).sort():null;if(this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData)this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData&&null!=b.objectIds&&(e=b.objectIds);else if(null!=b.objectIds&&e&&
0<e.length){const l=b.objectIds;b.objectIds=e.filter(q=>l.includes(q))}else if(null!=b.objectIds)e=b.objectIds;else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(a.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(a.objectType.name)?.members||1>this.inclusionModeDefinition.namedTypeDefinitions.get(a.objectType.name)?.members?.size))return b.objectIds=[],[];b.objectIds=e}null!=b.outFields&&(k=b.outFields,k.includes("*")?a.fields.forEach(l=>{n.add(l.name)}):k.forEach(l=>
{l!==t.systemOidFieldName&&l!==a.geometryFieldName&&n.add(l)}));if(null!=b.geometry){var g=b.geometry;k=a.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition;e=k?.spatialReference;var r=k?.serviceCapabilities?.geometryCapabilities;k=r?.geometryMaxBoundingRectangleSizeX;r=r?.geometryMaxBoundingRectangleSizeY;"point"===g.type?(g.spatialReference?.isWGS84||(await I.initializeProjection(g.spatialReference,F.wgs84),g=I.project(g,F.wgs84)),g=new Q({spatialReference:F.wgs84,xmin:g.x-1E-4,ymin:g.y-
1E-4,xmax:g.x+1E-4,ymax:g.y+1E-4})):g?.extent?.spatialReference&&!g.spatialReference?.isWGS84?(await I.initializeProjection(g.extent.spatialReference,F.wgs84),g=I.project(g.extent,F.wgs84)):g=g.extent;if(k&&r&&e){4326!==e.wkid&&(e=new Q({spatialReference:e,xmax:k,ymax:r}),e=I.project(e,F.wgs84),k=e.xmax,r=e.ymax);if(g.xmax-g.xmin>k)throw new L("knowledge-graph:layer-data-manager",`Extent x bounds should be within ${k}\u00b0 latitude, limit exceeded`);if(g.ymax-g.ymin>r)throw new L("knowledge-graph:layer-data-manager",
`Extent y bounds should be within ${r}\u00b0 longitude, limit exceeded`);}if(null!=b.where&&"1\x3d1"!==b.where){const l=await P.parseWhereClause(b.where.toUpperCase(),a.fieldsIndex);a.fields.forEach(q=>{l.fieldNames.includes(q.name)&&n.add(q.name)})}h=d?`Match ()-[n:${a.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${a.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:`Match (n:${a.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${a.geometryFieldName}) return ID(n)`;
a.geometryFieldName&&n.add(a.geometryFieldName);n.forEach(l=>{h+=`, n.${l}`;p.push(l)});b=new D({openCypherQuery:h,bindParameters:{param_filter_geom:new T({rings:U.extentToInBoundsRings(g)})}})}else{k="";if(null!=b.where&&"1\x3d1"!==b.where){const q=await P.parseWhereClause(b.where,a.fieldsIndex);a.fields.forEach(m=>{q.fieldNames.includes(m.name)&&n.add(m.name)});const w=new Set(["column-reference","string","number","binary-expression"]),H=new Set("\x3d \x3c \x3c\x3d \x3c\x3e \x3e \x3e\x3d AND OR LIKE".split(" "));
let v=!1;const G=m=>{if("column-reference"===m.type)return`n.${m.column}`;if("string"===m.type)return`'${m.value}'`;if("number"===m.type)return`${m.value}`;if("binary-expression"===m.type&&w.has(m.left.type)&&w.has(m.right.type)&&H.has(m.operator))return`${G(m.left)} ${m.operator} ${G(m.right)}`;if("binary-expression"===m.type&&"LIKE"===m.operator){let u="";if("function"===m.left.type&&"column-reference"===m.left.args.value[0].type)u+=`lower(n.${m.left.args.value[0].column})`;else if("column-reference"===
m.left.type)u+=`lower(n.${m.left.column})`;else return v=!0,"";u+=" CONTAINS (";if("string"===m.right.type)m=m.right.value,"%"===m.charAt(0)&&(m=m.slice(1)),"%"===m.charAt(m.length-1)&&(m=m.slice(0,-1)),u+=`'${m.toLowerCase()}')`;else return v=!0,"";return u}v=!0;return""};k=G(q.parseTree);v&&(k="")}let l="";l=d?`Match ()-[n:${a.objectType.name}]->()`:`Match (n:${a.objectType.name})`;g=!1;e&&(g=!0,l+=" WHERE ID(n) IN $ids");k&&(l=g?l+" AND":l+" WHERE",l+=` ${k}`);l+=" return ID(n)";d&&(l+=", id(startNode(n)), id(endNode(n))");
b.returnGeometry&&a.geometryFieldName&&n.add(a.geometryFieldName);n.forEach(q=>{l+=`, n.${q}`;p.push(q)});b=e?new D({openCypherQuery:l,bindParameters:{ids:e}}):new D({openCypherQuery:l})}for(f=(await J.executeQueryStreaming(a.parentCompositeLayer.dataManager.knowledgeGraph,b,f)).resultRowsStream.getReader();;){const {done:l,value:q}=await f.read();if(l)break;b=[];for(e=0;e<q.length;e++){k=q[e];r=g=0;const w={properties:{}};w.id=k[g];g++;r++;d&&(w.originId=k[g],g++,r++,w.destinationId=k[g],g++,r++);
for(;g<k.length;g++)w.properties[p[g-r]]=k[g];b.push(w)}x=x.concat(c.writeToStore(b,t.systemOidFieldName,a.parentCompositeLayer.dataManager.geographicLookup.get(a.objectType.name)?.name))}return x}_isEndEntitySpatial(b,a,f){for(const c of b??[])if(this.entityTypeNames.has(c)){const n=(b=this.geographicLookup.get(c))&&this.sublayerCaches.get(c)?.get(a.attributes[f]);if(b&&n?.attributes[b.name])return!0}return!1}};A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"knowledgeGraph",
void 0);A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"inclusionModeDefinition",void 0);A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"entityTypeNames",void 0);A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"relationshipTypeNames",void 0);A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"geographicLookup",void 0);A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"sublayerCaches",void 0);
A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"nodeConnectionsLookup",void 0);A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"relationshipConnectionsLookup",void 0);A.__decorate([C.property()],y.KnowledgeGraphLayerDataManager.prototype,"memberIdTypeLookup",void 0);y.KnowledgeGraphLayerDataManager=A.__decorate([S.subclass("esri.layers.knowledgeGraph.KnowledgeGraphLayerDataManager")],y.KnowledgeGraphLayerDataManager);Object.defineProperty(y,Symbol.toStringTag,
{value:"Module"})});