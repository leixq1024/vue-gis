// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/graphics/sources/WFSSource":function(){define("exports ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/has ../../../core/Loadable ../../../core/Logger ../../../core/promiseUtils ../../../core/workers/workers ../../../core/accessorSupport/decorators/property ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/typeUtils ./support/clientSideDefaults ../../ogc/wfsUtils ../../../rest/support/FeatureSet ../../../time/timeZoneUtils ../../../geometry/Extent".split(" "),
function(e,A,E,u,C,x,q,I,L,J,K,W,F,k,X,Z,l,U){e.WFSSource=class extends x{constructor(){super(...arguments);this._workerHandler=this._connection=null;this.capabilities=k.createCapabilities(!1,!1);this.type="wfs";this.refresh=I.debounce(async()=>{await this.load();const {extent:m}=await this._workerHandler.refresh({customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount});m&&(this.sourceJSON.extent=
m);return{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(m){this.addResolvingPromise(this._startWorker({signal:null!=m?m.signal:null}));return Promise.resolve(this)}destroy(){this._connection?.close();this._workerHandler=this._connection=null}async openPorts(){await this.load();return this._connection.openPorts()}async queryFeatures(m,w={}){m=await this.queryFeaturesJSON(m,w);return Z.fromJSON(m)}async queryFeaturesJSON(m,w={}){await this.load(w);return this._workerHandler.queryFeatures(m?
m.toJSON():void 0,w)}async queryFeatureCount(m,w={}){await this.load(w);return this._workerHandler.queryFeatureCount(m?m.toJSON():void 0,w)}async queryObjectIds(m,w={}){await this.load(w);return this._workerHandler.queryObjectIds(m?m.toJSON():void 0,w)}async queryExtent(m,w={}){await this.load(w);m=await this._workerHandler.queryExtent(m?m.toJSON():void 0,w);return{count:m.count,extent:U.fromJSON(m.extent)}}async querySnapping(m,w={}){await this.load(w);return this._workerHandler.querySnapping(m,
w)}async _createLoadOptions(m){const {url:w,customParameters:M,name:b,namespaceUri:f,fields:n,geometryType:v,maxRecordCount:D,maxPageCount:G,maxTotalRecordCount:B,swapXY:S}=this.layer;var N="defaults"===this.layer.originOf("spatialReference")?void 0:this.layer.spatialReference;if(!w)throw new u("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await X.getCapabilities(w,{customParameters:M,...m}));m=["fields","geometryType","name","namespaceUri",
"swapXY"].some(H=>null==this.layer[H])?await X.getWFSLayerInfo(this.wfsCapabilities,b,f,{spatialReference:N,customParameters:M,signal:m?.signal}):{...X.prepareWFSLayerFields(n??[]),geometryType:v,name:b,namespaceUri:f,spatialReference:N,swapXY:S};N=X.findFeatureType(this.wfsCapabilities.readFeatureTypes(),m.name,m.namespaceUri);const V=F.featureGeometryTypeKebabDictionary.toJSON(m.geometryType);var {operations:R}=this.wfsCapabilities;const O=R.GetFeature.url;R=R.GetFeature.outputFormat;return{customParameters:M,
featureType:N,fields:m.fields?.map(H=>H.toJSON())??[],geometryField:m.geometryField,geometryType:V,getFeatureUrl:O,getFeatureOutputFormat:R,maxRecordCount:D,maxPageCount:G,maxTotalRecordCount:B,objectIdField:m.objectIdField,spatialReference:m.spatialReference?.toJSON(),swapXY:!!m.swapXY}}async _startWorker(m){const [w,M]=await I.eachAlways([this._createLoadOptions(m),L.open("WFSSourceWorker",{...m,strategy:C("feature-layers-workers")?"dedicated":"local",registryTarget:this})]);var b=w.error||M.error||
null;const f=M.value||null;if(b)throw f&&f.close(),b;b=w.value;this._connection=M.value;this._workerHandler=this._connection.createInvokeProxy();m=await this._workerHandler.load(b,m);for(const n of m.warnings)q.getLogger(this.layer).warn("#load()",`${n.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:n});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:l.utc},extent:m.extent,fields:b.fields,geometryType:b.geometryType,objectIdField:b.objectIdField,
geometryField:b.geometryField,drawingInfo:k.createDrawingInfo(b.geometryType),name:b.featureType.title,wfsInfo:{name:b.featureType.name,featureUrl:b.getFeatureUrl,maxFeatures:b.maxRecordCount,swapXY:b.swapXY,supportedSpatialReferences:b.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:b.featureType.namespaceUri}}}};A.__decorate([J.property()],e.WFSSource.prototype,"capabilities",void 0);A.__decorate([J.property({constructOnly:!0})],e.WFSSource.prototype,"layer",void 0);A.__decorate([J.property()],
e.WFSSource.prototype,"sourceJSON",void 0);A.__decorate([J.property()],e.WFSSource.prototype,"type",void 0);A.__decorate([J.property()],e.WFSSource.prototype,"wfsCapabilities",void 0);e.WFSSource=A.__decorate([W.subclass("esri.layers.graphics.sources.WFSSource")],e.WFSSource);Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/ogc/wfsUtils":function(){define("exports ../../geometry ../../request ../../core/Error ../../core/iteratorUtils ../../core/urlUtils ../../geometry/projection ../../geometry/support/spatialReferenceUtils ../../geometry/support/typeUtils ../graphics/sources/geojson/geojson ./xmlUtils ../support/arcgisLayerUrl ../support/Field ../support/fieldUtils ../../geometry/Extent ../../geometry/SpatialReference".split(" "),
function(e,A,E,u,C,x,q,I,L,J,K,W,F,k,X,Z){function l(a){a=O(a);P(a);ba(a);a=a.firstElementChild;const c=C.cache(M(a));return{operations:m(a),get featureTypes(){return Array.from(c())},readFeatureTypes:c}}function U(a){for(const c of ca){const d=a.findIndex(g=>g.toLowerCase()===c);if(0<=d)return a[d]}return null}function m(a){let c=!1;const d={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},g=[],h=[];K.visitXML(a,{OperationsMetadata:{Parameter:r=>
{if("outputFormat"===r.getAttribute("name"))return{AllowedValues:{Value:({textContent:t})=>{t&&g.push(t)}}}},Operation:r=>{switch(r.getAttribute("name")){case "GetCapabilities":return{DCP:{HTTP:{Get:t=>{d.GetCapabilities.url=t.getAttribute("xlink:href")}}}};case "DescribeFeatureType":return{DCP:{HTTP:{Get:t=>{d.DescribeFeatureType.url=t.getAttribute("xlink:href")}}}};case "GetFeature":return{DCP:{HTTP:{Get:t=>{d.GetFeature.url=t.getAttribute("xlink:href")}}},Parameter:t=>{if("outputFormat"===t.getAttribute("name"))return{AllowedValues:{Value:({textContent:Q})=>
{Q&&h.push(Q)}}}}}}},Constraint:r=>{switch(r.getAttribute("name")){case "KVPEncoding":return{DefaultValue:t=>{c="true"===t.textContent.toLowerCase()}};case "ImplementsResultPaging":return{DefaultValue:t=>{d.GetFeature.supportsPagination="true"===t.textContent.toLowerCase()}}}}}});d.GetFeature.outputFormat=U(h)??U(g);if(!c)throw new u("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(null==d.GetFeature.outputFormat)throw new u("wfs-layer:geojson-not-supported",
"WFS service doesn't support GeoJSON output format");return d}function w(a){a=parseInt(a.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(a))return a}function M(a){return K.iterateXML(a,{FeatureTypeList:{FeatureType:c=>{const d={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},g=new Set;K.visitXML(c,{Name:h=>{const {name:r,prefix:t}=H(h.textContent);d.typeName=
`${t}:${r}`;d.name=r;d.namespacePrefix=t;d.namespaceUri=h.lookupNamespaceURI(t)},Abstract:h=>{d.description=h.textContent},Title:h=>{d.title=h.textContent},WGS84BoundingBox:h=>{d.extent=X.fromJSON(b(h))},DefaultCRS:h=>{if(h=w(h))d.defaultSpatialReference=h,g.add(h)},OtherCRS:h=>{(h=w(h))&&g.add(h)}});d.title||(d.title=d.name);g.add(4326);d.supportedSpatialReferences.push(...g);return d}}})}function b(a){let c,d,g,h;for(const r of a.children)switch(r.localName){case "LowerCorner":[c,d]=r.textContent.split(" ").map(t=>
Number.parseFloat(t));break;case "UpperCorner":[g,h]=r.textContent.split(" ").map(t=>Number.parseFloat(t))}return{xmin:c,ymin:d,xmax:g,ymax:h,spatialReference:I.wgs84}}function f(a,c,d){return C.find(a,g=>d?g.name===c&&g.namespaceUri===d:g.typeName===c||g.name===c)}async function n(a,c,d,g={}){a=a.readFeatureTypes();d=c?f(a,c,d):a.next().value;({spatialReference:a=new Z({wkid:d?.defaultSpatialReference})}=g);if(null==d){if(c)throw new u("wfs-layer:feature-type-not-found",`The type '${c}' could not be found in the service`);
throw new u("wfs-layer:empty-service","The service is empty");}if((c=d.extent)&&!I.equals(c.spatialReference,a))try{await q.initializeProjection(c.spatialReference,a,void 0,g),c=q.project(c,a)}catch{throw new u("wfs-layer:unsupported-spatial-reference","Projection not supported");}return{extent:c,spatialReference:a,featureType:d}}async function v(a,c,d,g={}){const {typeName:h}=c,[r,t]=await Promise.allSettled([B(a.operations.DescribeFeatureType.url,h,g),G(a,h,d,g)]);a=p=>new u("wfs-layer:getWFSLayerTypeInfo-error",
`An error occurred while getting info about the feature type '${h}'`,{error:p});if("rejected"===r.status)throw a(r.reason);if("rejected"===t.status)throw a(t.reason);const {fields:Q,errors:z}=r.value??{};a=r.value?.geometryType||t.value?.geometryType;c=t.value?.swapXY??!1;if(null==a)throw new u("wfs-layer:unknown-geometry-type",`The geometry type could not be determined for type '${h}`,{typeName:h,geometryType:a,fields:Q,errors:z});return{...D(Q??[]),geometryType:a,swapXY:c}}function D(a){const c=
a.find(g=>"geometry"===g.type);let d=a.find(g=>"oid"===g.type);a=a.filter(g=>"geometry"!==g.type);d||(d=new F({name:"__esri_wfs_id__",type:"oid",alias:"__esri_wfs_id__"}),a.unshift(d));return{geometryField:c?.name??null,objectIdField:d.name,fields:a}}async function G(a,c,d,g={}){let h,r=!1;const [t,Q]=await Promise.all([V(a.operations.GetFeature.url,c,d,a.operations.GetFeature.outputFormat,{...g,count:1}),E(a.operations.GetFeature.url,{responseType:"text",query:R(c,d,void 0,{...g,count:1}),signal:g?.signal})]);
if(a="FeatureCollection"===t.type&&t.features[0]?.geometry){h=L.featureGeometryTypeKebabDictionary.fromJSON(J.getGeometryType(a.type));switch(a.type){case "Point":var z=a.coordinates;break;case "LineString":case "MultiPoint":z=a.coordinates[0];break;case "MultiLineString":case "Polygon":z=a.coordinates[0][0];break;case "MultiPolygon":z=a.coordinates[0][0][0]}if(c=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(Q.data))a=z[0].toFixed(3),z=z[1].toFixed(3),d=parseFloat(c[1]).toFixed(3),c=
parseFloat(c[2]).toFixed(3),a===c&&z===d&&(r=!0)}return{geometryType:h,swapXY:r}}async function B(a,c,d){a=await E(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:"2.0.0",TYPENAME:c,TYPENAMES:c,...d?.customParameters},signal:d?.signal});return S(c,a.data)}function S(a,c){const {name:d}=H(a);c=O(c);ba(c);var g=C.find(K.iterateXML(c.firstElementChild,{element:h=>h}),h=>h.getAttribute("name")===d);if(null!=g){const h=g.getAttribute("type");if(g=h?C.find(K.iterateXML(c.firstElementChild,
{complexType:r=>r}),r=>r.getAttribute("name")===H(h).name):C.find(K.iterateXML(g,{complexType:r=>r}),()=>!0))return N(g)}throw new u("wfs-layer:feature-type-not-found",`Type '${a}' not found in document`,{document:(new XMLSerializer).serializeToString(c)});}function N(a){const c=[],d=[];let g=void 0;var h=K.iterateXML(a,{complexContent:{extension:{sequence:{element:r=>r}}}});for(const r of h){h=r.getAttribute("name");if(!h)continue;let t,Q;r.hasAttribute("type")?t=H(r.getAttribute("type")).name:K.visitXML(r,
{simpleType:{restriction:y=>{t=H(y.getAttribute("base")).name;return{maxLength:T=>{Q=+T.getAttribute("value")}}}}});if(!t)continue;const z="true"===r.getAttribute("nillable");let p=!1;switch(t.toLowerCase()){case "integer":case "nonpositiveinteger":case "negativeinteger":case "long":case "int":case "short":case "byte":case "nonnegativeinteger":case "unsignedlong":case "unsignedint":case "unsignedshort":case "unsignedbyte":case "positiveinteger":d.push(new F({name:h,alias:h,type:"integer",nullable:z,
length:k.getFieldDefaultLength("integer")}));break;case "float":case "double":case "decimal":d.push(new F({name:h,alias:h,type:"double",nullable:z,length:k.getFieldDefaultLength("double")}));break;case "boolean":case "string":case "gyearmonth":case "gyear":case "gmonthday":case "gday":case "gmonth":case "anyuri":case "qname":case "notation":case "normalizedstring":case "token":case "language":case "idrefs":case "entities":case "nmtoken":case "nmtokens":case "name":case "ncname":case "id":case "idref":case "entity":case "duration":case "time":d.push(new F({name:h,
alias:h,type:"string",nullable:z,length:Q??k.getFieldDefaultLength("string")}));break;case "datetime":case "date":d.push(new F({name:h,alias:h,type:"date",nullable:z,length:Q??k.getFieldDefaultLength("date")}));break;case "pointpropertytype":g="point";p=!0;break;case "multipointpropertytype":g="multipoint";p=!0;break;case "curvepropertytype":case "multicurvepropertytype":case "multilinestringpropertytype":g="polyline";p=!0;break;case "surfacepropertytype":case "multisurfacepropertytype":case "multipolygonpropertytype":g=
"polygon";p=!0;break;case "geometrypropertytype":case "multigeometrypropertytype":p=!0;c.push(new u("wfs-layer:unknown-geometry-type",`geometry type '${t}' is not supported`,{type:(new XMLSerializer).serializeToString(a)}));break;default:c.push(new u("wfs-layer:unknown-field-type",`Unknown field type '${t}'`,{type:(new XMLSerializer).serializeToString(a)}))}p&&d.push(new F({name:h,alias:h,type:"geometry",nullable:z}))}for(const r of d)if("integer"===r.type&&!r.nullable&&da.has(r.name.toLowerCase())){r.type=
"oid";break}return{geometryType:g,fields:d,errors:c}}async function V(a,c,d,g,h){({data:a}=await E(a,{responseType:"text",query:R(c,d,g,h),signal:h?.signal}));a=a.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(a)}catch(r){throw new u("wfs-layer:malformed-json","Error while parsing the\u00a0response",{response:a,error:r});}}function R(a,c,d,g){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:a,OUTPUTFORMAT:d,SRSNAME:"EPSG:"+("number"===typeof c?c:c.wkid),
STARTINDEX:g?.startIndex,COUNT:g?.count,...g?.customParameters}}function O(a){return(new DOMParser).parseFromString(a.trim(),"text/xml")}function H(a){const [c,d]=a.split(":");return{prefix:d?c:"",name:d??c}}function P(a){if((a=a.firstElementChild?.getAttribute("version"))&&"2.0.0"!==a)throw new u("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${a}. Supported version: ${"2.0.0"}`);}function ba(a){let c="",d="";K.visitXML(a.firstElementChild,{Exception:g=>{c=g.getAttribute("exceptionCode");
return{ExceptionText:h=>{d=h.textContent}}}});if(c)throw new u(`wfs-layer:${c}`,d);}function Y(a,c,d){const g={wkid:c.defaultSpatialReference};d=null!=d?.wkid?{wkid:d.wkid}:g;a=W.isArcGISUrl(a)||d.wkid&&c.supportedSpatialReferences.includes(d.wkid)?{wkid:d.wkid}:{wkid:c.defaultSpatialReference};return{spatialReference:d,getFeatureSpatialReference:a}}const ca=["json","application/json","geojson","application/json; subtype\x3dgeojson","application/geo+json"],da=new Set(["objectid","fid"]);e.describeFeatureType=
B;e.findFeatureType=f;e.getCapabilities=async function(a,c){c=await E(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:"2.0.0",...c?.customParameters},signal:c?.signal});c=l(c.data);x.isHTTPSProtocol(a)&&(x.hasSameOrigin(a,c.operations.DescribeFeatureType.url,!0)&&(c.operations.DescribeFeatureType.url=x.toHTTPS(c.operations.DescribeFeatureType.url)),x.hasSameOrigin(a,c.operations.GetFeature.url,!0)&&(c.operations.GetFeature.url=x.toHTTPS(c.operations.GetFeature.url)));
return c};e.getFeature=V;e.getFeatureCount=async function(a,c,d){a=await E(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:c,RESULTTYPE:"hits",...d?.customParameters},signal:d?.signal});a=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(a.data);if(a?.groups)return+a.groups.numberMatched};e.getFeatureTypeInfo=n;e.getGetFeatureSpatialReference=Y;e.getWFSLayerInfo=async function(a,c,d,g={}){const {featureType:h,extent:r}=await n(a,c,d,g);({spatialReference:c}=
Y(a.operations.GetFeature.url,h,g.spatialReference));const {fields:t,geometryType:Q,swapXY:z,objectIdField:p,geometryField:y}=await v(a,h,c,g);return{url:a.operations.GetCapabilities.url,name:h.name,namespaceUri:h.namespaceUri,fields:t,geometryField:y,geometryType:Q,objectIdField:p,spatialReference:g.spatialReference??new Z({wkid:h.defaultSpatialReference}),extent:r,swapXY:z,wfsCapabilities:a,customParameters:g.customParameters}};e.parseDescribeFeatureTypeResponse=S;e.parseGetCapabilitiesResponse=
l;e.prepareWFSLayerFields=D;e.wfsOidFieldName="__esri_wfs_id__";Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/graphics/sources/geojson/geojson":function(){define("exports ../../../../core/date ../../../../core/Error ../../../../geometry/support/spatialReferenceUtils ../../OptimizedFeature ../../OptimizedGeometry ../../../support/fieldUtils".split(" "),function(e,A,E,u,C,x,q){function*I(b){switch(b.type){case "Feature":yield b;break;case "FeatureCollection":for(const f of b.features)f&&
(yield f)}}function*L(b){if(b)switch(b.type){case "Point":yield b.coordinates;break;case "LineString":case "MultiPoint":yield*b.coordinates;break;case "MultiLineString":case "Polygon":for(const f of b.coordinates)yield*f;break;case "MultiPolygon":for(const f of b.coordinates)for(const n of f)yield*n}}function*J(b,f={}){const {geometryType:n,objectIdField:v}=f;for(const D of b){const {geometry:G,properties:B,id:S}=D;if(G&&M[G.type]!==n)continue;b=B||{};let N=void 0;v&&(N=b[v],null==S||N||(b[v]=N=S));
yield new C.OptimizedFeature(G?k(new x,G,f):null,b,null,N??void 0)}}function K(b){for(const f of b)if(2<f.length)return!0;return!1}function W(b){let f=0;for(let n=0;n<b.length;n++){const v=b[n],D=b[(n+1)%b.length];f+=v[0]*D[1]-D[0]*v[1]}return 0>=f}function F(b){const f=b[0],n=b[b.length-1];f[0]===n[0]&&f[1]===n[1]&&f[2]===n[2]||b.push(f);return b}function k(b,f,n){switch(f.type){case "LineString":return l(b,f.coordinates,n),b;case "MultiLineString":for(const D of f.coordinates)l(b,D,n);return b;
case "MultiPoint":return l(b,f.coordinates,n),b;case "MultiPolygon":for(var v of f.coordinates)for(X(b,v[0],n),f=1;f<v.length;f++)Z(b,v[f],n);return b;case "Point":return m(b,f.coordinates,n),b;case "Polygon":v=f.coordinates;X(b,v[0],n);for(f=1;f<v.length;f++)Z(b,v[f],n);return b}}function X(b,f,n){f=F(f);W(f)?l(b,f,n):U(b,f,n)}function Z(b,f,n){f=F(f);W(f)?U(b,f,n):l(b,f,n)}function l(b,f,n){for(const v of f)m(b,v,n);b.lengths.push(f.length)}function U(b,f,n){for(let v=f.length-1;0<=v;v--)m(b,f[v],
n);b.lengths.push(f.length)}function m(b,f,n){const [v,D,G]=f;b.coords.push(v,D);n.hasZ&&b.coords.push(G||0)}function w(b){switch(typeof b){case "string":return A.isISO8601Date(b)?"esriFieldTypeDate":"esriFieldTypeString";case "number":return"esriFieldTypeDouble";default:return"unknown"}}const M={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};e.createOptimizedFeatures=
function(b,f){return Array.from(J(I(b),f))};e.getGeometryType=function(b){return M[b]};e.inferLayerProperties=function(b,f={}){const n=[];var v=new Set;const D=new Set;var G=!1;let B=null,S=!1,N=void 0;({geometryType:f=null}=f);for(const V of I(b)){const {geometry:R,properties:O,id:H}=V;if(R&&(f||=M[R.type],M[R.type]!==f))continue;G||(G=L(R),G=K(G));!S&&(S=null!=H)&&(N=typeof H,O&&(B=Object.keys(O).filter(P=>O[P]===H)));O&&B&&S&&null!=H&&(1<B.length?B=B.filter(P=>O[P]===H):1===B.length&&(B=O[B[0]]===
H?B:[]));if(O)for(const P in O){if(v.has(P))continue;b=w(O[P]);if("unknown"===b){D.add(P);continue}D.delete(P);v.add(P);const ba=q.normalizeFieldName(P);ba&&n.push({name:ba,alias:P,type:b})}}if(v=q.normalizeFieldName(1===B?.length&&B[0]||null)??void 0)for(const V of n)if(V.name===v&&q.isNumericField(V)){V.type="esriFieldTypeOID";break}return{fields:n,geometryType:f,hasZ:G,objectIdFieldName:v,objectIdFieldType:N,unknownFields:Array.from(D)}};e.validateGeoJSON=function(b,f=4326){if(!b)throw new E("geojson-layer:empty",
"GeoJSON data is empty");if("Feature"!==b.type&&"FeatureCollection"!==b.type)throw new E("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:b});({crs:b}=b);if(b){var n="string"===typeof b?b:"name"===b.type?b.properties.name:"EPSG"===b.type?b.properties.code:null;f=u.isWGS84({wkid:f})?RegExp(".*(CRS84H?|4326)$","i"):new RegExp(`.*(${f})$`,"i");if(!n||!f.test(n))throw new E("geojson:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:b});}};Object.defineProperty(e,
Symbol.toStringTag,{value:"Module"})})},"esri/core/date":function(){define(["exports"],function(e){function A(q){const I=new Date(q);if(Number.isNaN(I.getTime()))q=!1;else{var L=!0;if(x&&/\d+\W*$/.test(q)&&(q=q.match(/[a-zA-Z]{2,}/))){L=!1;let J=0;for(;!L&&J<=q.length;)L=!C.test(q[J]),J++;L=!L}q=L}return q?Number.isNaN(I.getTime())?null:I.getTime()-6E4*I.getTimezoneOffset():null}function E(q){q=u.exec(q);if(!q?.groups)return null;q=q.groups;const I=+q.year,L=+q.month-1,J=+q.day,K=+(q.hours??0),W=
+(q.minutes??0),F=+(q.seconds??0);if(23<K||59<W||59<F)return null;var k=q.ms??"0";k=k?+k.padEnd(3,"0").slice(0,3):0;q=q.isUTC||!q.offsetSign?Date.UTC(I,L,J,K,W,F,k):6E4*("+"===q.offsetSign?-1:1)*(60*+q.offsetHours+ +q.offsetMinutes)+Date.UTC(I,L,J,K,W,F,k);return Number.isNaN(q)?null:q}const u=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/,
C=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,x=!Number.isNaN((new Date("technology 10")).getTime());e.isDateString=function(q){return null!=E(q)||null!=A(q)};e.isISO8601Date=function(q){return u.test(q)};e.parseDate=function(q){return E(q)??A(q)};Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/ogc/xmlUtils":function(){define(["exports"],function(e){function A(u,
C){if(u&&C)for(const x of u.children)x.localName in C&&(u=C[x.localName],"function"===typeof u?(u=u(x))&&A(x,u):A(x,u))}function*E(u,C){for(const x of u.children)x.localName in C&&(u=C[x.localName],"function"===typeof u?yield u(x):yield*E(x,u))}e.iterateXML=E;e.visitXML=A;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"*noref":1}});
define("../chunks/tslib.es6 ../geometry ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../core/MultiOriginJSONSupport ../core/object ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/RandomLCG ../core/has ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../geometry/support/typeUtils ./Layer ./graphics/sources/WFSSource ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/FeatureEffectLayer ./mixins/FeatureReductionLayer ./mixins/OperationalLayer ./mixins/OrderedLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./ogc/wfsUtils ./support/commonProperties ./support/Field ./support/fieldProperties ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ../rest/support/Query ../support/popupUtils ../time/timeZoneUtils ../geometry/SpatialReference ../geometry/Extent".split(" "),function(e,
A,E,u,C,x,q,I,L,J,K,W,F,k,X,Z,l,U,m,w,M,b,f,n,v,D,G,B,S,N,V,R,O,H,P,ba,Y,ca,da,a,c,d,g,h,r,t,Q){var z;A=da.defineFieldProperties();k=z=class extends V.OrderedLayer(G.CustomParametersMixin(S.FeatureReductionLayer(B.FeatureEffectLayer(D.BlendLayer(P.TemporalLayer(O.RefreshableLayer(H.ScaleRangeLayer(N.OperationalLayer(R.PortalLayer(k.MultiOriginJSONMixin(n))))))))))){static fromWFSLayerInfo(p){const {customParameters:y,fields:T,geometryField:aa,geometryType:ea,name:fa,namespaceUri:ha,objectIdField:ia,
spatialReference:ja,swapXY:ka,url:la,wfsCapabilities:ma}=p;return new z({customParameters:y,fields:T,geometryField:aa,geometryType:ea,name:fa,namespaceUri:ha,objectIdField:ia,spatialReference:ja,swapXY:ka,url:la,wfsCapabilities:ma})}constructor(p){super(p);this.elevationInfo=this.displayField=this.definitionExpression=this.dateFieldsTimeZone=this.customParameters=this.copyright=null;this.featureUrl=void 0;this.geometryType=this.fullExtent=this.fieldsIndex=this.fields=null;this.labelsVisible=!0;this.labelingInfo=
null;this.legendEnabled=!0;this.objectIdField=null;this.operationalLayerType="WFS";this.maxRecordCount=3E3;this.maxPageCount=10;this.maxTotalRecordCount=2E5;this.mode=0;this.outFields=this.namespaceUri=this.name=null;this.popupEnabled=!0;this.popupTemplate=null;this.screenSizePerspectiveEnabled=!0;this.source=new v.WFSSource({layer:this});this.spatialReference=t.WGS84;this.spatialReferences=[4326];this.swapXY=void 0;this.title="WFS";this.type="wfs";this.url=null;this.version=void 0}destroy(){this.source?.destroy()}load(p){this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},
p).then(()=>this.source.load(p)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl});this.revert("objectIdField fields timeInfo spatialReference name namespaceUri".split(" "),"service");a.fixRendererFields(this.renderer,this.fieldsIndex);a.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)}));return Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){this.commitProperty("definitionExpression");this.commitProperty("timeExtent");
this.commitProperty("timeOffset");this.commitProperty("geometryType");this.commitProperty("capabilities");return(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(p,y,T){p=p.filter(aa=>aa.name!==ba.wfsOidFieldName);this.geometryField&&p.unshift(new ca({name:this.geometryField,alias:this.geometryField,type:"geometry"}));X.setDeepValue(T,p.map(aa=>aa.toJSON()),y)}get parsedUrl(){return Z.urlToObject(this.url)}set renderer(p){a.fixRendererFields(p,
this.fieldsIndex);this._set("renderer",p)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(p){this.source&&(this.source.wfsCapabilities=p)}createPopupTemplate(p){return h.createPopupTemplate(this,p)}createQuery(){const p=new g({returnGeometry:!0,outFields:["*"],where:this.definitionExpression||"1\x3d1"}),{timeOffset:y,timeExtent:T}=this;p.timeExtent=null!=y&&null!=T?T.offset(-y.value,y.unit):T||null;return p}getFieldDomain(p,y){return this.getField(p)?.domain}getField(p){return this.fieldsIndex?.get(p)}queryFeatures(p,
y){return this.load().then(()=>this.source.queryFeatures(g.from(p)||this.createQuery(),y)).then(T=>{if(T?.features)for(const aa of T.features)aa.layer=aa.sourceLayer=this;return T})}queryObjectIds(p,y){return this.load().then(()=>this.source.queryObjectIds(g.from(p)||this.createQuery(),y))}queryFeatureCount(p,y){return this.load().then(()=>this.source.queryFeatureCount(g.from(p)||this.createQuery(),y))}queryExtent(p,y){return this.load().then(()=>this.source.queryExtent(g.from(p)||this.createQuery(),
y))}async hasDataChanged(){try{const {dataChanged:p,updates:y}=await this.source.refresh();null!=y&&this.read(y,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0});return p}catch{}return!1}};e.__decorate([l.property({readOnly:!0})],k.prototype,"capabilities",null);e.__decorate([l.property({type:String})],k.prototype,"copyright",void 0);e.__decorate([l.property({readOnly:!0})],k.prototype,"createQueryVersion",null);e.__decorate([l.property({json:{name:"wfsInfo.customParameters",write:{overridePolicy(p){return{enabled:!!(p&&
0<Object.keys(p).length),ignoreOrigin:!0}}}}})],k.prototype,"customParameters",void 0);e.__decorate([l.property(r.timeZoneProperty("dateFieldsTimeReference"))],k.prototype,"dateFieldsTimeZone",void 0);e.__decorate([l.property({readOnly:!0})],k.prototype,"defaultPopupTemplate",null);e.__decorate([l.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],k.prototype,"definitionExpression",void 0);e.__decorate([l.property({type:String})],k.prototype,
"displayField",void 0);e.__decorate([l.property(Y.elevationInfo)],k.prototype,"elevationInfo",void 0);e.__decorate([l.property({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],k.prototype,"featureUrl",void 0);e.__decorate([l.property({type:[ca],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],k.prototype,"fields",void 0);e.__decorate([b.writer("fields")],k.prototype,"writeFields",null);
e.__decorate([l.property(A.fieldsIndex)],k.prototype,"fieldsIndex",void 0);e.__decorate([l.property({type:Q,json:{name:"extent"}})],k.prototype,"fullExtent",void 0);e.__decorate([l.property()],k.prototype,"geometryField",void 0);e.__decorate([l.property({type:String,json:{read:{source:"layerDefinition.geometryType",reader:f.featureGeometryTypeKebabDictionary.read},write:{target:"layerDefinition.geometryType",writer:f.featureGeometryTypeKebabDictionary.write,ignoreOrigin:!0},origins:{service:{read:f.featureGeometryTypeKebabDictionary.read}}}})],
k.prototype,"geometryType",void 0);e.__decorate([l.property({type:String})],k.prototype,"id",void 0);e.__decorate([l.property(Y.labelsVisible)],k.prototype,"labelsVisible",void 0);e.__decorate([l.property({type:[c],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:d.reader},write:!0}})],k.prototype,"labelingInfo",void 0);e.__decorate([l.property(Y.legendEnabled)],k.prototype,"legendEnabled",void 0);e.__decorate([l.property({type:["show","hide"]})],k.prototype,"listMode",void 0);e.__decorate([l.property({type:String})],
k.prototype,"objectIdField",void 0);e.__decorate([l.property({type:["WFS"]})],k.prototype,"operationalLayerType",void 0);e.__decorate([l.property({type:U.Integer,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],k.prototype,"maxRecordCount",void 0);e.__decorate([l.property({type:U.Integer})],k.prototype,"maxPageCount",void 0);e.__decorate([l.property({type:U.Integer})],k.prototype,"maxTotalRecordCount",void 0);e.__decorate([l.property({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,
isRequired:!0}}}}})],k.prototype,"mode",void 0);e.__decorate([l.property({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],k.prototype,"name",void 0);e.__decorate([l.property({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],k.prototype,"namespaceUri",void 0);e.__decorate([l.property(Y.opacityDrawingInfo)],k.prototype,"opacity",void 0);e.__decorate([l.property(A.outFields)],k.prototype,"outFields",void 0);e.__decorate([l.property({readOnly:!0})],
k.prototype,"parsedUrl",null);e.__decorate([l.property(Y.popupEnabled)],k.prototype,"popupEnabled",void 0);e.__decorate([l.property({type:E,json:{name:"popupInfo",write:!0}})],k.prototype,"popupTemplate",void 0);e.__decorate([l.property({types:F.rendererTypes,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:F.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],k.prototype,"renderer",
null);e.__decorate([l.property(Y.screenSizePerspectiveEnabled)],k.prototype,"screenSizePerspectiveEnabled",void 0);e.__decorate([l.property({readOnly:!0})],k.prototype,"source",void 0);e.__decorate([l.property({type:t,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],k.prototype,"spatialReference",void 0);e.__decorate([l.property({readOnly:!0,type:[U.Integer],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,
isRequired:!0}}})],k.prototype,"spatialReferences",void 0);e.__decorate([l.property({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],k.prototype,"swapXY",void 0);e.__decorate([l.property({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],k.prototype,"title",void 0);e.__decorate([l.property({json:{read:!1},readOnly:!0})],k.prototype,"type",void 0);e.__decorate([l.property(Y.url)],k.prototype,"url",void 0);e.__decorate([l.property({type:String,
readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],k.prototype,"version",void 0);e.__decorate([l.property()],k.prototype,"wfsCapabilities",null);return k=z=e.__decorate([M.subclass("esri.layers.WFSLayer")],k)});