// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/SimpleGeometryCursor","../../../chunks/Geometry","../../../chunks/QuadraticBezier"],function(h,k,g,b){class n{getOperatorType(){return 10009}supportsCurves(){return!0}accelerateGeometry(a,c,e){return!1}canAccelerateGeometry(a){return!1}executeMany(a,c,e,d=0){return new p(a,c,e,d)}}class p extends k.GeometryCursor{constructor(a,c,e,d){super();this.m_shape=new b.EditShape;this.m_currentGeom=b.nullHandle;this.m_progressCounter=0;this.m_index=this.m_geomTypeIndex=this.m_geomIndex=
-1;this.m_bSnapToSr=this.m_bSimplifyPolygons=this.m_bOutputOnlyModified=this.m_bBuilt=!1;this.m_progressTracker=e;this.m_inputGeometries=a;this.m_sr=c;this.m_options=d;1===d||2===d?(this.m_bOutputOnlyModified=!0,this.m_options=0,this.m_bSimplifyPolygons=!0,(this.m_bSnapToSr=null!=c&&2===d)&&!b.hasPe()&&g.throwInvalidCallException("PE is required for snapping to spatial reference operation")):0===d&&(this.m_bSimplifyPolygons=!0)}progress_(a){}tock(){return!0}getRank(){return 1}moveToNextGeom(){for(;;){this.m_bBuilt?
this.m_currentGeom=this.m_shape.getNextGeometry(this.m_currentGeom):(this.m_currentGeom=this.m_shape.getFirstGeometry(),this.m_bBuilt=!0);if(this.m_currentGeom!==b.nullHandle){let a=!1;this.m_bSimplifyPolygons&&this.m_shape.getGeometryType(this.m_currentGeom)===g.GeometryType.enumPolygon&&(a=b.execute$1(this.m_shape,this.m_currentGeom,-1,!1,b.nullHandle,this.m_progressTracker));if(this.m_bOutputOnlyModified&&!a&&!this.m_shape.getGeometryModified(this.m_currentGeom))continue}break}}next(){if(!this.m_bBuilt){this.m_geomIndex=
this.m_shape.createGeometryUserIndex();var a=new b.Envelope2D;for(var c=this.m_inputGeometries.next();null!=c;c=this.m_inputGeometries.next()){this.progress_();g.throwIfMesh(c);var e=!1;this.m_bSnapToSr&&(c=c.clone(),e=b.snapGeometry(this.m_sr,c));var d=this.m_shape.addGeometry(c);this.m_shape.setGeometryUserIndex(d,this.m_geomIndex,this.m_inputGeometries.getGeometryID());var f=c.getGeometryType();f===g.GeometryType.enumPoint&&(-1===this.m_geomTypeIndex&&(this.m_geomTypeIndex=this.m_shape.createGeometryUserIndex()),
this.m_shape.setGeometryUserIndex(d,this.m_geomTypeIndex,f));f=new b.Envelope2D;c.queryLooseEnvelope(f);a.mergeEnvelope2D(f);e&&this.m_shape.setGeometryModified(d,!0)}d=b.calculateToleranceFromGeometryForOp(this.m_sr,a,!0);f=b.calculateToleranceFromGeometryForOp(this.m_sr,a,!1);a.inflate(10*d.total());this.m_shape.forceSetEnvelope2D(a);c=null;let l=e=0;this.m_shape.hasCurves()&&(c=new b.CurveStitcher,a=b.densificationDeviationFromTolerance(d.total(),a),e=b.stitchingDensificationDeviationFromTolerance(d.total()),
l=b.extraToleranceForCrackingAndClustering(a,e),b.buildSegmentParentage(this.m_shape,a,d.total(),12E3,c,null,this.m_progressTracker));if(b.needsCrackingAndClustering(this.m_shape,f,this.m_progressTracker)){if(b.execute(this.m_shape,d.add(l),this.m_progressTracker,0===this.m_options,this.m_bOutputOnlyModified),null!==c){if(this.m_bSimplifyPolygons){for(a=this.m_shape.getFirstGeometry();a!==b.nullHandle;a=this.m_shape.getNextGeometry(a))this.m_shape.getGeometryType(a)===g.GeometryType.enumPolygon&&
b.execute$1(this.m_shape,a,-1,!1,b.nullHandle,this.m_progressTracker)&&this.m_shape.setGeometryModified(a,!0);this.m_bSimplifyPolygons=!1}c.stitchCurves(this.m_shape,b.nullHandle,e,!0);c.clearStitcher(this.m_shape)}}else this.m_bSimplifyPolygons=!1,null!==c&&(c.stitchCurves(this.m_shape,b.nullHandle,e,!0),c.clearStitcher(this.m_shape))}this.moveToNextGeom();if(this.m_currentGeom!==b.nullHandle){this.m_index=this.m_shape.getGeometryUserIndex(this.m_currentGeom,this.m_geomIndex);if(-1!==this.m_geomTypeIndex&&
this.m_shape.getGeometryUserIndex(this.m_currentGeom,this.m_geomTypeIndex)===g.GeometryType.enumPoint)return a=new b.Point({vd:this.m_shape.getVertexDescription()}),this.m_shape.queryPointGeometryOnly(this.m_currentGeom,a),this.m_bSnapToSr&&b.snapGeometry(this.m_sr,a),a;a=this.m_shape.getGeometry(this.m_currentGeom);this.m_bSnapToSr&&b.snapGeometry(this.m_sr,a);return a}return null}getGeometryID(){return this.m_index}}const m=new n;h.executeMany=function(a,c,e){a=m.executeMany(new k.SimpleGeometryCursor(a),
c,null,e);return Array.from(a)};h.supportsCurves=function(){return m.supportsCurves()};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});