// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../chunks/tslib.es6 ../core/unitUtils ../core/accessorSupport/decorators/property ../core/has ../core/Logger ../core/RandomLCG ../core/accessorSupport/decorators/subclass ./ellipsoidUtils ./Point ./Polygon ./SpatialReference ./support/geodesicUtils ./support/webMercatorUtils ./support/WKIDUnitConversion".split(" "),function(h,l,k,g,y,z,r,t,u,m,v,w,q,x){var n;g=n=class extends m{constructor(a){super(a);this.center=null;this.geodesic=!1;this.numberOfPoints=60;this.radius=1E3;this.radiusUnit=
"meters"}initialize(){var a=this.center;const f=this.numberOfPoints;this.hasZ=a?.hasZ??!1;if(0===this.rings.length&&a){var e=l.convertUnit(this.radius,this.radiusUnit,"meters"),b=a.spatialReference,d="geographic";if(b.isWebMercator)d="webMercator";else if(null!=(b.wkid&&x[b.wkid])||(b.wkt2||b.wkt)&&l.isProjectedWKT(b.wkt2||b.wkt))d="projected";if(this.geodesic){let c;switch(d){case "webMercator":c=q.webMercatorToGeographic(a);break;case "projected":console.error("Creating a geodesic circle requires the center to be specified in web mercator or geographic coordinate system");
break;case "geographic":c=a}a=this._createGeodesicCircle(c,e,f);"webMercator"===d&&(a=q.geographicToWebMercator(a))}else{let c;"webMercator"===d||"projected"===d?c=e/l.getMetersPerUnit(a.spatialReference):"geographic"===d&&(c=l.lengthToDegrees(e,"meters",t.getReferenceEllipsoid(a.spatialReference).radius));a=this._createPlanarCircle(a,c,f)}this.spatialReference=a.spatialReference;this.addRing(a.rings[0])}}clone(){const {center:a,numberOfPoints:f,radius:e,radiusUnit:b,geodesic:d}=this;return new n({center:a?.clone(),
numberOfPoints:f,radius:e,radiusUnit:b,geodesic:d})}_createGeodesicCircle(a,f,e){let b=0;const d=[];for(;360>b;){const c=[0,0];w.directGeodeticSolver(c,[a.x,a.y],b,f,v.WGS84);this.hasZ&&c.push(a.z);d.push(c);b+=360/e}d.push(d[0]);return new m({rings:[d]})}_createPlanarCircle(a,f,e){const b=[],d=2*Math.PI/e;for(let p=0;p<e;++p){var c=d*p;c=[a.x+Math.cos(-c)*f,a.y+Math.sin(-c)*f];this.hasZ&&c.push(a.z);b.push(c)}b.push(b[0]);return new m({spatialReference:a.spatialReference,rings:[b]})}};h.__decorate([k.property({type:u})],
g.prototype,"center",void 0);h.__decorate([k.property()],g.prototype,"geodesic",void 0);h.__decorate([k.property()],g.prototype,"numberOfPoints",void 0);h.__decorate([k.property()],g.prototype,"radius",void 0);h.__decorate([k.property()],g.prototype,"radiusUnit",void 0);return g=n=h.__decorate([r.subclass("esri.geometry.Circle")],g)});