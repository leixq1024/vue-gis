// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/tslib.es6 ../../../core/Clonable ../../../core/Collection ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ./External".split(" "),function(a,c,g,h,k,d,m,n,p,l,f){a.Metadata=class extends g.Clonable{constructor(b){super(b);this.externalSources=new h;this._explicitDisplaySource=null;this.georeferenced=!1;this.addHandles(k.on(()=>
this.externalSources,"after-remove",({item:e})=>{e===this._explicitDisplaySource&&(this._explicitDisplaySource=null)},{sync:!0,onListenerRemove:()=>this._explicitDisplaySource=null}))}get displaySource(){return this._explicitDisplaySource??this._implicitDisplaySource}set displaySource(b){if(null!=b&&!f.isDisplayExternal(b))throw Error("Cannot use this source for display: it is not in a supported format.");(this._explicitDisplaySource=b)&&this.externalSources.every(e=>!f.externalSourcesAreEqual(e,
b))&&this.externalSources.add(b)}clearSources(){this.externalSources.removeAll()}getExternalSourcesOnService(b){return this.externalSources.items.filter(e=>f.externalIsOnService(e,b))}get _implicitDisplaySource(){return this.externalSources.find(f.isDisplayExternal)}};c.__decorate([d.property()],a.Metadata.prototype,"externalSources",void 0);c.__decorate([d.property()],a.Metadata.prototype,"displaySource",null);c.__decorate([d.property()],a.Metadata.prototype,"_implicitDisplaySource",null);c.__decorate([d.property()],
a.Metadata.prototype,"_explicitDisplaySource",void 0);c.__decorate([d.property()],a.Metadata.prototype,"georeferenced",void 0);a.Metadata=c.__decorate([l.subclass("esri.geometry.support.meshUtils.Metadata")],a.Metadata);Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});