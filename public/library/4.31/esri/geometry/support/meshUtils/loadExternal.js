// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/Error ../../../core/promiseUtils ../../../core/urlUtils ../../Point".split(" "),function(y,q,r,g,t,z){function A(a){const b=t.removeFile(a.url);return c=>{var d=t.makeRelative(c,b,b);return((d=d?d.replace(/^ *\.\//,""):null)?a.files.get(d):null)??c}}async function B(a,b){if(Array.isArray(a)){if(!a.length)throw new r("mesh-load-external:missing-assets","There must be at least one file to load");return a[0]instanceof File?C(a):D(a,b)}return h.fromBlob(a,l(a.name,
a.type))}async function E(a,b){const {parts:c,assetMimeType:d,assetName:e}=a;if(1===c.length)return new h(c[0].partUrl);a=await a.toBlob(b);g.throwIfAborted(b);return h.fromBlob(a,l(e,d))}function C(a){a=a.map(b=>({name:b.name,mimeType:b.type,source:h.fromBlob(b,l(b.name,b.type))}));return u(a)}async function D(a,b){a=await g.allSettledValues(a.map(async c=>{const d=await E(c);g.throwIfAborted(b);return{name:c.assetName,mimeType:c.assetMimeType,source:d}}));if(g.isAborted(b))throw a.forEach(c=>c.source.dispose()),
g.createAbortError();return u(a)}function v({mimeType:a,source:b,name:c}){return w.test(a)||m.test(c)?{url:b.url,type:"gltf"}:x.test(a)||F.test(c)?{url:b.url,type:"glb"}:null}function u(a){const b=new Map;var c=null;let d=null;for(const e of a){const {source:f,name:k}=e;c??=v(e);"ESRI3DO_NORM.glb"===k&&(d=v(e));b.set(k,f.url);f.files.forEach((n,p)=>b.set(p,n))}c=d??c;if(null==c)throw new r("mesh-load-external:missing-files","Missing files to load external mesh source");return new h(c.url,()=>a.forEach(({source:e})=>
e.dispose()),b,c.type)}function l(a,b){return w.test(b)||m.test(a)?"gltf":x.test(b)||m.test(a)?"glb":void 0}const w=/^model\/gltf\+json$/,x=/^model\/gltf-binary$/,m=/\.gltf$/i,F=/\.glb$/i;class h{constructor(a,b=()=>{},c=new Map,d){this.url=a;this.dispose=b;this.files=c;this.type=d}static fromBlob(a,b){const c=URL.createObjectURL(a);return new h(c,()=>URL.revokeObjectURL(c),void 0,b)}}q.loadExternal=async function(a,b,c){const {source:d}=b,{loadGLTFMesh:e}=await g.whenOrAbort(new Promise((p,G)=>y(["./loadGLTFMesh"],
p,G)),c),f=await B(d,c);g.throwIfAborted(c);b=e(new z({x:0,y:0,z:0,spatialReference:a.spatialReference}),f.url,{resolveFile:A(f),signal:c?.signal,expectedType:f.type,unitConversionDisabled:b.unitConversionDisabled});b.then(()=>f.dispose(),()=>f.dispose());const {vertexAttributes:k,components:n}=await b;a.vertexAttributes=k;a.components=n};Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});