// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../Color ../../../geometry ../../../symbols ../../../core/Evented ../../../core/Logger ../../../core/mathUtils ../../../core/maybe ../../../core/reactiveUtils ../../../core/unitUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../geometry/projection ../../../geometry/support/scaleUtils ../../../grids/MeasuredGrid ../../../layers/graphics/dehydratedPoint ../../../properties/defaultUnit ../../../views/2d/grid/constants ../../../views/2d/grid/gridUtils ../../../views/2d/interactive/editingTools/draw/DrawGraphicTool2D ../../../views/2d/interactive/editingTools/ControlPointsTransformTool ../../../views/2d/interactive/editingTools/TransformTool ../../../views/2d/interactive/editingTools/MediaTransformToolsWrapper ../../../views/interactive/snapping/snappingUtils ../../../views/overlay/CrosshairOverlayItem ../../../views/overlay/TextOverlayItem ../../CoordinateConversion/support/formatUtils ./gridUtils ../../../geometry/Point ../../../symbols/SimpleLineSymbol ../../../symbols/SimpleMarkerSymbol".split(" "),
function(c,p,d,R,D,E,F,r,q,v,f,S,T,G,w,H,I,x,J,K,t,L,U,V,W,y,M,N,O,u,z,A,P){const B=Symbol("grid-interactivity");d=class extends D.EventedAccessor{constructor(a){super(a);this.view=this.snappingOptions=this.snappingManager=this._crosshairItem=this._crosshairLabel=this._drawGraphicTool=null;this.placementDisabled=!1;this._mostRecentlyShownGrid=null;this._sketchedVertexCount=0}initialize(){this.addHandles([q.when(()=>!this.displayEnabled,()=>{this.interactivePlacementState=null}),q.watch(()=>this.view?.viewpoint,
()=>{this._renderOverlays()}),q.watch(()=>this.snappingOptions?.gridEnabled,a=>{null!=a&&this.trySetDisplayEnabled(a)}),q.watch(()=>this.view?.grid,(a,b)=>{this._mostRecentlyShownGrid=!a&&b?b:null})])}destroy(){this._resetGridPlacementState();this._crosshairItem&&(this.view?.overlay?.removeItem(this._crosshairItem),this._crosshairItem=r.destroyMaybe(this._crosshairItem));this._crosshairLabel&&(this.view?.overlay?.removeItem(this._crosshairLabel),this._crosshairLabel=r.destroyMaybe(this._crosshairLabel))}get displayEnabled(){return!!this.view?.grid}get dynamicScaling(){return this.grid?.dynamicScaling??
!1}set dynamicScaling(a){this.grid&&(this.grid.dynamicScaling=a)}get grid(){return this.view?.grid??this._mostRecentlyShownGrid}set gridColor(a){this._set("gridColor",a);const [b,g,e,h]=a.toArray();u.applyColorToGrid(this.grid,[b,g,e,h/255])}get gridControlsEnabled(){return this.displayEnabled&&!this.interactivePlacementState}set interactivePlacementState(a){this._set("interactivePlacementState",a);this._resetGridPlacementState();a&&this._startGridManipulation(a)}get majorLineInterval(){return this.grid?.majorLineInterval??
10}set majorLineInterval(a){this.grid&&(this.grid.majorLineInterval=1>a?1:15<a?15:a)}get rotateWithMap(){return this.grid?.rotateWithMap??!1}set rotateWithMap(a){this.grid&&(this.grid.rotateWithMap=a)}get rotation(){return this.grid?.rotation??-180}set rotation(a){this.grid&&(this.grid.rotation=a)}get snappingEnabled(){return(this.grid&&this.snappingOptions?.gridEnabled)??!1}set snappingEnabled(a){const {snappingOptions:b}=this;b&&(b.gridEnabled=a)}get spacing(){return this.grid?.spacing??1}set spacing(a){this.grid&&
0<a&&(this.grid.spacing=a)}get unit(){return this.grid?.units}set unit(a){this.grid&&(this.grid.units=a)}get gridOutOfScale(){return!this.dynamicScaling&&null!=this._pixelsPerStride&&this._pixelsPerStride<K.minimumPixelsPerStrideForDisplayWhenScalingOff}get effectiveSpacingAfterDynamicScaling(){return 1>this.majorLineInterval||!this.dynamicScaling||!this.view||null==this._pixelsPerStride||!this.grid?.spacing?null:this.grid.spacing*t.getScaleFactor(this.majorLineInterval,this._pixelsPerStride,this.dynamicScaling)}get numericSpacingInputShouldBeVisible(){return!!this.view?.spatialReference&&
t.shouldUsePlanar(this.view.spatialReference)}get _metersPerSRUnit(){if(!(this.view&&this.displayEnabled&&this.grid&&w.isLoadedOrLoadFor(this.grid.center.spatialReference,this.view.spatialReference)))return null;const a=w.project(this.grid.center,this.view.spatialReference);return t.measureMetersPerUnitAtReferencePoint(a)}get _pixelsPerStride(){if(!this.view?.scale||!this.displayEnabled||!this.grid||null==this._metersPerSRUnit)return null;var a=this.grid;const {scale:b,spatialReference:g}=this.view;
a=v.convertUnit(a.spacing,a.units,"meters");const e=this._metersPerSRUnit*H.getResolutionForScale(b,g);return a/e}get _isPlacing(){if(!this._drawGraphicTool)return!1;const a=this.interactivePlacementState;return"place"===a||"interactive"===a&&0===this._sketchedVertexCount}get _isRotating(){if(!this._drawGraphicTool)return!1;const a=this.interactivePlacementState;return"rotate"===a||"interactive"===a&&1===this._sketchedVertexCount}get _isScaling(){return this._drawGraphicTool?"interactive"===this.interactivePlacementState&&
1===this._sketchedVertexCount:!1}togglePlacementState(a){this.interactivePlacementState=this.interactivePlacementState===a?null:a}trySetDisplayEnabled(a){const {view:b}=this;b?.ready?!b.grid&&a?this._mostRecentlyShownGrid?b.grid=this._mostRecentlyShownGrid:(b.grid=new I.MeasuredGrid({units:"imperial"===this.defaultUnit?"feet":"meters",center:b.center??new z,rotateWithMap:!0}),u.applyColorToGrid(this.grid,[115,115,115])):a||(b.grid=null):E.getLogger(this).warn("Attempting to enable grid display while view is not ready")}startPlacement(a){const {view:b,
snappingManager:g}=this;if(b){this._set("interactivePlacementState",a);this._sketchedVertexCount=0;var e=new L.DrawGraphicTool2D({view:b,graphicProperties:{attributes:{[y.gridPlacementGraphicSymbol]:y.gridPlacementGraphicSymbol}},sketchOptions:{tooltips:{enabled:!0,visibleElements:{direction:!1,rotation:!1,totalLength:!1,elevation:!1,distance:!1,area:!1}}},geometryType:"polyline",mode:"click",snapToScene:!1,snappingManager:g,forceUniformSize:!0,centered:!1,cursor:"interactive"===this.interactivePlacementState||
"place"===this.interactivePlacementState?"none":null,regularVerticesSymbol:void 0,activeVertexSymbol:Q,activeLineSymbol:C,graphicSymbol:C});this._drawGraphicTool=e;b.addAndActivateTool(e);this._renderOverlays();this.addHandles([e.on("cursor-update",h=>this._onCursorUpdate(h)),e.on("complete",()=>this._onDrawComplete()),e.on("vertex-add",h=>this._onVertexAdd(h,a))],B)}}async _startGridManipulation(a){var {view:b}=this;b?(b=new CustomEvent("before-placement",{cancelable:!0}),this.emit("before-placement",
b),b.defaultPrevented||this.startPlacement(a)):this.interactivePlacementState=null}_onCursorUpdate(a){try{this._isPlacing?this._handlePlace(a.vertices[0].coordinates):(this._drawGraphicTool.cursor=null,this._isRotating&&this._handleRotate(a.vertices[0].coordinates),this._isScaling&&this._handleScale(this._drawGraphicTool?.drawOperation.cursorVertex))}finally{this._renderOverlays()}}_onDrawComplete(){this.interactivePlacementState=this._drawGraphicTool.cursor=null}_onVertexAdd(a,b){a=a.vertices[0].coordinates;
this._isPlacing&&this._handlePlace(a);this._isRotating&&0<this._sketchedVertexCount&&this._handleRotate(a);this._isScaling&&0<this._sketchedVertexCount&&this._handleScale(x.makeDehydratedPoint(a[0],a[1],void 0,this.view.spatialReference));this._sketchedVertexCount++;this._drawGraphicTool.cursor=null;if(2===this._sketchedVertexCount||"interactive"!==b)this.interactivePlacementState=null;this._renderOverlays()}_handlePlace(a){const {grid:b,view:g}=this;b&&g&&(b.center=new z({x:a[0],y:a[1],spatialReference:g.spatialReference}))}_handleRotate(a){const {grid:b,
view:g}=this;if(b&&g){this._drawGraphicTool?.sketchOptions.tooltips.set("enabled",!1);var {x:e,y:h}=b.center,[n,l]=a;a=(a=g.toScreen(b.center,{pickClosestTarget:!0}))&&g.toMap(a);var k=g.toScreen(x.makeDehydratedPoint(n,l,void 0,g.spatialReference),{pickClosestTarget:!0}),m=k&&g.toMap(k);k=(a?a.x:e)-(m?m.x:n);a=(a?a.y:h)-(m?m.y:l);if(0!==k||0!==a)a=F.rad2deg(Math.atan2(a,k)),k=g.viewpoint.rotation??0,b.rotation=Math.fround(b.rotateWithMap?a:a-k)%360}}_handleScale(a){const {view:b,grid:g,_drawGraphicTool:e,
interactivePlacementState:h,_metersPerSRUnit:n}=this;if(a&&b&&g&&e&&n){e.sketchOptions.tooltips.enabled=!1;var l="interactive"===h?g.center:e.drawOperation.firstVertex;if(l&&a){var k=b?.toScreen(l);k=k&&b.toMap(k);var m=b?.toScreen(a);m=m&&b.toMap(m);l=k??l;a=m??a;this.spacing=v.convertUnit(Math.sqrt((l.x-a.x)**2+(l.y-a.y)**2)*n,"meters",g.units)}}}_renderOverlays(){this._renderCrosshairOverlay();this._renderTextOverlay()}_renderTextOverlay(){const {grid:a,view:b,_drawGraphicTool:g}=this,e=this._getCrosshairLabel();
if(a&&b?.overlay&&g&&e){var h=b.toScreen(a.center,{pickClosestTarget:!0});h&&(e.position=[h.x+12,h.y+12]);this._isRotating?(e.text=`${u.gridRotationToDegrees(a.rotation)}${O.degreeSymbol}`,e.visible=!0):e.visible=!1}}_renderCrosshairOverlay(){const {grid:a,view:b,_drawGraphicTool:g}=this;if(a&&b?.overlay&&g){var e=this._getCrosshair();if(e){var h=b.toScreen(a.center);h&&(e.x=h.x,e.y=h.y,e.rotation=a.rotateWithMap?b.viewpoint.rotation-a.rotation:-a.rotation,e.visible=!!g)}}}_getCrosshairLabel(){if(this._crosshairLabel)return this._crosshairLabel;
const {grid:a,view:b,_drawGraphicTool:g}=this;if(!a||!b?.overlay||!g)return null;const e=new N({anchor:"top-left",fontSize:10,textColor:new p([21,21,21]),backgroundColor:new p([248,248,248]),padding:8,borderRadius:20});b.overlay.addItem(e);return this._crosshairLabel=e}_getCrosshair(){const {_crosshairItem:a,view:b}=this;if(!b?.overlay)return null;if(a&&b.overlay.items.includes(a))return a;this._crosshairItem=new M({color:b.effectiveTheme.accentColor,thickness:4,length:36,visible:!0});b.overlay?.addItem(this._crosshairItem);
return this._crosshairItem}_resetGridPlacementState(){this.removeHandles(B);this._crosshairItem&&(this._crosshairItem.visible=!1);this._crosshairLabel&&(this._crosshairLabel.visible=!1);this._drawGraphicTool&&(this.view?.activeTool===this._drawGraphicTool&&(this.view.activeTool=null),this.view?.tools.remove(this._drawGraphicTool));this._drawGraphicTool=r.destroyMaybe(this._drawGraphicTool)}};c.__decorate([f.property(J.defaultUnitPropertyMetadata)],d.prototype,"defaultUnit",void 0);c.__decorate([f.property({readOnly:!0})],
d.prototype,"displayEnabled",null);c.__decorate([f.property()],d.prototype,"dynamicScaling",null);c.__decorate([f.property()],d.prototype,"grid",null);c.__decorate([f.property()],d.prototype,"gridColor",null);c.__decorate([f.property({readOnly:!0})],d.prototype,"gridControlsEnabled",null);c.__decorate([f.property()],d.prototype,"interactivePlacementState",null);c.__decorate([f.property()],d.prototype,"majorLineInterval",null);c.__decorate([f.property()],d.prototype,"rotateWithMap",null);c.__decorate([f.property()],
d.prototype,"rotation",null);c.__decorate([f.property()],d.prototype,"snappingEnabled",null);c.__decorate([f.property()],d.prototype,"snappingManager",void 0);c.__decorate([f.property()],d.prototype,"snappingOptions",void 0);c.__decorate([f.property()],d.prototype,"spacing",null);c.__decorate([f.property()],d.prototype,"unit",null);c.__decorate([f.property()],d.prototype,"view",void 0);c.__decorate([f.property({readOnly:!0})],d.prototype,"gridOutOfScale",null);c.__decorate([f.property({readOnly:!0})],
d.prototype,"effectiveSpacingAfterDynamicScaling",null);c.__decorate([f.property({readOnly:!0})],d.prototype,"numericSpacingInputShouldBeVisible",null);c.__decorate([f.property()],d.prototype,"placementDisabled",void 0);c.__decorate([f.property()],d.prototype,"_metersPerSRUnit",null);c.__decorate([f.property()],d.prototype,"_pixelsPerStride",null);c.__decorate([f.property()],d.prototype,"_isPlacing",null);c.__decorate([f.property()],d.prototype,"_isRotating",null);c.__decorate([f.property()],d.prototype,
"_isScaling",null);c.__decorate([f.property()],d.prototype,"_mostRecentlyShownGrid",void 0);c.__decorate([f.property()],d.prototype,"_sketchedVertexCount",void 0);c=d=c.__decorate([G.subclass("esri.widgets.support.GridControls.GridControlsViewModel")],d);const C=new A({width:0}),Q=new P({color:p.fromArray([0,0,0,0]),outline:new A({color:p.fromArray([0,0,0,0])})});return c});