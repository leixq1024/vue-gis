// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/tslib.es6 ../../core/Error ../../core/handleUtils ../../core/has ../../core/maybe ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ../../layers/GraphicsLayer ../../support/elevationInfoUtils ../../views/support/layerViewUtils ./UpdateFeatureWorkflowData ./UpdateRecordWorkflow ./workflowUtils ../Sketch/SketchViewModel".split(" "),function(h,r,x,y,H,z,A,t,I,J,B,C,
D,E,F,w,k,G){var u;const b={...w.handleKeys,highlights:Symbol(),sketchGraphics:Symbol(),sketchViewModel:Symbol(),waitingForTool:Symbol()};h.UpdateFeatureWorkflow=u=class extends w.UpdateRecordWorkflow{constructor(a){super(a);this.type="update-feature";this._sketchViewModel=this._sketchGraphicClone=this._layerViewEditSession=null;this._webStyleCache=new Map}destroy(){this._layerViewEditSession?.rollback()}async commit(){this.removeHandles(b.sketchGraphics);try{const a=this.data.edits.stagedForDelete;
await super.commit();const c=this._layerViewEditSession;a?c?.rollback():c?.commit()}catch(a){throw await this._configureSketchViewModel(),new x("editor-workflow:failed-to-commit","An error occurred when sending the updates to the service",{error:a});}}async start(){await super.start();return await this._initializeSketchViewModel()}_initializeFeatureFormViewModel(){super._initializeFeatureFormViewModel();this.addHandles([this._featureFormViewModel.on("value-change",a=>{this._layerViewEditSession?.setAttribute(a.fieldName,
a.value)}),A.watch(()=>this._featureFormViewModel.feature?.sourceLayer,a=>this._sketchGraphicClone.sourceLayer=a)])}_configureHighlight(){const {edits:a,layerView:c}=this.data;E.highlightsSupported(c)&&this.addHandles(c.highlight(a.feature),b.highlights)}async _configureSketchViewModel(){const a=this._sketchViewModel;if(a){var {data:c,_featureFormViewModel:e,_sketchGraphicClone:l}=this,{edits:m,viewModel:g}=c,f=m.feature,{view:n}=g,p=k.getVisualVariableAttributes(f);f=await k.setUpGeometryUpdate({feature:f,
featureClone:l,visualVariableAttributes:p,sketchViewModel:a,view:n,onUpdate:({geometry:d,attributes:v},q)=>{m.updateAttributes(v);m.updateGeometry(d);e.feature&&(e.feature.geometry=d);null!=p.rotation&&({field:d}=p.rotation,e.setValue(d,v[d]));null!=p.size&&({field:d}=p.size,e.setValue(d,v[d]));("undo"===q.type||"redo"===q.type||"update"===q.type&&null!=q.toolEventInfo&&k.isTerminalUpdateEventType(q.toolEventInfo.type))&&e.notifyFeatureGeometryChanged()},addUpdatingPromise:d=>{this._updatingHandles.addPromise(d)},
addHandle:d=>{this.addHandles(d,b.waitingForTool)},webStyleCache:this._webStyleCache});this.addHandles(f,b.sketchGraphics);a.addHandles(f)}}async _initializeSketchViewModel(){const {data:a,_sketchGraphicClone:c}=this,e=a.edits.feature,{capabilities:l,layer:m}=a.editorItem,{view:g}=a.viewModel;this.removeHandles([b.highlights,b.sketchGraphics,b.sketchViewModel,b.waitingForTool]);if(!l.update.geometry||"3d"===g?.type&&D.hasEffectiveFeatureExpressionInfo(m.elevationInfo))return{enter:async()=>{this.hasHandles(b.highlights)||
this._configureHighlight()},exit:()=>this.removeHandles([b.highlights])};const f=new C({elevationInfo:m.elevationInfo,internal:!0,listMode:"hide"}),n=new G({allowDeleteKey:!1,layer:f,sketchOptions:a.sketchOptions,snappingManager:a.snappingManager,updateOnGraphicClick:!1,view:g});this._sketchViewModel=n;g?.map.add(f);this.addHandles(y.makeHandle(()=>{g?.destroyed||g?.map.remove(f);f.destroy();this._sketchViewModel=z.destroyMaybe(n)}),b.sketchViewModel);await k.updateGraphicSymbolWhenRequired(c,this._webStyleCache,
"2d"===g?.type?g.scale:null);this.addHandles([await k.swapForEditingSession(n,e,c)]);return{enter:async()=>{this.hasHandles(b.sketchGraphics)||await this._configureSketchViewModel()},exit:()=>this.removeHandles([b.sketchGraphics]),viewModel:n}}_onFullFeatureLoaded(a){super._onFullFeatureLoaded(a);const c=this._sketchGraphicClone=k.cloneGraphicExceptMesh(a),{edits:e,layerView:l}=this.data;e.updateGeometry(a.geometry);e.trackChanges();k.canCreateInteractiveEditSession(l)&&(this._layerViewEditSession=
l.createInteractiveEditSession(c))}static async create(a){a=new u({data:await F.create(a),onCommit:this._onCommitFactory(a.applyEdits)});a._set("steps",this._createWorkflowSteps(a));return a}get test(){}};r.__decorate([t.property()],h.UpdateFeatureWorkflow.prototype,"_layerViewEditSession",void 0);r.__decorate([t.property()],h.UpdateFeatureWorkflow.prototype,"_sketchGraphicClone",void 0);r.__decorate([t.property()],h.UpdateFeatureWorkflow.prototype,"_sketchViewModel",void 0);h.UpdateFeatureWorkflow=
u=r.__decorate([B.subclass("esri.widgets.Editor.UpdateFeatureWorkflow")],h.UpdateFeatureWorkflow);h.handleKeys=b;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});