// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../core/reactiveUtils ../../core/uid ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ./featureFormUtils ./InputBase".split(" "),function(c,f,h,d,b,n,p,k,l,m){b=class extends m{constructor(a){super(a);this._expressionTrackingHandles=new Map;this.id=h.generateUID().toString();this.type="group"}initialize(){this.addHandles([f.watch(()=>[this.visible,this.inputs],([a])=>
{const {inputs:e}=this;a=a?void 0:!1;for(const g of e)l.isFieldInput(g)&&(g.required=a)},{initial:!0,equals:(a,e)=>e[0]===a[0]&&e[1]===a[1]})])}destroy(){for(const a of this._expressionTrackingHandles.values())a.remove()}get initialState(){return this.element.initialState||"expanded"}get inputs(){return this._get("inputs")}set inputs(a){this.removeAllHandles();a&&this.addHandles(a.map(e=>f.watch(()=>e.visible,()=>this._dirtyEvaluatedVisibilityExpression())));this._set("inputs",a)}get open(){return"expanded"===
this.initialState}set open(a){this._override("open",a)}get visible(){return!1!==this.evaluatedVisibilityExpression&&this.inputs&&this.inputs.some(a=>a.visible)}_dirtyEvaluatedVisibilityExpression(){const {element:a}=this;a.visibilityExpression&&this.notifyChange("evaluatedVisibilityExpression")}};c.__decorate([d.property()],b.prototype,"id",void 0);c.__decorate([d.property()],b.prototype,"initialState",null);c.__decorate([d.property()],b.prototype,"inputs",null);c.__decorate([d.property()],b.prototype,
"open",null);c.__decorate([d.property()],b.prototype,"type",void 0);c.__decorate([d.property()],b.prototype,"visible",null);return b=c.__decorate([k.subclass("esri.widgets.FeatureForm.GroupInput")],b)});