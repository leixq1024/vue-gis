// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../../core/Logger","../../core/promiseUtils","./actions"],function(h,k,m,r,e){function t(a){const {selectedFeature:b,location:c,view:d}=a;return d?b??c??null:null}function n(a){return!!a&&a.isAggregate&&"cluster"===a.sourceLayer?.featureReduction?.type}async function x(a,b){if("3d"!==b?.type||!a||"esri.Graphic"!==a.declaredClass)return!0;if((b=b.getViewForGraphic(a))&&"whenGraphicBounds"in b){let c=null;try{c=await b.whenGraphicBounds(a,{useViewElevation:!0})}catch(d){}return!c||
!c.boundingBox||c.boundingBox[0]===c.boundingBox[3]&&c.boundingBox[1]===c.boundingBox[4]&&c.boundingBox[2]===c.boundingBox[5]}return!0}async function u(a,b){const {location:c,selectedFeature:d,view:g,zoomFactor:f}=a;await b?.viewModel?.updateGeometry();b=b?.graphic;const l=b?.geometry?b:t(a);if(!g||!l)throw a=new k("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:l,view:g}),m.getLogger("esri.widgets.Popup.PopupViewModel").error(a),a;const y=g.scale/f,p=
b?.geometry??a.selectedFeature?.geometry??c,v=null!=p&&"point"===p.type&&await x(b??d,g);e.zoomToFeature.active=!0;e.zoomToFeature.disabled=!0;try{await a.zoomTo({target:{target:l,scale:v?y:void 0}})}catch(z){if(!r.isAbortError(z)){var A=new k("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:b??d});m.getLogger("esri.widgets.Popup.PopupViewModel").error(A)}}finally{e.zoomToFeature.active=!1,e.zoomToFeature.disabled=!1,a.zoomToLocation=null,v&&(a.location=p)}}async function w(a){const {selectedFeature:b,
view:c}=a;if("2d"!==c?.type)throw a=new k("zoomToCluster:invalid-view","View must be 2d MapView.",{view:c}),m.getLogger("esri.widgets.Popup.PopupViewModel").error(a),a;if(!b||!n(b))throw a=new k("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:b}),m.getLogger("esri.widgets.Popup.PopupViewModel").error(a),a;const [d,g]=await q(c,b);e.zoomToClusteredFeatures.active=!0;e.zoomToClusteredFeatures.disabled=!0;const {extent:f}=await d.queryExtent(g);
f&&await a.zoomTo({target:f});e.zoomToClusteredFeatures.active=!1;e.zoomToClusteredFeatures.disabled=!1}async function q(a,b){a=await a.whenLayerView(b.sourceLayer);const c=a.createQuery();b=b.getObjectId();c.aggregateIds=null!=b?[b]:[];return[a,c]}h.browseAggregateFeatures=async function(a){const {selectedFeature:b,view:c}=a;if(c&&b){var [d,g]=await q(c,b);e.browseClusteredFeatures.active=!0;e.browseClusteredFeatures.disabled=!0;var {features:f}=await d.queryFeatures(g);e.browseClusteredFeatures.active=
!1;e.browseClusteredFeatures.disabled=!1;e.browseClusteredFeatures.value=!0;a?.open({features:[b].concat(f),featureMenuOpen:!0})}};h.displayClusterExtent=async function(a){const {view:b,selectedFeature:c}=a;if(b&&c){var [d,g]=await q(b,c),{extent:f}=await d.queryExtent(g);a.selectedClusterBoundaryFeature.geometry=f;b.graphics.add(a.selectedClusterBoundaryFeature)}};h.getSelectedTarget=t;h.isClusterFeature=n;h.removeClusteredFeaturesForBrowsing=function(a){e.browseClusteredFeatures.value=!1;const b=
a.features.filter(c=>n(c));b.length&&(a.features=b)};h.triggerAction=a=>{const {event:b,view:c,viewModel:d}=a;({action:a}=b);if(!a)return Promise.reject(new k("trigger-action:missing-arguments","Event has no action"));const {disabled:g,id:f}=a;if(!f)return Promise.reject(new k("trigger-action:invalid-action","action.id is missing"));if(g)return Promise.reject(new k("trigger-action:invalid-action","Action is disabled"));if(f===e.zoomToFeature.id)return u(d).catch(r.throwIfNotAbortError);if(f===e.zoomToClusteredFeatures.id)return w(d);
if(f===e.browseClusteredFeatures.id)return d.browseClusterEnabled=!d.browseClusterEnabled,d.featureMenuOpen=d.browseClusterEnabled,Promise.resolve();if(f===e.removeSelectedFeature.id){d.visible=!1;({selectedFeature:a}=d);if(!a)return Promise.reject(new k(`trigger-action:${e.removeSelectedFeature.id}`,"selectedFeature is required",{selectedFeature:a}));const {sourceLayer:l}=a;l?l.remove(a):c?.graphics.remove(a)}return Promise.resolve()};h.zoomToClusterExtent=w;h.zoomToLocation=u;Object.defineProperty(h,
Symbol.toStringTag,{value:"Module"})});