// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../core/asyncUtils ../../core/Collection ../../core/Error ../../core/Evented ../../core/MapUtils ../../core/maybe ../../core/promiseUtils ../../core/ReactiveMap ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ../../core/support/UpdatingHandles ./batchAttributeFormUtils ./expressions/ArcadeExecutorProvider ./inputs/BatchFormInputs ./inputs/support/createBatchFormInputs ./templates/BatchFormTemplate ./templates/support/createBatchFormTemplate".split(" "),
function(d,t,k,n,c,u,p,v,w,l,e,D,E,F,x,y,z,A,B,q,r,C){c=class extends c.EventedAccessor{constructor(a){super(a);this.activeFeatureIndex=-1;this.disabled=!1;this.editType="NA";this.features=new k;this.userHasChangedValues=!1;this._arcadeExecutorProvider=new A.ArcadeExecutorProvider;this._activeFormInputsByFieldName=new Map;this._emptyForm=new B.BatchFormInputs({inputs:new k});this._emptyFormTemplate=new r({elements:[]});this._featureFormMap=new Map;this._prepareTask=null;this._updatingHandles=new y.UpdatingHandles;
this._layerTemplateMap=new w;this._workingFeatures=new k;this.sharedForm=this._emptyForm;this.sharedFormTemplate=this._emptyFormTemplate}initialize(){this.addHandles([l.on(()=>this.features,"after-changes",()=>this._prepare(),{onListenerAdd:()=>this._prepare(),sync:!0}),l.watch(()=>this.activeForm,()=>this._activeFormInputsByFieldName.clear(),l.sync)]);this._prepare()}destroy(){this._prepareTask=p.abortMaybe(this._prepareTask);this._workingFeatures.destroyAll();this._emptyForm.destroy();this._emptyFormTemplate.destroy()}get activeFeature(){const a=
this.activeFeatureIndex;return 0>a?null:this.features.at(a)}get activeForm(){if("batch"===this.mode)return this.sharedForm;const a=this._workingFeatures.at(this.activeFeatureIndex);if(!a)return this._emptyForm;var b=this._featureFormMap.get(a);if(b)return b;b=this._makeBatchFormInputsForFeature(a);b!==this._emptyForm&&this._featureFormMap.set(a,b);return b}get activeFormIsValid(){return!0}get allHiddenErrors(){const a=this.hiddenSharedFormErrors;return Array.from(new Set([...this.hiddenIndividualFormErrors,
...a]))}get hiddenIndividualFormErrors(){if("batch"===this.mode)return[];const a=[];this.activeForm.inputs.forEach(b=>{!1!==b.visible||b.valid||a.push(b)});return a}get hiddenSharedFormErrors(){const a=[];this.sharedForm?.inputs.forEach(b=>{!1!==b.visible||b.valid||a.push(b)});return a}get status(){const a=this._prepareTask;return null==a?"not-loaded":a.finished?null!=a.error?"failed":"loaded":"loading"}get submittable(){return!0}get updating(){return this._updatingHandles.updating}get valid(){return!0}get layers(){const a=
new Set;this.features.forEach(b=>{a.add(b.sourceLayer??b.layer)});return Array.from(a)}get mode(){return-1<this.activeFeatureIndex?"single":"batch"}getValues(a){const b=this._workingFeatures.find(({original:f})=>f===a);if(!b)throw new n("feature-not-found","The given feature is not present in the BatchAttributeForm");return{...b.attributes}}setFieldInputValue(a,b){a.setValueFromUser(b);this.emit("value-change",{features:a.features.toArray().map(f=>f.original),fieldName:a.fieldName,name:"value-change",
value:b})}setValue(a,b){const f=u.getOrCreateMapValue(this._activeFormInputsByFieldName,a,()=>{const h=this.activeForm.allFieldInputs.find(g=>g.fieldName===a);if(!h)throw new n("no-FieldInput-found",`Cannot set the value of field '${a}' because there is no FieldInput representing it`);return h});this.setFieldInputValue(f,b)}validate(){return!1}getCodedValueOptions(a){return a.codedValues.map(({name:b,code:f})=>({name:b,value:f}))}_makeBatchFormInputsForFeature(a){const b=this._layerTemplateMap.get(a.layer);
return b?q.createBatchFormInputsFromBatchFormTemplate(b,new k([a])):this._emptyForm}async _prepare(){this._prepareTask=p.abortMaybe(this._prepareTask);this._updateWorkingFeatures();const {layers:a}=this;if(0!==a.length){var b=t.createTask(async f=>{v.throwIfAborted(f);f=new Map;for(var h of a){var g=await C.createBatchFormTemplate(h,{arcadeExecutorProvider:this._arcadeExecutorProvider});this._layerTemplateMap.set(h,g);for(const m of g.elements)({elementId:g}=m),f.has(g)?f.get(g).foldIn(m):f.set(g,
m.clone())}this.sharedFormTemplate=h=new r({elements:Array.from(f.values())});this.sharedForm=q.createBatchFormInputsFromBatchFormTemplate(h,this._workingFeatures)});this._updatingHandles.addPromise(b.promise);this._prepareTask=b}}_updateWorkingFeatures(){this._workingFeatures.destroyAll();const {features:a}=this;0!==a.length&&this._workingFeatures.addMany(a.map(z.createReactiveGraphic))}};d.__decorate([e.property({readOnly:!0})],c.prototype,"activeFeature",null);d.__decorate([e.property()],c.prototype,
"activeFeatureIndex",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"activeForm",null);d.__decorate([e.property()],c.prototype,"activeFormIsValid",null);d.__decorate([e.property()],c.prototype,"disabled",void 0);d.__decorate([e.property()],c.prototype,"editType",void 0);d.__decorate([e.property()],c.prototype,"features",void 0);d.__decorate([e.property()],c.prototype,"hiddenIndividualFormErrors",null);d.__decorate([e.property()],c.prototype,"updating",null);d.__decorate([e.property()],
c.prototype,"valid",null);d.__decorate([e.property()],c.prototype,"layers",null);d.__decorate([e.property()],c.prototype,"mode",null);d.__decorate([e.property()],c.prototype,"sharedForm",void 0);d.__decorate([e.property()],c.prototype,"sharedFormTemplate",void 0);d.__decorate([e.property()],c.prototype,"userHasChangedValues",void 0);d.__decorate([e.property()],c.prototype,"_arcadeExecutorProvider",void 0);d.__decorate([e.property()],c.prototype,"_prepareTask",void 0);d.__decorate([e.property()],c.prototype,
"_layerTemplateMap",void 0);d.__decorate([e.property()],c.prototype,"_workingFeatures",void 0);return c=d.__decorate([x.subclass("esri.widgets.BatchAttributeForm.BatchAttributeFormViewModel")],c)});