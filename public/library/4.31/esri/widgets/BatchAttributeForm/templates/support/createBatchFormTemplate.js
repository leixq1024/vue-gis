// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Error ../../../../core/Logger ../../../../form/support/formUtils ../../../../layers/support/fieldUtils ../../expressions/expressionUtils ../BatchFormTemplate ../FieldElementTemplate ../GroupElementTemplate".split(" "),function(k,q,y,r,t,l,m,u,z){async function n(a,{arcadeExecutorProvider:b}){const d=new Set(t.getLowerCaseEditTrackingFields(a));b={arcadeExecutorProvider:b,editTrackingFields:d,layer:a};const e=[];for(const f of a.fields){var c=f,g=a;!d.has(c.name.toLowerCase())&&
t.isFieldVisibleByDefault(c,g)&&e.push(A(f,b))}a=await Promise.all(e);return new m({elements:a})}async function v(a,b){var d=a.formTemplate;if(!d)return n(a,b);const e=l.makeExpressionInfosMap(d.expressionInfos),c={description:d.description,elements:[],title:d.title};({elements:d}=d);if(!d)return new m(c);({arcadeExecutorProvider:b}=b);for(const g of d)try{c.elements.push(await w(g,{arcadeExecutorProvider:b,expressionInfos:e,layer:a}))}catch(f){y.getLogger("esri.widgets.BatchAttributeForm.templates.templateUtils").warn(f)}return new m(c)}
async function w(a,b){if(r.isFieldElement(a))return B(a,b);if(r.isGroupElement(a))return C(a,b);throw new q("batch-attribute-form:unsupported-element-type",`Form elements of type ${a.type} are not supported`);}async function B(a,{arcadeExecutorProvider:b,expressionInfos:d,layer:e}){var {fieldsIndex:c}=e;const {description:g,domain:f,fieldName:h,hint:p,input:D,label:x}=a;if(null==h||!c.has(h))throw new q("batch-attribute-form:invalid-form-element",`Field element with label '${x}' does not refer to a valid field`);
c={description:g,domain:f,field:c.get(h),hint:p,input:D,label:x};c=new u.FieldElementTemplate(c);a=await l.makeExecutorSetForFormElement({element:a,expressionInfos:d,provider:b});c.addLayer(e,a);return c}async function C(a,b){const {arcadeExecutorProvider:d,expressionInfos:e,layer:c}=b,{description:g,label:f}=a,h={description:g,elements:[],label:f};for(const p of a.elements)try{h.elements.push(await w(p,b))}catch{}b=new z.GroupElementTemplate(h);a=await l.makeExecutorSetForFormElement({element:a,
expressionInfos:e,provider:d});b.addLayer(c,a);return b}async function A(a,{arcadeExecutorProvider:b,layer:d}){const e=new u.FieldElementTemplate({field:a,label:a.alias??a.name}),c={};a.editable&&d.userHasUpdateItemPrivileges&&(c.editableExpression=await b.getArcadeExecutor("true"));e.addLayer(d,c);return e}k.convertFormTemplateToBatchFormTemplate=v;k.createBatchFormTemplate=async function(a,b){return null!=a.formTemplate?v(a,b):n(a,b)};k.createBatchFormTemplateFromFields=n;Object.defineProperty(k,
Symbol.toStringTag,{value:"Module"})});