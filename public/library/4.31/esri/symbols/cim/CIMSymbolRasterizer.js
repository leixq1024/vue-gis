// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ./CIMResourceManager ./CIMSymbolDrawHelper ./CIMSymbolHelper ./OverrideHelper ./utils".split(" "),function(r,w,t,q,x,u){function v(b,g,h,m){const c=-g/2+1;g=g/2-1;const n=h/2-1;h=-h/2+1;switch(b){case "esriGeometryPoint":return{x:0,y:0};case "esriGeometryPolyline":return{paths:[[[c,0],[0,0],[g,0]]]};default:return"legend"===m?{rings:[[[c,n],[g,0],[g,h],[c,h],[c,n]]]}:{rings:[[[c,n],[g,n],[g,h],[c,h],[c,n]]]}}}const y=96/72;class z{constructor(b){this._spatialReference=b;this._imageDataCanvas=
null;this._cimResourceManager=new w}get _canvas(){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));return this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(b,g,h,m,c,n,k,p,l){if(!b)return null;var {data:a}=b;if(!a||"CIMSymbolReference"!==a.type||!a.symbol)return null;({symbol:b}=a);n||=u.mapCIMSymbolToGeometryType(b);g=await x.OverrideHelper.resolveSymbolOverrides(a,g,this._spatialReference,c,n,k,p);c=this._cimResourceManager;
k=[];q.CIMSymbolHelper.fetchResources(g,c,k);q.CIMSymbolHelper.fetchFonts(g,c,k);0<k.length&&await Promise.all(k);const {width:d,height:e}=h;h=v(n,d,e,m);a=q.CIMSymbolHelper.getEnvelope(g,h,c);if(!a)return null;Infinity===a.x&&(a.x=d+2);Infinity===a.y&&(a.y=-e/2);-Infinity===a.width&&(a.width=d);-Infinity===a.height&&(a.height=e);c=1;p=k=0;switch(b.type){case "CIMPointSymbol":case "CIMTextSymbol":l=1;a.width>d&&(l=d/a.width);b=1;a.height>e&&(b=e/a.height);"preview"===m&&(a.width<d&&(l=d/a.width),
a.height<e&&(b=e/a.height));c=Math.min(l,b);k=a.x+a.width/2;p=a.y+a.height/2;break;case "CIMLineSymbol":if(l||a.height>e)c=e/a.height;p=a.y+a.height/2;m=a.x*c+d/2;l=(a.x+a.width)*c+d/2;({paths:b}=h);b[0][0][0]-=m/c;b[0][2][0]-=(l-d)/c;break;case "CIMPolygonSymbol":k=a.x+a.width/2;p=a.y+a.height/2;m=a.x*c+d/2;l=(a.x+a.width)*c+d/2;b=a.y*c+e/2;a=(a.y+a.height)*c+e/2;const {rings:f}=h;0>m&&(f[0][0][0]-=m,f[0][3][0]-=m,f[0][4][0]-=m);0>b&&(f[0][0][1]+=b,f[0][1][1]+=b,f[0][4][1]+=b);l>d&&(f[0][1][0]-=
l-d,f[0][2][0]-=l-d);a>e&&(f[0][2][1]+=a-e,f[0][3][1]+=a-e)}return this.rasterize({type:"cim",data:{type:"CIMSymbolReference",symbol:g}},d,e,k,p,c,n,1,h)}rasterize(b,g,h,m,c,n,k,p=0,l=null){({data:b}=b);if(!b||"CIMSymbolReference"!==b.type||!b.symbol)return null;({symbol:b}=b);const a=this._canvas,d=(window.devicePixelRatio||1)*y;a.width=g*d;a.height=h*d;k||=u.mapCIMSymbolToGeometryType(b);l||=v(k,g,h,"legend");a.width+=2*p;a.height+=2*p;k=a.getContext("2d",{willReadFrequently:!0});const e=t.Transformation.createIdentity();
e.translate(-m,-c);e.scale(n*d,-n*d);e.translate(g*d/2+p,h*d/2+p);k.clearRect(0,0,a.width,a.height);(new t.CanvasDrawHelper(k,this._cimResourceManager,e,!0)).drawSymbol(b,l);return k.getImageData(0,0,a.width,a.height)}}r.CIMSymbolRasterizer=z;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});