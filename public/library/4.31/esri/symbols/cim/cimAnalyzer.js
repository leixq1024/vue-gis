// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.31/esri/copyright.txt for details.
//>>built
define("exports ../../core/colorUtils ../../core/fontUtils ../../core/lang ../../core/Logger ../../core/screenUtils ../../core/string ./animationUtils ./CIMSymbolHelper ./defaultCIMValues ./enums ./OverrideHelper ./SDFHelper ./utils ./effects/CIMEffectHelper ../../views/2d/engine/webgl/definitions".split(" "),function(P,Z,aa,Q,ba,U,ca,E,da,D,M,K,L,h,V,ea){function R(a){return a&&0===a.indexOf("Level_")&&(a=parseInt(a.slice(6),10),!isNaN(a))?a:0}function fa(a){var d=a.symbolLayers;if(!d)return!1;a=
d.find(c=>c.effects?.find(b=>"CIMGeometricEffectDashes"===b.type&&null!=b.dashTemplate));d=d.find(c=>c.effects?.find(b=>"CIMGeometricEffectAddControlPoints"===b.type));return!!a||!!d}function W(a){return Q.clone(a).map(d=>({...d,propertyName:h.uncapitalize(d.propertyName)}))}function S(a){return E.shouldUseAnimatedPath(a)?{type:"animation-params",params:a}:null}class ha{constructor(a){this._cimLayers=[];this._poMap={};this._primitiveOverrides=[];a&&(this._resourceManager=a)}analyzeSymbolReference(a,
d,c){this._cimLayers=c??[];if(!a)return this._cimLayers;this._reset();if(a.primitiveOverrides){this._primitiveOverrides=a.primitiveOverrides;for(const b of this._primitiveOverrides)(c=b.valueExpressionInfo)?this._setPoMap(b.primitiveName,b.propertyName,c):null!=b.value&&(c=b.value,b.propertyName.includes("Color")&&(Z.isRGB(c)&&(c=h.colorToArray(c)),c=h.normalizeAlpha(c)),this._setPoMap(b.primitiveName,b.propertyName,c))}this._analyzeSymbol(a.symbol,d);return this._cimLayers}_reset(){this._cimLayers=
[];this._poMap={};this._primitiveOverrides=[]}_analyzeSymbol(a,d){switch(a?.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":this._analyzeMultiLayerSymbol(a,d)}}_analyzeMultiLayerSymbol(a,d){const c=a?.symbolLayers;if(c){var b=a.effects,e=M.Alignment.SCREEN,f=h.getSize(a)??0;"CIMPointSymbol"===a.type&&"Map"===a.angleAlignment&&(e=M.Alignment.MAP);var n={transform:[0,0,0,1],fromColor:[1,1,1,1],toColor:[1,1,1,1],colorMix:[0,0,0,0],toOpacity:[1,1,1,1],opacityMix:[0,0,0,0],hasAnimations:E.checkForAnimations(a)};
n=E.getAnimationParams(this._poMap,a,n);for(var l="CIMPolygonSymbol"===a.type,g=c.length;g--;){const m=c[g];if(!m||!1===m.enable)continue;let q;b?.length&&(q=[...b]);var k=m.effects;k?.length&&(b?q.push(...k):q=[...k]);k=null;if(q){k=[];for(const x of q){var r=K.OverrideHelper.findEffectOverrides(x,this._primitiveOverrides);r&&k.push(r)}}K.OverrideHelper.findApplicableOverrides(m,this._primitiveOverrides,[]);switch(m.type){case "CIMSolidFill":this._analyzeSolidFill(m,k);break;case "CIMPictureFill":this._analyzePictureFill(m,
k);break;case "CIMHatchFill":this._analyzeHatchFill(m,k);break;case "CIMGradientFill":this._analyzeGradientFill(m,k);break;case "CIMSolidStroke":this._analyzeSolidStroke(m,k,l,f);break;case "CIMPictureStroke":this._analyzePictureStroke(m,k,l,f);break;case "CIMGradientStroke":this._analyzeGradientStroke(m,k,l,f);break;case "CIMCharacterMarker":case "CIMPictureMarker":case "CIMVectorMarker":if("CIMLineSymbol"===a.type||"CIMPolygonSymbol"===a.type)e=(e=m.markerPlacement)&&e.angleToLine?M.Alignment.MAP:
M.Alignment.SCREEN;r=[];var u=m.primitiveName;u&&r.push(u);u=l&&h.isCIMMarkerStrokePlacement(m.markerPlacement);this._analyzeMarker(m,k,null,r,e,f,d,[],n,!1,u);break;default:ba.getLogger("esri.symbols.cim.cimAnalyzer").error("Cannot analyze CIM layer",m.type)}}}}_analyzeSolidFill(a,d){const {primitiveName:c,type:b}=a,e=h.normalizeAlpha(a.color);this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!a.colorLocked,color:this._getValueOrOverrideExpression(b,c,"Color",e),height:0,
angle:0,offsetX:0,offsetY:0,scaleX:1,effects:d,applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!1})}_analyzePictureFill(a,d){const {primitiveName:c,type:b}=a,e=h.getTintColor(a),f=h.getNumericValue(a.height,D.defaultCIMValues.CIMPictureFill.height);let n=h.getNumericValue(a.scaleX,1);if("width"in a&&"number"===typeof a.width){var l=a.width;let g=1;const k=this._resourceManager.getResource(a.url);null!=k&&(g=k.width/k.height);n/=f/l*g}l={type:"sprite-rasterization-param",resource:a,
overrides:this._getPrimitiveMaterialOverrides(c,b)};this._cimLayers.push({type:"fill",spriteRasterizationParam:l,colorLocked:!!a.colorLocked,effects:d,color:this._getValueOrOverrideExpression(b,c,"TintColor",e),height:this._getValueOrOverrideExpression(b,c,"Height",f),scaleX:this._getValueOrOverrideExpression(b,c,"ScaleX",n),angle:this._getValueOrOverrideExpression(b,c,"Rotation",h.getNumericValue(a.rotation)),offsetX:this._getValueOrOverrideExpression(b,c,"OffsetX",h.getNumericValue(a.offsetX)),
offsetY:this._getValueOrOverrideExpression(b,c,"OffsetY",h.getNumericValue(a.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1})}_analyzeHatchFill(a,d){const {primitiveName:c,type:b}=a;var e=this._analyzeMaterialOverrides(c,["Rotation","OffsetX","OffsetY"]);e=h.normalizePrimitiveOverrideProps(e);let f=[255,255,255,1],n=!1;if(a.lineSymbol?.symbolLayers)for(const g of a.lineSymbol.symbolLayers){if("CIMSolidStroke"!==g.type)continue;const k=g.primitiveName??c;n||!k||
g.colorLocked||null==this._poMap[k]?.Color&&null==this._poMap[k]?.StrokeColor||(f=h.normalizeAlpha(g.color),f=this._maybeGetValueOrOverrideExpression(k,"StrokeColor")??this._getValueOrOverrideExpression(b,k,"Color",f),n=!0);var l=this._maybeGetValueOrOverrideExpression(k,"StrokeWidth");if(l){let r=null,u=null;"number"===typeof l?r=l:u=l.valueExpressionInfo;(l=e.find(m=>"strokeWidth"===m.propertyName))?l.propertyName="width":(l={type:"CIMPrimitiveOverride",primitiveName:k,propertyName:"width",valueExpressionInfo:u,
value:r,defaultValue:h.getDefaultCIMValue(b,"width")},e.push(l))}}this._cimLayers.push({type:"fill",spriteRasterizationParam:{type:"sprite-rasterization-param",resource:a,overrides:e},colorLocked:!!a.colorLocked,effects:d,color:f,height:this._getValueOrOverrideExpression(b,c,"Separation",h.getNumericValue(a.separation,D.defaultCIMValues.CIMHatchFill.separation)),scaleX:1,angle:this._getValueOrOverrideExpression(b,c,"Rotation",h.getNumericValue(a.rotation)),offsetX:this._getValueOrOverrideExpression(b,
c,"OffsetX",h.getNumericValue(a.offsetX)),offsetY:this._getValueOrOverrideExpression(b,c,"OffsetY",h.getNumericValue(a.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!n})}_analyzeGradientFill(a,d){this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!a.colorLocked,effects:d,color:[128,128,128,1],height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1})}_analyzeSolidStroke(a,d,c,
b){const {primitiveName:e,type:f}=a,n=h.normalizeAlpha(a.color),l=h.getNumericValue(a.width,D.defaultCIMValues.CIMSolidStroke.width),g=h.getEnum(a.capStyle,D.defaultCIMValues.CIMSolidStroke.capstyle),k=h.getEnum(a.joinStyle,D.defaultCIMValues.CIMSolidStroke.joinstyle),r=a.miterLimit;let u=[];this._analyzePrimitiveOverrides(e,d,null,null)&&(u=this._getPrimitiveMaterialOverrides(e,f));let m,q,x,v;if(d&&Array.isArray(d)&&0<d.length){const p=d[d.length-1].effect;p&&"CIMGeometricEffectDashes"===p.type&&
"NoConstraint"===p.lineDashEnding&&(m=p.dashTemplate,q=p.scaleDash,x=p.offsetAlongLine,v=p.primitiveName,d=[...d],d.pop())}null!=v&&u.push(...this._getPrimitiveMaterialOverrides(v,f).filter(p=>"dashTemplate"===p.propertyName));this._cimLayers.push({type:"line",spriteRasterizationParam:void 0!==m?{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:m,primitiveName:v},overrides:u}:null,isOutline:c,colorLocked:!!a.colorLocked,effects:d,color:this._getValueOrOverrideExpression(f,e,"Color",
n),width:this._getValueOrOverrideExpression(f,e,"Width",l),cap:this._getValueOrOverrideExpression(f,e,"CapStyle",g),join:this._getValueOrOverrideExpression(f,e,"JoinStyle",k),miterLimit:r&&this._getValueOrOverrideExpression(f,e,"MiterLimit",r),referenceWidth:b,zOrder:R(a.name),dashTemplate:this._maybeGetValueOrOverrideExpression(v,"DashTemplate")??m,offsetAlongLine:this._getValueOrOverrideExpression(f,v,"OffsetAlongLine",x??0),scaleDash:q,sampleAlphaOnly:!0})}_analyzePictureStroke(a,d,c,b){const {primitiveName:e,
type:f}=a,n=h.getTintColor(a),l=h.getNumericValue(a.width,D.defaultCIMValues.CIMPictureStroke.width),g=h.getEnum(a.capStyle,D.defaultCIMValues.CIMPictureStroke.capstyle),k=h.getEnum(a.joinStyle,D.defaultCIMValues.CIMPictureStroke.joinstyle),r=a.miterLimit,u={type:"sprite-rasterization-param",resource:a,overrides:this._getPrimitiveMaterialOverrides(e,f)};this._cimLayers.push({type:"line",spriteRasterizationParam:u,isOutline:c,colorLocked:!!a.colorLocked,effects:d,color:this._getValueOrOverrideExpression(f,
e,"TintColor",n),width:this._getValueOrOverrideExpression(f,e,"Width",l),cap:this._getValueOrOverrideExpression(f,e,"CapStyle",g),join:this._getValueOrOverrideExpression(f,e,"JoinStyle",k),miterLimit:r&&this._getValueOrOverrideExpression(f,e,"MiterLimit",r),referenceWidth:b,zOrder:R(a.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1})}_analyzeGradientStroke(a,d,c,b){const {primitiveName:e,type:f}=a,n=h.getNumericValue(a.width,D.defaultCIMValues.CIMSolidStroke.width),l=h.getEnum(a.capStyle,
D.defaultCIMValues.CIMGradientStroke.capstyle),g=h.getEnum(a.joinStyle,D.defaultCIMValues.CIMGradientStroke.joinstyle),k=a.miterLimit;this._cimLayers.push({type:"line",spriteRasterizationParam:null,isOutline:c,colorLocked:!!a.colorLocked,effects:d,color:[128,128,128,1],width:this._getValueOrOverrideExpression(f,e,"Width",n),cap:this._getValueOrOverrideExpression(f,e,"CapStyle",l),join:this._getValueOrOverrideExpression(f,e,"JoinStyle",g),miterLimit:k&&this._getValueOrOverrideExpression(f,e,"MiterLimit",
k),referenceWidth:b,zOrder:R(a.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1})}_analyzeMarker(a,d,c,b,e,f,n,l,g,k=!1,r=!1){k||=!!a.colorLocked;if(!this._analyzeMarkerInsidePolygon(a,d,k)){var u=h.getNumericValue(a.size,D.defaultCIMValues.CIMVectorMarker.size),m=h.getNumericValue(a.rotation),q=h.getNumericValue(a.offsetX),x=h.getNumericValue(a.offsetY),{primitiveName:v,type:p}=a;u=this._getValueOrOverrideExpression(p,v,"Size",u);m=this._getValueOrOverrideExpression(p,v,"Rotation",m);q=this._getValueOrOverrideExpression(p,
v,"OffsetX",q);x=this._getValueOrOverrideExpression(p,v,"OffsetY",x);g=E.handleAbsoluteAnchor(a,g);g=E.handleMarker(this._poMap,a,g);g=E.handleRelativeAnchor(a,g);g=E.getAnimationParams(this._poMap,a,g);switch(a.type){case "CIMPictureMarker":this._analyzePictureMarker(a,d,c,b,e,f,u,m,q,x,l,g,k,r);break;case "CIMVectorMarker":this._analyzeVectorMarker(a,d,c,b,e,f,u,m,q,x,l,g,n,k,r)}}}_analyzeMarkerInsidePolygon(a,d,c){const {markerPlacement:b,type:e}=a;if(!b||"CIMMarkerPlacementInsidePolygon"!==b.type)return!1;
if("CIMVectorMarker"===e||"CIMPictureMarker"===e){var f=a.primitiveName;if(f&&this._analyzePrimitiveOverrides([f],d,null,null)||(f=b.primitiveName)&&this._analyzePrimitiveOverrides([f],d,null,null))return!1;if("CIMVectorMarker"===e){if({markerGraphics:f}=a,f)for(var n of f)if({symbol:f}=n,"CIMPolygonSymbol"===f?.type&&f.symbolLayers){({symbolLayers:f}=f);for(var l of f)if("CIMSolidStroke"===l.type)return!1}}else if({animatedSymbolProperties:n}=a,n)return!1}l=Math.abs(b.stepX);f=Math.abs(b.stepY);
if(0===l||0===f)return!0;if("Random"===b.gridType){n=U.px2pt(ea.randomInsidePolygonTextureSize);const g=Math.max(Math.floor(n/l),1);n=f*Math.max(Math.floor(n/f),1);l=g*l/n}else b.shiftOddRows?(n=2*f,l=l/f*.5):(n=f,l/=f);f=h.getTintColor(a);this._cimLayers.push({type:"fill",spriteRasterizationParam:"CIMCharacterMarker"===a.type?null:{type:"sprite-rasterization-param",resource:a,overrides:[]},colorLocked:c,effects:d,color:f,height:n,scaleX:l,angle:b.gridAngle,offsetX:h.getNumericValue(b.offsetX),offsetY:h.getNumericValue(b.offsetY),
applyRandomOffset:"Random"===b.gridType,sampleAlphaOnly:"CIMPictureMarker"!==a.type,hasUnresolvedReplacementColor:!0});return!0}_analyzePictureMarker(a,d,c,b,e,f,n,l,g,k,r,u,m,q){const {animatedSymbolProperties:x,primitiveName:v,type:p}=a;let B=h.getNumericValue(a.scaleX,1);const C=h.getTintColor(a);c||=this._createMarkerPlacementOverrideExpression(a.markerPlacement);const y=this._createGIFAnimatedSymbolPropertiesOverrideExpression(x),w=a.anchorPoint??{x:0,y:0};if("width"in a&&"number"===typeof a.width){var A=
a.width;let z=1;var t=this._resourceManager.getResource(a.url);null!=t&&(z=t.width/t.height);t=h.getNumericValue(a.size);B/=t/A*z}b=[...b];a.primitiveName&&b.push(a.primitiveName);x||y?A={type:"animated",url:a.url,urlHash:"H"+ca.numericHash(a.url),playAnimation:a.animatedSymbolProperties?.playAnimation,reverseAnimation:a.animatedSymbolProperties?.reverseAnimation,randomizeStartTime:a.animatedSymbolProperties?.randomizeStartTime,randomizeStartSeed:a.animatedSymbolProperties?.randomizeStartSeed,startTimeOffset:a.animatedSymbolProperties?.startTimeOffset,
duration:a.animatedSymbolProperties?.duration,repeatType:a.animatedSymbolProperties?.repeatType,repeatDelay:a.animatedSymbolProperties?.repeatDelay}:(A=Q.clone(a),A.markerPlacement=null);b={type:"sprite-rasterization-param",resource:A,overrides:this._getMaterialOverrides(b,p)};y&&b.overrides.push(...y.overrides);this._cimLayers.push({type:"marker",spriteRasterizationParam:b,colorLocked:m,effects:d,scaleSymbolsProportionally:!1,alignment:e,size:n,scaleX:this._getValueOrOverrideExpression(p,v,"ScaleX",
B),rotation:l,offsetX:g,offsetY:k,transform:{type:"cim-marker-transform-param",params:r},color:this._getValueOrOverrideExpression(p,v,"TintColor",C),anchorPoint:{x:w.x,y:w.y},isAbsoluteAnchorPoint:"Relative"!==a.anchorPointUnits,outlineColor:[0,0,0,0],outlineWidth:0,frameHeight:0,widthRatio:1,rotateClockwise:!!a.rotateClockwise,referenceSize:f,sizeRatio:1,isOutline:q,markerPlacement:c,animationParams:S(u),baseSize:n})}_analyzeVectorMarker(a,d,c,b,e,f,n,l,g,k,r,u,m,q,x){var v=a.markerGraphics;if(v){var p=
a.frame,B=0;B=p?p.ymax-p.ymin:f;var C=!!a.scaleSymbolsProportionally;B&&(n={offsetX:g,offsetY:k,rotation:l,size:n,frameHeight:B,rotateClockWise:!!a.rotateClockwise,absoluteAnchorPoint:!1,scaleSymbolsProportionally:C},r=[...r,n]);c||=this._createMarkerPlacementOverrideExpression(a.markerPlacement);for(const w of v)if(w){v=w.symbol;if(!v)continue;(n=w.primitiveName)&&b.push(n);l=u;var y=void 0;if(("CIMPointSymbol"===v.type||"CIMTextSymbol"===v.type)&&p){g=y=0;k=w.geometry;"x"in k&&"y"in k&&(y+=k.x-
.5*(p.xmin+p.xmax),g+=k.y-.5*(p.ymin+p.ymax));k=a.anchorPoint;let z=!1;k&&("Absolute"===a.anchorPointUnits?(y-=k.x,g-=k.y,z=!0):p&&(y-=(p.xmax-p.xmin)*k.x,g-=(p.ymax-p.ymin)*k.y));y={offsetX:y,offsetY:g,rotation:0,size:0,frameHeight:0,rotateClockWise:!1,absoluteAnchorPoint:z,scaleSymbolsProportionally:C};y=[...r,y]}const [A,t]=E.getFrameTranslation(w.geometry,p);if(0!==A||0!==t)l=E.translate(l,A,t);"CIMPointSymbol"===v.type&&(l=E.getAnimationParams(this._poMap,v,l));switch(v.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":m||
fa(v)?(l={...l,transform:{type:"AnimatedTransform",relativeTranslation:!1,absoluteScale:!0,translation:E.getStaticParam([0,0]),rotation:E.getStaticParam(0),scale:E.getStaticParam(B),parent:u.transform}},this._analyzeMultiLayerGraphicNonSDF(a,d,c,w,b,e,f,y??r,l,B,q,x)):this._analyzeMultiLayerGraphic(a,d,c,w,b,e,f,y??r,l,B,q,x);break;case "CIMTextSymbol":this._analyzeTextGraphic(d,c,w,b,e,f,y??r,q)}n&&b.pop()}}}_analyzeMultiLayerGraphic(a,d,c,b,e,f,n,l,g,k,r,u){var m=b.symbol;const q=m.symbolLayers;
if(q){var x=q.length;if(!(q&&2===q.length&&q[0].enable&&q[1].enable&&"CIMSolidStroke"===q[0].type&&"CIMSolidFill"===q[1].type&&null==q[0].path&&null==q[1].path)||q[0].effects||q[1].effects||q[0].animations||q[1].animations||E.shouldUseAnimatedPath(g)){var v=this._resourceManager.geometryEngine;if(m=V.CIMEffectHelper.applyEffects(m.effects,b.geometry,v))for(;x--;){const t=q[x];if(!t||!1===t.enable)continue;const z=t.primitiveName;z&&e.push(z);switch(t.type){case "CIMSolidFill":case "CIMSolidStroke":const G=
V.CIMEffectHelper.applyEffects(t.effects,m,v);var p=L.getExtent(G);if(!p)continue;const I="Relative"!==a.anchorPointUnits;var B=h.getStrokeWidth(t)??0;const {frameSizeRatio:N,anchorX:J,anchorY:O,widthRatio:H,sdfPaddingRatio:F}=L.getSDFMetrics(p,a.frame,a.size,a.anchorPoint,I,B,a.scaleSymbolsProportionally);var C="CIMSolidFill"===t.type,y={type:"sdf",geom:G,sdfPaddingRatio:F,asFill:C},{path:w}=t;p=C?h.normalizeAlpha(h.getFillColor(t)):null==w?h.normalizeAlpha(h.getStrokeColor(t)):[0,0,0,0];var A=C?
[0,0,0,0]:h.normalizeAlpha(h.getStrokeColor(t));if(!C&&!B)break;const T=b.primitiveName;let X=null;C&&!t.colorLocked&&(X=this._maybeGetValueOrOverrideExpression(T,"FillColor"));let Y=null;C||t.colorLocked||(Y=this._maybeGetValueOrOverrideExpression(T,"StrokeColor"));p=X??this._getValueOrOverrideExpression(t.type,z,"Color",p);A=Y??this._getValueOrOverrideExpression(t.type,z,"Color",A);B=this._maybeGetValueOrOverrideExpression(T,"StrokeWidth")??this._getValueOrOverrideExpression(t.type,z,"Width",B);
C=w?{type:"sprite-rasterization-param",resource:{type:"path",path:w,asFill:C},overrides:[]}:{type:"sprite-rasterization-param",resource:y,overrides:[]};y=E.getAnimationParams(this._poMap,t,g);w=h.getNumericValue(a.size,D.defaultCIMValues.CIMVectorMarker.size);w=this._getValueOrOverrideExpression(a.type,a.primitiveName,"Size",w);this._cimLayers.push({type:"marker",spriteRasterizationParam:C,colorLocked:!!t.colorLocked||!!r,effects:d,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,alignment:f,
anchorPoint:{x:J,y:O},isAbsoluteAnchorPoint:I,size:k,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:l},frameHeight:k,widthRatio:H,rotateClockwise:!1,referenceSize:n,sizeRatio:N,color:p,outlineColor:A,outlineWidth:B,isOutline:u,markerPlacement:c,animationParams:S(y),isStroke:"CIMSolidFill"===t.type?!1:!0,baseSize:w,...L.getSDFDimensions(G,F)});break;case "CIMPictureMarker":case "CIMVectorMarker":t.markerPlacement?this._analyzeMultiLayerGraphicNonSDF(a,d,
c,b,e,f,n,l,g,k,!!t.colorLocked||!!r,u):this._analyzeMarker(t,d,c,e,f,n,!1,l,g,r,u);break;default:this._analyzeMultiLayerGraphicNonSDF(a,d,c,b,e,f,n,l,g,k,!!t.colorLocked||!!r,u)}z&&e.pop()}}else this._analyzeCompositeMarkerGraphic(a,d,c,b,q,f,n,l,k,r,u)}}_analyzeTextGraphic(a,d,c,b,e,f,n,l){K.OverrideHelper.findApplicableOverrides(c,this._primitiveOverrides,[]);var g=c.geometry;if("x"in g&&"y"in g){g=c.symbol;var k=h.fromCIMFontDecoration(g),r=h.fromCIMFontStyle(g.fontStyleName),u=aa.getFontFamily(g.fontFamilyName);
g.font={family:u,decoration:k,...r};var m=h.getNumericValue(g.height,D.defaultCIMValues.CIMTextSymbol.height),q=h.getNumericValue(g.angle),x=h.getNumericValue(g.offsetX),v=h.getNumericValue(g.offsetY),{haloSymbol:p}=g,B=h.getNumericValue(g.haloSize,0),C=[0,0,0,0];if(p?.symbolLayers?.length){p=p.symbolLayers;for(var y of p)if(y.color){C=this._getValueOrOverrideExpression(g?.haloSymbol?.type??"CIMPolygonSymbol",y.primitiveName,"Color",h.normalizeAlpha(y.color));break}}var w=c.primitiveName,A=[0,0,0,
1];y=[0,0,0,0];p=0;var t=!1;if(g.symbol?.symbolLayers)for(var z of g.symbol.symbolLayers){var G=z.primitiveName;if("CIMSolidStroke"===z.type)y=this._getValueOrOverrideExpression("CIMSolidStroke",G,"Color",h.normalizeAlpha(z.color)),p=this._getValueOrOverrideExpression("CIMSolidStroke",G,"Width",h.getStrokeWidth(z)??0);else if("CIMSolidFill"===z.type){var I=h.normalizeAlpha(z.color);t=t??!!z.colorLocked;A=this._getValueOrOverrideExpression("CIMSolidFill",G??w,"Color",I)}}var N=I=G=z=null,J=null;w&&
(z=this._maybeGetValueOrOverrideExpression(w,"TextSize"),G=this._maybeGetValueOrOverrideExpression(w,"TextAngle"),I=this._maybeGetValueOrOverrideExpression(w,"TextOffsetX"),N=this._maybeGetValueOrOverrideExpression(w,"TextOffsetY"),t||(J=this._maybeGetValueOrOverrideExpression(w,"FillColor")));w=J??A;J=A=null;var O=0;if(g.callout&&"CIMBackgroundCallout"===g.callout.type){var H=g.callout;if(H.backgroundSymbol&&(H=H.backgroundSymbol.symbolLayers))for(var F of H)"CIMSolidFill"===F.type?A=h.normalizeAlpha(F.color):
"CIMSolidStroke"===F.type&&(J=h.normalizeAlpha(F.color),O=h.getNumericValue(F.width,D.defaultCIMValues.CIMSolidStroke.width))}F=this._getValueOrOverrideExpression(g.type,c.primitiveName,"TextString",c.textString??"");null!=F&&({fontStyleName:H}=g,u+=H?"-"+H.toLowerCase():"-regular",b=this._getMaterialOverrides(b,g.type),b.push(...this._getPrimitiveMaterialOverrides(c.primitiveName,g.type)),this._cimLayers.push({type:"text",lineWidth:g.lineWidth,textRasterizationParam:{type:"text-rasterization-param",
resource:{type:"text",textString:c.textString??"",font:g.font,symbol:g,primitiveName:c.primitiveName},overrides:b},colorLocked:!!l||!!t,effects:a,alignment:e,anchorPoint:{x:0,y:0},isAbsoluteAnchorPoint:!1,fontName:u,decoration:k,haloSize:B,haloColor:C,weight:r.weight,style:r.style,size:z??m,angle:G??q,offsetX:I??x,offsetY:N??v,transform:{type:"cim-marker-transform-param",params:n},horizontalAlignment:h.fromCIMHorizontalAlignment(g.horizontalAlignment),verticalAlignment:h.fromCIMVerticalAlignment(g.verticalAlignment),
text:F,color:w,outlineColor:y,outlineSize:p,backgroundColor:A,borderLineColor:J,borderLineWidth:O,referenceSize:f,sizeRatio:1,markerPlacement:d}))}}_analyzeMultiLayerGraphicNonSDF(a,d,c,b,e,f,n,l,g,k,r,u){var m={type:a.type,enable:!0,name:a.name,colorLocked:a.colorLocked,primitiveName:a.primitiveName,anchorPoint:a.anchorPoint,anchorPointUnits:a.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:a.rotateClockwise,rotation:0,size:a.size,billboardMode3D:a.billboardMode3D,depth3D:a.depth3D,frame:a.frame,
markerGraphics:[b],scaleSymbolsProportionally:a.scaleSymbolsProportionally,respectFrame:a.respectFrame,clippingPath:a.clippingPath};b=a.primitiveName;var q=this._analyzeMaterialOverrides(b,["Rotation","OffsetX","OffsetY"]);q=h.normalizePrimitiveOverrideProps(q);const [x,v,p]=da.CIMSymbolHelper.getTextureAnchor(m,this._resourceManager);e=this._getMaterialOverrides(e,a.type);e.push(...q);e={type:"sprite-rasterization-param",resource:{...m,avoidSDFRasterization:!0},overrides:e};m=h.getNumericValue(a.size,
D.defaultCIMValues.CIMVectorMarker.size);b=this._getValueOrOverrideExpression(a.type,b,"Size",m);this._cimLayers.push({type:"marker",spriteRasterizationParam:e,colorLocked:r,effects:d,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,alignment:f,anchorPoint:{x,y:v},isAbsoluteAnchorPoint:!1,size:k,rotation:0,offsetX:0,offsetY:0,transform:{type:"cim-marker-transform-param",params:l},color:[255,255,255,1],outlineColor:[0,0,0,0],outlineWidth:0,scaleX:1,frameHeight:k,widthRatio:1,rotateClockwise:!!a.rotateClockwise,
referenceSize:n,sizeRatio:p/U.pt2px(a.size),isOutline:u,markerPlacement:c,animationParams:S(g),baseSize:b})}_createMarkerPlacementOverrideExpression(a){if(!a)return null;const d=[];K.OverrideHelper.findApplicableOverrides(a,this._primitiveOverrides,d);return{type:"cim-marker-placement-param",placement:a,overrides:W(d)}}_createGIFAnimatedSymbolPropertiesOverrideExpression(a){if(!a)return null;const d=[];K.OverrideHelper.findApplicableOverrides(a,this._primitiveOverrides,d);return{type:"cim-gif-animation-params",
animation:a,overrides:W(d)}}_analyzeCompositeMarkerGraphic(a,d,c,b,e,f,n,l,g,k,r){const u=b.geometry;var m=e[0],q=e[1],x=L.getExtent(u);if(x){e="Relative"!==a.anchorPointUnits;var v=h.getNumericValue(m.width,D.defaultCIMValues.CIMSolidStroke.width),{frameSizeRatio:p,anchorX:B,anchorY:C,widthRatio:y,sdfPaddingRatio:w}=L.getSDFMetrics(x,a.frame,a.size,a.anchorPoint,e,v,a.scaleSymbolsProportionally);({path:x}=q);var A=q.primitiveName,t=m.primitiveName;b=b.primitiveName;var z=null;q.colorLocked||k||(z=
this._maybeGetValueOrOverrideExpression(b,"FillColor"));q=z??this._getValueOrOverrideExpression(q.type,A,"Color",h.normalizeAlpha(q.color));A=null;m.colorLocked||k||(A=this._maybeGetValueOrOverrideExpression(b,"StrokeColor"));A=A??this._getValueOrOverrideExpression(m.type,t,"Color",h.normalizeAlpha(m.color));m=this._maybeGetValueOrOverrideExpression(b,"StrokeWidth")??this._getValueOrOverrideExpression(m.type,t,"Width",v);this._cimLayers.push({type:"marker",spriteRasterizationParam:{type:"sprite-rasterization-param",
resource:x?{type:"path",path:x,asFill:!0}:{type:"sdf",geom:u,sdfPaddingRatio:w,asFill:!0},overrides:[]},colorLocked:k,effects:d,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,alignment:f,anchorPoint:{x:B,y:C},isAbsoluteAnchorPoint:e,size:g,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:l},frameHeight:g,widthRatio:y,rotateClockwise:!1,referenceSize:n,sizeRatio:p,color:q,outlineColor:A,outlineWidth:m,isOutline:r,markerPlacement:c})}}_setPoMap(a,
d,c){let b;this._poMap[a]?b=this._poMap[a]:(b={},this._poMap[a]=b);b[d]=c}_maybeGetValueOrOverrideExpression(a,d,c){return this._getValueOrOverrideExpression("",a,d,c,!1)}_getValueOrOverrideExpression(a,d,c,b,e=!0){e&&!h.isValidCIMValue(b)&&(b=h.getDefaultCIMValue(a,c.toLowerCase()));if(null==d)return b;a=this._poMap[d];if(null==a)return b;c=a[c];return"string"===typeof c||"number"===typeof c||Array.isArray(c)?c:c?{valueExpressionInfo:c,defaultValue:b}:b}_analyzePrimitiveOverrides(a,d,c,b){if(null==
a)return!1;"string"===typeof a&&(a=[a]);for(const e of this._primitiveOverrides)if(a.includes(e.primitiveName)&&e.valueExpressionInfo)return!0;if(null!=d)for(const e of d)if(0<e?.overrides.length)return!0;if(null!=c)for(const e of c)if(0<e?.overrides.length)return!0;if(null!=b)for(const e of b)if(0<e?.overrides.length)return!0;return!1}_getMaterialOverrides(a,d){if(!a)return[];const c=[];for(const b of a)c.push(...this._getPrimitiveMaterialOverrides(b,d));return c}_getPrimitiveMaterialOverrides(a,
d){if(!a)return[];const c=h.normalizePrimitiveOverrideProps(this._primitiveOverrides.filter(b=>b.primitiveName===a));c.forEach(b=>b.defaultValue=h.getDefaultCIMValue(d,b.propertyName.toLowerCase()));return c}_analyzeMaterialOverrides(a,d){return this._primitiveOverrides.filter(c=>c.primitiveName!==a||!d.includes(c.propertyName))}}P.CIMAnalyzer=ha;P.analyzeCIMResource=function(a,d){if(!d||0===d.length)return a;a=Q.clone(a);K.OverrideHelper.applyOverrides(a,d);return a};Object.defineProperty(P,Symbol.toStringTag,
{value:"Module"})});