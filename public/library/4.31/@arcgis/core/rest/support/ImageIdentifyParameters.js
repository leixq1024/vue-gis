/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{clone as r}from"../../core/lang.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/Logger.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{w as i}from"../../chunks/writer.js";import n from"../../geometry/Point.js";import{getJsonType as m}from"../../geometry/support/jsonUtils.js";import p from"../../layers/support/MosaicRule.js";import u from"../../layers/support/RasterFunction.js";import l from"../../time/TimeExtent.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/ensureType.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/reader.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Extent.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../geometry/Polyline.js";import"../../layers/support/DimensionalDefinition.js";import"../../chunks/enumeration.js";import"../../chunks/timeUtils.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/datetime.js";var a;let c=a=class extends e{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(t,e,r){null!=t&&(e.geometryType=m(t),e[r]=JSON.stringify(t.toJSON()))}set mosaicRule(t){let e=t;e?.mosaicMethod&&(e=p.fromJSON({...e.toJSON(),mosaicMethod:e.mosaicMethod,mosaicOperation:e.mosaicOperation})),this._set("mosaicRule",e)}writeMosaicRule(t,e,r){null!=t&&(e[r]=JSON.stringify(t.toJSON()))}set rasterFunction(t){let e=t;e?.rasterFunction&&(e=u.fromJSON({...e.toJSON(),rasterFunction:e.rasterFunction,rasterFunctionArguments:e.rasterFunctionArguments})),this._set("rasterFunction",e)}writeRasterFunction(t,e,r){null!=t&&(e[r]=JSON.stringify(t.toJSON())),t.rasterFunctionDefinition&&(e[r]=JSON.stringify(t.rasterFunctionDefinition))}writeRasterFunctions(t,e,r){null!=t&&(e[r]=JSON.stringify(t.map((t=>t.rasterFunctionDefinition||t.toJSON()))))}writePixelSize(t,e,r){null!=t&&(e[r]=JSON.stringify(t))}writeTimeExtent(t,e,r){if(null!=t){const o=null!=t.start?t.start.getTime():null,s=null!=t.end?t.end.getTime():null;e[r]=null!=o?null!=s?`${o},${s}`:`${o}`:null}}clone(){return new a(r({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};t([o({json:{write:!0}})],c.prototype,"geometry",void 0),t([i("geometry")],c.prototype,"writeGeometry",null),t([o({type:p,json:{write:!0}})],c.prototype,"mosaicRule",null),t([i("mosaicRule")],c.prototype,"writeMosaicRule",null),t([o({type:u,json:{write:!0,name:"renderingRule"}})],c.prototype,"rasterFunction",null),t([i("rasterFunction")],c.prototype,"writeRasterFunction",null),t([o({type:[u],json:{write:!0,name:"renderingRules"}})],c.prototype,"rasterFunctions",void 0),t([i("rasterFunctions")],c.prototype,"writeRasterFunctions",null),t([o({type:n,json:{write:!0}})],c.prototype,"pixelSize",void 0),t([i("pixelSize")],c.prototype,"writePixelSize",null),t([o({type:Boolean,json:{write:!0}})],c.prototype,"returnGeometry",void 0),t([o({type:Boolean,json:{write:!0}})],c.prototype,"returnCatalogItems",void 0),t([o({type:Boolean,json:{write:!0}})],c.prototype,"returnPixelValues",void 0),t([o({type:Number,json:{write:!0}})],c.prototype,"maxItemCount",void 0),t([o({type:l,json:{write:{target:"time"}}})],c.prototype,"timeExtent",void 0),t([i("timeExtent")],c.prototype,"writeTimeExtent",null),t([o({json:{write:!0}})],c.prototype,"raster",void 0),t([o({json:{write:!0}})],c.prototype,"viewId",void 0),t([o({type:Boolean,json:{write:!0}})],c.prototype,"processAsMultidimensional",void 0),c=a=t([s("esri.rest.support.ImageIdentifyParameters")],c);const j=c;export{j as default};
