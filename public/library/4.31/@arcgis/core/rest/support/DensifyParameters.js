/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{geometryTypes as s}from"../../geometry.js";import{JSONSupport as e}from"../../core/JSONSupport.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import{getJsonType as i}from"../../geometry/support/jsonUtils.js";import{g as m}from"../../chunks/geometryOperationLengthUnit.js";import"../../chunks/ensureType.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";let n=class extends e{constructor(t){super(t),this.geometries=null,this.geodesic=null,this.lengthUnit=null,this.maxSegmentLength=null}toJSON(){const t={};if(this.geometries&&this.geometries.length>0){const s=this.geometries.map((t=>t.toJSON()));t.geometries=JSON.stringify({geometryType:i(this.geometries[0]),geometries:s}),t.sr=JSON.stringify(this.geometries[0].spatialReference.toJSON())}return this.geodesic&&(t.geodesic=this.geodesic),this.lengthUnit&&(t.lengthUnit=m.toJSON(this.lengthUnit)),this.maxSegmentLength&&(t.maxSegmentLength=this.maxSegmentLength),t}};t([o({types:[s],json:{write:!0}})],n.prototype,"geometries",void 0),t([o({type:Boolean,json:{write:!0}})],n.prototype,"geodesic",void 0),t([o({type:String,json:{write:!0}})],n.prototype,"lengthUnit",void 0),t([o({type:Number,json:{write:!0}})],n.prototype,"maxSegmentLength",void 0),n=t([r("esri.rest.support.DensifyParameters")],n);const p=n;export{p as default};
