/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{s as t}from"../../../chunks/ensureType.js";import{c as s}from"../../../chunks/maybe.js";import{RenderCategory as e}from"../webgl.js";import{G as r}from"../../../chunks/GLObjectType.js";import{i as o,h as i}from"../../../chunks/enums.js";import"../../../core/lang.js";import"../../../chunks/Logger.js";import"../../../config.js";import"../../../chunks/mat4f64.js";import"../../../chunks/computeTranslationToOriginAndRotation.js";import"../../../chunks/mathUtils.js";import"../../../chunks/mat4.js";import"../../../chunks/common.js";import"../../../chunks/vec3f64.js";import"../../../chunks/projectBuffer.js";import"../../../chunks/unitUtils.js";import"../../../chunks/jsonMap.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../core/Error.js";import"../../../core/JSONSupport.js";import"../../../chunks/tslib.es6.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../core/accessorSupport/decorators/subclass.js";import"../../../chunks/metadata.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/tracking.js";import"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/ObservableBase.js";import"../../../core/scheduling.js";import"../../../core/promiseUtils.js";import"../../../chunks/geodesicConstants.js";class h{constructor(t,s){this.key=t,this.free=s,this.incarnation=0,this._refCount=1}retain(t=1){this._refCount+=t}release(){return 0===this._refCount?(console.log(`Releasing already released FBO attachment "${this.name}" in ${(new Error).stack}`),!0):(--this._refCount,0===this._refCount&&(this.free(),!0))}}var c;!function(t){t[t.FBO=0]="FBO",t[t.DEPTH=1]="DEPTH",t[t.COLOR=2]="COLOR"}(c||(c={}));class n extends h{constructor(t,s,r,o,i,h){super(t,h),this.type=c.FBO,this._colors=new Map,this._name=e.COMPOSITE,this.acquireDepth=null,this.acquireColor=null,this._name=s,this.fbo=r,this.acquireDepth=o,this.acquireColor=i}dispose(){this.fbo?.dispose()}get usedMemory(){return this.fbo?.usedMemory||0}get numberOfColorAttachments(){return this._colors.size}get name(){return this._name}setName(t){this._name=t}getTexture(t=i.COLOR_ATTACHMENT0){return t===o?this.fbo?.depthStencilTexture:this.fbo?.getColorTexture(t)}getAttachment(t=i.COLOR_ATTACHMENT0){return t===o?this._depth:this._colors.get(t)}hasAttachment(s){return t(this._colors,(t=>t.name===s))}attachDepth(t){return t?.retain(),this.detachDepth(),t&&this.fbo?.attachDepthStencil(t.attachment),this._depth=t,this}detachDepth(){this.fbo?.detachDepthStencilTexture(),this.fbo?.detachDepthStencilBuffer(),this._depth=s(this._depth)}obtainDepthTexture(){const t=this._depth;return s=t,s?.attachment.type!==r.Texture?null:(this.fbo?.detachDepthStencilTexture(),this._depth=null,t);var s}attachColor(t,s){return t.retain(),this.detachColor(s),this.fbo?.attachColorTexture(t.attachment,s),this._colors.set(s,t),this}detachColor(t){this.fbo?.detachColorTexture(t);const s=this._colors.get(t);this._colors.delete(t),s?.release()}detachAll(){this._colors.forEach(((t,s)=>this.detachColor(s))),this.detachDepth()}}export{c as A,h as M,n as default};
