/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import s from"../../core/Accessor.js";import{IdentifiableMixin as e}from"../../core/Identifiable.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/ensureType.js";let i=class extends(e(s)){constructor(t){super(t),this.allItems=[],this.filterFunction=null,this.label=null}get items(){const{filterFunction:t}=this;return null==t||t(this)?this.allItems:this.allItems.filter(t)}get id(){return this.label}reapplyFilter(){this.notifyChange("filterFunction")}findByTemplate(t){return this.items.find((s=>s.template===t))}};t([r()],i.prototype,"allItems",void 0),t([r()],i.prototype,"filterFunction",void 0),t([r()],i.prototype,"items",null),t([r()],i.prototype,"label",void 0),t([r()],i.prototype,"id",null),i=t([o("esri.widgets.FeatureTemplates.TemplateItemGroup")],i);const l=i;export{l as default};
