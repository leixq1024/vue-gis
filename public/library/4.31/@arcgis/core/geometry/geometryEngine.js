/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import"../geometry.js";import{a as n}from"../chunks/ensureType.js";import{G as r}from"../chunks/geometryEngineBase.js";import{hydratedAdapter as t}from"../chunks/hydrated.js";import e from"./SpatialReference.js";import"./Extent.js";import"../chunks/tslib.es6.js";import"../chunks/Logger.js";import"../config.js";import"../core/lang.js";import"../core/accessorSupport/decorators/property.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../core/Error.js";import"../core/accessorSupport/decorators/subclass.js";import"../chunks/tracking.js";import"./Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/ObservableBase.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../chunks/reader.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/writer.js";import"./Point.js";import"../core/accessorSupport/decorators/cast.js";import"./support/webMercatorUtils.js";import"./Multipoint.js";import"../chunks/zmUtils.js";import"./Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/Axis.js";import"../chunks/extentUtils.js";import"../chunks/boundsUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"./Polyline.js";import"../chunks/typeUtils.js";import"./support/jsonUtils.js";import"../chunks/_commonjsHelpers.js";function o(r){const t=Array.isArray(r)?r[0].spatialReference:r.spatialReference;return t?n(e,t):e.WGS84}function s(n){return r.extendedSpatialReferenceInfo(n)}function i(n,e){return r.clip(t,o(n),n,e)}function c(n,e){return r.cut(t,o(n),n,e)}function u(n,e){return r.contains(t,o(n),n,e)}function p(n,e){return r.crosses(t,o(n),n,e)}function f(n,e,s){return r.distance(t,o(n),n,e,s)}function a(n,e){return r.equals(t,o(n),n,e)}function l(n,e){return r.intersects(t,o(n),n,e)}function m(n,e){return r.touches(t,o(n),n,e)}function j(n,e){return r.within(t,o(n),n,e)}function h(n,e){return r.disjoint(t,o(n),n,e)}function k(n,e){return r.overlaps(t,o(n),n,e)}function d(n,e,s){return r.relate(t,o(n),n,e,s)}function g(n){return r.isSimple(t,o(n),n)}function y(n){return r.simplify(t,o(n),n)}function w(n,e=!1){return r.convexHull(t,o(n),n,e)}function S(n,e){return r.difference(t,o(n),n,e)}function x(n,e){return r.symmetricDifference(t,o(n),n,e)}function R(n,e){return r.intersect(t,o(n),n,e)}function U(n,e=null){return r.union(t,o(n),n,e)}function b(n,e,s,i,c,u){return r.offset(t,o(n),n,e,s,i,c,u)}function A(n,e,s,i=!1){return r.buffer(t,o(n),n,e,s,i)}function E(n,e,s,i,c,u){return r.geodesicBuffer(t,o(n),n,e,s,i,c,u)}function O(n,e,s=!0){return r.nearestCoordinate(t,o(n),n,e,s)}function B(n,e){return r.nearestVertex(t,o(n),n,e)}function D(n,e,s,i){return r.nearestVertices(t,o(n),n,e,s,i)}function H(n){return"xmin"in n?"center"in n?n.center:null:"x"in n?n:"extent"in n?n.extent?.center??null:null}function J(n,t,e){if(null==n)throw new W;const o=n.spatialReference;if(null==(e=e??H(n)))throw new W;const s=n.constructor.fromJSON(r.rotate(n,t,e));return s.spatialReference=o,s}function L(n,t){if(null==n)throw new W;const e=n.spatialReference;if(null==(t=t??H(n)))throw new W;const o=n.constructor.fromJSON(r.flipHorizontal(n,t));return o.spatialReference=e,o}function N(n,t){if(null==n)throw new W;const e=n.spatialReference;if(null==(t=t??H(n)))throw new W;const o=n.constructor.fromJSON(r.flipVertical(n,t));return o.spatialReference=e,o}function P(n,e,s,i){return r.generalize(t,o(n),n,e,s,i)}function T(n,e,s){return r.densify(t,o(n),n,e,s)}function v(n,e,s,i=0){return r.geodesicDensify(t,o(n),n,e,s,i)}function z(n,e){return r.planarArea(t,o(n),n,e)}function G(n,e){return r.planarLength(t,o(n),n,e)}function M(n,e,s){return r.geodesicArea(t,o(n),n,e,s)}function V(n,e,s){return r.geodesicLength(t,o(n),n,e,s)}function q(n,e){return r.intersectLinesToPoints(t,o(n),n,e)}function I(n,t){r.changeDefaultSpatialReferenceTolerance(n,t)}function C(n){r.clearDefaultSpatialReferenceTolerance(n)}class W extends Error{constructor(){super("Illegal Argument Exception")}}export{A as buffer,I as changeDefaultSpatialReferenceTolerance,C as clearDefaultSpatialReferenceTolerance,i as clip,u as contains,w as convexHull,p as crosses,c as cut,T as densify,S as difference,h as disjoint,f as distance,a as equals,s as extendedSpatialReferenceInfo,L as flipHorizontal,N as flipVertical,P as generalize,M as geodesicArea,E as geodesicBuffer,v as geodesicDensify,V as geodesicLength,R as intersect,q as intersectLinesToPoints,l as intersects,g as isSimple,O as nearestCoordinate,B as nearestVertex,D as nearestVertices,b as offset,k as overlaps,z as planarArea,G as planarLength,d as relate,J as rotate,y as simplify,x as symmetricDifference,m as touches,U as union,j as within};
