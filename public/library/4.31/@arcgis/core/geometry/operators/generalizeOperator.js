/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{i as s}from"../../core/lang.js";import{X as r}from"../../chunks/unitUtils.js";import{S as t,g as o,t as e,f as i}from"../../chunks/converterAPI.js";import{O as n}from"../../chunks/OperatorGeneralize.js";import"../../chunks/jsonMap.js";import"../../config.js";import"../../chunks/Logger.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../core/JSONSupport.js";import"../../chunks/tslib.es6.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/Transformation2D.js";import"../../geometry.js";import"../Extent.js";import"../Geometry.js";import"../../chunks/reader.js";import"../SpatialReference.js";import"../../chunks/writer.js";import"../Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../support/webMercatorUtils.js";import"../Multipoint.js";import"../../chunks/zmUtils.js";import"../Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../Polyline.js";import"../../chunks/typeUtils.js";import"../support/jsonUtils.js";const p=new n;function c(s,t,n={}){const{removeDegenerateParts:c=!1,unit:m}=n,u=o(s);return m&&(t=r(t,m,u)),e(function(s,r,t){return p.execute(s,r,t,null)}(i(s),t,c),u)}function m(n,c,m={}){const{removeDegenerateParts:u=!1,unit:j}=m,a=n.map(i),l=o(n);return j&&(c=r(c,j,l)),function(s,r,o){const e=p.executeMany(new t(s),r,o,null);return Array.from(e)}(a,c,u).map((s=>e(s,l))).filter(s)}function u(){return p.supportsCurves()}export{c as execute,m as executeMany,u as supportsCurves};
