/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{i as e}from"../../core/lang.js";import{G as s,E as t,n as r,b7 as i,b8 as o,p as m,b9 as n,h,i as p,s as a,j as c,ba as u,bb as _,P as l,C as y,bc as g,S as d,f as j,g as G,c as f,t as b}from"../../chunks/converterAPI.js";import{M as k,G as x,a as S}from"../../chunks/Transformation2D.js";import"../../chunks/tslib.es6.js";import"../../geometry.js";import"../../chunks/ensureType.js";import"../../chunks/Logger.js";import"../../config.js";import"../Extent.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/tracking.js";import"../Geometry.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/reader.js";import"../SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/writer.js";import"../Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../support/webMercatorUtils.js";import"../Multipoint.js";import"../../chunks/zmUtils.js";import"../Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../Polyline.js";import"../../chunks/typeUtils.js";import"../support/jsonUtils.js";class T extends s{constructor(e,s,o,m){super(),this.m_shape=new t,this.m_currentGeom=r,this.m_progressCounter=0,this.m_geomIndex=-1,this.m_geomTypeIndex=-1,this.m_index=-1,this.m_bBuilt=!1,this.m_bOutputOnlyModified=!1,this.m_bSimplifyPolygons=!1,this.m_bSnapToSr=!1,this.m_progressTracker=o,this.m_inputGeometries=e,this.m_sr=s,this.m_options=m,1===m||2===m?(this.m_bOutputOnlyModified=!0,this.m_options=0,this.m_bSimplifyPolygons=!0,this.m_bSnapToSr=null!=s&&2===m,this.m_bSnapToSr&&!i()&&k("PE is required for snapping to spatial reference operation")):0===m&&(this.m_bSimplifyPolygons=!0)}progress_(e=!1){}tock(){return!0}getRank(){return 1}moveToNextGeom(){for(;;){if(this.m_bBuilt?this.m_currentGeom=this.m_shape.getNextGeometry(this.m_currentGeom):(this.m_currentGeom=this.m_shape.getFirstGeometry(),this.m_bBuilt=!0),this.m_currentGeom!==r){let e=!1;if(this.m_bSimplifyPolygons&&this.m_shape.getGeometryType(this.m_currentGeom)===x.enumPolygon&&(e=o(this.m_shape,this.m_currentGeom,-1,!1,r,this.m_progressTracker)),this.m_bOutputOnlyModified&&!e&&!this.m_shape.getGeometryModified(this.m_currentGeom))continue}break}}next(){if(this.m_bBuilt)this.moveToNextGeom();else{this.m_geomIndex=this.m_shape.createGeometryUserIndex();const e=new m;for(let s=this.m_inputGeometries.next();null!=s;s=this.m_inputGeometries.next()){this.progress_(),S(s);let t=!1;this.m_bSnapToSr&&(s=s.clone(),t=n(this.m_sr,s));const r=this.m_shape.addGeometry(s);this.m_shape.setGeometryUserIndex(r,this.m_geomIndex,this.m_inputGeometries.getGeometryID());const i=s.getGeometryType();i===x.enumPoint&&(-1===this.m_geomTypeIndex&&(this.m_geomTypeIndex=this.m_shape.createGeometryUserIndex()),this.m_shape.setGeometryUserIndex(r,this.m_geomTypeIndex,i));const o=new m;s.queryLooseEnvelope(o),e.mergeEnvelope2D(o),t&&this.m_shape.setGeometryModified(r,!0)}const s=h(this.m_sr,e,!0),t=h(this.m_sr,e,!1);e.inflate(10*s.total()),this.m_shape.forceSetEnvelope2D(e);let i=null,l=0,d=0;if(this.m_shape.hasCurves()){i=new y;const t=p(s.total(),e);l=a(s.total()),d=g(t,l),c(this.m_shape,t,s.total(),12e3,i,null,this.m_progressTracker)}if(u(this.m_shape,t,this.m_progressTracker)){if(_(this.m_shape,s.add(d),this.m_progressTracker,0===this.m_options,this.m_bOutputOnlyModified),null!==i){if(this.m_bSimplifyPolygons){for(let e=this.m_shape.getFirstGeometry();e!==r;e=this.m_shape.getNextGeometry(e))this.m_shape.getGeometryType(e)===x.enumPolygon&&o(this.m_shape,e,-1,!1,r,this.m_progressTracker)&&this.m_shape.setGeometryModified(e,!0);this.m_bSimplifyPolygons=!1}i.stitchCurves(this.m_shape,r,l,!0),i.clearStitcher(this.m_shape)}}else this.m_bSimplifyPolygons=!1,null!==i&&(i.stitchCurves(this.m_shape,r,l,!0),i.clearStitcher(this.m_shape));this.moveToNextGeom()}if(this.m_currentGeom!==r){if(this.m_index=this.m_shape.getGeometryUserIndex(this.m_currentGeom,this.m_geomIndex),-1!==this.m_geomTypeIndex&&this.m_shape.getGeometryUserIndex(this.m_currentGeom,this.m_geomTypeIndex)===x.enumPoint){const e=new l({vd:this.m_shape.getVertexDescription()});return this.m_shape.queryPointGeometryOnly(this.m_currentGeom,e),this.m_bSnapToSr&&n(this.m_sr,e),e}{const e=this.m_shape.getGeometry(this.m_currentGeom);return this.m_bSnapToSr&&n(this.m_sr,e),e}}return null}getGeometryID(){return this.m_index}}const I=new class{getOperatorType(){return 10009}supportsCurves(){return!0}accelerateGeometry(e,s,t){return!1}canAccelerateGeometry(e){return!1}executeMany(e,s,t,r=0){return new T(e,s,t,r)}};function P(s){const t=s.map(j),r=G(s);return function(e,s){const t=I.executeMany(new d(e),s,null,void 0);return Array.from(t)}(t,f(r)).map((e=>b(e,r))).filter(e)}function U(){return I.supportsCurves()}export{P as executeMany,U as supportsCurves};
