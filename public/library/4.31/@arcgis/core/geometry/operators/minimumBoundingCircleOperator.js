/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{i as e}from"../../core/lang.js";import{d as r}from"../../chunks/mathUtils.js";import{a as t}from"../../chunks/operatorDensify.js";import{S as s,bh as o,G as n,bi as i,a as c,bj as m,aZ as u,f as a,g as p,b0 as l}from"../../chunks/converterAPI.js";import{e as h,g as j,C as g,a as d,G as k,p as y,P as f,k as C,t as P}from"../../chunks/Transformation2D.js";import"../../chunks/tslib.es6.js";import"../../geometry.js";import"../../chunks/ensureType.js";import"../../chunks/Logger.js";import"../../config.js";import"../Extent.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/tracking.js";import"../Geometry.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/reader.js";import"../SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/writer.js";import"../Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../support/webMercatorUtils.js";import"../Multipoint.js";import"../../chunks/zmUtils.js";import"../Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../Polyline.js";import"../../chunks/typeUtils.js";import"../support/jsonUtils.js";class b extends n{constructor(e,r,t){super(),this.m_geometryCursor=e,this.m_bMerge=r,this.m_progressTracker=t}tock(){return j(0),!1}getRank(){return j(0),0}next(){if(this.m_bMerge)return this.mergedMinimumBoundingCircle();const e=this.m_geometryCursor.next();return e?this.minimumBoundingCircle(e):null}getGeometryID(){return this.m_geometryCursor.getGeometryID()}minimumBoundingCircle(e){if(g(e),d(e),this.m_progressTracker?.checkProgress(),e.isEmpty())return e.clone();const r=e.getGeometryType();if(r===k.enumPoint)return this.makeCircle([e.getXY()],1);if(r===k.enumLine){const r=e,t=[r.getStartXY(),r.getEndXY()];return this.makeCircle(t,2)}if(r===k.enumEnvelope){const r=e,t=y(f,2);return r.queryCorner(0,t[0]),r.queryCorner(2,t[1]),this.makeCircle(t,2)}if(C(r)){const r=e,t=[0,0,0],s=i(r,t),o=new Array(s);for(let e=0;e<s;++e)o[e]=r.getXY(t[e]);return this.makeCircle(o,s)}P("Geometry type not supported.")}makeCircle(e,r){const t=new c,s=new m;if(1===r)s.constructCircleRadius(0,e[0],!1);else if(2===r){const r=f.lerp(e[0],e[1],.5),t=f.distance(e[0],r),o=f.distance(e[1],r);s.constructCircleRadius(Math.max(t,o),r,!1)}else if(3===r){const r=f.calculateCircleCenterFromThreePoints(e[0],e[1],e[2]),t=f.distance(e[0],r),o=f.distance(e[1],r),n=f.distance(e[2],r);s.constructCircleRadius(Math.max(t,o,n),r,!1)}return t.addPathFromClosedSegment(s,!1),t}mergedMinimumBoundingCircle(){let e=null,r=this.m_geometryCursor.next();if(!r)return null;e=new u;const t=e.getImpl();do{switch(g(r),d(r),this.m_progressTracker?.checkProgress(),r.getGeometryType()){case k.enumPoint:t.addPoint2D(r.getXY());break;case k.enumLine:t.addPoint2D(r.getStartXY()),t.addPoint2D(r.getEndXY());break;case k.enumEnvelope:for(let e=0;e<4;++e){const s=new f;r.queryCorner(e,s),t.addPoint2D(s)}break;case k.enumMultiPoint:case k.enumPolyline:case k.enumPolygon:{const e=r.getImpl();for(let r=0,s=e.getPointCount();r<s;r++)t.addPoint2D(e.getXY(r));break}default:P("Geometry type not supported.")}}while(r=this.m_geometryCursor.next());return this.minimumBoundingCircle(e)}}const x=new class{getOperatorType(){return 10113}supportsCurves(){return!1}accelerateGeometry(e,r,t){return!1}canAccelerateGeometry(e){return!1}executeMany(e,r,t){return new b(e,r,t)}execute(e,r){const t=new s([e]),o=this.executeMany(t,!1,r).next();return o||h("null output"),o}minimumBoundingCircle(e,r,t,s){return o(e,r,t)}};function w(e){return M([e])[0]}function M(o,n={}){const{merge:i=!1}=n,c=o.map(a),m=p(o);return t(function(e,r){const t=x.executeMany(new s(e),r,null);return Array.from(t)}(c,i),0,0,r(1)).map((e=>l(e,m))).filter(e)}function U(){return x.supportsCurves()}export{w as execute,M as executeMany,U as supportsCurves};
