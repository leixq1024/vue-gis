/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{a as s}from"../../chunks/Transformation2D.js";import{D as r}from"../../chunks/Distance2DCalculator-BX0Ep7eP.js";import{Y as t}from"../../chunks/unitUtils.js";import{f as o,g as e}from"../../chunks/converterAPI.js";import"../../chunks/tslib.es6.js";import"../../core/lang.js";import"../../chunks/jsonMap.js";import"../../config.js";import"../../chunks/Logger.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../geometry.js";import"../Extent.js";import"../Geometry.js";import"../../chunks/reader.js";import"../SpatialReference.js";import"../../chunks/writer.js";import"../Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../support/webMercatorUtils.js";import"../Multipoint.js";import"../../chunks/zmUtils.js";import"../Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../Polyline.js";import"../../chunks/typeUtils.js";import"../support/jsonUtils.js";const i=new class{getOperatorType(){return 10100}supportsCurves(){return!0}accelerateGeometry(s,r,t){return!1}canAccelerateGeometry(s){return!1}execute(s,r,t){return this.executeEx(s,r,t,null,null,Number.NaN)}executeEx(t,o,e,i,p,c){if(t.isEmpty()||o.isEmpty())return Number.NaN;s(t),s(o);const n=t,u=o;Number.isNaN(c)&&(c=Number.POSITIVE_INFINITY);const m=new r(c,e).calculate(n,u,i,p);return Number.isFinite(m)?m:Number.NaN}};function p(s,r,p={}){const{unit:c}=p;let n=i.execute(o(s),o(r),null);if(n&&c){const r=e(s);n=t(n,r,c)}return n}function c(){return i.supportsCurves()}export{p as execute,c as supportsCurves};
