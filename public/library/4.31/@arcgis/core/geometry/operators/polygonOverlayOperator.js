/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{i as t}from"../../core/lang.js";import{bl as s,E as e,p as i,bm as r,h as o,C as n,i as h,s as a,bc as m,j as p,ba as c,bb as u,n as _,b8 as l,bn as g,bo as d,bp as G,S as y,f as C,g as k,c as j,t as I}from"../../chunks/converterAPI.js";import{t as x,a as f,G as S,L as v,g as b}from"../../chunks/Transformation2D.js";import"../../chunks/tslib.es6.js";import"../../geometry.js";import"../../chunks/ensureType.js";import"../../chunks/Logger.js";import"../../config.js";import"../Extent.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/tracking.js";import"../Geometry.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/reader.js";import"../SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/writer.js";import"../Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../support/webMercatorUtils.js";import"../Multipoint.js";import"../../chunks/zmUtils.js";import"../Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../Polyline.js";import"../../chunks/typeUtils.js";import"../support/jsonUtils.js";function P(t){t&&t.checkProgress()}class F extends s{constructor(t,s,e,i){super(),this.m_shape=null,this.m_topoGraph=null,this.m_curveStitcher=null,this.m_stitchMaxDeviation=0,this.m_chainStack=[],this.m_bitsetToChains=null,this.m_chainsLists=null,this.m_visitedChainsIndex=-1,this.m_index=-1,this.m_geometryIndex=-1,this.m_progressCounter=0,this.m_currentIds=[],this.m_currentEdgeIds=[],t||x(""),this.m_progressTracker=i,this.m_options=0!==e?e:3,(this.m_options<=0||this.m_options>63)&&x("options"),this.m_inputGeometryCursor=t,this.m_sr=s}tock(){return!0}getRank(){return 1}next(){if(-1===this.m_index){this.m_shape=new e;const t=new i;t.setEmpty(),this.m_geometryIndex=this.m_shape.createGeometryUserIndex();for(let s=this.m_inputGeometryCursor.next();null!==s;s=this.m_inputGeometryCursor.next()){f(s);const e=this.m_shape.addGeometry(s);s.getGeometryType()!==S.enumPolygon&&x("Polygon Overlay only supports Polygons"),this.m_shape.setGeometryUserIndex(e,this.m_geometryIndex,this.m_inputGeometryCursor.getGeometryID());const o=this.m_inputGeometryCursor.getRank();o>r&&this.m_shape.assignRankToGeometryVertices(e,o);const n=new i;s.queryLooseEnvelope(n),t.mergeEnvelope2D(n),P(this.m_progressTracker)}this.m_inputGeometryCursor=null;const s=o(this.m_sr,t,!0),G=o(this.m_sr,t,!1);t.inflate(10*s.total()),this.m_shape.forceSetEnvelope2D(t),this.m_stitchMaxDeviation=0;let y=0;if(this.m_shape.hasCurves()){this.m_curveStitcher=new n;const e=h(s.total(),t);this.m_stitchMaxDeviation=a(s.total()),y=m(e,this.m_stitchMaxDeviation),p(this.m_shape,e,s.total(),12e3,this.m_curveStitcher,null,this.m_progressTracker)}if(c(this.m_shape,G,this.m_progressTracker)){u(this.m_shape,s.add(y),this.m_progressTracker,!0,!1);for(let t=this.m_shape.getFirstGeometry();t!==_;t=this.m_shape.getNextGeometry(t))this.m_shape.getGeometryType(t)===S.enumPolygon&&l(this.m_shape,t,-1,!1,_,this.m_progressTracker)}this.m_topoGraph=new g,this.m_topoGraph.buildGeometryParentageSets(),this.m_topoGraph.setEditShape(this.m_shape,this.m_progressTracker);const C=this.m_topoGraph.getFirstChain();for(let t=this.m_topoGraph.getChainFirstIsland(C);t!==_;t=this.m_topoGraph.getChainNextInParent(t))for(let s=this.m_topoGraph.getChainFirstIsland(t);s!==_;s=this.m_topoGraph.getChainNextInParent(s))this.m_chainStack.push(s);if(16&this.m_options){this.m_visitedChainsIndex=this.m_topoGraph.createUserIndexForChains(),this.m_bitsetToChains=new Map,this.m_chainsLists=new d;const t=[],s=this.m_topoGraph.getFirstChain();for(t.push(s);t.length>0;){const s=t.at(-1);t.pop();for(let e=this.m_topoGraph.getChainFirstIsland(s);e!==_;e=this.m_topoGraph.getChainNextInParent(e))for(let s=this.m_topoGraph.getChainFirstIsland(e);s!==_;s=this.m_topoGraph.getChainNextInParent(s)){const e=this.m_topoGraph.getChainBitSet(s);if(null!==e&&!e.isZero()){let t;this.m_bitsetToChains.has(e)?t=this.m_bitsetToChains.get(e):(t=this.m_chainsLists.createList(),this.m_bitsetToChains.set(e,t)),this.m_chainsLists.addElement(t,s)}t.push(s)}}}}return this.makeNextGeometry()}getGeometryID(){return this.m_index}getGeometryIDs(){return this.m_currentIds.slice()}getBoundaryIDs(){return this.m_currentEdgeIds.slice()}buildIdsFromBitset(t,s){if(!t)return;const e=this.m_topoGraph.getGeometriesFromBits(t);if(e.length>0){for(let t=0,i=e.length;t<i;t++)s.push(this.m_shape.getGeometryUserIndex(e[t],this.m_geometryIndex));v(s)}}makeGeometryFromChainSinglePart(t){this.m_index++;const s=new e;null!==this.m_curveStitcher&&s.setCurveStitcherPointer(this.m_curveStitcher);const i=this.m_topoGraph.extractPolygonFromChainAndIslands(s,_,t,_);return null!==this.m_curveStitcher&&this.m_curveStitcher.stitchCurves(s,i,this.m_stitchMaxDeviation,!1),s.getGeometry(i)}makeGeometryFromChainMultiPart(t,s){this.m_index++;const i=new e;null!==this.m_curveStitcher&&i.setCurveStitcherPointer(this.m_curveStitcher);const r=this.m_bitsetToChains.has(s);b(r);const o=this.m_bitsetToChains.get(s);let n=_;for(let t=this.m_chainsLists.getFirst(o);t!==d.st_nullNode();t=this.m_chainsLists.getNext(t)){const s=this.m_chainsLists.getElement(t);n=this.m_topoGraph.extractPolygonFromChainAndIslands(i,n,s,_),this.m_topoGraph.setChainUserIndex(s,this.m_visitedChainsIndex,1)}return null!==this.m_curveStitcher&&this.m_curveStitcher.stitchCurves(i,n,this.m_stitchMaxDeviation,!1),i.getGeometry(n)}makeNextGeometry(){for(P(this.m_progressTracker);this.m_chainStack.length>0;){this.m_currentIds.length=0,this.m_currentEdgeIds.length=0;const t=this.m_chainStack.at(-1);this.m_chainStack.pop();const s=this.m_topoGraph.getChainArea(t);if(0!==s)if(s<0)for(let s=this.m_topoGraph.getChainFirstIsland(t);s!==_;s=this.m_topoGraph.getChainNextInParent(s))this.m_topoGraph.getChainArea(s)>0&&this.m_chainStack.push(s);else{for(let s=this.m_topoGraph.getChainFirstIsland(t);s!==_;s=this.m_topoGraph.getChainNextInParent(s))this.m_topoGraph.getChainArea(s)<0&&this.m_chainStack.push(s);if(-1!==this.m_visitedChainsIndex&&1===this.m_topoGraph.getChainUserIndex(t,this.m_visitedChainsIndex))continue;const s=t=>{const s=t.getUnorderedBitIterator();let e=0;for(;s.next()!==G.npos();)if(e++,e>1)return e;return e},e=s(this.m_topoGraph.getChainBitSet(t));if(e>0){if(1===e&&2&this.m_options||e>1&&1&this.m_options){const s=this.m_topoGraph.getChainBitSet(t);return this.buildIdsFromBitset(s,this.m_currentIds),16&this.m_options?this.makeGeometryFromChainMultiPart(t,s):this.makeGeometryFromChainSinglePart(t)}}else{if(!(12&~this.m_options)){if(32&this.m_options){const s=this.m_topoGraph.getChainBoundaryBitSet(t);this.buildIdsFromBitset(s,this.m_currentEdgeIds)}return this.makeGeometryFromChainSinglePart(t)}if(4&this.m_options){const e=this.m_topoGraph.getChainBoundaryBitSet(t);if(s(e)>1)return 32&this.m_options&&this.buildIdsFromBitset(e,this.m_currentEdgeIds),this.makeGeometryFromChainSinglePart(t);continue}if(8&this.m_options){const e=this.m_topoGraph.getChainBoundaryBitSet(t);if(1===s(e))return 32&this.m_options&&this.buildIdsFromBitset(e,this.m_currentEdgeIds),this.makeGeometryFromChainSinglePart(t);continue}}}}return null}}const T=new class{getOperatorType(){return 10012}accelerateGeometry(t,s,e){return!1}canAccelerateGeometry(t){return!1}supportsCurves(){return!0}executeMany(t,s,e,i){return new F(t,s,e,i)}};function B(s,e){let i=0;e&&(e.overlaps&&(i|=1),e.noOverlaps&&(i|=2),e.gaps&&(i|=4),e.holes&&(i|=8),e.multiPart&&(i|=16));const r=s.map(C),o=k(s);return function(t,s,e){const i=T.executeMany(new y(t),s,e,null);return Array.from(i)}(r,j(o),i).map((t=>I(t,o))).filter(t)}function U(){return T.supportsCurves()}export{B as executeMany,U as supportsCurves};
