/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../geometry.js";import t from"../core/Collection.js";import s from"../core/Error.js";import{L as i}from"../chunks/Logger.js";import{g as o}from"../chunks/ensureType.js";import{M as r}from"../chunks/MultiOriginJSONSupport.js";import{throwIfAborted as a}from"../core/promiseUtils.js";import{watch as n,sync as p}from"../core/reactiveUtils.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{O as u}from"../core/Accessor.js";import h from"./Layer.js";import{b as c}from"../chunks/featureConversionUtils.js";import{O as d}from"../chunks/OptimizedGeometry.js";import{K as y,g,L as j,a as f,b as k,c as b,d as L,e as C,h as M,N as w,l as T,i as I,S as E}from"../chunks/KnowledgeGraphLayerDataManager.js";import S,{s as D,a as N,b as R,c as x,d as G,i as O}from"./knowledgeGraph/KnowledgeGraphSublayer.js";import{BlendLayer as A}from"./mixins/BlendLayer.js";import{OperationalLayer as v}from"./mixins/OperationalLayer.js";import{ScaleRangeLayer as _}from"./mixins/ScaleRangeLayer.js";import{fetchKnowledgeGraph as U}from"../rest/knowledgeGraphService.js";import P from"../geometry/Extent.js";import F from"../geometry/Point.js";import H from"../geometry/Polyline.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/reader.js";import"../geometry/SpatialReference.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../config.js";import"../chunks/assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/metadata.js";import"../chunks/tracking.js";import"../chunks/ObservableBase.js";import"../core/scheduling.js";import"../chunks/writer.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/Axis.js";import"../chunks/extentUtils.js";import"../chunks/boundsUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../chunks/asyncUtils.js";import"../core/Identifiable.js";import"../core/Loadable.js";import"../core/Promise.js";import"../time/TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/date.js";import"../chunks/locale.js";import"../chunks/datetime.js";import"../chunks/aaBoundingBox.js";import"../chunks/OptimizedFeature.js";import"../chunks/OptimizedFeatureSet.js";import"../core/sql.js";import"../geometry/projection.js";import"../chunks/vec3f64.js";import"../chunks/projectBuffer.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../Graphic.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"./support/fieldUtils.js";import"../intl.js";import"../chunks/number.js";import"../chunks/substitute.js";import"../chunks/messages.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../chunks/enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"../chunks/colorUtils.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils4.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils5.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"../chunks/Thumbnail.js";import"../chunks/calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./GraphicsLayer.js";import"../chunks/GraphicsCollection.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import"../chunks/lengthUtils.js";import"../chunks/jsonUtils.js";import"../chunks/parser.js";import"../chunks/utils2.js";import"../chunks/mat4.js";import"../chunks/common.js";import"../rest/knowledgeGraph/GraphQueryStreaming.js";import"../rest/knowledgeGraph/GraphQuery.js";import"../rest/support/Query.js";import"../chunks/DataLayerSource.js";import"./support/Field.js";import"../chunks/domains.js";import"./support/CodedValueDomain.js";import"./support/Domain.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/fieldType.js";import"../chunks/FullTextSearch.js";import"../chunks/spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/mixins/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/sizeVariableUtils.js";import"../chunks/visualVariableUtils.js";import"../chunks/compilerUtils.js";import"../renderers/support/ClassBreakInfo.js";import"../chunks/commonProperties.js";import"../symbols/support/jsonUtils.js";import"../chunks/layerUtils.js";import"../chunks/defaults.js";import"../chunks/defaultsJSON.js";import"../chunks/RendererLegendOptions.js";import"../renderers/DictionaryRenderer.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../chunks/Version2.js";import"./support/FieldsIndex.js";import"../chunks/UnknownTimeZone.js";import"../chunks/OverrideHelper.js";import"../chunks/colorUtils2.js";import"../chunks/vec4.js";import"../chunks/vec4f64.js";import"../chunks/utils7.js";import"../chunks/enums2.js";import"../chunks/quantizationUtils.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"../chunks/heatmapUtils.js";import"../renderers/PieChartRenderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/diffUtils.js";import"../renderers/support/UniqueValue.js";import"../renderers/support/UniqueValueClass.js";import"../renderers/support/UniqueValueGroup.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../renderers/support/jsonUtils.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../chunks/Queue.js";import"../core/workers/RemoteClient.js";import"../chunks/FeatureStore.js";import"../chunks/BoundsStore.js";import"../chunks/PooledRBush.js";import"../chunks/quickselect.js";import"../chunks/timeSupport.js";import"../chunks/projectionSupport.js";import"../chunks/json.js";import"../chunks/optimizedFeatureQueryEngineAdapter.js";import"../chunks/centroid.js";import"../chunks/QueryEngine.js";import"../geometry/support/normalizeUtils.js";import"../chunks/normalizeUtilsCommon.js";import"../chunks/simplify.js";import"../chunks/utils9.js";import"../chunks/utils10.js";import"../core/sql/WhereClause.js";import"../chunks/TimeOnly.js";import"../chunks/QueryEngineCapabilities.js";import"../chunks/utils13.js";import"../chunks/utils3.js";import"../chunks/basemapUtils.js";import"../Basemap.js";import"../chunks/loadAll.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../support/BasemapStyle.js";import"../chunks/writeUtils.js";import"../chunks/utils11.js";import"../chunks/generateRendererUtils.js";import"../chunks/SnappingCandidate.js";import"../chunks/queryUtils.js";import"../chunks/Scheduler.js";import"../core/signal.js";import"../chunks/debugFlags.js";import"../chunks/clientSideDefaults.js";import"../chunks/capabilities.js";import"../chunks/fieldProperties.js";import"./mixins/FeatureEffectLayer.js";import"./support/FeatureEffect.js";import"./support/FeatureFilter.js";import"./mixins/FeatureReductionLayer.js";import"./support/AggregateField.js";import"./support/ExpressionInfo.js";import"../chunks/layerContainerType.js";import"../chunks/FeatureReduction.js";import"./support/FeatureReductionBinning.js";import"../chunks/commonProperties2.js";import"../tables/AttributeTableTemplate.js";import"../tables/elements/AttributeTableGroupElement.js";import"../tables/elements/AttributeTableElement.js";import"../tables/support/elements.js";import"../tables/elements/AttributeTableAttachmentElement.js";import"../tables/elements/AttributeTableFieldElement.js";import"../tables/elements/AttributeTableRelationshipElement.js";import"../chunks/featureLayerUtils.js";import"../chunks/uuid.js";import"../chunks/featureQueryAll.js";import"../rest/support/AttachmentQuery.js";import"../rest/support/RelationshipQuery.js";import"./support/LabelClass.js";import"../chunks/labelUtils.js";import"./support/FeatureReductionCluster.js";import"./support/FeatureReductionSelection.js";import"../chunks/clusterUtils.js";import"../chunks/MD5.js";import"./mixins/OrderedLayer.js";import"../chunks/OrderByInfo.js";import"./mixins/RefreshableLayer.js";import"./mixins/TemporalLayer.js";import"./support/TimeInfo.js";import"../time/TimeInterval.js";import"../chunks/labelingInfo.js";import"../rest/support/FeatureSet.js";import"../support/popupUtils.js";import"../rest/knowledgeGraph/GraphQueryResult.js";import"../chunks/GraphQueryResultHeader.js";import"../rest/knowledgeGraph/GraphQueryStreamingResult.js";import"../rest/knowledgeGraph/KnowledgeGraph.js";import"../rest/knowledgeGraph/DataModel.js";import"../rest/knowledgeGraph/EntityType.js";import"../rest/knowledgeGraph/GraphObjectType.js";import"../rest/knowledgeGraph/FieldIndex.js";import"../rest/knowledgeGraph/GraphProperty.js";import"../rest/knowledgeGraph/RelationshipType.js";import"../rest/knowledgeGraph/ServiceDefinition.js";import"../rest/knowledgeGraph/Entity.js";import"../rest/knowledgeGraph/GraphNamedObject.js";import"../rest/knowledgeGraph/GraphObject.js";import"../rest/knowledgeGraph/Relationship.js";import"../rest/knowledgeGraph/SearchIndex.js";import"../chunks/ObjectValue.js";import"../rest/knowledgeGraph/Path.js";import"../rest/knowledgeGraph/GraphApplyEditsResult.js";var B;!function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absoluteValue"}(B||(B={}));let V=class extends(v(A(_(r(h))))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(t.ofType(S)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new P({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(t.ofType(S)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e?.inclusionModeDefinition,e?.dataPreloadedInLocalCache&&!e?.inclusionModeDefinition)throw new s("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles(n((()=>this.layers.concat(this.tables)),((e,t)=>this._handleSublayersChange(e,t)),p))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:s,dataPreloadedInLocalCache:i,defaultLinkChartConfig:o}=e;return{url:t,title:s,dataPreloadedInLocalCache:i,defaultLinkChartConfig:o}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let o=[],r=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new s("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(o=e.knowledgeGraph.dataModel.entityTypes??[],r=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((s,a)=>{const n=this._graphTypeLookup.get(a);if(!n)return i.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(a);"relationship"===n.type?t.has(a)||(t.add(a),r.push(n)):"entity"===n.type?t.has(a)||(t.add(a),o.push(n)):(i.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(a))})):(o=e.knowledgeGraph.dataModel.entityTypes??[],r=e.knowledgeGraph.dataModel.relationshipTypes??[]);const a=new y({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=o,this.memberRelationshipTypes=r,this.dataManager=a}load(e){const t=async()=>{const e=[],t=[];this.loadLayerAssumingLocalCache(),await O(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1})),await this._initializeDiagram(),this.layers.forEach((s=>{t.push(s.refreshCachedQueryEngine()),e.push(new Promise((e=>{s.on("layerview-create",(()=>{e(null)}))})))})),this.tables.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t)};return this.addResolvingPromise(new Promise((s=>{U(this.url).then((async i=>{if(this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache){const e=E.getInstance();for(const[t,s]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions??[])for(const i of s.members?.values()??[]){const s=e.readFromStoreById(`${t}__${i.id}`);s&&o(this.dataManager.sublayerCaches,t,(()=>new Map)).set(i.id,s)}await t()}else{const s="GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,s,!0).then((async()=>{a(e),await t()})))}s(null)}))}))),Promise.resolve(this)}set inclusionModeDefinition(e){"loaded"!==this.loadStatus&&"failed"!==this.loadStatus?this._set("inclusionModeDefinition",e):i.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}async addRecords(e,t){let s=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(s=await g(e,this.dataManager.knowledgeGraph));const i=e.concat(s).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));await this._handleNewRecords(i)}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:s=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){let i=[];for(const t of e)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.members?.has(t.id)&&i.push(t);if(t){const e=new Set,t=[];for(const t of i)if(this.dataManager.nodeConnectionsLookup.has(t.id))for(const s of this.dataManager.nodeConnectionsLookup.get(t.id))e.add(s);for(const s of e)if(this.dataManager.memberIdTypeLookup.has(s))for(const e of this.dataManager.memberIdTypeLookup.get(s))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:s,typeName:e});i=i.concat(t)}this.dataManager.removeFromLayer(i);for(const e of i)this.sublayerIdsCache.get(e.typeName)?.delete(e.id),this.dataManager.relationshipTypeNames.has(e.typeName)?this.relationshipLinkChartDiagramLookup.delete(e.id):this.entityLinkChartDiagramLookup.delete(e.id);s&&await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,this._currentLinkChartConfig.layoutOptions);const o=[];return this.layers.forEach((e=>{o.push(e.refreshCachedQueryEngine())})),await Promise.all(o),this._refreshNamedTypes(),i}async expand(e,t){const s=await this.dataManager.getConnectedRecordIds(e,t),i=s.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(s),{records:i}}loadLayerAssumingLocalCache(){const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.originIdOf("layers")===u.DEFAULTS?this._createSublayers(e,this.layers,(e=>!!e.geometryType)):this._updateSublayers(e,this.layers),this.originIdOf("tables")===u.DEFAULTS?this._createSublayers(e,this.tables,(e=>!e.geometryType)):this._updateSublayers(e,this.tables),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{const s=o(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((({id:e,linkChartLocation:i})=>{if(s.add(e),i){const s=i instanceof d?i:c(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e,s):this.entityLinkChartDiagramLookup.set(e,s)}}))}))}async calculateLinkChartLayout(e="RADIAL_TREE",t){const o=[],r=[],a=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{o.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{r.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const n=new Map,p=new Map,l=new Map,m=new Map,u=new Uint8Array(o.length),h=new Float64Array(o.length),d=new Float64Array(o.length),y=new Float64Array(o.length),g=new Float64Array(o.length),E=new Uint32Array(r.length),S=new Uint32Array(r.length),O=new Float64Array(r.length),A=new Float64Array(r.length),v=[],_=new P({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let U,B="FORCE_DIRECTED",V=0,z=0;const Q=j.apply;switch(B="GEOGRAPHIC"===e?"FORCE_DIRECTED":e,B){case"FORCE_DIRECTED":U=M.apply;break;case"COMMUNITY":U=C.apply;break;case"HIERARCHICAL":U=L.apply;break;case"RADIAL_TREE":U=b.apply;break;case"SMART_TREE":U=k.apply;break;default:U=f.apply}let q=!1;o.forEach((({typeName:s,feature:i})=>{if("CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e&&t?.lockedNodeLocations?.has(i.attributes[D])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(s)?u[V]=w.IsGeographic:u[V]=w.None;const o=t.lockedNodeLocations.get(i.attributes[D]);h[V]=o.x,d[V]=o.y}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(s)){u[V]=w.IsGeographic;let e=null;const t=i.attributes[this.dataManager.geographicLookup.get(s).name],o=this.dataManager.geographicLookup.get(s)?.geometryType;switch(o){case"esriGeometryPoint":h[V]=t?.x,d[V]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(h[V]=e.x,d[V]=e.y):u[V]=w.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(h[V]=e.x,d[V]=e.y):u[V]=w.IsMovable;break;default:u[V]=w.IsMovable}(null==h[V]||null==d[V]||Number.isNaN(h[V])||Number.isNaN(d[V]))&&(u[V]=w.IsMovable,h[V]=0,d[V]=0)}else if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){!q&&t?.lockedNodeLocations?.has(i.attributes[D])&&(q=!0);const e=t?.timeInfoByTypeName?.get(s),o=e?.startField,r=o&&e?.startField?i.attributes[o]:null;y[V]=r?new Date(r).getTime():NaN;const a=e?.endField,n=a&&e?.endField?i.attributes[a]:null;g[V]=n?new Date(n).getTime():NaN,h[V]=0,d[V]=0,u[V]=w.IsMovable}else u[V]=w.IsMovable,h[V]=0,d[V]=0;m.set(i.attributes[D],V),v[V]={feature:i,typeName:s},V++})),q&&i.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let W=!1;const K=new Map;r.forEach((s=>{const i=s.feature.attributes[N],o=s.feature.attributes[R],r=m.get(i),n=m.get(o),p=t?.timeInfoByTypeName?.get(s.typeName),l=t?.timeInfoByTypeName?p?.startField:null,u=l?s.feature.attributes[l]:null,h=p?.endField,c=h?s.feature.attributes[h]:null;if(void 0!==r&&void 0!==n){let t=i+"-"+o;"CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e||(t=t+"-"+u+"-"+c);const p=K.get(t),l=p?.has(s.typeName);l||(E[z]=r,S[z]=n,"CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e||(O[z]=u?new Date(u).getTime():NaN,A[z]=c?new Date(c).getTime():NaN),void 0===p?K.set(t,new Map([[s.typeName,z]])):p.set(s.typeName,z),z++),a.push(s)}else W=!0,this.relationshipLinkChartDiagramLookup.set(i,null)})),W&&i.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const $=this._validateLayoutSettings(e,t),J=this._convertLayoutSettingsToCalculationSettings($);await T();let Y=!1,Z=null;if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){let s;({success:Y,links:Z,graphics:s}=Q(u,h,d,y,g,E.subarray(0,z),S.subarray(0,z),O.subarray(0,z),A.subarray(0,z),"CHRONOLOGICAL_MULTIPLE"===e,t?.chronologicalLayoutSettings??{})),Y&&(this.chronologicalAuxiliaryGraphics=s)}else({success:Y,links:Z}=U(u,h,d,E.subarray(0,z),S.subarray(0,z),J.computationBudgetTime,J.idealEdgeLengthMultiplier,J.repulsionRadiusMultiplier));if(!Y)throw new s("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let e=0;e<v.length;e++){if(d[e]>84.9999?d[e]=84.9999:d[e]<-84.9999&&(d[e]=-84.9999),h[e]>179.9999?h[e]=179.9999:h[e]<-179.9999&&(h[e]=-179.9999),v[e].feature.attributes[x]=new F(h[e],d[e]),n.has(v[e].typeName)){const t=n.get(v[e].typeName);t?.set(v[e].feature.attributes[D],v[e].feature)}else{const t=new Map;t.set(v[e].feature.attributes[D],v[e].feature),n.set(v[e].typeName,t)}l.set(v[e].feature.attributes[D],v[e].feature);const t=c(v[e].feature.attributes[x]);this.entityLinkChartDiagramLookup.set(v[e].feature.attributes[D],v[e].feature.attributes[x]?t:null),v[e].feature.attributes[x].x<_.xmin&&(_.xmin=v[e].feature.attributes[x].x),v[e].feature.attributes[x].x>_.xmax&&(_.xmax=v[e].feature.attributes[x].x),v[e].feature.attributes[x].y<_.ymin&&(_.ymin=v[e].feature.attributes[x].y),v[e].feature.attributes[x].y>_.ymax&&(_.ymax=v[e].feature.attributes[x].y)}if(this.linkChartExtent.xmin=_.xmin,this.linkChartExtent.xmax=_.xmax,this.linkChartExtent.ymin=_.ymin,this.linkChartExtent.ymax=_.ymax,!Z)throw new s("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const X=new Map,ee=new Map,te=new Map,se=new Set;for(let s=0;s<a.length;s++){const o=[],r=a[s],n=r.feature.attributes[N],u=r.feature.attributes[R];let h=n+"-"+u;if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){const e=t?.timeInfoByTypeName?.get(r.typeName),s=t?.timeInfoByTypeName?e?.startField:null,i=s?r.feature.attributes[s]:null,o=e?.endField;h+="-"+i+"-"+(o?r.feature.attributes[o]:null)}const d=K.get(h).get(r.typeName),y=0===d?0:Z?.vertexEndIndex[d-1];if(!se.has(d)){if(se.add(d),Z.types[d]===I.Recursive){const e=[Z.vertices[2*y],Z.vertices[2*y+1]],t=[Z.vertices[2*(y+1)],Z.vertices[2*(y+1)+1]],s=[.5*(e[0]+t[0]),.5*(e[1]+t[1])],i=[s[0]-e[0],s[1]-e[1]],r=[s[0]+i[1],s[1]-i[0]],a=[s[0]-i[1],s[1]+i[0]];o.push(e),o.push(r),o.push(t),o.push(a),o.push(e)}else{if(Z.types[d]!==I.Regular){i.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let e=y;e<Z.vertexEndIndex[d];e++)o.push([Z.vertices[2*e],Z.vertices[2*e+1]])}if("CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e){const e=v[m.get(n)]?.feature.attributes[x],t=v[m.get(u)]?.feature.attributes[x];o[0][0]===e.x&&o[0][1]===e.y||(o[0]=[e.x,e.y]),o[o.length-1][0]===t.x&&o[o.length-1][1]===t.y||(o[o.length-1]=[t.x,t.y])}for(let e=1;e<o.length-1;e++)o[e][1]>85.5?o[e][1]=85.5:o[e][1]<-85.5&&(o[e][1]=-85.5),o[e][0]>179.9999?o[e][0]=179.9999:o[e][0]<-179.9999&&(o[e][0]=-179.9999);X.has(h)?X.get(h).push(o):X.set(h,[o])}const g=X.get(h);ee.has(h)||(ee.set(h,new Map),te.set(h,new Map));const j=ee.get(h),f=te.get(h);j.has(r.typeName)||(j.set(r.typeName,g.shift()),f.set(r.typeName,0));const k=j.get(r.typeName);f.set(r.typeName,f.get(r.typeName)+1);const b=new H({paths:[k]});if(r.feature.attributes[x]=b,p.has(r.typeName)){const e=p.get(r.typeName);e?.set(r.feature.attributes[D],r.feature)}else{const e=new Map;e.set(r.feature.attributes[D],r.feature),p.set(r.typeName,e)}l.set(r.feature.attributes[D],r.feature);const L=c(r.feature.attributes[x]);this.relationshipLinkChartDiagramLookup.set(r.feature.attributes[D],r.feature.attributes[x]?L:null)}for(const e of a)e.feature.attributes[G]=te.get(e.feature.attributes[N]+"-"+e.feature.attributes[R])?.get(e.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutOptions:$},{nodes:n,links:p,idMap:l}}async applyNewLinkChartLayout(e="RADIAL_TREE",t){const s=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach((e=>{s.push(e.refreshCachedQueryEngine())})),await Promise.all(s),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const s=t.linkChartLocation;let i;const o=t.id;s&&(i="x"in s?{x:s.x,y:s.y}:{x:s.coords[0],y:s.coords[1]},e.set(o,new F({x:i.x,y:i.y})))}))})),e}async synchronizeInclusionListWithCache(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const s=new Set(Array.from(this.dataManager.sublayerCaches.get(t).keys()));Array.from(e.members.keys()).filter((e=>!s.has(e))).forEach((t=>{e.members?.delete(t)}))}})),e()}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e){let t=[];for(const e of this.dataManager.relationshipTypeNames){const s=this.sublayerIdsCache.get(e);s&&(t=t.concat(Array.from(s.keys())))}const s=await this.dataManager.getRelationshipsBetweenNodes(e,t);return await this._handleNewRecords(s),{records:s}}async connectFromEntities(e){let t=[];for(const e of this.dataManager.relationshipTypeNames){const s=this.sublayerIdsCache.get(e);s&&(t=t.concat(Array.from(s.keys())))}let s=[];for(const e of this.dataManager.entityTypeNames){const t=this.sublayerIdsCache.get(e);t&&(s=s.concat(Array.from(t)))}const i=await this.dataManager.getRelationshipsFromNodes(e,s,t);return await this._handleNewRecords(i),{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="RADIAL_TREE",t){const s=new Map;this.layers.forEach((e=>{s.set(e.objectType.name,e.timeInfo)})),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:s,...t})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const s of e)this.sublayerIdsCache.has(s.typeName)||(this.sublayerIdsCache.set(s.typeName,new Set),t.push(s.typeName)),this.sublayerIdsCache.get(s.typeName).add(s.id);for(const e of t){const t=this._graphTypeLookup.get(e);if(t){const s=this._createSublayer(t);"entity"===t.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),s.geometryType?this.layers.push(s):this.tables.push(s),this.dataManager.sublayerCaches.set(e,new Map)}}await O(this,t),await this.dataManager.refreshCacheContent(e.map((e=>e.id)));const s=Object.assign({},this._currentLinkChartConfig.layoutOptions);s.lockedNodeLocations=new Map;for(const[e,t]of this.entityLinkChartDiagramLookup.entries())t&&s.lockedNodeLocations.set(e,new F(t.coords[0],t.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,s)}_createSublayers(e,t,s){e.forEach((e=>{const i=this._createSublayer(e);s(i)&&t.push(i),this._updateSublayerCaches(e)}))}_updateSublayers(e,t){t.forEach((t=>{t.parentCompositeLayer=this;const s=e.find((e=>e.type===t.graphType&&e.name===t.graphTypeName));s&&(t.objectType=s,t.read({title:s.name},{origin:"service"}),this._updateSublayerCaches(s))}))}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const s=e.linkChartLocation;let i;const o=e.id;if(!s)return;i="x"in s?{x:s.x,y:s.y}:{x:s.coords[0],y:s.coords[1]};const r=c(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(o,r):this.entityLinkChartDiagramLookup.set(o,r),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[N]),s=this.relationshipLinkChartDiagramLookup.get(e.attributes[R]);if(t&&s){const i=c(new H({paths:[[[t.coords[0],t.coords[1]],[s.coords[0],s.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[D],i)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[D],null)}))}))):await this._calculateLayoutWithSublayerTimeInfo(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.defaultLinkChartConfig.layoutOptions||{}}):await this._calculateLayoutWithSublayerTimeInfo("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateLayoutSettings(e,t){const s=e=>"number"==typeof e&&!isNaN(e),o={organicLayoutSettings:{},chronologicalLayoutSettings:{}};if(!new Set(["FORCE_DIRECTED","COMMUNITY","GEOGRAPHIC","CHRONOLOGICAL_MULTIPLE","CHRONOLOGICAL_SINGLE"]).has(e)||!t)return o;t.organicLayoutSettings??={};const{computationBudgetTime:r,repulsionRadiusMultiplier:a,idealEdgeLength:n,idealEdgeLengthType:p}=t.organicLayoutSettings;var l,m,u,h;if(s(l=r)&&l>=1?o.organicLayoutSettings.computationBudgetTime=r:void 0!==r&&i.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),s(m=a)&&m>=1?o.organicLayoutSettings.repulsionRadiusMultiplier=a:void 0!==a&&i.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting"),"GEOGRAPHIC"===e&&(void 0!==n||void 0!==p)&&(h=p,Object.values(B).includes(h)?o.organicLayoutSettings.idealEdgeLengthType=p:void 0!==p&&i.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),s(u=n)&&u>=0?o.organicLayoutSettings.idealEdgeLength=n:void 0!==n&&i.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),("CHRONOLOGICAL_MULTIPLE"===e||"CHRONOLOGICAL_SINGLE"===e)&&t.chronologicalLayoutSettings){const e=t.chronologicalLayoutSettings;e.durationLineWidth&&e.durationLineWidth<0&&i.getLogger(this).warn("Invalid layout durationLineWidth setting, will revert to default setting")}return o}_convertLayoutSettingsToCalculationSettings(e){e.organicLayoutSettings??={};let t=e.organicLayoutSettings.idealEdgeLength;return e.organicLayoutSettings.idealEdgeLengthType===B.ABSOLUTE&&(void 0===t?t=-1:t*=-1),{computationBudgetTime:e.organicLayoutSettings.computationBudgetTime,repulsionRadiusMultiplier:e.organicLayoutSettings.repulsionRadiusMultiplier,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new S({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this})),e.on("after-remove",(({item:e})=>{e.parent=null}))],"sublayers-owner"))}};e([l()],V.prototype,"dataPreloadedInLocalCache",void 0),e([l()],V.prototype,"defaultLinkChartConfig",void 0),e([l()],V.prototype,"dataManager",void 0),e([l()],V.prototype,"inclusionModeDefinition",null),e([l()],V.prototype,"knowledgeGraph",void 0),e([l({type:t.ofType(S),json:{write:{ignoreOrigin:!0}}})],V.prototype,"layers",void 0),e([l()],V.prototype,"entityLinkChartDiagramLookup",void 0),e([l()],V.prototype,"relationshipLinkChartDiagramLookup",void 0),e([l()],V.prototype,"linkChartExtent",void 0),e([l()],V.prototype,"memberEntityTypes",void 0),e([l()],V.prototype,"memberRelationshipTypes",void 0),e([l({type:["LinkChartLayer"]})],V.prototype,"operationalLayerType",void 0),e([l()],V.prototype,"sublayerIdsCache",void 0),e([l({type:t.ofType(S),json:{write:{ignoreOrigin:!0}}})],V.prototype,"tables",void 0),e([l({json:{read:!1}})],V.prototype,"type",void 0),e([l({json:{read:!1}})],V.prototype,"chronologicalAuxiliaryGraphics",void 0),V=e([m("esri.layers.LinkChartLayer")],V);const z=V;export{z as default};
