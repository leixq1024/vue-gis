/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import o from"../../request.js";import t from"../../core/Error.js";import{a as s}from"../../core/promiseUtils.js";import{L as r}from"../../chunks/Logger.js";import{isAbsolute as i,makeAbsolute as n,getProxyRule as p,addProxy as m,isBlobProtocol as c,isDataProtocol as a}from"../../core/urlUtils.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{w as d}from"../../chunks/writer.js";import h,{m as j,a as y}from"./MediaElementBase.js";import{i as g}from"../../chunks/persistableUrlUtils.js";import"../../config.js";import"../../kernel.js";import"../../chunks/handleUtils.js";import"../../chunks/maybe.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../chunks/ensureType.js";import"../../core/Identifiable.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../chunks/MultiOriginJSONSupport.js";import"../../chunks/reader.js";import"./ControlPointsGeoreference.js";import"../../core/Clonable.js";import"../../chunks/perspectiveUtils.js";import"../../chunks/mat3.js";import"../../chunks/mat3f64.js";import"../../chunks/vec2.js";import"../../chunks/common.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/screenUtils.js";import"../../chunks/vec2f64.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Polygon.js";import"../../geometry/Extent.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/zmUtils.js";import"../../geometry/projection.js";import"../../chunks/SimpleObservable.js";import"../../geometry/Multipoint.js";import"../../geometry/Polyline.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/GeoreferenceBase.js";import"../../geometry.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"./CornersGeoreference.js";import"./ExtentAndRotationGeoreference.js";let v=class extends h{constructor(e){super(e),this.autoplay=!0,this.content=null,this.type="video"}load(){const e=this.video;return"string"==typeof e?this.addResolvingPromise(this._preProcessVideoUrl(e).then((e=>{const o=document.createElement("video");return o.src=e,o.crossOrigin="anonymous",o.autoplay=!0,o.muted=!0,o.loop=!0,o.playsInline=!0,this._loadVideo(o).then((()=>{this._set("content",o)}))}))):e instanceof HTMLVideoElement?this.addResolvingPromise(this._loadVideo(e).then((()=>{this._set("content",e)}))):this.addResolvingPromise(Promise.reject(new t("video-element:invalid-video-type","Invalid video type",{video:e}))),Promise.resolve(this)}get contentWidth(){return this.content?.videoWidth??0}get contentHeight(){return this.content?.videoHeight??0}set video(e){"not-loaded"===this.loadStatus?this._set("video",e):r.getLogger(this).error("#video","video cannot be changed after the element is loaded.")}writeVideo(e,o,s,r){if(!e)return void(r?.messages&&r.messages.push(new t("video-element:unsupported-video","video source is missing")));const p=function(e){return"string"==typeof e&&!a(e)&&!c(e)}(e)?e:null;if(!p)return void(r?.messages&&r.messages.push(new t("video-element:unsupported-video","video source must be an absolute url")));!i(p)&&r?.blockedRelativeUrls&&r.blockedRelativeUrls.push(p);const m=n(p);g(m)?r?.messages&&r.messages.push(new t("video-element:unsupported-video","video source cannot be an item resource")):o[s]=m}async _preProcessVideoUrl(e){if(p(e))return m(e);try{return await o(e,{method:"head"}),e}catch{return m(e,!0)}}_loadVideo(e){return new Promise(((o,t)=>{const r=s(e,"canplay",(()=>{this.removeHandles("canplay"),this.autoplay?e.play().then(o,t):o()}));this.addHandles(r,"canplay"),"anonymous"!==e.crossOrigin&&(e.crossOrigin="anonymous",c(e.src)||(e.src=e.src))}))}};e([u()],v.prototype,"autoplay",void 0),e([u({readOnly:!0})],v.prototype,"content",void 0),e([u({readOnly:!0})],v.prototype,"contentWidth",null),e([u({readOnly:!0})],v.prototype,"contentHeight",null),e([u(j)],v.prototype,"video",null),e([d("video")],v.prototype,"writeVideo",null),e([u(y)],v.prototype,"type",void 0),v=e([l("esri.layers.support.VideoElement")],v);const k=v;export{k as default};
