/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import n from"./RasterFunction.js";import{g as t,a as r}from"../../chunks/colorUtils.js";import{colormapName as e}from"./rasterFunctionConstants.js";import{a as o,d as u}from"../../chunks/colorRampUtils.js";import{s as i}from"../../chunks/focalStatUtils.js";import"../../chunks/tslib.es6.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/lang.js";import"../../core/Handles.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/maybe.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../core/Error.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/enumeration.js";import"../../chunks/jsonMap.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../Color.js";import"../../chunks/mathUtils.js";import"../../chunks/colorUtils2.js";import"../../chunks/vec4.js";import"../../chunks/common.js";import"../../chunks/vec4f64.js";import"./PixelBlock.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/pixelRangeUtils.js";function a(t,r,e){return Object.keys(r).forEach((n=>{null==r[n]&&delete r[n]})),e||(e="unknown"),new n({functionName:t,functionArguments:r,outputPixelType:e})}const s={"user-defined":-1,"line-detection-horizontal":0,"line-detection-vertical":1,"line-detection-left-diagonal":2,"line-detection-right-diagonal":3,"gradient-north":4,"gradient-west":5,"gradient-east":6,"gradient-south":7,"gradient-north-east":8,"gradient-north-west":9,"smooth-arithmetic-mean":10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,"sobel-horizontal":17,"sobel-vertical":18,sharpen:19,sharpen2:20,"point-spread":21,none:255};function c(n){const{raster:t,outputPixelType:r}=n;if("convolutionType"in n&&"user-defined"!==n.convolutionType)return a("Convolution",{type:s[n.convolutionType]??255,raster:t},r);const{rows:e,cols:o,kernel:u}=n;return a("Convolution",{type:-1,rows:e,cols:o,kernel:u,raster:t},r)}function d(n){const{contrastOffset:t,brightnessOffset:r,raster:e,outputPixelType:o}=n;return a("ContrastBrightness",{contrastOffset:t,brightnessOffset:r,raster:e},o)}function p(n,t){const{raster:r,dynamicRangeAdjustment:e,gamma:o,useGamma:u,outputMin:i=0,outputMax:a=255}=t;return{raster:r,stretchType:n,min:i,max:a,useGamma:!!u,gamma:o,dra:!!e}}function l(n){const t=p(5,n);return t.statistics=n.statistics?.map((n=>[n.min,n.max,n.avg??0,n.stddev??-1])),a("Stretch",t,n.outputPixelType)}function f(n){const t=p(3,n);return t.statistics=n.statistics?.map((n=>[n.min,n.max,n.avg??0,n.stddev??-1])),t.numberOfStandardDeviations=n.numberOfStandardDeviations??2,a("Stretch",t,n.outputPixelType)}function m(n){const t=p(6,n);return t.minPercent=n.minPercent??.25,t.maxPercent=n.maxPercent??.25,a("Stretch",t,n.outputPixelType)}function k(n){return a("Stretch",p(0,n),n.outputPixelType)}function w(n){return a("Stretch",p(4,n),n.outputPixelType)}function h(n,t,r,e=[]){const{raster:o,outputPixelType:u}=n;return a("BandArithmetic",{raster:o,method:t,bandIndexes:r.map((n=>n+1)).concat(e).join(" ")},u)}function y(n){const{nirBandId:t,redBandId:r,scientificOutput:e=!0,raster:o,outputPixelType:u}=n;return a("NDVI",{raster:o,visibleBandID:r,infraredBandID:t,scientificOutput:e},u)}function I(n){const{nirBandId:t,redBandId:r,factor:e=.33}=n;return h(n,2,[t,r],[e])}function B(n){const{nirBandId:t,redBandId:r,slope:e=.33,intercept:o=.5,factor:u=1.5}=n;return h(n,3,[t,r],[e,o,u])}function g(n){const{nirBandId:t,redBandId:r}=n;return h(n,4,[t,r])}function x(n){const{nirBandId:t,redBandId:r}=n;return h(n,5,[t,r])}function T(n){const{nirBandId:t,redBandId:r,slope:e=.3,gradient:o=.5}=n;return h(n,6,[t,r],[e,o])}function j(n){return h(n,7,n.bandIds)}function P(n){return h(n,8,n.bandIds)}function b(n){const{redBandId:t,greenBandId:r,blueBandId:e}=n;return h(n,9,[t,r,e])}function v(n){const{nirBandId:t,greenBandId:r}=n;return h(n,10,[t,r])}function S(n){const{nirBandId:t,redBandId:r}=n;return h(n,11,[t,r])}function R(n){const{nirBandId:t,reBandId:r}=n;return h(n,12,[t,r])}function O(n){const{nirBandId:t,reBandId:r}=n;return h(n,13,[t,r])}function N(n){const{nirBandId:t,redBandId:r,greenBandId:e}=n;return h(n,14,[t,r,e])}function C(n){const{nirBandId:t,reBandId:r,greenBandId:e}=n;return h(n,15,[t,r,e])}function z(n){const{nirBandId:t,reBandId:r}=n;return h(n,16,[t,r])}function D(n){const{nirBandId:t,greenBandId:r}=n;return h(n,17,[t,r])}function F(n){const{nirBandId:t,greenBandId:r}=n;return h(n,18,[t,r])}function A(n){const{nirBandId:t,redBandId:r,blueBandId:e}=n;return h(n,19,[t,r,e])}function E(n){const{redBandId:t,blueBandId:r}=n;return h(n,20,[t,r])}function M(n){const{swirBandId:t,nirBandId:r}=n;return h(n,21,[t,r])}function J(n){const{swir1BandId:t,swir2BandId:r}=n;return h(n,22,[t,r])}function U(n){const{greenBandId:t,nirBandId:r,swirBandId:e,alpha:o=.5}=n;return h(n,23,[t,r,e],[o])}function L(n){const{redBandId:t,nirBandId:r}=n;return h(n,24,[t,r])}function G(n){const{nirBandId:t,swirBandId:r}=n;return h(n,25,[t,r])}function V(n){const{swirBandId:t,nirBandId:r}=n;return h(n,26,[t,r])}function Z(n){const{nirBandId:t,swirBandId:r}=n;return h(n,27,[t,r])}function $(n){const{greenBandId:t,swirBandId:r}=n;return h(n,28,[t,r])}function H(n){const{greenBandId:t,swirBandId:r}=n;return h(n,29,[t,r])}function W(n){const{raster:t,bandIndexes:r,outputPixelType:e}=n;return a("BandArithmetic",{raster:t,method:0,bandIndexes:r},e)}function q(n){return"colormap"in n?function(n){const e=n.colormap.map((n=>{if("value"in n){const e="string"==typeof n.color?t(n.color)??r(n.color):n.color;(n=[n.value,...e])[4]&&n[4]<=1&&(n[4]=Math.round(255*n[4]))}return n})),{raster:o,outputPixelType:u}=n;return a("Colormap",{colormap:e,raster:o},u)}(n):"colorRamp"in n?function(n){const{raster:t,colorRamp:r,outputPixelType:e}=n;return a("Colormap",{colorRamp:"toJSON"in r?r.toJSON():r,raster:t},e)}(n):function(n){const{colorRampName:t}=n,r=Object.values(e).find((n=>n.toLowerCase()===t?.toLowerCase())),u=o.toJSON(t),{raster:i,outputPixelType:s="unknown"}=n;return a("Colormap",r?{colormapName:r,raster:i}:{colorRampName:u,raster:i},s)}(n)}function K(n){const{raster:t,outputPixelType:r="u8"}=n;return a("ColormapToRGB",{raster:t},r)}function Q(n){const{raster:t,histograms:r,outputPixelType:e}=n,o=n.statistics?.map((n=>({min:n.min,max:n.max,mean:n.avg,standardDeviation:n.stddev})));return a("StatisticsHistograms",{raster:t,statistics:o,histograms:r},e)}function X(n){const{raster:t,attributeTable:r,outputPixelType:e="unknown"}=n;return a("Table",{raster:t,attributeTableAsRecordSet:"toJSON"in r?r.toJSON():r},e)}function Y(n){const{raster:t,outputPixelType:r="unknown"}=n,e={raster:t,missingBandAction:"fail"===n.missingBandAction?1:0};return"bandIds"in n?e.bandIds=n.bandIds:"bandNames"in n?e.bandNames=n.bandNames:"bandWavelengths"in n&&(e.bandWavelengths=n.bandWavelengths),a("ExtractBand",e,r)}function _(n){const{rasters:t,outputPixelType:r}=n;return a("CompositeBand",{rasters:t},r)}function nn(n){const{allowUnmatched:t,raster:r,rangeMaps:e,outputPixelType:o}=n,u=e?.filter((({output:n})=>null!=n)),i=u?.flatMap((({range:n})=>n)),s=u?.map((({output:n})=>n)),c=e?.filter((n=>null==n.output))?.flatMap((({range:n})=>n));return a("Remap",{allowUnmatched:t,raster:r,inputRanges:i,outputValues:s,noDataRanges:c},o)}function tn(n){const{raster:t,outputPixelType:r="unknown"}=n,e=n.includedRanges?.flatMap((n=>n)),o=n.noDataValues?.map((n=>n.join(" ")));return a("Mask",{raster:t,includedRanges:e,noDataInterpretation:"match-all"===n.noDataInterpretation?1:0,noDataValues:o},r)}function rn(n){const{geometry:t,keepOutside:r,outputPixelType:e="unknown",raster:o}=n;return a("Clip",{clippingGeometry:"declaredClass"in t?t.toJSON():t,clippingType:r?2:1,raster:o},e)}function en(n){const{weights:t,outputPixelType:r="unknown",raster:e}=n;return a("Grayscale",{conversionParameters:t,raster:e},r)}function on(n,t,r="unknown"){let e;return"object"!=typeof t||!("raster"in t)&&("rasterFunction"in t||"functionName"in t)?e=[t]:(e=[t.raster??"$$"],r=t.outputPixelType??"unknown"),a("Local",{operation:n,rasters:e},r)}function un(n,t,r,e="unknown"){let o;return"object"==typeof t&&"raster"in t?(o=[t.raster,t.raster2],e=t.outputPixelType??"unknown"):o=[t,r],a("Local",{operation:n,rasters:o},e)}function an(n,t,r="unknown"){return un(1,n,t,r)}function sn(n,t,r="unknown"){return un(2,n,t,r)}function cn(n,t,r="unknown"){return un(3,n,t,r)}function dn(n,t="unknown"){return on(4,n,t)}function pn(n,t,r="unknown"){return un(5,n,t,r)}function ln(n,t="unknown"){return on(6,n,t)}function fn(n,t="unknown"){return on(7,n,t)}function mn(n,t="unknown"){return on(8,n,t)}function kn(n,t="unknown"){return on(9,n,t)}function wn(n,t="unknown"){return on(10,n,t)}function hn(n,t,r="unknown"){return un(11,n,t,r)}function yn(n,t,r="unknown"){return un(12,n,t,r)}function In(n,t="unknown"){return on(13,n,t)}function Bn(n,t,r="unknown"){return un(14,n,t,r)}function gn(n,t,r="unknown"){return un(15,n,t,r)}function xn(n,t,r="unknown"){return un(16,n,t,r)}function Tn(n,t,r="unknown"){return un(17,n,t,r)}function jn(n,t="unknown"){return on(18,n,t)}function Pn(n,t,r="unknown"){return un(19,n,t,r)}function bn(n,t,r="unknown"){return un(20,n,t,r)}function vn(n,t="unknown"){return on(21,n,t)}function Sn(n,t="unknown"){return on(22,n,t)}function Rn(n,t,r="unknown"){return un(23,n,t,r)}function On(n,t,r="unknown"){return un(24,n,t,r)}function Nn(n,t="unknown"){return on(25,n,t)}function Cn(n,t="unknown"){return on(26,n,t)}function zn(n,t="unknown"){return on(27,n,t)}function Dn(n,t,r="unknown"){return un(28,n,t,r)}function Fn(n,t,r="unknown"){return un(29,n,t,r)}function An(n,t="unknown"){return on(30,n,t)}function En(n,t="unknown"){return on(31,n,t)}function Mn(n,t="unknown"){return on(32,n,t)}function Jn(n,t,r="unknown"){return un(33,n,t,r)}function Un(n,t,r="unknown"){return un(34,n,t,r)}function Ln(n,t="unknown"){return on(35,n,t)}function Gn(n,t="unknown"){return on(36,n,t)}function Vn(n,t="unknown"){return on(37,n,t)}function Zn(n,t,r="unknown"){return un(44,n,t,r)}function $n(n,t="unknown"){return on(45,n,t)}function Hn(n,t,r="unknown"){return un(46,n,t,r)}function Wn(n,t="unknown"){return on(48,n,t)}function qn(n,t="unknown"){return on(49,n,t)}function Kn(n,t="unknown"){return on(51,n,t)}function Qn(n,t="unknown"){return on(52,n,t)}function Xn(n,t="unknown"){return on(53,n,t)}function Yn(n,t="unknown"){return on(56,n,t)}function _n(n,t="unknown"){return on(57,n,t)}function nt(n,t="unknown"){return on(59,n,t)}function tt(n,t="unknown"){return on(60,n,t)}function rt(n,t,r="unknown"){return un(61,n,t,r)}function et(n,t,r="unknown"){let e;return"object"==typeof n&&"raster"in n?(e=[n.raster,n.falseRaster],r=n.outputPixelType??"unknown"):e=[n,t],a("Local",{operation:50,rasters:e},r)}function ot(n,t,r,e){let o;return"object"==typeof n&&"raster"in n&&"trueRaster"in n?(o=[n.raster,n.trueRaster,n.falseRaster],e=n.outputPixelType??"unknown"):o=[n,t,r],a("Local",{operation:78,rasters:o},e)}const ut={majority:38,max:39,mean:40,median:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58};function it(n){const{rasters:t,statType:r,processAsMultiband:e=!0,outputPixelType:o}=n;return a("Local",{operation:ut[r],processAsMultiband:e,rasters:t},o)}function at(n){const{raster:t,outputPixelType:r}=n;return a("Aspect",{raster:t},r)}function st(n){const{raster:t,zFactor:r,removeEdgeEffect:e,outputPixelType:o="unknown"}=n,u="degree"===n.slopeType?1:"percent-rise"===n.slopeType?2:3,i={raster:t,slopeType:u,zFactor:r,removeEdgeEffect:e};return 3===u&&(i.psPower=n.pixelSizePower,i.psZFactor=n.pixelSizeZFactor),a("Slope",i,o)}function ct(n){const{raster:t,zFactor:r,outputPixelType:e="unknown"}=n;return a("Curvature",{raster:t,curvatureType:"standard"===n.curvatureType?0:"planform"===n.curvatureType?1:2,zFactor:r},e)}function dt(n){const{raster:t,zFactor:r,altitude:e=45,azimuth:o=315,removeEdgeEffect:u,outputPixelType:i="u8"}=n,s="adjusted"===n.scalingType?3:1,c={raster:t,hillshadeType:"multi-directional"===n.hillshadeType?1:0,altitude:e,azimuth:o,slopeType:s,zFactor:r,removeEdgeEffect:u};return 3===s&&(c.psPower=n.pixelSizePower,c.psZFactor=n.pixelSizeZFactor),a("Hillshade",c,i)}function pt(n){const{functionArguments:t}=dt(n),{outputPixelType:r="u8"}=n,e=n.colorRamp;if(e){const n="toJSON"in e?e.toJSON():e;return a("ShadedRelief",{...t,colorRamp:n},r)}const o=n.colorRampName;if(o){const n=u(o);return a("ShadedRelief",{...t,colorRamp:n},r)}const i=n.colormap;return a("ShadedRelief",{...t,colormap:i},r)}function lt(n){const{rows:t,cols:r,fillNoDataOnly:e=!1,raster:o,outputPixelType:u}=n;return a("Statistics",{rows:t,cols:r,fillNoDataOnly:e,statisticsType:i.toJSON(n.statisticsType),raster:o},u)}const ft="$$";export{wn as abs,ln as acos,nt as acosh,fn as asin,tt as asinh,at as aspect,mn as atan,rt as atan2,kn as atanh,L as bandArithmeticBAI,D as bandArithmeticCIg,z as bandArithmeticCIre,J as bandArithmeticClayMinerals,W as bandArithmeticCustom,A as bandArithmeticEVI,M as bandArithmeticFerrousMinerals,x as bandArithmeticGEMI,v as bandArithmeticGNDVI,j as bandArithmeticGVITM,E as bandArithmeticIronOxide,H as bandArithmeticMNDWI,g as bandArithmeticMSAVI,N as bandArithmeticMTVI2,G as bandArithmeticNBR,V as bandArithmeticNDBI,Z as bandArithmeticNDMI,$ as bandArithmeticNDSI,y as bandArithmeticNDVI,R as bandArithmeticNDVIre,F as bandArithmeticNDWI,T as bandArithmeticPVI,C as bandArithmeticRTVICore,I as bandArithmeticSAVI,S as bandArithmeticSR,O as bandArithmeticSRre,P as bandArithmeticSultan,B as bandArithmeticTSAVI,b as bandArithmeticVARI,U as bandArithmeticWNDWI,hn as bitwiseAnd,yn as bitwiseLeftShift,In as bitwiseNot,Bn as bitwiseOr,gn as bitwiseRightShift,xn as bitwiseXor,Tn as booleanAnd,jn as booleanNot,Pn as booleanOr,bn as booleanXor,it as cellStatistics,rn as clip,q as colormap,K as colormapToRGB,_ as compositeBands,ot as conditional,d as contrastBrightness,c as convolution,vn as cos,Sn as cosh,ct as curvature,ft as defaultRaster,Rn as divide,On as equalTo,Nn as exp,Cn as exp10,zn as exp2,Y as extractBand,Mn as float,en as grayscale,Dn as greaterThan,Fn as greaterThanEqual,dt as hillshade,An as int,En as isNull,Jn as lessThan,Un as lessThanEqual,Ln as log,Gn as log10,Vn as log2,tn as mask,sn as minus,Zn as mod,$n as negate,Hn as notEqual,an as plus,pn as power,nn as remap,Wn as roundDown,qn as roundUp,et as setNull,pt as shadedRelief,Kn as sin,Qn as sinh,st as slope,dn as sqrt,Xn as square,lt as statistics,Q as statisticsHistogram,w as stretchHistogramEqualization,l as stretchMinMax,k as stretchNone,m as stretchPercentClip,f as stretchStandardDeviation,X as table,Yn as tan,_n as tanh,cn as times};
