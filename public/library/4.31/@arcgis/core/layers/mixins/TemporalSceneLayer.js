/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{JSONSupport as t}from"../../core/JSONSupport.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import{fixTimeInfoFields as i}from"../support/fieldUtils.js";import o from"../support/TimeInfo.js";import n from"../../time/TimeExtent.js";import m from"../../time/TimeInterval.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/ensureType.js";import"../../core/sql.js";import"../../intl.js";import"../../chunks/date.js";import"../../chunks/jsonMap.js";import"../../chunks/locale.js";import"../../chunks/datetime.js";import"../../chunks/number.js";import"../../chunks/substitute.js";import"../../chunks/messages.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/assets.js";import"../../chunks/mathUtils.js";import"../../geometry.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../core/Clonable.js";import"../../chunks/timeUtils.js";import"../../chunks/enumeration.js";function p({associatedLayer:e,serviceUpdateTimeStamp:t}){const s=e?.editingInfo?.lastEditDate,r=e?.serverGens,i=null!=s,o=null!=t,n=i&&o&&t.lastUpdate!==s.getTime();return i&&(n||!o&&r?.minServerGen!==r?.serverGen)}const l=t=>{let l=class extends t{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){const e=this.associatedLayer?.timeInfo;if(null==e)return null;const t=e.clone();return i(t,this.fieldsIndex),t}set timeInfo(e){i(e,this.fieldsIndex),this._override("timeInfo",e)}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(e){this._override("timeExtent",e)}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(e){this._override("timeOffset",e)}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(e){this._override("datesInUnknownTimezone",e)}async loadTimeInfoFromService(e){const{serviceTimeInfo:t}=this;if(null==t)return;const{startTimeField:s,endTimeField:r}=t;if(null==s&&null==r)return;if(p({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const i=async t=>{let r=null;try{const s=await(this.fetchStatistics?.(t,e));r=s?.stats}catch{}if(null==r)return null;const{minTimeStr:i,min:o,maxTimeStr:n,max:m}=r,p=t===s?i??o:n??m;return null!=p?new Date(p):null},[m,l]=await Promise.all([i(s),i(r)]);if(null!=s&&null==m||null!=r&&null==l)return;const c=new n({start:m,end:l});this.setAtOrigin("timeInfo",new o({endField:r,startField:s,fullTimeExtent:c}),"service")}};return e([s({type:o,json:{read:!1,write:!1}})],l.prototype,"timeInfo",null),e([s({type:n,json:{read:!1,write:!1}})],l.prototype,"timeExtent",null),e([s({type:m,json:{read:!1,write:!1}})],l.prototype,"timeOffset",null),e([s({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],l.prototype,"datesInUnknownTimezone",null),e([s({type:c,readOnly:!0,json:{read:{source:"timeInfo"}}})],l.prototype,"serviceTimeInfo",void 0),l=e([r("esri.layers.mixins.TemporalSceneLayer")],l),l};let c=class extends t{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};e([s({type:String})],c.prototype,"endTimeField",void 0),e([s({type:String})],c.prototype,"startTimeField",void 0),c=e([r("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],c);export{l as TemporalSceneLayer,p as c};
