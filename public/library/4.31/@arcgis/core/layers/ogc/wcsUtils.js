/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import e from"../../request.js";import t from"../../core/Error.js";import{isAbortError as n}from"../../core/promiseUtils.js";import i from"../../geometry/Extent.js";import{g as s,a as o,b as r,c as a,d as l,i as u,e as p}from"../../chunks/xmlUtilities.js";import c from"../../geometry/Polygon.js";import{i as m}from"../../chunks/crsUtils.js";import d from"../support/RasterInfo.js";import{f}from"../../chunks/multidimensionalUtils.js";import"../../config.js";import"../../core/lang.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/JSONSupport.js";import"../../chunks/tslib.es6.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/Logger.js";import"../../chunks/maybe.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/zmUtils.js";import"../support/RasterBandInfo.js";import"../support/RasterSensorInfo.js";import"../support/DimensionalDefinition.js";function g(e){return e.endsWith("?")?e.slice(0,-1):e}function h(e){return e.filter((({coverageSubType:e})=>null==e||""===e||/^rectified(grid|dataset)/i.test(e)))}function v(e){const t={};for(let n=0;n<e.childNodes.length;n++){const o=e.childNodes[n];if(1!==o.nodeType)continue;const r=p(o).toLowerCase();switch(r){case"title":case"abstract":t[r]=s(o);break;case"identifier":t.id=s(o);break;case"wgs84boundingbox":{const e=a(o,"LowerCorner"),n=a(o,"UpperCorner");t.lonLatEnvelope=new i({xmin:e[0],ymin:e[1],xmax:n[0],ymax:n[1],spatialReference:{wkid:4326}})}break;case"coveragesummary":t.coverageSummaries=t.coverageSummaries||[],t.coverageSummaries.push(v(o))}}return t}function b(e,t){if(e.coverageSummaries)for(let n=0;n<e.coverageSummaries.length;n++)e.coverageSummaries[n].abstract=e.coverageSummaries[n].abstract||e.abstract,e.coverageSummaries[n].lonLatEnvelope=e.coverageSummaries[n].lonLatEnvelope||e.lonLatEnvelope,e.coverageSummaries[n].title=e.coverageSummaries[n].title||e.title,b(e.coverageSummaries[n],t);null!=e.id&&t.push(e)}function x(e){const t=o(e.querySelector("Operation[name=GetCapabilities]"),"Get")?.getAttribute("xlink:href")||"",n=o(e.querySelector("Operation[name=DescribeCoverage]"),"Get")?.getAttribute("xlink:href")||"",i=o(e.querySelector("Operation[name=GetCoverage]"),"Get")?.getAttribute("xlink:href")||"";return{getCapabilities:g(t),describeCoverage:g(n),getCoverage:g(i)}}function y(e){e.variables.forEach((e=>e.dimensions.forEach((e=>e.values??=f(e)))))}function S(e,t){const n=l(e,"1.0.0"===t?"interpolationMethod":"InterpolationMethod"),i="1.0.0"===t?e.getAttribute("default"):s(e,"InterpolationMethods/Default");return null!=i?[i].concat(n.filter((e=>e.toLowerCase()!==i.toLowerCase()))):n}function w(e){return null==e?["nearest"]:e.map((e=>{const t=e.toLowerCase();return t.includes("nearest")?"nearest":t.includes("linear")?"bilinear":t.includes("cubic")?"cubic":null})).filter((e=>!!e))}function C(e){const t=r(e,"pos"),n=a(t[0]),s=a(t[1]);return new i({xmin:n[0],ymin:n[1],xmax:s[0],ymax:s[1],spatialReference:{wkid:4326}})}function D(e,t){const n=l(e,t);return n?.length&&""!==n[0]&&!isNaN(Number(n[0]))?n.map((e=>Number(e))):null}function I(e){const t=a(e,"MinimumValue"),n=a(e,"MaximumValue");return t.length&&n.length?t.map(((e,t)=>({min:e,max:n[t],avg:-1,stddev:-1}))):null}function j(e){return null==e?null:e.every((t=>t===e[0]))?e[0]:e}function L(e){const t=[],n=r(e,"RangeSet");let i=[];for(let e=0;e<n.length;e++){const o=s(n[e],"name"),a=s(n[e],"label"),u=[],p=D(n[e],"nullValues/singleValue"),c=r(n[e],"AxisDescription");for(let e=0;e<c.length;e++){const t=s(c[e],"name"),n=s(c[e],"label"),o=l(c[e],"singleValue");if(0===o.length){const t=s(c[e],"min"),n=s(c[e],"max"),i=Number(s(c[e],"res"))||1;if(null!==t&&null!==n)for(let e=parseInt(t,10);e<=parseInt(n,10);e+=i)o.push(e.toString())}"band"===t.toLowerCase()&&(i=o),u.push({name:t,label:n,values:o})}t.push({name:o,label:a,nullValues:p,axis:u})}return{rangeSet:t,bandNames:i}}function T(e){const t=r(e,"timeposition");if(t.length>0){const e=[];for(let n=0;n<t.length;n++)e.push(new Date(s(t[n])));return{begin:e[0],end:e[e.length-1],values:e}}const n=o(e,"timePeriod")||o(e,"TimePeriod");return n?{begin:new Date(s(n,"beginPosition")||s(n,"BeginPosition")),end:new Date(s(n,"endPosition")||s(n,"EndPosition")),...function(e=null){if(!e)return{resolution:null,units:null};let t=e.toUpperCase();const n=["Years","Months","Days","Hours","Minutes","Seconds"];let i,s,o;return t.includes("PT")?(t=t.slice(2),o=["H","M","S"].findIndex((e=>t.includes(e))),i=n[3+o],s=parseFloat(t.slice(0,-1))):(t=t.slice(1),o=["Y","M","D"].findIndex((e=>t.includes(e))),o>-1&&(i=n[o]),s=parseFloat(t.slice(0,-1))),{resolution:s,units:i}}(s(n,"timeResolution")||s(n,"TimeResolution"))}:null}function k(e){const t=o(e,"spatialDomain"),n=o(t,"Envelope")||o(t,"EnvelopeWithTimePeriod"),l=n.getAttribute("srsName").split(":"),u=l[l.length-1],p=r(n,"pos"),c=a(p[0]),m=a(p[1]),d=parseInt(u,10),f=isNaN(d)?null:{wkid:d},g=new i({xmin:c[0],ymin:c[1],xmax:m[0],ymax:m[1],spatialReference:f}),h=o(t,"RectifiedGrid"),v=s(h,"low").split(" "),b=s(h,"high").split(" "),x=parseInt(b[0],10)-parseInt(v[0],10)+1,y=parseInt(b[1],10)-parseInt(v[1],10)+1,S=a(t,"origin/pos"),w=r(t,"offsetVector"),C={envelope:g,columns:x,rows:y,offset:{x:parseFloat(s(w[0]).split(" ")[0]),y:parseFloat(s(w[1]).split(" ")[1])},origin:{x:S[0],y:S[1]}},D=o(e,"temporalDomain")||o(e,"TemporalDomain");return{spatialDomain:C,temporalDomain:D?T(D):null}}function R(e,t){const n=[],i=r(e,"Field");let a,u=[];for(let e=0;e<i.length;e++){const p=s(i[e],"Identifier"),c=s(i[e],"Description"),m=s(i[e],"Definition"),d=s(i[e],"Abstract"),f=s(i[e],"Title"),g=D(i[e],"NullValue"),h=o(i[e],"AllowedValues"),v=h?I(h):null,b=S(i[e],"1.1.0"),x=[],y=r(i[e],"Axis");for(let e=0;e<y.length;e++){const n=y[e].getAttribute("identifier"),i=s(y[e],"UOM"),o=s(y[e],"DataType"),r=l(y[e],"Key");t&&!n.toLowerCase().includes("band")||(u=r,a=g),x.push({identifier:n,uom:i,dataType:o,values:r,bandNoDataValues:a})}n.push({identifier:p,description:c,definition:m,abstract:d,title:f,supportedInterpolations:b,axis:x,nullValues:g,statistics:v})}return{rangeSet:n,bandNames:u,bandNoDataValues:a,statistics:n[0].statistics}}function M(e){const t=o(e,"SpatialDomain"),n=o(t,"GridCRS"),l=s(n,"GridBaseCRS"),u=s(n,"GridOrigin"),p=u?.split(" ").map((e=>parseFloat(e)))??[0,0],c=a(n,"GridOffsets"),d=r(t,"BoundingBox");let f,g,h,v;for(let e=0;e<d.length;e++){const t=d[e].getAttribute("crs")?.toLowerCase();if(null!=t)if(t.includes("imagecrs")){const t=a(d[e],"LowerCorner"),n=a(d[e],"UpperCorner");f=n[0]-t[0]+1,g=n[1]-t[1]+1}else if(t.indexOf("epsg")>0){const n=t.split(":");h=parseInt(n[n.length-1],10);const s=a(d[e],"LowerCorner"),o=a(d[e],"UpperCorner");v=new i({xmin:s[0],ymin:s[1],xmax:o[0],ymax:o[1],spatialReference:{wkid:h}})}}const b=f>g,x=v.xmax-v.xmin>v.ymax-v.ymin;let y=!1;m(h)&&(b===x?y=!1:(y=!0,v=new i({xmin:v.ymin,ymin:v.xmin,xmax:v.ymax,ymax:v.xmax,spatialReference:{wkid:h}})));const S={columns:f,rows:g,origin:{x:p[0],y:p[1]},offset:{x:c[0],y:c[c.length-1]},gridBaseCRS:l,envelope:v,useEPSGAxis:y},w=o(e,"temporalDomain")||o(e,"TemporalDomain");return{spatialDomain:S,temporalDomain:w?T(w):null}}function N(e){const t=o(e,"Envelope")||o(e,"EnvelopeWithTimePeriod"),n=t.getAttribute("srsName"),r=n.slice(n.lastIndexOf("/")+1),l=t.getAttribute("axisLabels").split(" ").map((e=>e.trim())).filter((e=>""!==e.trim())),p=a(t,"lowerCorner"),c=a(t,"upperCorner"),m=!["y","lat","latitude","north","nor","n","b"].includes(l[0].toLowerCase());let d;const f=parseInt(r,10),g=isNaN(f)?null:{wkid:f};d=new i(m?{xmin:p[0],ymin:p[1],xmax:c[0],ymax:c[1],spatialReference:g}:{xmin:p[1],ymin:p[0],xmax:c[1],ymax:c[0],spatialReference:g});const h={mins:p,maxs:c},v=t.getAttribute("uomLabels").trim().split(" ");let b,x;if(u(t,"EnvelopeWithTimePeriod")){b=new Date(s(e,"beginPosition")||s(e,"BeginPosition")),x=new Date(s(e,"endPosition")||s(e,"EndPosition"));const t=v?.findIndex((e=>"oledatetime"===e?.toLowerCase()));t>-1&&(v[t]="ISO8601")}return{envelope:d,axisLabels:l,uomLabels:v.length?v:null,envelopeAllDims:h,beginPosition:b,endPosition:x,isEastFirst:m}}function E(e,t){const n=[],i=r(e,"DataRecord"),l=[];let u,p=[];for(let e=0;e<i.length;e++){const c=r(i[e],"field"),m=[];for(let e=0;e<c.length;e++){const n=c[e].getAttribute("name"),i=s(c[e],"description")||"",r=o(c[e],"uom")?.getAttribute("code")||"",d=a(c[e],"interval"),f=D(c[e],"nilValue")?.[0];t&&!n.toLowerCase().includes("band")||(l.push(n),d?.length&&(u=u||[],u.push({min:d[0],max:d[1],avg:-1,stddev:-1})),p.push(f)),m.push({name:n,description:i,uom:r,allowedValues:d,nilValue:f})}n.push(m)}return p.some((e=>null!=e))||(p=null),{rangeType:n,bandNames:l,bandStats:u,bandNoDataValues:p}}function P(e){let t=1,n="";return Math.abs(e-1/24)<1/24*.01?n="Hours":Math.abs(e-1)<.01?n="Days":e<1?(t=Math.round(24*e),n="Hours"):e>27.99&&e<31.01||Math.round(e/30)<12?n="Months":e>364.99&&e<366.01&&(n="Years"),{interval:t,intervalUnit:n}}function A(e,t){const n=o(e,"RectifiedGrid"),i=a(n,"low"),l=a(n,"high"),u=[];for(let e=0;e<i.length;e++)u.push(l[e]-i[e]+1);const p=s(n,"axisLabels").split(" "),c=a(n,"origin/pos"),m=r(n,"offsetVector"),d=[];for(let e=0;e<m.length;e++){const t=a(m[e]),n=t.findIndex((e=>0!==e));d[n]=t[n]}let f,g,h,v=!1;return t?.length&&p?.length&&(v=[...t].sort(((e,t)=>e<t?-1:1)).join(",")===[...p].sort(((e,t)=>e<t?-1:1)).join(",")),["y","lat","latitude","north","nor","n","b"].includes((v?p:t)[0].toLowerCase())?(f=u[1],g=u[0],h={y:Math.abs(d[0]),x:Math.abs(d[1])}):(f=u[0],g=u[1],h={x:Math.abs(d[0]),y:Math.abs(d[1])}),{columns:f,rows:g,origin:c,offset:d,resolution:h,gridSamples:u,axisLabels:p,hasSameAxisLabelsAsBoundedBy:v}}function V(e){const t=o(e,"EarthObservation");if(!t)return null;const n=o(t,"phenomenonTime"),i=n?T(n):null,r=o(t,"phenomenonTime"),a=r?T(r):null,l=s(t,"featureOfInterest/Footprint/multiExtentOf/MultiSurface/surfaceMembers/Polygon/exterior/LinearRing/posList");let u=null;if(l){const e=l.split(" ").map((e=>e.trim())).filter((e=>null!=e&&""!==e)).map(Number);if(e.length){const t=[];for(let n=0;n<e.length/2;n+=2)t.push(e[n],e[n+1]);u=new c({rings:[[t]]})}}return{observation:{phenomenonTime:i,resultTime:a,footprint:u,identifier:s(e,"metaDataProperty/EarthObservationMetaData/identifier"),acquisitionType:s(e,"metaDataProperty/EarthObservationMetaData/acquisitionType"),status:s(e,"metaDataProperty/EarthObservationMetaData/status")}}}async function O(p,c){const{version:m,customParameters:d,signal:f}=c??{},y=m?.startsWith("1.0")?"version":"acceptVersions",S={service:"WCS",request:"GetCapabilities",[y]:m,...d};try{const{data:n}=await e(p,{query:S,responseType:"xml",signal:f});return function(e,n=null){let p=null;p="string"==typeof e?(new DOMParser).parseFromString(e,"text/xml"):e;let c=p.documentElement.getAttribute("version");"1.0"===c?c="1.0.0":"1.1"===c&&(c="1.1.0");const m=c||n||"1.0.0",d=m.slice(0,3);let f;if("2.0"===d)f=function(e){const t=o(e,"ServiceIdentification"),n=s(t,"Title"),u=l(t,"ServiceTypeVersion"),p=l(t,"Profile"),c=x(o(e,"OperationsMetadata")),m=r(e,"Contents/CoverageSummary"),d=[];for(let e=0;e<m.length;e++){const t=m[e],n=s(t,"CoverageId"),r=o(t,"WGS84BoundingBox");let l;if(r){const e=a(r,"LowerCorner"),t=a(r,"UpperCorner");l=new i({xmin:e[0],ymin:e[1],xmax:t[0],ymax:t[1],spatialReference:{wkid:4326}})}const u=s(t,"CoverageSubtype")||"RectifiedGridCoverage";d.push({id:n,lonLatEnvelope:l,coverageSubType:u})}const f=o(e,"ServiceMetadata");return{name:n,supportedVersions:u,supportedFormats:l(f,"formatSupported"),supportedInterpolations:l(f,"interpolationSupported").concat(l(f,"InterpolationSupported")),onlineResources:c,profiles:p,coverages:d,gridCoverages:h(d),version:"2.0.1"}}(p);else if("1.1"===d)f=function(e){const t=s(e,"ServiceIdentification/Title"),n=l(e,"ServiceIdentification/ServiceTypeVersion"),i=x(o(e,"OperationsMetadata")),r=[],a=o(e,"Contents");for(let e=0;e<a.childNodes.length;e++){const t=a.childNodes[e];1===t.nodeType&&u(t,"CoverageSummary")&&b(v(t),r)}const p=l(a,"SupportedFormat");return{name:t,onlineResources:i,coverages:r,gridCoverages:h(r),supportedVersions:n,supportedFormats:p,version:"1.1.0"}}(p);else{if("1.0"!==d)throw new t("wcsraster:parsecapabilities","the capabilities version is not supported");f=function(e){const t=s(e,"Service/name"),n=o(e,"Capability"),l=o(n,"GetCapabilities/Get/OnlineResource")?.getAttribute("xlink:href")??"",u=o(n,"DescribeCoverage/Get/OnlineResource")?.getAttribute("xlink:href")??"",p=o(n,"GetCoverage/Get/OnlineResource")?.getAttribute("xlink:href")??"",c={getCapabilities:g(l),describeCoverage:g(u),getCoverage:g(p)},m=r(e,"CoverageOfferingBrief"),d=[];for(let e=0;e<m.length;e++){const t=m[e],n=s(t,"name"),o=r(t,"pos"),l=a(o[0]),u=a(o[1]),p=new i({xmin:l[0],ymin:l[1],xmax:u[0],ymax:u[1],spatialReference:{wkid:4326}});d.push({id:n,lonLatEnvelope:p})}return{name:t,onlineResources:c,coverages:d,gridCoverages:h(d),supportedVersions:["1.0.0"],version:"1.0.0"}}(p)}return f.version=m,f}(n)}catch(e){if(!n(e))throw new t("wcslayer:open","wcs capabilities is not valid or supported");throw e}}async function G(i,a){const{coverageIds:c,version:m,customParameters:f,signal:g}=a,h=m.slice(0,3),v="1.0"===h?"coverage":"1.1"===h?"identifiers":"coverageId",b={service:"WCS",request:"DescribeCoverage",version:m,[v]:c.join(","),...f};try{const{data:t}=await e(i,{query:b,responseType:"xml",signal:g});return function(e,t){let n=null;if(n="string"==typeof e?(new DOMParser).parseFromString(e,"text/xml"):e,"1.0.0"===t)return r(n,"CoverageOffering").map((e=>function(e){const t={version:"1.0"};let n,i=[];for(let r=0;r<e.childNodes.length;r++){const a=e.childNodes[r];if(1===a.nodeType)if(u(a,"description"))t.description=s(a);else if(u(a,"name"))t.name=s(a);else if(u(a,"label"))t.label=s(a);else if(u(a,"supportedFormats"))t.supportedFormats=l(a,"formats");else if(u(a,"supportedCRSs"))t.supportedCRSs={requestResponseCRSs:l(o=a,"requestResponseCRSs").map((e=>e.split(":")[1])),nativeCRSs:l(o,"nativeCRSs").map((e=>e.split(":")[1]))};else if(u(a,"supportedInterpolations"))t.supportedInterpolations=S(a,"1.0.0");else if(u(a,"lonLatEnvelope"))t.lonLatEnvelope=C(a);else if(u(a,"rangeSet")){const e=L(a);t.rangeSet=e.rangeSet,i=e.bandNames;const s=e.rangeSet[0].nullValues;s?.length&&(n=j(s))}else u(a,"domainSet")&&(t.domainSet=k(a))}var o;const r=w(t.supportedInterpolations),{name:a,description:p,label:c,lonLatEnvelope:m,supportedFormats:f}=t,{spatialDomain:g}=t.domainSet,h={x:Math.abs(g.offset.x),y:Math.abs(g.offset.y)},v=function(e){if(!e.temporalDomain)return null;const{begin:t,end:n,values:i,units:s,resolution:o}=e.temporalDomain,r={variables:[{name:"default",description:"",dimensions:[{name:"StdTime",description:"",unit:"ISO8601",values:i?.map((e=>e.getTime())),hasRegularIntervals:!i,interval:o,intervalUnit:s,extent:[t.getTime(),n.getTime()]}]}]};return y(r),r}(t.domainSet),b=new d({width:g.columns,height:g.rows,pixelSize:h,pixelType:"unknown",extent:g.envelope,spatialReference:g.envelope.spatialReference,bandCount:i.length||1,noDataValue:n,multidimensionalInfo:v});return{id:a,title:t.name,description:p||c,lonLatEnvelope:m,rasterInfo:b,bandNames:i,supportedFormats:f,supportedInterpolations:r,coverageDescription:t,version:"1.0.0",useEPSGAxis:!1}}(e)));const i=r(n,"CoverageDescription");return"1.1.0"===t||"1.1.1"===t||"1.1.2"===t?i.map((e=>function(e,t){const n=[],i=[],o={supportedFormats:n,supportedCRSs:i,version:"1.1"};let r,a,l=[];for(let t=0;t<e.childNodes.length;t++){const u=e.childNodes[t];if(1!==u.nodeType)continue;const c=p(u).toLowerCase();switch(c){case"title":case"abstract":case"identifier":o[c]=s(u);break;case"supportedformat":{const e=s(u);n.includes(e)||n.push(e)}break;case"supportedcrs":{const e=s(u);i.includes(e)||i.push(e)}break;case"range":{const e=R(u,!!o.domain?.temporalDomain);o.range=e.rangeSet,l=e.bandNames;const{bandNoDataValues:t}=e;t?.length&&(r=j(t)),a=e.statistics}break;case"domain":o.domain=M(u)}}const u=w(o.range[0].supportedInterpolations),{identifier:c,abstract:m,title:f,domain:g,range:h}=o,v={x:Math.abs(g.spatialDomain.offset.x),y:Math.abs(g.spatialDomain.offset.y)},b=function(e,t){if(!t.temporalDomain)return null;const n=e.filter((e=>!e.identifier.toLowerCase().includes("field_1")&&!e.axis.some((e=>e.identifier.includes("band"))))),i=[];if(n.length&&n.forEach((e=>{const t=e.axis.map((e=>{const t=e.values.map((t=>"ISO8601"===e.uom?(t=t.trim()).toLowerCase().includes("z")?new Date(t).getTime():new Date(t+"Z").getTime():parseFloat(t.trim()))),n=[Math.min.apply(null,t),Math.max.apply(null,t)];return{name:e.identifier.trim(),description:"",field:e.identifier.trim(),unit:e.uom?e.uom.trim():"",hasRegularIntervals:!1,values:t,extent:n}}));i.push({name:e.identifier.trim(),description:e.description?.trim()??"",unit:"",dimensions:t,statistics:e.statistics})})),t.temporalDomain){const{begin:e,end:n,values:s,units:o,resolution:r}=t.temporalDomain;i.some((e=>e.dimensions.some((e=>"stdtime"===e.name.toLowerCase()))))||i.forEach((t=>{t.dimensions.push({name:"StdTime",description:"",unit:"ISO8601",values:s?.map((e=>e.getTime())),hasRegularIntervals:!s,interval:r,intervalUnit:o,extent:[e.getTime(),n.getTime()]})}))}if(i.length){const e={variables:i};return y(e),e}return null}(h,g);b&&(r=h[0].nullValues,1===r?.length&&(r=r[0]));const x=new d({width:g.spatialDomain.columns,height:g.spatialDomain.rows,pixelSize:v,pixelType:"unknown",extent:g.spatialDomain.envelope,spatialReference:g.spatialDomain.envelope.spatialReference,bandCount:l.length||1,noDataValue:r,statistics:a,multidimensionalInfo:b});return{id:c,title:o.title,description:m||f,bandNames:l,rasterInfo:x,supportedFormats:n,supportedInterpolations:u,coverageDescription:o,version:t,useEPSGAxis:g.spatialDomain.useEPSGAxis}}(e,t))):i.map((e=>function(e){const t={version:"2.0"};let n,i,r=[];for(let a=0;a<e.childNodes.length;a++){const p=e.childNodes[a];if(1===p.nodeType)if(u(p,"coverageId"))t.coverageId=s(p);else if(u(p,"ServiceParameters"))t.serviceParameters={supportedFormats:l(p,"nativeFormat")};else if(u(p,"boundedBy"))t.boundedBy=N(p);else if(u(p,"rangeType")){const e=E(p,t.boundedBy?.axisLabels.length>2||t.domainSet?.axisLabels.length>2);t.rangeType=e.rangeType,r=e.bandNames,n=e.bandStats;const{bandNoDataValues:s}=e;s?.length&&(i=j(s))}else if(u(p,"domainSet"))t.domainSet=A(p,t.boundedBy?.axisLabels);else if(u(p,"metadata")){const e=o(p,"EOMetadata");t.eoMetadata=e?V(e):null}}const{coverageId:a,boundedBy:p,domainSet:c,rangeType:m,serviceParameters:f}=t,g=function(e,t,n){if(n.axisLabels.length<=2)return null;const i=[];for(let t=0;t<e.length;t++){const n=e[t];for(let e=0;e<n.length;e++)n[e].name.toLowerCase().includes("band")||i.push(n[e])}const s=[];if(i.length){const e=[];for(let i=2;i<n.axisLabels.length;i++){const s=t.uomLabels?.[i]?.trim()??"",o=n.axisLabels[i].toLowerCase().includes("time")||"iso8601"===s.toLowerCase()||"oledatetime"===s.toLowerCase();let r,a;if(o){const e=P(n.offset[i]);r=e.interval,a=e.intervalUnit}else r=n.offset[i],a=s;const l=[];o?(l.push((new Date).setTime(24*(t.envelopeAllDims.mins[i]-25569)*3600*1e3)),l.push((new Date).setTime(24*(t.envelopeAllDims.maxs[i]-25569)*3600*1e3))):(l.push(t.envelopeAllDims.mins[i]),l.push(t.envelopeAllDims.maxs[i])),e.push({name:n.axisLabels[i].trim(),description:n.axisLabels[i].trim(),unit:o?"ISO8601":s,hasRegularIntervals:!0,extent:l,interval:r,intervalUnit:a})}if(i.forEach((t=>{const{allowedValues:n}=t,i=2===n?.length?[{min:n[0],max:n[1],avg:-1,stddev:-1}]:null;s.push({name:t.name.trim(),description:t.description?.trim()??"",unit:t.uom.trim(),statistics:i,dimensions:e})})),s.length){const e={variables:s};return y(e),e}}return null}(m,p,c);return!n&&g&&(n=g?.variables[0].statistics),null!=g&&(i=m[0][0].nilValue),{id:a,title:a,description:a,bandNames:r,rasterInfo:new d({width:c.columns,height:c.rows,pixelSize:c.resolution,pixelType:"unknown",extent:p.envelope,spatialReference:p.envelope.spatialReference,bandCount:r.length||1,statistics:n,noDataValue:i,multidimensionalInfo:g}),supportedFormats:f.supportedFormats,coverageDescription:t,version:"2.0.1",useEPSGAxis:!1}}(e)))}(t,m)}catch(e){if(!n(e))throw new t("wcslayer:open","wcs coverage description is not valid or supported");throw e}}export{G as describeCoverage,O as getCapabilities,w as s};
