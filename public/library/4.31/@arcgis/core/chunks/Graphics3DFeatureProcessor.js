/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{X as i}from"./hash.js";import{n as r}from"./compilerUtils.js";import{m as s}from"./handleUtils.js";import{r as n,d as a}from"./maybe.js";import{EsriPromise as o}from"../core/Promise.js";import{throwIfAborted as l,throwIfAbortError as u,logOnError as p}from"../core/promiseUtils.js";import{initial as d,watch as h,when as c}from"../core/reactiveUtils.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import{L as g}from"./Logger.js";import"../core/lang.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{d as f}from"./diffUtils.js";import{U as b}from"./UpdatingHandles.js";import{canProject as _,project as E}from"../geometry/support/webMercatorUtils.js";import{m as x}from"../renderers/mixins/VisualVariablesMixin.js";import{g as C,a as w}from"./renderingInfoUtils.js";import S from"../rest/support/Query.js";import{D as O}from"./GridLocalOriginFactory.js";import{s as R}from"./ElevationUpdateEvent.js";import{G as F,a as v,D as V}from"./ExtentSet.js";import{G as I,a as j,b as Q}from"./Graphics3DObjectStates.js";import{e as G}from"./graphicUtils.js";import{a as U}from"./attributeUtils.js";import T from"../core/Accessor.js";import A from"../layers/support/FeatureFilter.js";import{a as q}from"./floorFilterUtils.js";import"../geometry.js";import H from"../geometry/Extent.js";import{Q as P}from"./QueryEngine.js";import M from"../layers/support/FieldsIndex.js";import N from"../rest/support/FeatureSet.js";import{f as J}from"./typeUtils.js";import{T as D}from"./Scheduler.js";import{e as L,n as k,i as z}from"./highlightUtils.js";import{U as B}from"./RibbonLineMaterial.js";import{c as Z}from"./HighlightDefaults.js";const $=P;let W=class extends T{get layer(){return this.context.layer}get spatialReference(){return this.context.spatialReference}get _queryGeometryType(){switch(this.layer.geometryType){case"multipoint":case"point":case"polygon":case"polyline":return this.layer.geometryType;case"mesh":return"polygon";default:return}}get defaultQueryJSON(){return new S({outSpatialReference:this.spatialReference}).toJSON()}get _dataQueryEngine(){return this._ensureDataQueryEngine()}constructor(e){super(e),this._dataQueryEngineInstance=null}destroy(){this.clear()}clear(){return!!this._dataQueryEngineInstance&&(this._dataQueryEngineInstance.destroy(),this._dataQueryEngineInstance=null,!0)}async executeQueryForIdSet(e,t,i){return this._dataQueryEngine.executeQueryForIdSet(this._ensureQueryJSON(e,t),i)}async executeQueryForCount(e,t){return this._dataQueryEngine.executeQueryForCount(this._ensureQueryJSON(e),t)}async executeQueryForExtent(e,t){const{count:i,extent:r}=await this._dataQueryEngine.executeQueryForExtent(this._ensureQueryJSON(e),t);return{count:i,extent:H.fromJSON(r)}}async executeQueryForIds(e,t){return this._dataQueryEngine.executeQueryForIds(this._ensureQueryJSON(e),t)}async executeQueryForLatestObservations(e,t){const i=await this._dataQueryEngine.executeQueryForLatestObservations(this._ensureQueryJSON(e),t),r=N.fromJSON(i);return r.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),r}async executeQuery(e,t){const i=await this._dataQueryEngine.executeQuery(this._ensureQueryJSON(e),t),r=N.fromJSON(i);return r.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),r}_ensureQueryJSON(e,t){let i=this.defaultQueryJSON;if(null!=e&&("outSpatialReference"in e&&!e.outSpatialReference&&(e.outSpatialReference=this.spatialReference),i=e.toJSON()),null!=t){const e=t.geometries.map((e=>e.toJSON())).reduce(((e,t)=>(e.rings=e.rings.concat(t.rings),e)));i={...i,sceneFilter:{...t,geometry:e}}}return i}_ensureDataQueryEngine(){if(this._dataQueryEngineInstance)return this._dataQueryEngineInstance;const e="timeInfo"in this.layer&&this.layer.timeInfo?.toJSON()||null,t=this.layer.objectIdField,i=J.toJSON(this._queryGeometryType),r=this.layer.fieldsIndex?.toJSON()||new M([]),s=this.priority,n=this.spatialReference.toJSON(),{hasZ:a,hasM:o,featureStore:l,scheduler:u}=this.context;return this._dataQueryEngineInstance=new $({hasZ:a,hasM:o,geometryType:i,fieldsIndex:r,timeInfo:e,spatialReference:n,objectIdField:t,featureStore:l,scheduler:u,priority:s}),this._dataQueryEngineInstance}};e([y({constructOnly:!0})],W.prototype,"context",void 0),e([y({constructOnly:!0})],W.prototype,"priority",void 0),e([y()],W.prototype,"layer",null),e([y()],W.prototype,"spatialReference",null),e([y()],W.prototype,"_queryGeometryType",null),e([y()],W.prototype,"defaultQueryJSON",null),W=e([m("esri.views.3d.layers.graphics.QueryEngine")],W);let Y=class extends T{constructor(e){super(e),this._frameTask=null,this._queryEngine=null,this._updateRequested=!0,this._updatingHandles=new b,this._abortController=new AbortController}initialize(){const e=D.FILTER_VISIBILITY,{layer:t,view:i}=this._configuration,{featureStore:r}=this.context,s=this._configuration.hasZ??!1,n=this._configuration.hasM??!1;this._queryEngine=new W({context:{spatialReference:i.spatialReference,layer:t,scheduler:i.resourceController.scheduler,featureStore:r,hasM:n,hasZ:s},priority:e}),this._frameTask=i.resourceController.scheduler.registerTask(e),this._updatingHandles.add((()=>[this._compositedFeatureFilter,this._sceneFilter]),(()=>this._updateRequested=!0),d),this._updatingHandles.addWhen((()=>!this._frameTask.updating&&this._updateRequested),(()=>{this._frameTask.schedule((()=>this._updateVisibility()),this._abortController.signal),this._updateRequested=!1}),d)}destroy(){this._abortController.abort(),this._updatingHandles.destroy(),this.clear(),this._frameTask=n(this._frameTask),this._queryEngine=a(this._queryEngine),this._set("context",null)}get updating(){return this._updateRequested||this._updatingHandles.updating||this._frameTask.updating}get defaultVisibility(){return null==this._compositedFeatureFilter&&null==this._sceneFilter}get _featureFilter(){return"filter"in this._configuration?this._configuration.filter:null}get _sceneFilter(){return"layerFilter"in this._configuration?this._configuration.layerFilter:null}get _floorFilter(){return q(this._configuration)}get _timeExtent(){return"timeExtent"in this._configuration?this._configuration.timeExtent:null}get _compositedFeatureFilter(){const{_featureFilter:e,_timeExtent:t,_floorFilter:i}=this;if(null==t&&null==i)return e;const r=e?.clone()??new A;if(null!=t&&(r.timeExtent=r.timeExtent?.intersection(t)??t),null!=i){const e=null==r.where||""===r.where;r.where=e?i:`(${r.where}) AND (${i})`}return r}get _configuration(){return this.context.configuration}reapply(){this._updateRequested=!0}clear(){this._queryEngine.clear(),this.context.clearFeaturesVisibility()}async _updateVisibility(){const e=this._compositedFeatureFilter,t=this._sceneFilter,{signal:i}=this._abortController,r=this._frameTask,{context:s}=this;if(l(i),null==e&&null==t||0===s.getFeatureCount())return await r.schedule((()=>this.clear()),i);try{const n=await this._queryEngine.executeQueryForIdSet(e,t,i);return l(i),await r.schedule((()=>{s.updateFeatureVisibilities((e=>n.has(e)))}),i)}catch(e){return u(e),g.getLogger(this).warn(`FeatureFilter query failed: ${e}`,{error:e}),await r.schedule((()=>{s.setAllFeaturesVisibility(!0)}),i)}}};e([y({constructOnly:!0})],Y.prototype,"context",void 0),e([y()],Y.prototype,"updating",null),e([y()],Y.prototype,"defaultVisibility",null),e([y()],Y.prototype,"_featureFilter",null),e([y()],Y.prototype,"_sceneFilter",null),e([y()],Y.prototype,"_floorFilter",null),e([y()],Y.prototype,"_timeExtent",null),e([y()],Y.prototype,"_compositedFeatureFilter",null),e([y()],Y.prototype,"_configuration",null),e([y()],Y.prototype,"_updateRequested",void 0),Y=e([m("esri.views.3d.layers.support.FeatureVisibilityFilter")],Y);let X=class extends o{constructor(e){super(e),this.type="graphics-3d",this._randomRotationRenderers=null,this._updatingHandles=new b,this.elevationFeatureExpressionEnabled=!1,this.scaleVisibilityEnabled=!1,this.filterVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this.elevationAlignmentEnabled=!1,this.timeExtentEnabled=!1,this.setUidToIdOnAdd=!0,this.dataExtent=null,this.drapeSourceType=O.Features,this.preferredUpdatePolicy=B.ASYNC,this._suspendResumeExtent=null}initialize(){const e=this.owner,t=(this.filterVisibilityEnabled||this.timeExtentEnabled)&&"multipatch"!==e.layer.geometryType,i=new F({owner:this,layer:this.layer,preferredUpdatePolicy:this.preferredUpdatePolicy,elevationFeatureExpressionEnabled:this.elevationFeatureExpressionEnabled,graphicSymbolSupported:!1,hasZ:e.hasZ,hasM:e.hasM,setUidToIdOnAdd:this.setUidToIdOnAdd,componentFactories:{deconflictor:t=>e.view.deconflictor.addGraphicsOwner(t),labeler:(t,i)=>e.view.labeler.addGraphicsOwner(t,i),elevationAlignment:this.elevationAlignmentEnabled?(t,i)=>new I({graphicsCoreOwner:this,graphicsCore:t,queryGraphicUIDsInExtent:i,elevationProvider:e.view.elevationProvider}):null,scaleVisibility:this.scaleVisibilityEnabled?(t,i)=>new v({graphicsCoreOwner:this,layer:this.layer,queryGraphicUIDsInExtent:i,graphicsCore:t,basemapTerrain:e.view.basemapTerrain}):null,filterVisibility:t?t=>new Y({context:{...t,configuration:e}}):null,objectStates:e=>new j(e)}});this._set("graphicsCore",i),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new Q({graphicsCoreOwner:this})),this.elevationAlignment&&this._updatingHandles.add((()=>this.layer.elevationInfo),((e,t)=>{f(e,t)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())})),this._updatingHandles.add((()=>this.layer.labelsVisible),(()=>this.graphicsCore.updateVisibilityInfo())),this._updatingHandles.add((()=>this.layer.labelingInfo),((e,t)=>{f(e,t)&&this.graphicsCore.updateLabelingInfo()})),this._updatingHandles.add((()=>this.preferredUpdatePolicy),(e=>this.graphicsCore.preferredUpdatePolicy=e)),this.addResolvingPromise(this._initializeAsync())}async _initializeAsync(){await p(this.graphicsCore.initializePromise);const e=this.owner;this._updatingHandles.add((()=>this.renderer),(e=>this._updatingHandles.addPromise(this.graphicsCore.rendererChange(e)))),this._updatingHandles.add((()=>e.fullOpacity),(()=>this.graphicsCore.opacityChange())),this._setupSuspendResumeExtent(),this.updateClippingExtent&&(this._updatingHandles.add((()=>e.view.clippingArea),(()=>this._updateClippingExtent())),this._updateClippingExtent()),this.graphicsCore.startCreateGraphics(),this.graphicsCore.labelsEnabled&&await p(this.graphicsCore.updateLabelingInfo())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",a(this.frustumVisibility)),this._set("graphicsCore",a(this.graphicsCore)),this._set("owner",null)}get layer(){return this.owner.layer}get dataUpdating(){return this.graphicsCore?.dataUpdating??!1}get renderer(){const{renderer:e,objectIdField:t}=this.layer;if(!e||!t||"heatmap"===e.type||!e.visualVariables)return e;const i=e.visualVariables.findIndex((e=>"rotation"===e.type&&null!=e.valueExpression&&x(e.valueExpression)===t&&(null==e.axis||"heading"===e.axis)&&"geographic"===e.rotationType));if(i<0)return e;const r=e.clone();return r.visualVariables?(r.visualVariables.splice(i,1),this._randomRotationRenderers||(this._randomRotationRenderers=new WeakMap),this._randomRotationRenderers.set(r,t),r):e}get scaleVisibility(){return this.graphicsCore?.scaleVisibility}get filterVisibility(){return this.graphicsCore?.filterVisibility}get elevationAlignment(){return this.graphicsCore?.elevationAlignment}get suspendResumeExtentMode(){return this.owner.suspendResumeExtentMode??"computed"}get scaleVisibilitySuspended(){return null!=this.scaleVisibility&&this.scaleVisibility.suspended}get suspended(){return this.owner.suspended}get legendEnabled(){return null==this.frustumVisibility||!this.frustumVisibility.suspended}get suspendInfo(){const e={};return this.scaleVisibilitySuspended&&(e.outsideScaleRange=!0),null!=this.frustumVisibility&&this.frustumVisibility.suspended&&(e.outsideOfView=!0),e}get updating(){return!!(this.graphicsCore?.updating||this.frustumVisibility?.updating||this._updatingHandles.updating)}get updatingRemaining(){return this.graphicsCore?.updatingRemaining??0}get featureStore(){return this.graphicsCore?.featureStore}get view(){return this.owner.view}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner?.fullOpacity}get filter(){return"filter"in this.owner?this.owner.filter:null}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}get featureSpatialReference(){return"featureSpatialReference"in this.owner?this.owner.featureSpatialReference:this.owner.view.spatialReference}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get symbolUpdateType(){return this.graphicsCore?.symbolUpdateType}get displayFeatureLimit(){const e=this.view.quality,t=this.graphicsCore?.displayFeatureLimit;if(1===e)return t;const i=Math.ceil(t.maximumNumberOfFeatures*e);return new V(t.maximumTotalNumberOfVertices,i,t.averageSymbolComplexity)}get usedMemory(){return this.graphicsCore?.usedMemory??0}get loadedFeatures(){return this.graphicsCore?.numberOfGraphics??0}get usedMemoryPerFeature(){return this.graphicsCore?.usedMemoryPerGraphic??0}get unprocessedMemoryEstimate(){return this.graphicsCore?.unprocessedMemoryEstimate??0}get performanceInfo(){return this.graphicsCore.performanceInfo}maskOccludee(e){const t=this.graphicsCore?.objectStates;if(!t)return s();const{set:i,handle:r}=t.acquireOccludeeSet(null);return t.setUid(i,e.uid),r}highlight(e,i=null,r){const s=this.graphicsCore?.objectStates;if(!s)return L;if(r??=Z,e instanceof S){const{set:t,handle:n}=s.acquireHighlightSet(r,i);return this.owner.queryObjectIds(e).then((e=>s.setObjectIds(t,e))),n}let n=k(e);if(0===n.length)return L;if(n[0]instanceof t){const e=n;if(null==U(this.layer.fieldsIndex,e[0].attributes,i)){const t=e.map((e=>e.uid)),{set:i,handle:n}=s.acquireHighlightSet(r,null);return s.setUids(i,t),n}n=e.map((e=>U(this.layer.fieldsIndex,e.attributes,i)))}if(z(n[0])){const e=n,{set:t,handle:a}=s.acquireHighlightSet(r,i);return s.setObjectIds(t,e),a}return L}resetObjectStates(){this.graphicsCore?.objectStates?.reset()}whenGraphicBounds(e,t){return this.graphicsCore?.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphicsCore?.computeAttachmentOrigin(e,t)}notifyGraphicGeometryChanged(e){this.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphicsCore.notifyGraphicVisibilityChanged(e)}getRenderingInfo(e,t,r){const s=C(e,{renderer:t,arcade:r});if(s?.color){const e=s.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}if(null!=s&&null!=t&&this._randomRotationRenderers?.has(t)){const r=this._randomRotationRenderers.get(t),n=e.attributes[r],a=new i(0);a.updateFloatArray([n]),a.updateUint8Array([173]),s.heading=8.381e-8*a.digest()}return s}getRenderingInfoAsync(e,t,i,r){return w(e,{renderer:t,arcade:i,...r})}getSymbolLayerSize(e,t){return this.graphicsCore?.getSymbolLayerSize(e,t)}setObjectIdVisibility(e,t){this.graphicsCore?.setObjectIdVisibility(e,t)}refreshFilter(){null!=this.filterVisibility&&this.filterVisibility.reapply()}getGraphics3DGraphicByObjectId(e){return this.graphicsCore?.getGraphics3DGraphicByObjectId(e)}_updateClippingExtent(){const e=this.owner.view.clippingArea;this.graphicsCore.setClippingExtent(e,this.owner.view.spatialReference)&&(this.updateClippingExtent(e)||this.graphicsCore.recreateAllGraphics())}_setupSuspendResumeExtent(){(this.frustumVisibility||this.scaleVisibility)&&this.addHandles(h((()=>this.suspendResumeExtentMode),(()=>{switch(this.removeHandles(K),this.suspendResumeExtentMode){case"computed":this.addHandles([h((()=>this.graphicsCore.computedExtent),(e=>this._updateSuspendResumeExtent(e)),d),h((()=>this.graphicsCore.extentPadding),(()=>this._updateSuspendResumeExtent(this.graphicsCore.computedExtent)))],K);break;case"data":this.addHandles([c((()=>this.dataExtent),(e=>this._updateSuspendResumeExtent(e)),d),h((()=>this.graphicsCore.extentPadding),(()=>this._updateSuspendResumeExtent(this.dataExtent)))],K);break;default:r(this.suspendResumeExtentMode)}}),d))}_updateSuspendResumeExtent(e){e?this._suspendResumeExtentChanged(this._extentToSuspendResumeRect(e,this._suspendResumeExtent)):this._suspendResumeExtentChanged(null)}_extentToSuspendResumeRect(e,t){const i=this.owner.view.spatialReference;if(!e.spatialReference.equals(i)){if(!_(e,i))return;e=E(e,i)}return G(e,t,R,this.graphicsCore.extentPadding)}_suspendResumeExtentChanged(e){null!=this.frustumVisibility&&this.frustumVisibility.setExtent(e),null!=this.scaleVisibility&&this.scaleVisibility.setExtent(e)}};e([y()],X.prototype,"type",void 0),e([y({constructOnly:!0})],X.prototype,"owner",void 0),e([y()],X.prototype,"layer",null),e([y({readOnly:!0})],X.prototype,"dataUpdating",null),e([y()],X.prototype,"renderer",null),e([y({constructOnly:!0})],X.prototype,"updateClippingExtent",void 0),e([y({constructOnly:!0})],X.prototype,"elevationFeatureExpressionEnabled",void 0),e([y({constructOnly:!0})],X.prototype,"graphicsCore",void 0),e([y({constructOnly:!0})],X.prototype,"scaleVisibilityEnabled",void 0),e([y({constructOnly:!0})],X.prototype,"filterVisibilityEnabled",void 0),e([y({constructOnly:!0})],X.prototype,"frustumVisibilityEnabled",void 0),e([y({constructOnly:!0})],X.prototype,"elevationAlignmentEnabled",void 0),e([y({constructOnly:!0})],X.prototype,"timeExtentEnabled",void 0),e([y({constructOnly:!0})],X.prototype,"setUidToIdOnAdd",void 0),e([y()],X.prototype,"scaleVisibility",null),e([y()],X.prototype,"filterVisibility",null),e([y()],X.prototype,"elevationAlignment",null),e([y({constructOnly:!0})],X.prototype,"frustumVisibility",void 0),e([y()],X.prototype,"suspendResumeExtentMode",null),e([y()],X.prototype,"dataExtent",void 0),e([y()],X.prototype,"scaleVisibilitySuspended",null),e([y()],X.prototype,"suspended",null),e([y()],X.prototype,"legendEnabled",null),e([y()],X.prototype,"suspendInfo",null),e([y()],X.prototype,"updating",null),e([y()],X.prototype,"updatingRemaining",null),e([y()],X.prototype,"featureStore",null),e([y()],X.prototype,"view",null),e([y()],X.prototype,"loadedGraphics",null),e([y()],X.prototype,"fullOpacity",null),e([y()],X.prototype,"filter",null),e([y()],X.prototype,"slicePlaneEnabled",null),e([y()],X.prototype,"drapeSourceType",void 0),e([y()],X.prototype,"updatePolicy",null),e([y()],X.prototype,"preferredUpdatePolicy",void 0),e([y({readOnly:!0})],X.prototype,"displayFeatureLimit",null),X=e([m("esri.views.3d.layers.graphics.Graphics3DFeatureProcessor")],X);const K="suspendResumeExtentMode";export{Y as F,X as G,W as Q};
