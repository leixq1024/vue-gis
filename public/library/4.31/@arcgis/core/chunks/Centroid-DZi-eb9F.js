/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{P as t,G as e,e as n,K as r}from"./Transformation2D.js";function a(n,a){if(!n.isEmpty())switch(n.getGeometryType()){case e.enumPolygon:return o(n);case e.enumPolyline:return i(n.getImpl());case e.enumLine:case e.enumBezier:case e.enumEllipticArc:return function(t){const e=t.calculateLength2D();return 0===e?t.getStartXY():t.calculateWeightedCentroid2D().mul(1/e)}(n);case e.enumMultiPoint:return function(e){const n=new r(0),a=new r(0),u=e.getImpl(),o=u.getAttributeStreamRef(0),s=u.getPointCount(),c=new t;for(let t=0;t<s;t++)o.queryPoint2D(2*t,c),n.add(c.x),a.add(c.y);const l=new t;return l.setCoords(n.getResult(),a.getResult()),l.divThis(s)}(n);case e.enumEnvelope:return n.getCenterXY();case e.enumPoint:return n.getXY();default:return t.construct(Number.NaN,Number.NaN)}return t.construct(Number.NaN,Number.NaN)}function u(t,e){return o(t,e)}function o(e,n=-1){const a=new r(0),u=new r(0),o=e.getImpl();let i;const g=o.hasNonLinearSegments();let d;const m=o.getXY(0);if(-1===n){if(d=o.calculateArea2D(),0===d)return l(e);g&&(i=o.querySegmentIterator());for(let t=0,e=o.getPathCount();t<e;t++)s(m,o,t,a,u),g&&c(m,i,a,u)}else{if(d=o.calculateRingArea2D(n),0===d)return l(e,n);g&&(i=o.querySegmentIterator(),i.resetToPath(n)),s(m,o,n,a,u),g&&c(m,i,a,u)}const f=new t,h=new t;return f.setCoords(a.getResult(),u.getResult()),h.assign(f.mul(1/d).add(m)),h}function s(e,n,a,u,o){const s=n.getPathStart(a),c=n.getPathEnd(a);if(c-s<3)return;const l=n.getAttributeStreamRef(0),i=l.readPoint2D(2*s),g=l.readPoint2D(2*(s+1));g.subThis(i);const d=new r(0),m=n.hasNonLinearSegments(),f=1/3,h=new t;for(let t=s+2;t<c;t++){l.queryPoint2D(2*t,h),h.subThis(i);const e=.5*h.crossProduct(g);m&&d.add(e);const n=f*e;u.add((g.x+h.x)*n),o.add((g.y+h.y)*n),g.setCoordsPoint2D(h)}const P=m?d.getResult():n.calculateRingArea2D(a),y=i.sub(e).mul(P);u.add(y.x),o.add(y.y)}function c(t,e,r,a){let u;for(e.nextPath()||n("centroid");null!==(u=e.nextCurve());){const e=u.calculateWeightedAreaCentroid2D(t);r.add(e.x),a.add(e.y)}}function l(t,e=-1){return i(t.getImpl(),e)}function i(e,n=-1){const a=-1===n?e.calculateLength2D():e.calculatePathLength2D(n);if(0===a)return function(e,n=-1){if(-1!==n)return e.getXY(e.getPathStart(n));const a=new r(0),u=new r(0);for(let t=0;t<e.getPathCount();++t){const n=e.getXY(e.getPathStart(t));a.add(n.x),u.add(n.y)}return t.construct(a.getResult(),u.getResult()).mul(1/e.getPathCount())}(e,n);const u=new r(0),o=new r(0),s=e.querySegmentIterator();for(-1!==n&&s.resetToPath(n);s.nextPath();){const t=s.getPathIndex(),r=e.getXY(e.getPathStart(t));for(;s.hasNextSegment();){const t=s.nextSegment(),e=t.calculateLength2D();if(0===e)continue;const n=t.calculateWeightedCentroid2D().sub(r.mul(e));u.add(n.x),o.add(n.y)}const a=r.mul(e.calculatePathLength2D(t));if(u.add(a.x),o.add(a.y),-1!==n)break}const c=new t;return c.setCoords(u.getResult(),o.getResult()),c.mul(1/a)}export{u as a,a as c};
