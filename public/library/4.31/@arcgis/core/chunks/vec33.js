/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import r from"../request.js";import{r as e}from"./asyncUtils.js";import t from"../core/Error.js";import{throwIfAborted as o,throwIfAbortError as s}from"../core/promiseUtils.js";import{isDataProtocol as a,dataToArrayBuffer as i}from"../core/urlUtils.js";class n{constructor(r){this._streamDataRequester=r}async loadJSON(r,e){return this._load("json",r,e)}async loadBinary(r,e){return a(r)?(o(e),i(r)):this._load("binary",r,e)}async loadImage(r,e){return this._load("image",r,e)}async _load(o,a,i){if(null==this._streamDataRequester)return(await r(a,{responseType:f[o]})).data;const n=await e(this._streamDataRequester.request(a,o,i));if(!0===n.ok)return n.value;throw s(n.error),new t("glt-loader-request-error",`Request for resource failed: ${n.error}`)}}const f={image:"image",binary:"array-buffer",json:"json","image+type":void 0};function u(r,e){l(r.typedBuffer,e.typedBuffer,r.typedBufferStride,e.typedBufferStride)}function l(r,e,t=3,o=t){const s=e.length/o;let a=0,i=0;for(let n=0;n<s;++n)r[a]=e[i],r[a+1]=e[i+1],r[a+2]=e[i+2],a+=t,i+=o}function c(r,e,t,o,s){const a=r.typedBuffer,i=r.typedBufferStride,n=s?.count??r.count;let f=(s?.dstIndex??0)*i;for(let r=0;r<n;++r)a[f]=e,a[f+1]=t,a[f+2]=o,f+=i}export{n as D,l as a,u as c,c as f};
