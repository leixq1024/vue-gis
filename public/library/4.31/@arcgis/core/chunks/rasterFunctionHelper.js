/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{c as t}from"./colorUtils2.js";import e from"../core/Error.js";import{clone as s}from"../core/lang.js";import{_ as n}from"./tslib.es6.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"./Logger.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import{f as i,b as a,g as u,i as l,a as c}from"./pixelRangeUtils.js";import{JSONSupport as p}from"../core/JSONSupport.js";import{cast as h}from"../core/accessorSupport/decorators/cast.js";import m,{S as d}from"../layers/support/PixelBlock.js";import f from"../layers/support/RasterInfo.js";import{localTrigonometricOperation as g,localLogicalOperation as y,localConditionalOperation as x,convolutionKernel as w,localOperators as v}from"../layers/support/rasterFunctionConstants.js";import{k as b,l as A,m as T,n as P,o as F,q as N,t as R,s as I}from"./RasterSymbolizer.js";import{e as C}from"./enumeration.js";import{J as _}from"./jsonMap.js";import{p as S,v as k,x as j,t as B,M,N as G,y as z,z as O,A as E,B as D,C as U,D as V}from"./vectorFieldUtils.js";import{geometryTypes as L}from"../geometry.js";import{fromJSON as W}from"../geometry/support/jsonUtils.js";import{g as H}from"./unitUtils.js";import q from"../geometry/Extent.js";import $ from"../geometry/Point.js";import{a as J,j as K}from"./rasterProjectionHelper.js";import{r as Z}from"./reader.js";import{a as X,r as Q,h as Y,c as tt,i as et,f as st}from"./colorRampUtils.js";import{f as nt,t as rt}from"./colorRamps.js";import{m as ot,p as it,k as at,l as ut,s as lt,q as ct}from"./stretchUtils.js";import{w as pt}from"./writer.js";import ht from"../layers/support/Field.js";import{m as mt,s as dt,c as ft}from"./focalStatUtils.js";import{k as gt}from"./mathUtils.js";async function yt(t,e,s){if("extent"===s.type)return function(t,e,s){const{width:n,height:r}=t,o=new Uint8Array(n*r),i=e.width/n,a=e.height/r;if(s.width/i<.5||s.height/a<.5)return new m({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});const{xmin:u,xmax:l,ymin:c,ymax:p}=e,{xmin:h,xmax:d,ymin:f,ymax:g}=s,y=Math.max(u,h),x=Math.min(l,d),w=Math.max(c,f),v=Math.min(p,g),b=.5*i,A=.5*a;if(x-y<b||v-w<A||x<u+b||y>l-b||w>p-A||v<c+A)return new m({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});const T=Math.max(0,(y-u)/i),P=Math.min(n,Math.max(0,(x-u)/i)),F=Math.max(0,(p-v)/a),N=Math.min(r,Math.max(0,(p-w)/a)),R=Math.round(T),I=Math.round(P)-1,C=Math.round(F),_=Math.round(N)-1;if(R===I&&T%1>.5&&P%1<.5||C===_&&F%1>.5&&N%1<.5)return new m({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]});if(0===R&&0===C&&I===n&&_===r)return t;const S=t.mask;for(let t=C;t<=_;t++)for(let e=R;e<=I;e++){const s=t*n+e;o[s]=S?S[s]:255}return new m({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]})}(t,e,s);const{width:n,height:r}=t,o=new Uint8Array(n*r),{contains:i,intersects:a}=await import("../geometry/geometryEngine.js");return a(e,s)?"polyline"===s.type?function(t,e,s){const{width:n,height:r}=t,o=new Uint8Array(n*r),i=e.width/n,a=e.height/r,{xmin:u,ymax:l}=e,{paths:c}=s,p=t.mask;for(let t=0;t<c.length;t++){const e=c[t];for(let t=0;t<e.length-1;t++){const[s,c]=e[t],[h,m]=e[t+1];let d=Math.floor((l-c)/a),f=Math.floor((l-m)/a);if(f<d){const t=d;d=f,f=t}d=Math.max(0,d),f=Math.min(r-1,f);const g=(h-s)/(m-c);for(let t=d;t<=f;t++){const e=t===d?Math.max(c,m):(r+1-t)*a,l=t===f?Math.min(c,m):e-a;let y=m===c?Math.floor((s-u)/i):Math.floor((g*(e-c)+s-u)/i),x=m===c?Math.floor((h-u)/i):Math.floor((g*(l-c)+s-u)/i);if(x<y){const t=y;y=x,x=t}const w=t*n;y=Math.max(0,y),x=Math.min(n-1,x);for(let t=w+y;t<=w+x;t++)o[t]=p?p[t]:255}}}return new m({pixelType:t.pixelType,width:n,height:r,mask:o,pixels:[...t.pixels]})}(t,e,s):i(s,e)?t:function(t,e,s){if(!t)return t;const{width:n,height:r}=t,o=e.width/n,i=e.height/r,{xmin:a,ymax:u}=e;let l;if("extent"===s.type){const t=(s.xmin-a)/o,e=(s.xmax-a)/o,n=(u-s.ymax)/i,r=(u-s.ymin)/i;l=[[[t,n],[t,r],[e,r],[e,n],[t,n]]]}else l=s.rings.map((t=>t.map((([t,e])=>[(t-a)/o,(u-e)/i]))));const c=document.createElement("canvas");c.width=n,c.height=r;const p=c.getContext("2d");p.fillStyle="#f00",p.beginPath(),l.forEach((t=>{p.moveTo(t[0][0],t[0][1]);for(let e=0;e<t.length;e++)p.lineTo(t[e][0],t[e][1]);p.closePath()})),p.fill();const h=p.getImageData(0,0,n,r).data,d=t.mask,f=n*r,g=new Uint8Array(f);for(let t=0;t<f;t++)d&&!d[t]||(g[t]=h[4*t+3]>127?255:0);return new m({pixelType:t.pixelType,width:n,height:r,mask:g,maskIsAlpha:!1,pixels:[...t.pixels]})}(t,e,s):new m({pixelType:t.pixelType,width:n,height:r,mask:o,maskIsAlpha:!1,pixels:[...t.pixels]})}function xt(t,e,s,n=!0){const{spatialReference:r}=t,{x:o,y:i}=function(t,e){if(t.spatialReference.equals(e))return t;const s=H(t.spatialReference),n=H(e);if(s===n)return t;const r=s/n;return{x:t.x*r,y:t.y*r}}(s,r);let a,u,l;const c="extent"===e.type?e:e.extent;let{xmin:p,xmax:h,ymax:m,ymin:d}=c;const{xmin:f,ymax:g}=t.extent;return n?(p=f+(p>f?o*Math.round((p-f)/o):0),m=g-(m<g?i*Math.round((g-m)/i):0),h=f+(h>f?o*Math.round((h-f)/o):0),d=g-(d<g?i*Math.round((g-d)/i):0),a=new q({xmin:p,ymax:m,xmax:h,ymin:d,spatialReference:r}),u=Math.round(a.width/o),l=Math.round(a.height/i)):(u=Math.floor((h-p)/o+.8),l=Math.floor((m-d)/i+.8),p=f+(p>f?o*Math.floor((p-f)/o+.1):0),m=g-(m<g?i*Math.floor((g-m)/i+.1):0),h=p+u*o,d=m-l*i,a=new q({xmin:p,ymax:m,xmax:h,ymin:d,spatialReference:r})),{extent:a,width:u,height:l}}let wt=class extends p{constructor(){super(...arguments),this.raster=void 0}};n([r({json:{write:!0}})],wt.prototype,"raster",void 0),wt=n([o("esri.layers.support.rasterFunctions.BaseFunctionArguments")],wt);const vt=wt;var bt;let At=bt=class extends vt{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new bt({raster:this.raster,raster2:this.raster2,operation:this.operation})}};n([r({json:{write:!0}})],At.prototype,"operation",void 0),n([r({json:{write:!0}})],At.prototype,"raster2",void 0),n([r({readOnly:!0})],At.prototype,"rasters",null),At=bt=n([o("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],At);const Tt=At,Pt=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let Ft=class extends p{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const t=[];for(let e=0;e<n.length;e++){const{parameters:s}=n[e],r=s.rasters||s.raster&&[s.raster];r?.length&&t.push(...r)}n=t}for(let t=e.length-1;t>=0;t--)e[t].isNoopProcess&&e.splice(t,1);let r=!1;for(let t=0;t<e.length;t++){const s=e[t];s.id=e.length-t-1;const{rasters:n}=s.parameters;r=r||null!=n&&n.length>1}const o=e.some((({name:t})=>Pt.has(t.toLowerCase()))),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:r,hasFocalFunction:o,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let r=!0;for(let s=0;s<n.length;s++){const o=n[s];if(null!=o&&this._isRasterFunctionValue(o)){const n=o.bind(t,e,this.id+s);if(!n.success)return this._bindingResult=n,n;r=r&&n.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const s=t.filter((t=>"ExtractBand"===t.functionName));return s.length&&s.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let s=0;s<t;s++)e.push(s)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some(((t,e)=>t!==e)),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach((e=>{if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}}));else if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach((t=>{t.statistics=void 0,t.histograms=void 0}))}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&n.includes(t)?s[n.indexOf(t)]:"number"!=typeof t?s[0]:void 0)),o=r.find((t=>t))??s[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,s);else{const t=r,n=this._getPrimaryRasterId(t);if(null==n)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(t),s.unshift(n)):(e.push(t),s.push(n)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(null==t||"$$"===t){const t=s[0];return null==t?null:t.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const e=s[0];if(null==e)return null;const{width:n,height:r,pixelType:o}=e,i=new Float32Array(n*r);i.fill(t);const a=this.sourceRasterInfos[0].bandCount,u=new Array(a).fill(i);return new m({width:n,height:r,pixelType:o,pixels:u})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:r}=t,o=s.BandProperties;o&&o.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:"string"==typeof s.BAND_COUNT?String(e):e})}};n([r({json:{write:!0}})],Ft.prototype,"functionName",void 0),n([r({json:{write:!0}})],Ft.prototype,"functionArguments",void 0),n([r()],Ft.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}}),h((t=>t?.toLowerCase()))],Ft.prototype,"outputPixelType",void 0),n([r({json:{write:!0}})],Ft.prototype,"mainPrimaryRasterId",void 0),n([r()],Ft.prototype,"sourceRasters",void 0),n([r({type:[f],json:{write:!0}})],Ft.prototype,"sourceRasterInfos",void 0),n([r({json:{write:!0}})],Ft.prototype,"rasterInfo",void 0),n([r({json:{write:!0}})],Ft.prototype,"readingBufferSize",void 0),n([r({json:{write:!0}})],Ft.prototype,"id",void 0),n([r()],Ft.prototype,"isNoopProcess",void 0),n([r()],Ft.prototype,"supportsGPU",null),n([r()],Ft.prototype,"rawInputBandIds",void 0),n([r()],Ft.prototype,"rawSourceRasterInfos",void 0),n([r()],Ft.prototype,"isInputBandIdsSwizzled",void 0),n([r()],Ft.prototype,"swizzledBandSelection",void 0),n([r()],Ft.prototype,"isBranch",void 0),n([r({readOnly:!0})],Ft.prototype,"flatWebGLFunctionChain",null),n([r()],Ft.prototype,"_bindingResult",void 0),Ft=n([o("esri.layers.support.rasterFunctions.BaseRasterFunction")],Ft);const Nt=Ft,Rt=new Map([[g.acos,{domain:[0,Math.PI],isInteger:!1}],[g.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[g.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[g.cos,{domain:[-1,1],isInteger:!1}],[g.sin,{domain:[-1,1],isInteger:!1}],[y.booleanAnd,{domain:[0,1],isInteger:!0}],[y.booleanNot,{domain:[0,1],isInteger:!0}],[y.booleanOr,{domain:[0,1],isInteger:!0}],[y.booleanXOr,{domain:[0,1],isInteger:!0}],[y.equalTo,{domain:[0,1],isInteger:!0}],[y.notEqual,{domain:[0,1],isInteger:!0}],[y.greaterThan,{domain:[0,1],isInteger:!0}],[y.greaterThanEqual,{domain:[0,1],isInteger:!0}],[y.lessThan,{domain:[0,1],isInteger:!0}],[y.lessThanEqual,{domain:[0,1],isInteger:!0}],[y.isNull,{domain:[0,1],isInteger:!0}]]);function It(t){return Rt.get(t)}const Ct=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function _t(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]+r[t]);return i}function St(t,e,s){const[n]=t,r=n.length,o=m.createEmptyBand("f32",r);return o.set(n),o}function kt(t,e,s){const[n]=t,r=n.length,o=m.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=n[t]*n[t]);return o}function jt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]-r[t]);return i}function Bt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]*r[t]);return i}function Mt(t,e,s){const[n]=t,r=n.length,o=m.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=Math.sign(n[t])*Math.floor(Math.abs(n[t])));return o}function Gt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]/r[t]);return i}function zt(t,e,s){return Gt(t,e,"f32")}function Ot(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=Math.floor(n[t]/r[t]));return i}function Et(t,e,s,n){const r=t[0],o=r.length,i=m.createEmptyBand(s,o);if(n===g.atanh){for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>=1?e[t]=0:i[t]=Math.atanh(s)}return i}const a=n===g.asin?Math.asin:Math.acos;for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>1?e[t]=0:i[t]=a(s)}return i}function Dt(t,e,s,n){const[r]=t,o=r.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n(r[t]));return i}function Ut(t,e,s,n){const[r,o]=t,i=r.length,a=m.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n(r[t],o[t]));return a}function Vt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&r[t]);return i}function Lt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<<r[t]);return i}function Wt(t,e,s){const[n]=t,r=n.length,o=m.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=~n[t]);return o}function Ht(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]|r[t]);return i}function qt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>>r[t]);return i}function $t(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]^r[t]);return i}function Jt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&&r[t]?1:0);return i}function Kt(t,e,s){const[n]=t,r=n.length,o=m.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=n[t]?0:1);return o}function Zt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]||r[t]?1:0);return i}function Xt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=(n[t]?1:0)^(r[t]?1:0));return i}function Qt(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?1:0);return i}function Yt(t,e,s,n){const[r]=t,o=r.length,i=m.createEmptyBand(s,o),a=n===Math.E;for(let t=0;t<o;t++)e&&!e[t]||(i[t]=a?Math.exp(r[t]):n**r[t]);return i}function te(t,e,s){return Yt(t,e,s,10)}function ee(t,e,s){return Yt(t,e,s,2)}function se(t,e,s){return Yt(t,e,s,Math.E)}function ne(t,e,s,n){const[r]=t,o=r.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(r[t]<=0?e[t]=0:i[t]=n(r[t]));return i}function re(t,e,s){return ne(t,e,s,Math.log10)}function oe(t,e,s){return ne(t,e,s,Math.log2)}function ie(t,e,s){return ne(t,e,s,Math.log)}function ae(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>r[t]?1:0);return i}function ue(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>=r[t]?1:0);return i}function le(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<r[t]?1:0);return i}function ce(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<=r[t]?1:0);return i}function pe(t,e,s){const[n]=t,r=n.length,o=m.createEmptyBand(s,r);if(!e)return o;for(let t=0;t<r;t++)o[t]=e[t]?0:1;return o}function he(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]%r[t]);return i}function me(t,e,s){const[n]=t,r=n.length,o=m.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=-n[t]);return o}function de(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?0:1);return i}function fe(t,e,s){const[n,r]=t,o=n.length,i=m.createEmptyBand(s,o),a=new Uint8Array(o);for(let t=0;t<o;t++)null!=e&&!e[t]||0!==n[t]||(i[t]=r[t],a[t]=255);return{band:i,mask:a}}function ge(t,e,s){const[n,r,o]=t,i=n.length,a=m.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n[t]?r[t]:o[t]);return a}function ye(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=m.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e<n&&(e=n)}i[s]=e}return i}function xe(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=m.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e>n&&(e=n)}i[s]=e}return i}function we(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=m.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s],o=e;for(let r=1;r<n;r++){const n=t[r][s];o<n?o=n:e>n&&(e=n)}i[s]=o-e}return i}function ve(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=m.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=0;for(let r=0;r<n;r++)e+=t[r][s];i[s]=e/n}return i}function be(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=m.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s])for(let e=0;e<n;e++){const n=t[e];i[s]+=n[s]}return i}function Ae(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=m.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){const e=new Float32Array(n);let r=0;for(let o=0;o<n;o++){const n=t[o];r+=n[s],e[o]=n[s]}r/=n;let o=0;for(let t=0;t<n;t++)o+=(e[t]-r)**2;i[s]=Math.sqrt(o/n)}return i}function Te(t,e,s){const n=t.length;if(n<2)return t[0];const r=Math.floor(n/2),[o]=t,i=o.length,a=m.createEmptyBand(s,i),u=new Float32Array(n),l=n%2==1;for(let s=0;s<i;s++)if(!e||e[s]){for(let e=0;e<n;e++)u[e]=t[e][s];u.sort(),a[s]=l?u[r]:(u[r]+u[r-1])/2}return a}function Pe(t,e,s){const[n,r]=t;if(null==r)return n;const o=n.length,i=m.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<r[t]?n[t]:r[t]);return i}function Fe(t,e,s){const n=t.length;if(n<=2)return Pe(t,e,s);const r=t[0].length,o=m.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){i.clear();for(let e=0;e<n;e++){const n=t[e][s];i.set(n,i.has(n)?i.get(n)+1:1)}let e=0,r=0;const a=[];for(const t of i.keys())e=i.get(t),e>r?(r=e,a.length=0,a.push(t)):e===r&&a.push(t);a.length>1&&a.sort(((t,e)=>t-e)),o[s]=a[0]}return o}function Ne(t,e,s){const n=t.length;if(n<=2)return Pe(t,e,s);const r=t[0].length,o=m.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){i.clear();for(let e=0;e<n;e++){const n=t[e][s];i.set(n,i.has(n)?i.get(n)+1:1)}let e=0,r=t.length;const a=[];for(const t of i.keys())e=i.get(t),e<r?(r=e,a.length=0,a.push(t)):e===r&&a.push(t);a.length>1&&a.sort(((t,e)=>t-e)),o[s]=a[0]}return o}function Re(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=m.createEmptyBand(s,o),a=new Set;for(let s=0;s<o;s++)if(!e||e[s]){let e;a.clear();for(let r=0;r<n;r++)e=t[r][s],a.add(e);i[s]=a.size}return i}const Ie=new Map,Ce=new Map,_e=new Map,Se=new Map;function ke(t,e,s={}){Ie.size||(Ie.set(4,Math.sqrt),Ie.set(6,Math.acos),Ie.set(7,Math.asin),Ie.set(8,Math.atan),Ie.set(9,Math.atanh),Ie.set(10,Math.abs),Ie.set(21,Math.cos),Ie.set(22,Math.cosh),Ie.set(48,Math.floor),Ie.set(49,Math.ceil),Ie.set(51,Math.sin),Ie.set(52,Math.sinh),Ie.set(56,Math.tan),Ie.set(57,Math.tanh),Ie.set(59,Math.acosh),Ie.set(60,Math.asinh),Ie.set(65,Math.floor),Ce.set(5,Math.pow),Ce.set(61,Math.atan2),_e.set(1,_t),_e.set(2,jt),_e.set(3,Bt),_e.set(11,Vt),_e.set(12,Lt),_e.set(13,Wt),_e.set(14,Ht),_e.set(15,qt),_e.set(16,$t),_e.set(17,Jt),_e.set(18,Kt),_e.set(19,Zt),_e.set(20,Xt),_e.set(23,Gt),_e.set(24,Qt),_e.set(25,se),_e.set(26,te),_e.set(27,ee),_e.set(28,ae),_e.set(29,ue),_e.set(30,Mt),_e.set(31,pe),_e.set(32,St),_e.set(33,le),_e.set(34,ce),_e.set(35,ie),_e.set(36,re),_e.set(37,oe),_e.set(44,he),_e.set(45,me),_e.set(46,de),_e.set(53,kt),_e.set(64,zt),_e.set(65,Ot),_e.set(76,ge),_e.set(78,ge),Se.set(38,Fe),Se.set(39,ye),Se.set(40,ve),Se.set(41,Te),Se.set(42,xe),Se.set(43,Ne),Se.set(47,we),Se.set(54,Ae),Se.set(55,be),Se.set(58,Re),Se.set(66,Fe),Se.set(67,ye),Se.set(68,ve),Se.set(69,Te),Se.set(70,xe),Se.set(71,Ne),Se.set(72,we),Se.set(73,Ae),Se.set(74,be),Se.set(75,Re));let n=function(t,e=!1){const s=t.map((t=>t.mask)),n=s.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===n.length||e&&n.length!==s.length)return new Uint8Array(r).fill(255);const o=n[0],i=new Uint8Array(o);if(1===n.length)return i;if(!e){for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)0===i[t]&&(i[t]=e[t]?255:0)}return i}(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=s,o=!Se.has(e)||s.processAsMultiband,u=o?t[0].pixels.length:1,l=[];for(let s=0;s<u;s++){const u=Se.has(e)&&!o?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[s]));let c,p=!0;if(e===x.setNull){const t=fe(u,n,r);c=t.band,n=t.mask,p=!1}else _e.has(e)?c=_e.get(e)(u,n,"f64"):Ie.has(e)?c=e===g.asin||e===g.acos||e===g.atanh?Et(u,n,"f64",e):Dt(u,n,"f64",Ie.get(e)):Ce.has(e)?c=Ut(u,n,"f64",Ce.get(e)):Se.has(e)?c=Se.get(e)(u,n,"f64"):(c=u[0],p=!1);if(p&&e!==y.isNull&&!Rt.has(e)){const t=m.createEmptyBand(r,c.length);n||(n=new Uint8Array(c.length).fill(255)),i(c,n),a(c,n,r,t),c=t}l.push(c)}const c=t[0];return new m({width:c.width,height:c.height,pixelType:r,mask:e===y.isNull?null:n,pixels:l})}let je=class extends Nt{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:function(t,e,s){return ke(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,r]=u(s);const o=l(s);return o&&(n-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[n,r],isOutputRounded:o}}};n([r({json:{write:!0,name:"rasterFunction"}})],je.prototype,"functionName",void 0),n([r({type:Tt,json:{write:!0,name:"rasterFunctionArguments"}})],je.prototype,"functionArguments",void 0),n([r()],je.prototype,"rasterArgumentNames",void 0),je=n([o("esri.layers.support.rasterFunctions.ArithmeticFunction")],je);const Be=je;var Me;let Ge=Me=class extends vt{clone(){return new Me({raster:this.raster})}};Ge=Me=n([o("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Ge);const ze=Ge;let Oe=class extends Nt{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return b(e,{resolution:o})}};n([r({json:{write:!0,name:"rasterFunction"}})],Oe.prototype,"functionName",void 0),n([r({type:ze,json:{write:!0,name:"rasterFunctionArguments"}})],Oe.prototype,"functionArguments",void 0),n([r()],Oe.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Oe.prototype,"isGCS",void 0),Oe=n([o("esri.layers.support.rasterFunctions.AspectFunction")],Oe);const Ee=Oe,De=new Set(["+","-","*","/","(",")"]);function Ue(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Ve(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let r,o,i;"number"==typeof s?(i=n,r=i.length,o=new Float32Array(r),o.fill(s)):(r=s.length,o=s,n.constructor===Number?(i=new Float32Array(r),i.fill(n)):i=n);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function Le(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let e=0;e<t.length;e++)if("("===t[e])s=e;else if(")"===t[e]){n=e;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function We(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let n=0;n<t.length;n++)if("("===t[n])e=n;else if(")"===t[n]){s=n;break}const n=0===s?t:t.slice(e+1,s);let r=-1;for(let t=0;t<n.length;t++)if("*"===n[t]||"/"===n[t]){r=t;break}if(r>-1)s>0&&(r+=e+1);else{for(let t=0;t<n.length;t++)if("+"===n[t]||"-"===n[t]){r=t;break}s>0&&(r+=e+1)}let o=0;for(let e=0;e<r;e++)"("===t[e]&&o++;return{opIndex:r,numIndex:r-o}}const He=new _({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function qe(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function $e(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o],i=t+n;i&&(r[o]=(t-n)/i)}return[r]}var Je;let Ke=Je=class extends vt{constructor(){super(...arguments),this.method="custom"}clone(){return new Je({method:this.method,bandIndexes:this.bandIndexes,raster:s(this.raster)})}};n([r({json:{type:String,write:!0}})],Ke.prototype,"bandIndexes",void 0),n([C(He)],Ke.prototype,"method",void 0),Ke=Je=n([o("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Ke);const Ze=Ke,Xe=new Set(["vari","mtvi2","rtvi-core","evi"]);let Qe=class extends Nt{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:s,bandIndexes:n}=this.functionArguments;return function(t,e){if(!S(t))return t;const{equation:s,method:n}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:o,mask:i}=t;let u;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":u=$e(i,o[r[0]],o[r[1]]);break;case"ndwi":u=$e(i,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":u=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n)}return[r]}(i,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":u=function(t,e,s){const n=e.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n-1)}return[r]}(i,o[r[0]],o[r[1]]);break;case"savi":u=function(t,e,s,n){const r=s.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=s[i],r=e[i],a=r+t+n;a&&(o[i]=(r-t)/a*(1+n))}return[o]}(i,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":u=function(t,e,s,n,r,o){const i=s.length,a=new Float32Array(i),u=-r*n+o*(1+n*n);for(let o=0;o<i;o++)if(null==t||t[o]){const t=s[o],i=e[o],l=r*i+t+u;l&&(a[o]=n*(i-n*t-r)/l)}return[a]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":u=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o],i=2*n+1;r[o]=.5*(i-Math.sqrt(i*i-8*(n-t)))}return[r]}(i,o[r[0]],o[r[1]]);break;case"gemi":u=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o];if(1!==t&&n+t+.5!==0){const e=(2*(n*n-t*t)+1.5*n+.5*t)/(n+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}(i,o[r[0]],o[r[1]]);break;case"pvi":u=function(t,e,s,n,r){const o=s.length,i=new Float32Array(o),a=1/Math.sqrt(1+n*n);for(let u=0;u<o;u++)if(null==t||t[u]){const t=s[u],o=e[u];i[u]=(o-n*t-r)*a}return[i]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":u=function(t,e){const[s,n,r,o,i,a]=e,u=s.length,l=new Float32Array(u);for(let e=0;e<u;e++)(null==t||t[e])&&(l[e]=-.2848*s[e]-.2435*n[e]-.5436*r[e]+.7243*o[e]+.084*i[e]-.18*a[e]);return[l]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":u=function(t,e){const[s,n,r,o,i]=e,a=s.length,u=new Float32Array(a),l=new Float32Array(a),c=new Float32Array(a);for(let e=0;e<a;e++)(null==t||t[e])&&(u[e]=i[e]?o[e]/i[e]*100:0,l[e]=s[e]?o[e]/s[e]*100:0,c[e]=r[e]?n[e]/r[e]*(o[e]/r[e])*100:0);return[u,l,c]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]]]);break;case"vari":u=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=o+t-r[e];a&&(i[e]=(o-t)/a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":u=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e],u=Math.sqrt((2*t+1)**2-(6*t-5*Math.sqrt(o))-.5);if(u){const s=1.5*(1.2*(t-a)-2.5*(o-a));i[e]=s/u}}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":u=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e];i[e]=100*(t-o)-10*(t-a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":u=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=t+6*o-7.5*r[e]+1;a&&(i[e]=2.5*(t-o)/a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":u=function(t,e,s=.5){const[n,r,o]=e,i=r.length,a=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=n[e],i=r[e],u=o[e],l=t+s*i+(1-s)*u;l&&(a[e]=(t-s*i-(1-s)*u)/l)}return[a]}(i,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":u=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o])for(o=0;o<n;o++){const t=(.1-e[o])**2+(.06-s[o])**2;t&&(r[o]=1/t)}return[r]}(i,o[r[0]],o[r[1]]);break;case"custom":u=function(t,e,s){let n,{ops:r,nums:o}=function(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const s=t.split(""),n=[],r=[];let o="";for(let t=0;t<s.length;t++){const i=s[t];De.has(i)?(o.length&&r.push(Ue(o,e)),n.push(i),o=""):o=o.concat(i)}return o.length&&r.push(Ue(o,e)),{ops:n,nums:r}}(s,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const s=new Float32Array(e[0].length);return"number"==typeof t?s.fill(t):s.set(t),[s]}for(;r.length>0;){const{numIndex:e,opIndex:s}=We(r);if(n=Ve(t,r[s],o[e],o[e+1]),1===r.length)break;r=Le(r,s),o.splice(e,2,n)}return[n]}(i,o,s);break;default:return t}const{outputPixelType:c="f32"}=e,p=null!=c&&l(c);let h;i?(h=new Uint8Array(t.width*t.height),h.set(i)):p&&(h=new Uint8Array(t.width*t.height).fill(255)),p&&(u=u.map((t=>{const e=m.createEmptyBand(c,t.length);return a(t,h,c,e),e})));const d=new m({width:t.width,height:t.height,pixelType:c,pixels:u,mask:h});return d.updateStatistics(),d}(e,{method:s,bandIndexes:n.split(" ").map((t=>parseFloat(t))),equation:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=qe([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=qe([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=qe([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=qe([e[0],e[1],0]),n="ci";break;case"savi":s=qe([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=qe([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=qe([e[0],e[1],0]),n="msavi";break;case"gemi":s=qe([e[0],e[1],0]),n="gemi";break;case"pvi":s=qe([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=qe([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=qe([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=qe([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=qe([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=qe([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=qe([e[1],e[0],0]),n="bai";break;default:s=qe([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r,isOutputRounded:l(this.outputPixelType)}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),s=t.length,n=e.map((t=>t>=s?s-1:t)),r=Xe.has(this.functionArguments.method)?3:2,o=n.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};n([r({json:{write:!0,name:"rasterFunction"}})],Qe.prototype,"functionName",void 0),n([r({type:Ze,json:{write:!0,name:"rasterFunctionArguments"}})],Qe.prototype,"functionArguments",void 0),n([r()],Qe.prototype,"rasterArgumentNames",void 0),Qe=n([o("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Qe);const Ye=Qe;var ts;const es=new _({1:"outside",2:"inside"},{useNumericKeys:!0});let ss=ts=class extends vt{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ts({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};n([r({types:L,json:{read:W,write:!0}})],ss.prototype,"clippingGeometry",void 0),n([r({json:{read:es.read,write:es.write}})],ss.prototype,"clippingType",void 0),ss=ts=n([o("esri.layers.support.rasterFunctions.ClipFunctionArguments")],ss);const ns=ss;let rs=class extends Nt{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:s,clippingType:n}=e;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if("outside"===n)try{const{spatialReference:e}=t,n="extent"===s.type?J(s,e):K(s,e).extent;n&&function(t,e){const{extent:s}=xt(t,e,new $({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:n}=t.extent;if(s.xmax=Math.min(s.xmax,n.xmax),s.ymax=Math.min(s.ymax,n.ymax),s.xmin<s.xmax&&s.ymin<s.ymax){const{x:e,y:n}=t.pixelSize,r=Math.round(s.width/e),o=Math.round(s.height/n);t.extent=s,t.width=r,t.height=o}}(t,n)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};n([r({json:{write:!0,name:"rasterFunction"}})],rs.prototype,"functionName",void 0),n([r({type:ns,json:{write:!0,name:"rasterFunctionArguments"}})],rs.prototype,"functionArguments",void 0),n([r()],rs.prototype,"rasterArgumentNames",void 0),n([r()],rs.prototype,"isNoopProcess",void 0),rs=n([o("esri.layers.support.rasterFunctions.ClipFunction")],rs);const os=rs;var is;let as=is=class extends vt{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return Q.includes(e)?e:null}readColorRamp(t){return nt(t)}readColorRampName(t,e){if(!t)return null;const s=X.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return s?X.fromJSON(s):null}clone(){return new is({colormap:s(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};n([r({type:[[Number]],json:{write:!0}})],as.prototype,"colormap",void 0),n([r({type:String,json:{write:!0}})],as.prototype,"colormapName",void 0),n([h("colormapName")],as.prototype,"castColormapName",null),n([r({types:rt,json:{write:!0}})],as.prototype,"colorRamp",void 0),n([Z("colorRamp")],as.prototype,"readColorRamp",null),n([r({type:X.apiValues,json:{type:X.jsonValues,write:X.write}})],as.prototype,"colorRampName",void 0),n([Z("colorRampName")],as.prototype,"readColorRampName",null),as=is=n([o("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],as);const us=as,ls=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],cs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function ps(t,e){const s=[],n=[];for(let e=0;e<t.length-1;e++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[e].slice(1),toColor:t[e+1].slice(1)}),n.push(t[e+1][0]-t[e][0]);const r=t[t.length-1][0];return Y({type:"multipart",colorRamps:s},{numColors:r,weights:e=e??n})}let hs=class extends Nt{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!e?.length)if(n)this.colorRamp=n,e=tt(n,{interpolateAlpha:!0});else if(r){const t=et(r);t&&(e=tt(t),this.colorRamp=nt(t))}else s&&(e=function(t){let e;switch(t){case"elevation":e=ps([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]]);break;case"gray":e=Y({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]});break;case"hillshade":e=ps([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495]);break;case"ndvi":e=ls;break;case"ndvi2":e=function(){const t=ps([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=cs;break;case"random":e=function(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const o=this._getOutputPixelType(t.pixelType);this.outputPixelType=o.startsWith("f")?"s32":o;const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||l(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};n([r({json:{write:!0,name:"rasterFunction"}})],hs.prototype,"functionName",void 0),n([r({type:us,json:{write:!0,name:"rasterFunctionArguments"}})],hs.prototype,"functionArguments",void 0),n([r()],hs.prototype,"rasterArgumentNames",void 0),n([r()],hs.prototype,"isNoopProcess",void 0),n([r({json:{write:!0}})],hs.prototype,"indexedColormap",void 0),n([r()],hs.prototype,"colorRamp",void 0),hs=n([o("esri.layers.support.rasterFunctions.ColormapFunction")],hs);const ms=hs;var ds;let fs=ds=class extends vt{clone(){return new ds({raster:this.raster})}};fs=ds=n([o("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],fs);const gs=fs;let ys=class extends Nt{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const s=[...t.colormap].sort(((t,e)=>t[0]-e[0])),{indexedColormap:n,offset:r}=k({colormap:s});return n?(this.lookup={indexedColormap:n,offset:r},{success:!0,supportsGPU:ot(n)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const s=e.pixels[0],n=e.mask??new Uint8Array(s.length).fill(255),r=new Uint8Array(s.length),o=new Uint8Array(s.length),i=new Uint8Array(s.length),{indexedColormap:a,offset:u}=this.lookup,l=a.length;for(let t=0;t<s.length;t++)if(n[t]){let e=4*(s[t]-u);e<0||e>l-4?n[t]=0:(r[t]=a[e++],o[t]=a[e++],i[t]=a[e++])}return e.pixels=[r,o,i],e.statistics=[new d(0,255),new d(0,255),new d(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};n([r({json:{write:!0,name:"rasterFunction"}})],ys.prototype,"functionName",void 0),n([r({type:gs,json:{write:!0,name:"rasterFunctionArguments"}})],ys.prototype,"functionArguments",void 0),n([r()],ys.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],ys.prototype,"lookup",void 0),ys=n([o("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],ys);const xs=ys;var ws;let vs=ws=class extends vt{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new ws({rasters:s(this.rasters)})}};n([r({json:{write:!0}})],vs.prototype,"rasters",void 0),n([pt("rasters")],vs.prototype,"writeRasters",null),vs=ws=n([o("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],vs);const bs=vs;let As=class extends Nt{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),s.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),s.histograms=e}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach((e=>{const s=t.map((t=>t.multidimensionalInfo?.variables.find((({name:t})=>t===e.name)))),n=s.map((t=>t?.statistics?.length?t.statistics:null)),r=s.map((t=>t?.histograms?.length?t.histograms:null));e.statistics=n.every((t=>null!=t))?n.flat():null,e.histograms=r.every((t=>null!=t))?r.flat():null})),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const s=e?.[0];return null==s?null:j(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};n([r({json:{write:!0,name:"rasterFunction"}})],As.prototype,"functionName",void 0),n([r({type:bs,json:{write:!0,name:"rasterFunctionArguments"}})],As.prototype,"functionArguments",void 0),n([r()],As.prototype,"rasterArgumentNames",void 0),As=n([o("esri.layers.support.rasterFunctions.CompositeBandFunction")],As);const Ts=As,Ps=new _({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Fs=new _({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});var Ns;let Rs=Ns=class extends vt{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new Ns({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};n([C(Ps)],Rs.prototype,"method",void 0),n([C(Fs)],Rs.prototype,"keepMethod",void 0),n([r({json:{write:!0}})],Rs.prototype,"raster2",void 0),n([r({readOnly:!0})],Rs.prototype,"rasters",null),Rs=Ns=n([o("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],Rs);const Is=Rs;let Cs=class extends Nt{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),"categorical"===t){const t=this.sourceRasterInfos.map((t=>t.attributeTable)),s=this._getFieldNames(t,"value"),n=t.map((t=>this._getClassFieldName(t)));if(null==s[0]||null==s[1]||null==n[0]||null==n[1])return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,s,n)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:"difference"===t||"relative-difference"===t}}_processPixels(t){const{pixelBlocks:e}=t;if(null==e?.[0]||null==e?.[1])return null;const{method:s}=this.functionArguments;return function(t,e,s,n){const[r,o]=t,i=l(s)&&!l(r.pixelType)&&!l(o.pixelType),a=[r.mask,o.mask].filter((t=>t)),u=m.combineBandMasks(a),c=t.map((t=>t.pixels[0])),{width:p,height:h}=r,d=m.createEmptyBand(s,p*h);switch(e){case"difference":case"relative-difference":!function(t){const{bands:[e,s],mask:n,isRelative:r,isRoundingNeeded:o,outBand:i}=t,a=e.length;for(let t=0;t<a;t++)if(!n||n[t]){let n=e[t]-s[t];if(r){const r=Math.max(Math.abs(e[t])-Math.abs(s[t]));n=r>0?n/r:0}i[t]=o?Math.round(n):n}}({bands:c,mask:u,outBand:d,isRoundingNeeded:i,isRelative:"relative-difference"===e});break;case"categorical":!function(t){const{bands:[e,s],categoryIndexLookups:[n,r],classNames:[o,i],mask:a,keepMethod:u,outBand:l}=t,c=e.length,p=o.length,h=i.length,m=p*h,d=m+1,f=m+2;for(let t=0;t<c;t++)if(!a||a[t]){const a=e[t],c=s[t],p=n[a],g=r[c],y=o[p],x=i[g];l[t]=null==p||null==g?m:"changed"===u&&y===x?d:"unchanged"===u&&y!==x?f:p*h+g}}({bands:c,mask:u,outBand:d,...n});break;case"euclidean-distance":!function(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,i=e.length;for(let t=0;t<o;t++)if(!n||n[t]){let n=0;for(let r=0;r<i;r++){const o=e[r][t]-s[r][t];n+=o*o}r[t]=Math.sqrt(n)}}({pixels:t.map((t=>t.pixels)),mask:u,outBand:d});break;case"angle-difference":!function(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,i=e.length;for(let t=0;t<o;t++)if(!n||n[t]){let n=0,o=0,a=0;for(let r=0;r<i;r++){const i=e[r][t],u=s[r][t];n+=i*u,o+=i*i,a+=u*u}const u=Math.sqrt(o*a);r[t]=u?Math.acos(n/u):1.5707963267948966}}({pixels:t.map((t=>t.pixels)),mask:u,outBand:d});break;case"band-with-most-change":!function(t){const{pixels:[e,s],mask:n,outBand:r}=t,o=e[0].length,i=e.length;for(let t=0;t<o;t++)if(!n||n[t]){let n=0,o=0;for(let r=0;r<i;r++){const i=Math.abs(e[r][t]-s[r][t]);i>n&&(n=i,o=r)}r[t]=o}}({pixels:t.map((t=>t.pixels)),mask:u,outBand:d})}const f=new m({width:p,height:h,pixels:[d],pixelType:s,mask:u});return f.updateStatistics(),f}(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=u(t);const n=l(t);return n&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:n}}_updateAttributeTable(t,e,s){const n=this.sourceRasterInfos.map((t=>t.attributeTable)),r=n.map(((t,s)=>t.features.map((t=>t.attributes[e[s]])))),o=n.map(((t,e)=>t.features.map((t=>t.attributes[s[e]])))),i=r.map((t=>{const e=[];return t.forEach(((t,s)=>e[t]=s)),e})),{keepMethod:a}=this.functionArguments;this._categoryConfig={categoryIndexLookups:i,classNames:o,keepMethod:a};const u=n[0].clone();u.fields=[new ht({name:"OID",type:"oid"}),new ht({name:"Value",type:"integer"}),new ht({name:"ClassName",type:"string"}),new ht({name:"Class_From",type:"string"}),new ht({name:"Class_To",type:"string"})];const l=this._getFieldNames(n,"red"),c=this._getFieldNames(n,"green"),p=this._getFieldNames(n,"blue"),h=[],m=2===l.length&&2===c.length&&2===p.length;m&&(h.push(...n.map(((t,e)=>t.features.map((t=>[t.attributes[l[e]],t.attributes[c[e]],t.attributes[p[e]]]))))),u.fields.push(new ht({name:"Red",type:"integer"}),new ht({name:"Green",type:"integer"}),new ht({name:"Blue",type:"integer"})));const d=u.features[0].clone();d.geometry=null;const f=[],[g,y]=r.map((t=>t.length));let x=1;for(let t=0;t<g;t++){const e=o[0][t];for(let s=0;s<y;s++){const n=o[1][s];if("changed"===a&&e===n||"unchanged"===a&&e!==n)continue;const r=d.clone();r.attributes={OID:x++,Value:t*y+s,ClassName:e===n?e:`${e} -> ${n}`,Class_From:e,Class_To:n},m&&(r.attributes.Red=h[0][t][0]+h[1][s][0]>>1,r.attributes.Green=h[0][t][1]+h[1][s][1]>>1,r.attributes.Blue=h[0][t][2]+h[1][s][2]>>1),f.push(r)}}if("changed"===a){const t=d.clone();t.attributes={OID:x++,Value:g*y+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},f.push(t)}else if("unchanged"===a){const t=d.clone();t.attributes={OID:x++,Value:g*y+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},f.push(t)}u.features=f,t.attributeTable=u}_getFieldNames(t,e){return t.map((({fields:t})=>t.find((t=>t.name.toLowerCase()===e))?.name)).filter((t=>t))}_getClassFieldName(t){const e=t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().startsWith("class")))??t.fields.find((t=>"string"===t.type&&t.name.toLowerCase().includes("class")||t.name.toLowerCase().includes("type")||t.name.toLowerCase().includes("name")))??t.fields.find((t=>"string"===t.type));return e?.name}};n([r({json:{write:!0,name:"rasterFunction"}})],Cs.prototype,"functionName",void 0),n([r({type:Is,json:{write:!0,name:"rasterFunctionArguments"}})],Cs.prototype,"functionArguments",void 0),n([r()],Cs.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Cs.prototype,"_categoryConfig",void 0),Cs=n([o("esri.layers.support.rasterFunctions.ComputeChangeFunction")],Cs);const _s=Cs;var Ss;let ks=Ss=class extends vt{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new Ss({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};n([r({json:{write:!0}})],ks.prototype,"contrastOffset",void 0),n([r({json:{write:!0}})],ks.prototype,"brightnessOffset",void 0),ks=Ss=n([o("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],ks);const js=ks;let Bs=class extends Nt{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:r}=this.functionArguments;return this.lookup=it(n,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:B(e,{lut:e.pixels.map((()=>this.lookup)),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};n([r({json:{write:!0,name:"rasterFunction"}})],Bs.prototype,"functionName",void 0),n([r({type:js,json:{write:!0,name:"rasterFunctionArguments"}})],Bs.prototype,"functionArguments",void 0),n([r()],Bs.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Bs.prototype,"lookup",void 0),Bs=n([o("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],Bs);const Ms=Bs,Gs=new Map;function zs(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=o.length,l=i?0:n,c=i?n:0,p=i?1:e;for(let i=l;i<s-l;i++){const s=i*e;for(let i=c;i<e-c;i++){if(r&&!r[s+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[s+i+(r-n)*p]*o[r];a[s+i]=e}}return a}function Os(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=Math.floor(n/2),l=Math.floor(r/2);for(let c=u;c<s-u;c++){const s=c*e;for(let c=l;c<e-l;c++){if(o&&!o[s+c])continue;let p=0;for(let o=0;o<n;o++)for(let n=0;n<r;n++)p+=t[s+c+(o-u)*e+n-l]*i[o*r+n];a[s+c]=p}}return a}var Es;Gs.set(w.none,[0,0,0,0,1,0,0,0,0]),Gs.set(w.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),Gs.set(w.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),Gs.set(w.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),Gs.set(w.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),Gs.set(w.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),Gs.set(w.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),Gs.set(w.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),Gs.set(w.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),Gs.set(w.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),Gs.set(w.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),Gs.set(w.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),Gs.set(w.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),Gs.set(w.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),Gs.set(w.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),Gs.set(w.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),Gs.set(w.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),Gs.set(w.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),Gs.set(w.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),Gs.set(w.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),Gs.set(w.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),Gs.set(w.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),Gs.set(w.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let Ds=Es=class extends vt{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=Gs.get(t);if(!e||t===w.userDefined||t===w.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new Es({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:s(this.raster)})}};n([r({json:{type:Number,write:!0}})],Ds.prototype,"rows",void 0),n([r({json:{type:Number,write:!0}})],Ds.prototype,"cols",void 0),n([r({json:{name:"type",type:Number,write:!0}})],Ds.prototype,"convolutionType",null),n([r({json:{type:[Number],write:!0}})],Ds.prototype,"kernel",void 0),Ds=Es=n([o("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],Ds);const Us=Ds;let Vs=class extends Nt{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce(((t,e)=>t+e));return-1===e||0===s||1===s?t:t.map((t=>t/s))}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(w).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==w.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[w.none,w.sharpen,w.sharpen2,w.sharpening3x3,w.sharpening5x5];return(-1===t||"u8"!==this.outputPixelType&&!i.includes(t))&&(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:n.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===w.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:r}=this;return function(t,e){const s=function(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let s=1;s<e;s++){let r=null;for(let n=0;n<e;n++){const o=t[n+s*e],i=t[n];if(null==r)if(0===i){if(o)return{separable:!1,row:null,col:null}}else r=o/i;else if(o/i!==r)return{separable:!1,row:null,col:null}}if(null==r)return{separable:!1,row:null,col:null};n.push(r)}return{separable:!0,row:s,col:n}}(e.kernel),n=!1!==e.mirrorEdges,r=s.separable?function(t,e,s,n=!0){const{pixels:r,width:o,height:i,pixelType:a,mask:u}=t,l=r.length,c=[],p=e.length,h=s.length,d=Math.floor(p/2),f=Math.floor(h/2);for(let t=0;t<l;t++){let a=zs(r[t],o,i,d,u,e,!0);a=zs(a,o,i,f,u,s,!1),n&&mt(a,o,i,p,h),c.push(a)}return new m({width:o,height:i,pixelType:a,pixels:c,mask:u})}(t,s.row,s.col,n):function(t,e,s=!0){const{pixels:n,width:r,height:o,pixelType:i,mask:a}=t,u=n.length,l=[],{kernel:c,rows:p,cols:h}=e;for(let t=0;t<u;t++){const e=Os(n[t],r,o,p,h,a,c);s&&mt(e,r,o,p,h),l.push(e)}return new m({width:r,height:o,pixelType:i,pixels:l,mask:a})}(t,e,n),{outputPixelType:o}=e;return o&&r.clamp(o),r}(e,{kernel:r,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(25);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:u(this.outputPixelType)}}};n([r({json:{write:!0,name:"rasterFunction"}})],Vs.prototype,"functionName",void 0),n([r({type:Us,json:{write:!0,name:"rasterFunctionArguments"}})],Vs.prototype,"functionArguments",void 0),n([r()],Vs.prototype,"rasterArgumentNames",void 0),n([r()],Vs.prototype,"_normalizedKernel",null),Vs=n([o("esri.layers.support.rasterFunctions.ConvolutionFunction")],Vs);const Ls=Vs;var Ws;const Hs=new _({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let qs=Ws=class extends vt{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Hs.fromJSON(e.type??e.curvatureType??0)}clone(){return new Ws({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};n([r({json:{write:{target:"type"}}}),C(Hs)],qs.prototype,"curvatureType",void 0),n([Z("curvatureType",["type","curvatureType"])],qs.prototype,"readCurvatureType",null),n([r({type:Number,json:{write:!0}})],qs.prototype,"zFactor",void 0),qs=Ws=n([o("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],qs);const $s=qs;let Js=class extends Nt{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,i=o?.[0],a=i??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&s>=1?s*A:s;return T(e,{zFactor:u,curvatureType:n,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*A:t}}};n([r({json:{write:!0,name:"rasterFunction"}})],Js.prototype,"functionName",void 0),n([r({type:$s,json:{write:!0,name:"rasterFunctionArguments"}})],Js.prototype,"functionArguments",void 0),n([r()],Js.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Js.prototype,"isGCS",void 0),Js=n([o("esri.layers.support.rasterFunctions.CurvatureFunction")],Js);const Ks=Js;var Zs;let Xs=Zs=class extends vt{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=M.bestMatch}clone(){return new Zs({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};n([r({json:{write:!0}})],Xs.prototype,"bandIds",void 0),n([r({json:{write:!0}})],Xs.prototype,"bandNames",void 0),n([r({json:{write:!0}})],Xs.prototype,"bandWavelengths",void 0),n([C({0:"name",1:"wavelength",2:"id"})],Xs.prototype,"method",void 0),n([r({json:{write:!0}})],Xs.prototype,"missingBandAction",void 0),n([r({json:{write:!0}})],Xs.prototype,"wavelengthMatchTolerance",void 0),Xs=Zs=n([o("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Xs);const Qs=Xs;let Ys=class extends Nt{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:r,bandWavelengths:o,bandIds:i,missingBandAction:a}=t,u=r?.length&&("name"===n||"id"!==n&&!i?.length),l=o?.length&&("wavelength"===n||"id"!==n&&!i?.length),c=a===M.fail,p=u?function(t,e){const s=t.bandInfos.map((({name:t})=>t.toLowerCase())),n=[];for(let t=0;t<e.length;t++){const r=e[t].toLowerCase();let o=s.indexOf(r);if(-1===o&&"nearinfrared"===r&&(o=s.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=s.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;n.push(o)}return n}(s,r):l?function(t,e,{wavelengthMatchTolerance:s},n){const{bandInfos:r}=t,o=[];for(let t=0;t<r.length;t++){const{minWavelength:e,maxWavelength:s}=r[t];if(!e||!s)return null;o.push({minWavelength:e,maxWavelength:s})}const i=[];for(let t=0;t<e.length;t++){const r=e[t];let a=!1,u=-1,l=Number.MAX_VALUE;for(let t=0;t<o.length;t++){const e=o[t],s=r>=e.minWavelength&&r<=e.maxWavelength,n=Math.abs(r-(e.minWavelength+e.maxWavelength)/2);s?n<l&&(a=!0,u=t,l=n):!a&&n<l&&(u=t,l=n)}if(!a&&s&&l<s&&(a=!0),!a&&n)return null;i.push(u)}return i}(s,o,this.functionArguments,c):function(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some((t=>t<0||t>=n))?null:e}(s,i,c);if(null==p)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const h=s.clone();h.pixelType=this.outputPixelType,h.bandCount=p.length;const{statistics:m,histograms:d}=h;null!=m&&m.length&&(h.statistics=p.map((t=>m[t]||m[m.length-1]))),null!=d&&d.length&&(h.histograms=p.map((t=>d[t]||d[d.length-1]))),h.multidimensionalInfo&&h.multidimensionalInfo.variables.forEach((t=>{const{statistics:e,histograms:s}=t;null!=e&&e.length&&(t.statistics=p.map((t=>e[t]||e[e.length-1]))),null!=s&&s.length&&(t.histograms=p.map((t=>s[t]||s[s.length-1])))}));let f=h.keyProperties?.BandProperties;return f?.length&&(f=p.map((t=>t>=f.length?f[f.length-1]:f[t])),h.keyProperties={...h.keyProperties,BandProperties:f}),this.rasterInfo=h,{success:!0,supportsGPU:h.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map((t=>t>=s?s-1:t));return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:qe(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}};n([r({json:{write:!0,name:"rasterFunction"}})],Ys.prototype,"functionName",void 0),n([r({type:Qs,json:{write:!0,name:"rasterFunctionArguments"}})],Ys.prototype,"functionArguments",void 0),n([r()],Ys.prototype,"rasterArgumentNames",void 0),Ys=n([o("esri.layers.support.rasterFunctions.ExtractBandFunction")],Ys);const tn=Ys;var en;let sn=en=class extends vt{clone(){return new en({conversionParameters:[...this.conversionParameters],raster:this.raster})}};n([r({type:[Number],json:{write:!0}})],sn.prototype,"conversionParameters",void 0),sn=en=n([o("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],sn);const nn=sn;let rn=class extends Nt{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:function(t,e,s){const{pixels:n,width:r,height:o,mask:i,bandMasks:a}=t,l=r*o,c=a?.length?m.combineBandMasks(a):i,p=Math.min(e.length,n.length),h=s.startsWith("f"),d=!h&&s!==t.pixelType,[f,g]=u(s),y=m.createEmptyBand(s,l);for(let t=0;t<o;t++){let s=t*r;for(let t=0;t<r;t++,s++)if(!c||c[s]){let t=0;for(let r=0;r<p;r++)t+=e[r]*n[r][s];h||(t=Math.round(t),d&&(t=t>g?g:t<f?f:t)),y[s]=t}}const x=new m({width:r,height:o,pixels:[y],pixelType:s,mask:c});return x.updateStatistics(),x}(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};n([r({json:{write:!0,name:"rasterFunction"}})],rn.prototype,"functionName",void 0),n([r({type:nn,json:{write:!0,name:"rasterFunctionArguments"}})],rn.prototype,"functionArguments",void 0),n([r()],rn.prototype,"rasterArgumentNames",void 0),n([r()],rn.prototype,"_normalizedWeights",null),rn=n([o("esri.layers.support.rasterFunctions.GrayscaleFunction")],rn);const on=rn;var an;const un=new _({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),ln=new _({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let cn=an=class extends vt{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new an({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};n([r({type:Number,json:{write:!0}})],cn.prototype,"altitude",void 0),n([r({type:Number,json:{write:!0}})],cn.prototype,"azimuth",void 0),n([r(),C(un)],cn.prototype,"hillshadeType",void 0),n([r({type:Number,json:{write:!0,name:"psPower"}})],cn.prototype,"pixelSizePower",void 0),n([r({type:Number,json:{write:!0,name:"psZFactor"}})],cn.prototype,"pixelSizeFactor",void 0),n([r(),C(ln)],cn.prototype,"slopeType",void 0),n([r({type:Number,json:{write:!0}})],cn.prototype,"zFactor",void 0),n([r({type:Boolean,json:{write:!0}})],cn.prototype,"removeEdgeEffect",void 0),cn=an=n([o("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],cn);const pn=cn;let hn=class extends Nt{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}),i=P(this.functionArguments,o,this.isGCS),a=F(e,i);return a.pixelType=this.outputPixelType,a}_getWebGLParameters(){const t=P(this.functionArguments,{x:1,y:1},this.isGCS),e=N(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,i="scaled"===s,a=l(this.outputPixelType);return{...e,zFactor:n,gcsFactor:this.isGCS?A:1,pixelSizeFactor:i?r:0,pixelSizePower:i?o:0,isOutputRounded:a}}};n([r({json:{write:!0,name:"rasterFunction"}})],hn.prototype,"functionName",void 0),n([r({type:pn,json:{write:!0,name:"rasterFunctionArguments"}})],hn.prototype,"functionArguments",void 0),n([r()],hn.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],hn.prototype,"isGCS",void 0),hn=n([o("esri.layers.support.rasterFunctions.HillshadeFunction")],hn);const mn=hn;var dn;let fn=dn=class extends vt{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new dn({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:s(this.rasters)})}};n([r({json:{write:!0}})],fn.prototype,"operation",void 0),n([r({json:{write:!0}})],fn.prototype,"rasters",void 0),n([pt("rasters")],fn.prototype,"writeRasters",null),n([r({json:{write:!0}})],fn.prototype,"processAsMultiband",void 0),fn=dn=n([o("esri.layers.support.rasterFunctions.LocalFunctionArguments")],fn);const gn=fn;let yn=class extends Nt{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=Ct[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const a=e.clone();return a.bandCount=999!==i||n?s:1,this._removeStatsHistColormapVAT(a),this._updateStatistics(a),this._updatePixelType(a),this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:ke(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=Ct[t],s=Object.keys(v).find((e=>v[e]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[r,o]=u(n);const i=l(n);return i&&(r-=1e-4,o+=1e-4),{imageCount:e,operationName:s,domainRange:[r,o],isOutputRounded:i}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=It(s)?.domain;if(n){t.statistics=[];for(let e=0;e<t.bandCount;e++)t.statistics[e]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else 45===s&&e.statistics?.length&&(t.statistics=e.statistics.map((t=>({min:-t.max,max:-t.min,avg:null!=t.avg?-t.avg:void 0,stddev:null!=t.stddev?-t.stddev:void 0}))))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:r,isInteger:o}=It(n)??{domain:null,isInteger:!1};let i="f32";if(r&&o)i=c(r[0],r[1]);else if(30===n){const t=e?.[0];i=t?c(t.min,t.max):l(s)?s:"s32"}else if(45===n&&l(s)){const t=e?.map((({max:t})=>-t)),n=e?.map((({min:t})=>-t)),r=t?.length?Math.min(...t):null,o=n?.length?Math.min(...n):null;i=null!=r&&null!=o?c(r,o):s.startsWith("s")?s.replace("s","u"):"u1"===s||"u2"===s||"u4"===s?"s8":"u8"===s?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(i)}};n([r({json:{write:!0,name:"rasterFunction"}})],yn.prototype,"functionName",void 0),n([r({type:gn,json:{write:!0,name:"rasterFunctionArguments"}})],yn.prototype,"functionArguments",void 0),n([r()],yn.prototype,"rasterArgumentNames",void 0),yn=n([o("esri.layers.support.rasterFunctions.LocalFunction")],yn);const xn=yn;var wn;let vn=wn=class extends vt{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=G.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const s=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||s.length>0,0===s.length?null:s}return null}));return e?s:null}clone(){return new wn({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};n([r({json:{write:!0}})],vn.prototype,"includedRanges",void 0),n([r({json:{write:!0}})],vn.prototype,"noDataValues",void 0),n([r()],vn.prototype,"normalizedNoDataValues",null),n([r({json:{write:!0}})],vn.prototype,"noDataInterpretation",void 0),vn=wn=n([o("esri.layers.support.rasterFunctions.MaskFunctionArguments")],vn);const bn=vn;let An=class extends Nt{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let o=0;o<t.bandCount;o++){const t=z(e,s?.slice(2*o,2*o+2),n?.[o]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const o=null!=n&&n.every((t=>t?.length===n[0]?.length));return{success:!0,supportsGPU:(!s||s.length<=2*O)&&(!n||o&&n[0].length<=O)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:o,normalizedNoDataValues:i}=this.functionArguments,a=o===G.matchAll;return E(e,{includedRanges:r,noDataValues:i,outputPixelType:s,matchAll:a,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(O);s.fill(gt),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(O);for(let e=0;e<n.length;e+=2)n[e]=t?.[e]??-gt,n[e+1]=t?.[e+1]??gt;return t?.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};n([r({json:{write:!0,name:"rasterFunction"}})],An.prototype,"functionName",void 0),n([r({type:bn,json:{write:!0,name:"rasterFunctionArguments"}})],An.prototype,"functionArguments",void 0),n([r()],An.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],An.prototype,"lookups",void 0),An=n([o("esri.layers.support.rasterFunctions.MaskFunction")],An);const Tn=An;var Pn;let Fn=Pn=class extends vt{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new Pn({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};n([r({json:{write:!0}})],Fn.prototype,"visibleBandID",void 0),n([r({json:{write:!0}})],Fn.prototype,"infraredBandID",void 0),n([r({json:{write:!0}})],Fn.prototype,"scientificOutput",void 0),Fn=Pn=n([o("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Fn);const Nn=Fn;let Rn=class extends Nt{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],r=Math.max(e,s);if(n.bandCount<2||r>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const o=n.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:u,stddev:l}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return function(t,e,s,n){const{mask:r,pixels:o,width:i,height:a}=t,u=o[s],l=o[e],c=l.length,p=n?new Uint8Array(c):new Float32Array(c),h=n?100:1,d=n?100.5:0;for(let t=0;t<c;t++)if(null==r||r[t]){const e=u[t],s=l[t],n=e+s;n&&(p[t]=(e-s)/n*h+d)}const f=new m({width:i,height:a,mask:r,pixelType:n?"u8":"f32",pixels:[p]});return f.updateStatistics(),f}(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments;return{bandIndexMat3:qe(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map((e=>t[e]))}};n([r({json:{write:!0,name:"rasterFunction"}})],Rn.prototype,"functionName",void 0),n([r({type:Nn,json:{write:!0,name:"rasterFunctionArguments"}})],Rn.prototype,"functionArguments",void 0),n([r()],Rn.prototype,"rasterArgumentNames",void 0),Rn=n([o("esri.layers.support.rasterFunctions.NDVIFunction")],Rn);const In=Rn;var Cn;let _n=Cn=class extends vt{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Cn({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};n([r({json:{write:!0}})],_n.prototype,"inputRanges",void 0),n([r({json:{write:!0}})],_n.prototype,"outputValues",void 0),n([r({json:{write:!0}})],_n.prototype,"noDataRanges",void 0),n([r({json:{write:!0}})],_n.prototype,"allowUnmatched",void 0),n([r({json:{write:!0}})],_n.prototype,"isLastInputRangeInclusive",void 0),_n=Cn=n([o("esri.layers.support.rasterFunctions.RemapFunctionArguments")],_n);const Sn=_n;let kn=class extends Nt{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:s}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:n,outputValues:r,inputRanges:o,noDataRanges:i,isLastInputRangeInclusive:a}=this.functionArguments;if(null!=s&&s.length&&r?.length)if(n){const e=Math.min.apply(null,[...r,s[0].min]),n=Math.max.apply(null,[...r,s[0].max]);t.statistics=[{...s[0],min:e,max:n}]}else{let e=r[0],n=e;for(let t=0;t<r.length;t++)e=e>r[t]?r[t]:e,n=n>r[t]?n:r[t];t.statistics=[{...s[0],min:e,max:n}]}return this.rasterInfo=t,this.lookup=n?null:D({srcPixelType:e,inputRanges:o,outputValues:r,noDataRanges:i,allowUnmatched:n,isLastInputRangeInclusive:a,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=O)&&(!i||i.length<=O)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=B(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=t&&s.mask&&(t.mask=U(e.pixels[0],e.mask,s.mask,s.offset,"u8")),t}const{inputRanges:r,outputValues:o,noDataRanges:i,allowUnmatched:a,isLastInputRangeInclusive:u}=this.functionArguments;return V(e,{inputRanges:r,outputValues:o,noDataRanges:i,outputPixelType:n,allowUnmatched:a,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*O),r=1e-5,o=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],a=i.length;for(let t=0;t<O;t++)n[3*t]=o[2*t]??gt-1,n[3*t+1]=o[2*t+1]??gt,n[3*t+2]=i[t]??0,t<a&&(t>0&&(n[3*t]-=r),(t<a-1||!s)&&(n[3*t+1]-=r));const l=new Float32Array(2*O);return l.fill(gt),e?.length&&l.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:l,clampRange:u(this.outputPixelType)}}};n([r({json:{write:!0,name:"rasterFunction"}})],kn.prototype,"functionName",void 0),n([r({type:Sn,json:{write:!0,name:"rasterFunctionArguments"}})],kn.prototype,"functionArguments",void 0),n([r()],kn.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],kn.prototype,"lookup",void 0),kn=n([o("esri.layers.support.rasterFunctions.RemapFunction")],kn);const jn=kn;var Bn;let Mn=Bn=class extends pn{readColorRamp(t){if("string"==typeof t){const e=X.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return e?et(X.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new Bn({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};n([r({json:{write:!0}})],Mn.prototype,"colorRamp",void 0),n([Z("colorRamp")],Mn.prototype,"readColorRamp",null),n([r({type:[[Number]],json:{write:!0}})],Mn.prototype,"colormap",void 0),Mn=Bn=n([o("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Mn);const Gn=Mn;let zn=class extends Nt{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:s}=this.functionArguments;if(!e&&!s?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const n=t.clone();this._removeStatsHistColormapVAT(n),n.pixelType=this.outputPixelType,n.bandCount=3,n.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=n,this.isGCS=n.spatialReference?.isGeographic??!1,s?.length||(s=tt(e,{interpolateAlpha:!0}));const{indexedColormap:r,offset:o}=k({colormap:s});if(!r?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const i=st(r);return this.lookup={indexedColormap:r,offset:o,hsvMap:i},{success:!0,supportsGPU:ot(r)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e||!this.lookup)return null;let s=t.primaryPixelSizes?.[0];if(null==s){const{extent:n}=t;s=n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1}}const n=P(this.functionArguments,s,this.isGCS),r=F(e,n),o=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return R(r,e,this.lookup.hsvMap,o),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const t=P(this.functionArguments,{x:1,y:1},this.isGCS),e=N(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:o}=this.functionArguments,i="scaled"===s,{indexedColormap:a,offset:u}=this.lookup,c=this.sourceRasterInfos[0].statistics?.[0],p=l(this.outputPixelType);return{...e,indexedColormap:a,offset:u,zFactor:n,gcsFactor:this.isGCS?A:1,pixelSizeFactor:i?r:0,pixelSizePower:i?o:0,minValue:c?.min??0,maxValue:c?.max??8e3,isOutputRounded:p}}};n([r({json:{write:!0,name:"rasterFunction"}})],zn.prototype,"functionName",void 0),n([r({type:Gn,json:{write:!0,name:"rasterFunctionArguments"}})],zn.prototype,"functionArguments",void 0),n([r()],zn.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],zn.prototype,"isGCS",void 0),n([r({json:{write:!0}})],zn.prototype,"lookup",void 0),zn=n([o("esri.layers.support.rasterFunctions.ShadedReliefFunction")],zn);const On=zn;var En;const Dn=new _({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let Un=En=class extends vt{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new En({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};n([C(Dn)],Un.prototype,"slopeType",void 0),n([r({type:Number,json:{write:!0}})],Un.prototype,"zFactor",void 0),n([r({type:Number,json:{name:"psPower",write:!0}})],Un.prototype,"pixelSizePower",void 0),n([r({type:Number,json:{name:"psZFactor",write:!0}})],Un.prototype,"pixelSizeFactor",void 0),n([r({type:Boolean,json:{write:!0}})],Un.prototype,"removeEdgeEffect",void 0),Un=En=n([o("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],Un);const Vn=Un;let Ln=class extends Nt{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:i}=this,{extent:a,primaryPixelSizes:u}=t,l=u?.[0],c=l??(a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1});return I(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o,isGCS:i,resolution:c})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*A:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0,isOutputRounded:l(this.outputPixelType)}}};n([r({json:{write:!0,name:"rasterFunction"}})],Ln.prototype,"functionName",void 0),n([r({type:Vn,json:{write:!0,name:"rasterFunctionArguments"}})],Ln.prototype,"functionArguments",void 0),n([r()],Ln.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Ln.prototype,"isGCS",void 0),Ln=n([o("esri.layers.support.rasterFunctions.SlopeFunction")],Ln);const Wn=Ln;var Hn;let qn=Hn=class extends vt{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Hn({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:s(this.raster)})}};n([r({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],qn.prototype,"rows",void 0),n([r({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],qn.prototype,"cols",void 0),n([r({json:{write:!0}})],qn.prototype,"fillNoDataOnly",void 0),n([r({json:{read:{source:["statisticsType","type"],reader:(t,e)=>dt.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),C(dt)],qn.prototype,"statisticsType",void 0),qn=Hn=n([o("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],qn);const $n=qn;let Jn=class extends Nt{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return"stddev"===n&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:s,rows:n,cols:r,fillNoDataOnly:o}=this.functionArguments;return ft(e,{kernelRows:n,kernelCols:r,fillNoDataOnly:o,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:u(this.outputPixelType)}}};n([r({json:{write:!0,name:"rasterFunction"}})],Jn.prototype,"functionName",void 0),n([r({type:$n,json:{write:!0,name:"rasterFunctionArguments"}})],Jn.prototype,"functionArguments",void 0),n([r()],Jn.prototype,"rasterArgumentNames",void 0),Jn=n([o("esri.layers.support.rasterFunctions.StatisticsFunction")],Jn);const Kn=Jn;var Zn;let Xn=Zn=class extends vt{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};s.push(e)})),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,n.push(e)})),e[s]=n}clone(){return new Zn({statistics:s(this.statistics),histograms:s(this.histograms)})}};n([r({json:{write:!0}})],Xn.prototype,"statistics",void 0),n([Z("statistics")],Xn.prototype,"readStatistics",null),n([pt("statistics")],Xn.prototype,"writeStatistics",null),n([r({json:{write:!0}})],Xn.prototype,"histograms",void 0),Xn=Zn=n([o("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Xn);const Qn=Xn;let Yn=class extends Nt{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};n([r({json:{write:!0,name:"rasterFunction"}})],Yn.prototype,"functionName",void 0),n([r({type:Qn,json:{write:!0,name:"rasterFunctionArguments"}})],Yn.prototype,"functionArguments",void 0),n([r()],Yn.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Yn.prototype,"indexedColormap",void 0),n([r()],Yn.prototype,"isNoopProcess",void 0),Yn=n([o("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],Yn);const tr=Yn;var er;const sr=new _({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let nr=er=class extends vt{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[s]=t)}clone(){return new er({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:s(this.statistics),gamma:s(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:s(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};n([r({type:Boolean,json:{write:!0}})],nr.prototype,"computeGamma",void 0),n([r({type:Boolean,json:{name:"dra",write:!0}})],nr.prototype,"dynamicRangeAdjustment",void 0),n([r({type:[Number],json:{write:!0}})],nr.prototype,"gamma",void 0),n([r()],nr.prototype,"histograms",void 0),n([r({type:Number,json:{write:!0}})],nr.prototype,"maxPercent",void 0),n([r({type:Number,json:{write:!0}})],nr.prototype,"minPercent",void 0),n([r({type:Number,json:{write:!0}})],nr.prototype,"numberOfStandardDeviations",void 0),n([r({type:Number,json:{name:"max",write:!0}})],nr.prototype,"outputMax",void 0),n([r({type:Number,json:{name:"min",write:!0}})],nr.prototype,"outputMin",void 0),n([r({type:Number,json:{write:!0}})],nr.prototype,"sigmoidStrengthLevel",void 0),n([r({json:{type:[[Number]],write:!0}})],nr.prototype,"statistics",void 0),n([pt("statistics")],nr.prototype,"writeStatistics",null),n([C(sr)],nr.prototype,"stretchType",void 0),n([r({type:Boolean,json:{write:!0}})],nr.prototype,"useGamma",void 0),nr=er=n([o("esri.layers.support.rasterFunctions.StretchFunctionArguments")],nr);const rr=nr;let or=class extends Nt{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:o}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const n=at(s.toJSON(),{rasterInfo:t}),i=l(this.outputPixelType)?"round":"float";this.lookup=ut({pixelType:e,...n,gamma:o?r:null,rounding:i}),this.cutOffs=n}else n||(this.cutOffs=at(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed");const{outputMin:a=0,outputMax:u=255}=this.functionArguments;i.statistics=[];for(let t=0;t<i.bandCount;t++)i.statistics[t]={min:a,max:u};return this.rasterInfo=i,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:s}=this;if(s)return B(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||at(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),o=n.useGamma?n.gamma:null;return lt(e,{...r,gamma:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,o=n&&s?.length?ct(r,s):[1,1,1],{minCutOff:i,maxCutOff:a}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],a[1]=a[2]=a[0]);const u=new Float32Array(r);let c;for(c=0;c<r;c++)u[c]=(e-t)/(a[c]-i[c]);const p=l(this.outputPixelType);return{bandCount:r,outMin:t,outMax:e,minCutOff:i,maxCutOff:a,factor:u,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&o?o:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:p,type:"stretch"}}};n([r({json:{write:!0,name:"rasterFunction"}})],or.prototype,"functionName",void 0),n([r({type:rr,json:{write:!0,name:"rasterFunctionArguments"}})],or.prototype,"functionArguments",void 0),n([r()],or.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],or.prototype,"lookup",void 0),n([r({json:{write:!0}})],or.prototype,"cutOffs",void 0),or=n([o("esri.layers.support.rasterFunctions.StretchFunction")],or);const ir=or;var ar;let ur=ar=class extends vt{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new ar({attributeTableAsRecordSet:s(this.attributeTableAsRecordSet)})}};n([r({json:{write:!0}})],ur.prototype,"attributeTableAsRecordSet",void 0),ur=ar=n([o("esri.layers.support.rasterFunctions.TableFunctionArguments")],ur);const lr=ur;let cr=class extends Nt{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,"thematic"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};n([r({json:{write:!0,name:"rasterFunction"}})],cr.prototype,"functionName",void 0),n([r({type:lr,json:{write:!0,name:"rasterFunctionArguments"}})],cr.prototype,"functionArguments",void 0),n([r()],cr.prototype,"rasterArgumentNames",void 0),n([r()],cr.prototype,"isNoopProcess",void 0),cr=n([o("esri.layers.support.rasterFunctions.TableFunction")],cr);const pr=cr,hr=new Map;function mr(t,e){const{rasterFunctionArguments:s}=t;s&&(s.rasters||[s.raster,s.raster2]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&mr(t,e))}))}function dr(t,n){if(n=n??{},"function"in(t=s(t))&&"arguments"in t&&t.arguments){const s=br(t,new Map,n);if(Tr(s),!s.renderingRule)throw new e("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return yr(t=gr(t),n);throw new e("raster-function-helper","unsupported raster function json.")}function fr(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function gr(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const t in s){let e=s[t];const r=t.toLowerCase();if("rasters"===r&&Array.isArray(e))n.rasters=e.map((t=>fr(t)?gr(t):t));else switch(fr(e)&&(e=gr(e)),r){case"dra":n.dra=e;break;case"pspower":n.psPower=e;break;case"pszfactor":n.psZFactor=e;break;case"bandids":n.bandIds=e;break;default:n[t[0].toLowerCase()+t.slice(1)]=e}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function yr(t,s){const{rasterFunction:n,rasterFunctionArguments:r}=t,o=t.outputPixelType?.toLowerCase();if(null==n||!hr.has(n))throw new e("raster-function-helper",`unsupported raster function: ${n}`);const i=hr.get(n),a=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:u}=a,l=[],c=function(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}(r,u),p="rasters"===u[0]||u.length>1,h=[];for(let t=0;t<c.length;t++){const e=c[t];let n;null==e||"string"==typeof e&&e.startsWith("$")?l.push(s?.raster):"string"==typeof e?s[e]&&l.push(s[e]):"number"!=typeof e&&"rasterFunction"in e&&(n=yr(e,s),p||(a.functionArguments[u[t]]=n),l.push(n)),p&&h.push(n??e)}if(p&&("rasters"===u[0]?a.functionArguments.rasters=h:u.forEach(((t,e)=>{a.functionArguments[t]=h[e]}))),s){a.sourceRasters=l;const t=s.raster?.url;t&&(a.mainPrimaryRasterId=t)}return a}function xr(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?xr(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function wr(t,s){if(!t||"object"!=typeof t)return t;const{value:n}=t;if(!n||"object"!=typeof n)return t.isDataset?"$$":n;if(Array.isArray(n))return 0===n.length?[]:n.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?wr(t,s):t));if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&"Scalar"!==n.type)return"$$";if(!("type"in n))return n;let r=n;switch(n.type){case"Scalar":r=n.value;break;case"AlgorithmicColorRamp":r=vr(n);break;case"MultiPartColorRamp":r={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(vr)};break;case"ArgumentArray":if(n.elements?.length&&"RasterStatistics"!==n.elements[0].type){const t=[];for(let r=0;r<n.elements.length;r++){const o=n.elements[r],{type:i}=o;if(i)if("RasterFunctionTemplate"===i){const{renderingRule:e}=br(o,s);t.push(e),null!=o._object_id&&s.set(o._object_id,e)}else{if("RasterFunctionVariable"!==i)throw new e("raster-function-helper","unsupported raster function json.");{const e=wr(o,s);t.push(e),null!=o._object_id&&s.set(o._object_id,e)}}else t.push(o)}r=t}else r=n.elements}return null!=n._object_id&&s.set(n._object_id,r),r}function vr(e){const s=e.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:r}=e;if(!Array.isArray(n)){const{r:e,g:s,b:r}=t({h:n.Hue,s:n.Saturation,v:n.Value});n=[e,s,r,n.AlphaValue]}if(!Array.isArray(r)){const{r:e,g:s,b:n}=t({h:r.Hue,s:r.Saturation,v:r.Value});r=[e,s,n,r.AlphaValue]}return{type:"algorithmic",algorithm:s,fromColor:n,toColor:r}}function br(t,e,s){s&&xr(t,s);const n={renderingRule:{},templates:e};return Ar(t,n),n}function Ar(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&n.set(i,s),s.rasterFunction=r.type.replace("Function",""),s.outputPixelType=r.pixelType;const a={};s.rasterFunctionArguments=a;for(const t in o){if("type"===t||"object_id"===t||"_object_ref_id"===t)continue;const e=o[t];e&&"object"==typeof e&&"type"in e&&("RasterFunctionTemplate"===e.type||"RasterFunctionVariable"===e.type)?("RasterFunctionVariable"===e.type?a[t]=wr(e,n):(s.rasterFunctionArguments[t]={},Ar(e,{renderingRule:s.rasterFunctionArguments[t],templates:n})),null!=e._object_id&&n.set(e._object_id,a[t])):a[t]=e}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),s.rasterFunction){case"Stretch":!function(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(a);break;case"Colormap":!function(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(a);break;case"Convolution":null!=(u=a).ConvolutionType&&(u.Type=u.ConvolutionType,delete u.ConvolutionType);break;case"Mask":!function(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}(a)}var u}function Tr(t){const{renderingRule:s,templates:n}=t;if("object"!=typeof s||!s?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:r}=s;for(const t in r){const s=r[t],o="_object_ref_id"===t?s:s&&"object"==typeof s&&"_object_ref_id"in s?s._object_ref_id:null;if(null==o)s&&"object"==typeof s&&(s.rasterFunctionArguments&&Tr({renderingRule:s,templates:n}),Array.isArray(s)&&s.forEach(((t,r)=>{if("object"==typeof t)if(null!=t._object_ref_id){if(!n.has(t._object_ref_id))throw new e("raster-function-helper",`unsupported raster function json. _object_ref_id: ${s} does not exist`);const i=n.get(o);i&&"object"==typeof i?Object.assign(t,i):s[r]=i}else Tr({renderingRule:t,templates:n})})));else{if(!n.has(o))throw new e("raster-function-helper",`unsupported raster function json. _object_ref_id: ${o} does not exist`);const s=n.get(o);"_object_ref_id"!==t?r[t]=s:s&&"object"==typeof s&&Object.assign(r,s)}}}hr.set("Arithmetic",{desc:"Arithmetic Function",ctor:Be,rasterArgumentNames:["rasters"]}),hr.set("Aspect",{desc:"Aspect Function",ctor:Ee,rasterArgumentNames:["raster"]}),hr.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Ye,rasterArgumentNames:["raster"]}),hr.set("Colormap",{desc:"Colormap Function",ctor:ms,rasterArgumentNames:["raster"]}),hr.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:xs,rasterArgumentNames:["raster"]}),hr.set("CompositeBand",{desc:"CompositeBand Function",ctor:Ts,rasterArgumentNames:["rasters"]}),hr.set("ComputeChange",{desc:"ComputeChange Function",ctor:_s,rasterArgumentNames:["rasters"]}),hr.set("Convolution",{desc:"Convolution Function",ctor:Ls,rasterArgumentNames:["raster"]}),hr.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Ms,rasterArgumentNames:["raster"]}),hr.set("ExtractBand",{desc:"ExtractBand Function",ctor:tn,rasterArgumentNames:["raster"]}),hr.set("Curvature",{desc:"Curvature Function",ctor:Ks,rasterArgumentNames:["raster"]}),hr.set("Hillshade",{desc:"Hillshade Function",ctor:mn,rasterArgumentNames:["raster"]}),hr.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:On,rasterArgumentNames:["raster"]}),hr.set("Grayscale",{desc:"Grayscale Function",ctor:on,rasterArgumentNames:["raster"]}),hr.set("Clip",{desc:"Clip Function",ctor:os,rasterArgumentNames:["raster"]}),hr.set("Local",{desc:"Local Function",ctor:xn,rasterArgumentNames:["rasters"]}),hr.set("Mask",{desc:"Mask Function",ctor:Tn,rasterArgumentNames:["raster"]}),hr.set("NDVI",{desc:"NDVI Function",ctor:In,rasterArgumentNames:["raster"]}),hr.set("Remap",{desc:"Remap Function",ctor:jn,rasterArgumentNames:["raster"]}),hr.set("Slope",{desc:"Slope Function",ctor:Wn,rasterArgumentNames:["raster"]}),hr.set("Statistics",{desc:"Focal Statistics Function",ctor:Kn,rasterArgumentNames:["raster"]}),hr.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:tr,rasterArgumentNames:["raster"]}),hr.set("Stretch",{desc:"Stretch Function",ctor:ir,rasterArgumentNames:["raster"]}),hr.set("Table",{desc:"Attribute Table Function",ctor:pr,rasterArgumentNames:["raster"]});export{dr as a,yt as c,mr as g,xt as s};
