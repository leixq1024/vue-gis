/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{L as e}from"./Logger.js";import{c as t,a as r}from"./mat4f64.js";import{T as o,c as s,D as n,k as a}from"./enums.js";import i from"../core/Error.js";import{g as u}from"./ensureType.js";import{allSettledValues as l}from"../core/promiseUtils.js";import{isDataProtocol as c,dataComponents as f,dataToArrayBuffer as d,makeAbsolute as p}from"../core/urlUtils.js";import{V as m}from"./Version2.js";import{D as h,m as T,x as w,C as g,s as x}from"./mat4.js";import{g as b}from"./quat.js";import{c as y}from"./quatf64.js";import{a as _,u as S,q as E,D as R,m as O,y as A,t as N,p as v,l as C,b as I,c as M,o as L,s as F,n as U,r as j}from"./BufferView.js";import"../core/lang.js";import{j as D,E as B,a as P,i as G}from"./resourceUtils3.js";import"../config.js";import"./handleUtils.js";import"./maybe.js";import"../core/JSONSupport.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/Handles.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./utils.js";import"./tracking.js";import"../core/accessorSupport/decorators/property.js";import"./ObservableBase.js";import"../core/scheduling.js";import"./common.js";import"./vec3f64.js";import"./vec3.js";import"./vec4.js";import"./vec2.js";import"./basicInterfaces.js";function V(e,t){const r=e.count;t||(t=new e.TypedArrayConstructor(r));for(let o=0;o<r;o++)t[o]=e.get(o);return t}class H{constructor(e){this._data=e,this._offset4=0,this._dataUint32=new Uint32Array(this._data,0,Math.floor(this._data.byteLength/4))}readUint32(){const e=this._offset4;return this._offset4+=1,this._dataUint32[e]}readUint8Array(e){const t=4*this._offset4;return this._offset4+=e/4,new Uint8Array(this._data,t,e)}remainingBytes(){return this._data.byteLength-4*this._offset4}}var k,Y;!function(e){e.SCALAR="SCALAR",e.VEC2="VEC2",e.VEC3="VEC3",e.VEC4="VEC4",e.MAT2="MAT2",e.MAT3="MAT3",e.MAT4="MAT4"}(k||(k={})),function(e){e[e.ARRAY_BUFFER=34962]="ARRAY_BUFFER",e[e.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER"}(Y||(Y={}));const $={baseColorFactor:[1,1,1,1],metallicFactor:1,roughnessFactor:1},K={pbrMetallicRoughness:$,emissiveFactor:[0,0,0],alphaMode:"OPAQUE",alphaCutoff:.5,doubleSided:!1},q={ESRI_externalColorMixMode:"tint",ESRI_receiveShadows:!0,ESRI_receiveAmbientOcclusion:!0},z=(e={})=>{const t={...$,...e.pbrMetallicRoughness},r=function(e){switch(e.ESRI_externalColorMixMode){case"multiply":case"tint":case"ignore":case"replace":break;default:e.ESRI_externalColorMixMode="tint"}return e}({...q,...e.extras});return{...K,...e,pbrMetallicRoughness:t,extras:r}},J={magFilter:s.LINEAR,minFilter:s.LINEAR_MIPMAP_LINEAR,wrapS:o.REPEAT,wrapT:o.REPEAT},X=1179937895;class Q{constructor(e,t,r,o){if(this._context=e,this.uri=t,this.json=r,this._glbBuffer=o,this._bufferLoaders=new Map,this._textureLoaders=new Map,this._textureCache=new Map,this._materialCache=new Map,this._nodeParentMap=new Map,this._nodeTransformCache=new Map,this._supportedExtensions=["KHR_texture_basisu","KHR_texture_transform"],this._baseUri=function(e){let t,r;return e.replace(/^(.*\/)?([^/]*)$/,((e,o,s)=>(t=o||"",r=s||"",""))),{dirPart:t,filePart:r}}(this.uri).dirPart,this._checkVersionSupported(),this._checkRequiredExtensionsSupported(),null==r.scenes)throw new i("gltf-loader-unsupported-feature","Scenes must be defined.");if(null==r.meshes)throw new i("gltf-loader-unsupported-feature","Meshes must be defined");if(null==r.nodes)throw new i("gltf-loader-unsupported-feature","Nodes must be defined.");this._computeNodeParents()}static async load(e,t,r){if(c(t)){const r=f(t);if(r&&"model/gltf-binary"!==r.mediaType)try{const o=JSON.parse(r.isBase64?atob(r.data):r.data);return new Q(e,t,o)}catch{}const o=d(t);if(Q._isGLBData(o))return this._fromGLBData(e,t,o)}if(ne.test(t)||"gltf"===r?.expectedType){const o=await e.loadJSON(t,r);return new Q(e,t,o)}const o=await e.loadBinary(t,r);if(Q._isGLBData(o))return this._fromGLBData(e,t,o);if(ae.test(t)||"glb"===r?.expectedType)throw new i("gltf-loader-invalid-glb","This is not a valid glb file.");const s=await e.loadJSON(t,r);return new Q(e,t,s)}static _isGLBData(e){if(null==e)return!1;const t=new H(e);return t.remainingBytes()>=4&&t.readUint32()===X}static async _fromGLBData(e,t,r){const o=await Q._parseGLBData(r);return new Q(e,t,o.json,o.binaryData)}static async _parseGLBData(t){const r=new H(t);if(r.remainingBytes()<12)throw new i("gltf-loader-error","glb binary data is insufficiently large.");const o=r.readUint32(),s=r.readUint32(),n=r.readUint32();if(o!==X)throw new i("gltf-loader-error","Magic first 4 bytes do not fit to expected glb value.");if(t.byteLength<n)throw new i("gltf-loader-error","glb binary data is smaller than header specifies.");if(2!==s)throw new i("gltf-loader-unsupported-feature","An unsupported glb container version was detected. Only version 2 is supported.");let a,u,l=0;for(;r.remainingBytes()>=8;){const t=r.readUint32(),o=r.readUint32();if(0===l){if(1313821514!==o)throw new i("gltf-loader-error","First glb chunk must be JSON.");if(t<0)throw new i("gltf-loader-error","No JSON data found.");a=await D(r.readUint8Array(t))}else if(1===l){if(5130562!==o)throw new i("gltf-loader-unsupported-feature","Second glb chunk expected to be BIN.");u=r.readUint8Array(t)}else e.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] More than 2 glb chunks detected. Skipping.");l+=1}if(!a)throw new i("gltf-loader-error","No glb JSON chunk detected.");return{json:a,binaryData:u}}async getBuffer(e,t){const r=this.json.buffers[e];if(null==r.uri){if(null==this._glbBuffer)throw new i("gltf-loader-error","glb buffer not present");return this._glbBuffer}const o=await this._getBufferLoader(e,t);if(o.byteLength!==r.byteLength)throw new i("gltf-loader-error","Buffer byte lengths should match.");return o}async _getBufferLoader(e,t){const r=this._bufferLoaders.get(e);if(r)return r;const o=this.json.buffers[e].uri,s=this._context.loadBinary(this._resolveUri(o),t).then((e=>new Uint8Array(e)));return this._bufferLoaders.set(e,s),s}async getAccessor(e,t){if(!this.json.accessors)throw new i("gltf-loader-unsupported-feature","Accessors missing.");const r=this.json.accessors[e];if(null==r?.bufferView)throw new i("gltf-loader-unsupported-feature","Some accessor does not specify a bufferView.");if(r.type in[k.MAT2,k.MAT3,k.MAT4])throw new i("gltf-loader-unsupported-feature",`AttributeType ${r.type} is not supported`);const o=this.json.bufferViews[r.bufferView],s=await this.getBuffer(o.buffer,t),n=te[r.type],a=re[r.componentType],u=n*a,l=o.byteStride||u;return{raw:s.buffer,byteStride:l,byteOffset:s.byteOffset+(o.byteOffset||0)+(r.byteOffset||0),entryCount:r.count,isDenselyPacked:l===u,componentCount:n,componentByteSize:a,componentType:r.componentType,min:r.min,max:r.max,normalized:!!r.normalized}}async getIndexData(e,t){if(null==e.indices)return;const r=await this.getAccessor(e.indices,t);if(r.isDenselyPacked)switch(r.componentType){case n.UNSIGNED_BYTE:return new Uint8Array(r.raw,r.byteOffset,r.entryCount);case n.UNSIGNED_SHORT:return new Uint16Array(r.raw,r.byteOffset,r.entryCount);case n.UNSIGNED_INT:return new Uint32Array(r.raw,r.byteOffset,r.entryCount)}else switch(r.componentType){case n.UNSIGNED_BYTE:return V(oe(C,r));case n.UNSIGNED_SHORT:return V(oe(v,r));case n.UNSIGNED_INT:return V(oe(N,r))}}async getPositionData(e,t){if(null==e.attributes.POSITION)throw new i("gltf-loader-unsupported-feature","No POSITION vertex data found.");const r=await this.getAccessor(e.attributes.POSITION,t);if(r.componentType!==n.FLOAT)throw new i("gltf-loader-unsupported-feature","Expected type FLOAT for POSITION vertex attribute, but found "+n[r.componentType]);if(3!==r.componentCount)throw new i("gltf-loader-unsupported-feature","POSITION vertex attribute must have 3 components, but found "+r.componentCount.toFixed());return oe(I,r)}async getNormalData(e,t){if(null==e.attributes.NORMAL)throw new i("gltf-loader-error","No NORMAL vertex data found.");const r=await this.getAccessor(e.attributes.NORMAL,t);if(r.componentType!==n.FLOAT)throw new i("gltf-loader-unsupported-feature","Expected type FLOAT for NORMAL vertex attribute, but found "+n[r.componentType]);if(3!==r.componentCount)throw new i("gltf-loader-unsupported-feature","NORMAL vertex attribute must have 3 components, but found "+r.componentCount.toFixed());return oe(I,r)}async getTangentData(e,t){if(null==e.attributes.TANGENT)throw new i("gltf-loader-error","No TANGENT vertex data found.");const r=await this.getAccessor(e.attributes.TANGENT,t);if(r.componentType!==n.FLOAT)throw new i("gltf-loader-unsupported-feature","Expected type FLOAT for TANGENT vertex attribute, but found "+n[r.componentType]);if(4!==r.componentCount)throw new i("gltf-loader-unsupported-feature","TANGENT vertex attribute must have 4 components, but found "+r.componentCount.toFixed());return oe(M,r)}async getTextureCoordinates(e,t){if(null==e.attributes.TEXCOORD_0)throw new i("gltf-loader-error","No TEXCOORD_0 vertex data found.");const r=await this.getAccessor(e.attributes.TEXCOORD_0,t);if(2!==r.componentCount)throw new i("gltf-loader-unsupported-feature","TEXCOORD_0 vertex attribute must have 2 components, but found "+r.componentCount.toFixed());if(r.componentType===n.FLOAT)return oe(_,r);if(!r.normalized)throw new i("gltf-loader-unsupported-feature","Integer component types are only supported for a normalized accessor for TEXCOORD_0.");return function(e){switch(e.componentType){case n.BYTE:return new A(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case n.UNSIGNED_BYTE:return new O(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case n.SHORT:return new R(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case n.UNSIGNED_SHORT:return new E(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case n.UNSIGNED_INT:return new S(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount);case n.FLOAT:return new _(e.raw,e.byteOffset,e.byteStride,e.byteOffset+e.byteStride*e.entryCount)}}(r)}async getVertexColors(e,t){if(null==e.attributes.COLOR_0)throw new i("gltf-loader-error","No COLOR_0 vertex data found.");const r=await this.getAccessor(e.attributes.COLOR_0,t);if(4!==r.componentCount&&3!==r.componentCount)throw new i("gltf-loader-unsupported-feature","COLOR_0 attribute must have 3 or 4 components, but found "+r.componentCount.toFixed());if(4===r.componentCount){if(r.componentType===n.FLOAT)return oe(M,r);if(r.componentType===n.UNSIGNED_BYTE)return oe(L,r);if(r.componentType===n.UNSIGNED_SHORT)return oe(F,r)}else if(3===r.componentCount){if(r.componentType===n.FLOAT)return oe(I,r);if(r.componentType===n.UNSIGNED_BYTE)return oe(U,r);if(r.componentType===n.UNSIGNED_SHORT)return oe(j,r)}throw new i("gltf-loader-unsupported-feature","Unsupported component type for COLOR_0 attribute: "+n[r.componentType])}hasPositions(e){return void 0!==e.attributes.POSITION}hasNormals(e){return void 0!==e.attributes.NORMAL}hasVertexColors(e){return void 0!==e.attributes.COLOR_0}hasTextureCoordinates(e){return void 0!==e.attributes.TEXCOORD_0}hasTangents(e){return void 0!==e.attributes.TANGENT}async getMaterial(e,t,r){let o=e.material?this._materialCache.get(e.material):void 0;if(!o){const s=null!=e.material?z(this.json.materials[e.material]):z(),n=s.pbrMetallicRoughness,a=this.hasVertexColors(e),i=this.getTexture(n.baseColorTexture,t),u=this.getTexture(s.normalTexture,t),l=r?this.getTexture(s.occlusionTexture,t):void 0,c=r?this.getTexture(s.emissiveTexture,t):void 0,f=r?this.getTexture(n.metallicRoughnessTexture,t):void 0,d=null!=e.material?e.material:-1;o={alphaMode:s.alphaMode,alphaCutoff:s.alphaCutoff,color:n.baseColorFactor,doubleSided:!!s.doubleSided,colorTexture:await i,normalTexture:await u,name:s.name,id:d,occlusionTexture:await l,emissiveTexture:await c,emissiveFactor:s.emissiveFactor,metallicFactor:n.metallicFactor,roughnessFactor:n.roughnessFactor,metallicRoughnessTexture:await f,hasVertexColors:a,ESRI_externalColorMixMode:s.extras.ESRI_externalColorMixMode,colorTextureTransform:n?.baseColorTexture?.extensions?.KHR_texture_transform,normalTextureTransform:s.normalTexture?.extensions?.KHR_texture_transform,occlusionTextureTransform:s.occlusionTexture?.extensions?.KHR_texture_transform,emissiveTextureTransform:s.emissiveTexture?.extensions?.KHR_texture_transform,metallicRoughnessTextureTransform:n?.metallicRoughnessTexture?.extensions?.KHR_texture_transform,receiveAmbientOcclusion:s.extras.ESRI_receiveAmbientOcclusion,receiveShadows:s.extras.ESRI_receiveShadows}}return o}async getTexture(e,t){if(!e)return;if(0!==(e.texCoord||0))throw new i("gltf-loader-unsupported-feature","Only TEXCOORD with index 0 is supported.");const r=e.index,o=this.json.textures[r],s=(e=>({...J,...e}))(null!=o.sampler?this.json.samplers[o.sampler]:{}),n=se(o),a=this.json.images[n],l=await this._loadTextureImageData(r,o,t);return u(this._textureCache,r,(()=>{const e=e=>33071===e||33648===e||10497===e,t=e=>{throw new i("gltf-loader-error",`Unexpected TextureSampler WrapMode: ${e}`)};return{data:l,wrapS:e(s.wrapS)?s.wrapS:t(s.wrapS),wrapT:e(s.wrapT)?s.wrapT:t(s.wrapT),minFilter:s.minFilter,name:a.name,id:r}}))}getNodeTransform(e){if(void 0===e)return W;let o=this._nodeTransformCache.get(e);if(!o){const s=this.getNodeTransform(this._getNodeParent(e)),n=this.json.nodes[e];n.matrix?o=T(t(),s,n.matrix):n.translation||n.rotation||n.scale?(o=r(s),n.translation&&w(o,o,n.translation),n.rotation&&(ee[3]=b(ee,n.rotation),g(o,o,ee[3],ee)),n.scale&&x(o,o,n.scale)):o=r(s),this._nodeTransformCache.set(e,o)}return o}_resolveUri(e){return p(e,this._baseUri)}_getNodeParent(e){return this._nodeParentMap.get(e)}_checkVersionSupported(){const e=m.parse(this.json.asset.version,"glTF");Z.validate(e)}_checkRequiredExtensionsSupported(){const e=this.json;if(e.extensionsRequired&&!e.extensionsRequired.every((e=>this._supportedExtensions.includes(e))))throw new i("gltf-loader-unsupported-feature","gltf loader was not able to load unsupported feature. Required extensions: "+e.extensionsRequired.join(", "))}_computeNodeParents(){this.json.nodes.forEach(((e,t)=>{e.children&&e.children.forEach((e=>{this._nodeParentMap.set(e,t)}))}))}async _loadTextureImageData(e,t,r){const o=this._textureLoaders.get(e);if(o)return o;const s=this._createTextureLoader(t,r);return this._textureLoaders.set(e,s),s}async _createTextureLoader(e,t){const r=se(e),o=this.json.images[r];if(o.uri){if(o.uri.endsWith(".ktx2")){const e=await this._context.loadBinary(this._resolveUri(o.uri),t);return new B(new Uint8Array(e))}return this._context.loadImage(this._resolveUri(o.uri),t)}if(null==o.bufferView)throw new i("gltf-loader-unsupported-feature","Image bufferView must be defined.");if(null==o.mimeType)throw new i("gltf-loader-unsupported-feature","Image mimeType must be defined.");const s=this.json.bufferViews[o.bufferView],n=await this.getBuffer(s.buffer,t);if(null!=s.byteStride)throw new i("gltf-loader-unsupported-feature","byteStride not supported for image buffer");const a=n.byteOffset+(s.byteOffset||0);return P(new Uint8Array(n.buffer,a,s.byteLength),o.mimeType)}async getLoadedBuffersSize(){if(this._glbBuffer)return this._glbBuffer.byteLength;const e=await l(Array.from(this._bufferLoaders.values())),t=await l(Array.from(this._textureLoaders.values()));return e.reduce(((e,t)=>e+(t?.byteLength??0)),0)+t.reduce(((e,t)=>e+(t?G(t)?t.data.byteLength:t.width*t.height*4:0)),0)}}const W=h(t(),Math.PI/2),Z=new m(2,0,"glTF"),ee=y(),te={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},re={[n.BYTE]:1,[n.UNSIGNED_BYTE]:1,[n.SHORT]:2,[n.UNSIGNED_SHORT]:2,[n.HALF_FLOAT]:2,[n.FLOAT]:4,[n.INT]:4,[n.UNSIGNED_INT]:4};function oe(e,t){return new e(t.raw,t.byteOffset,t.byteStride,t.byteOffset+t.byteStride*(t.entryCount-1)+t.componentByteSize*t.componentCount)}function se(e){if(null!=e.extensions?.KHR_texture_basisu)return e.extensions.KHR_texture_basisu.source;if(null!==e.source)return e.source;throw new i("gltf-loader-unsupported-feature","Source is expected to be defined for a texture. It can also be omitted in favour of an KHR_texture_basisu extension tag.")}const ne=/\.gltf$/i,ae=/\.glb$/i;let ie=0;async function ue(t,o,s={},n=!0){const i=await Q.load(t,o,s),u="gltf_"+ie++,l={lods:[],materials:new Map,textures:new Map,meta:le(i)},c=!(!i.json.asset.extras||"symbolResource"!==i.json.asset.extras.ESRI_type),f=i.json.asset.extras?.ESRI_webstyleSymbol?.webstyle,d=new Map;await async function(t,r){const o=t.json,s=o.scenes[o.scene||0].nodes,n=s.length>1,a=[];for(const e of s){const t=o.nodes[e];a.push(i(e,0)),ce(t)&&!n&&t.extensions.MSFT_lod.ids.forEach(((e,t)=>i(e,t+1)))}async function i(s,n){const u=o.nodes[s],l=t.getNodeTransform(s);if(null!=u.weights&&e.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Morph targets are not supported."),null!=u.mesh){const e=o.meshes[u.mesh];for(const t of e.primitives)a.push(r(t,l,n,e.name))}for(const e of u.children||[])a.push(i(e,n))}await Promise.all(a)}(i,(async(t,o,c,f)=>{const p=d.get(c)??0;d.set(c,p+1);const m=void 0!==t.mode?t.mode:a.TRIANGLES,h=m===a.TRIANGLES||m===a.TRIANGLE_STRIP||m===a.TRIANGLE_FAN?m:null;if(null==h)return void e.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Unsupported primitive mode ("+a[m]+"). Skipping primitive.");if(!i.hasPositions(t))return void e.getLogger("esri.views.3d.glTF").warn("Skipping primitive without POSITION vertex attribute.");const T=i.getPositionData(t,s),w=i.getMaterial(t,s,n),g=i.hasNormals(t)?i.getNormalData(t,s):null,x=i.hasTangents(t)?i.getTangentData(t,s):null,b=i.hasTextureCoordinates(t)?i.getTextureCoordinates(t,s):null,y=i.hasVertexColors(t)?i.getVertexColors(t,s):null,_=i.getIndexData(t,s),S={name:f,transform:r(o),attributes:{position:await T,normal:g?await g:null,texCoord0:b?await b:null,color:y?await y:null,tangent:x?await x:null},indices:await _,primitiveType:h,material:fe(l,await w,u)};let E=null;null!=l.meta?.ESRI_lod&&"screenSpaceRadius"===l.meta.ESRI_lod.metric&&(E=l.meta.ESRI_lod.thresholds[c]),l.lods[c]=l.lods[c]||{parts:[],name:f,lodThreshold:E},l.lods[c].parts[p]=S}));for(const e of l.lods)e.parts=e.parts.filter((e=>!!e));const p=await i.getLoadedBuffersSize();return{model:l,meta:{isEsriSymbolResource:c,uri:i.uri,ESRI_webstyle:f},customMeta:{},size:p}}function le(e){const t=e.json;let r=null;return t.nodes.forEach((e=>{const t=e.extras;null!=t&&(t.ESRI_proxyEllipsoid||t.ESRI_lod)&&(r=t)})),r}function ce(e){return e.extensions?.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)}function fe(e,t,r){const s=t=>{const s=`${r}_tex_${t&&t.id}${t?.name?"_"+t.name:""}`;if(t&&!e.textures.has(s)){const r=function(e,t={}){return{data:e,parameters:{wrap:{s:o.REPEAT,t:o.REPEAT,...t.wrap},noUnpackFlip:!0,mipmap:!1,...t}}}(t.data,{wrap:{s:t.wrapS,t:t.wrapT},mipmap:de.has(t.minFilter),noUnpackFlip:!0});e.textures.set(s,r)}return s},n=`${r}_mat_${t.id}_${t.name}`;if(!e.materials.has(n)){const r=function(e={}){return{color:[1,1,1],opacity:1,alphaMode:"OPAQUE",alphaCutoff:.5,doubleSided:!1,castShadows:!0,receiveShadows:!0,receiveAmbientOcclustion:!0,textureColor:null,textureNormal:null,textureOcclusion:null,textureEmissive:null,textureMetallicRoughness:null,colorTextureTransform:null,normalTextureTransform:null,occlusionTextureTransform:null,emissiveTextureTransform:null,metallicRoughnessTextureTransform:null,emissiveFactor:[0,0,0],metallicFactor:1,roughnessFactor:1,colorMixMode:"multiply",...e}}({color:[t.color[0],t.color[1],t.color[2]],opacity:t.color[3],alphaMode:t.alphaMode,alphaCutoff:t.alphaCutoff,doubleSided:t.doubleSided,colorMixMode:t.ESRI_externalColorMixMode,textureColor:t.colorTexture?s(t.colorTexture):void 0,textureNormal:t.normalTexture?s(t.normalTexture):void 0,textureOcclusion:t.occlusionTexture?s(t.occlusionTexture):void 0,textureEmissive:t.emissiveTexture?s(t.emissiveTexture):void 0,textureMetallicRoughness:t.metallicRoughnessTexture?s(t.metallicRoughnessTexture):void 0,emissiveFactor:[t.emissiveFactor[0],t.emissiveFactor[1],t.emissiveFactor[2]],colorTextureTransform:t.colorTextureTransform,normalTextureTransform:t.normalTextureTransform,occlusionTextureTransform:t.occlusionTextureTransform,emissiveTextureTransform:t.emissiveTextureTransform,metallicRoughnessTextureTransform:t.metallicRoughnessTextureTransform,metallicFactor:t.metallicFactor,roughnessFactor:t.roughnessFactor,receiveShadows:t.receiveShadows,receiveAmbientOcclustion:t.receiveAmbientOcclusion});e.materials.set(n,r)}return n}const de=new Set([s.LINEAR_MIPMAP_LINEAR,s.LINEAR_MIPMAP_NEAREST]);export{ue as loadGLTF};
