/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Collection.js";import{r as i}from"./collectionUtils.js";import s from"../core/Error.js";import{L as r}from"./Logger.js";import{watch as o,syncAndInitial as a,on as h}from"../core/reactiveUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import{i as l}from"./utils21.js";import{C as c}from"./Container.js";import{H as d,c as u}from"./util2.js";import{H as g,g as m,s as y}from"./highlightGroupUtils.js";import{a as f,C as v}from"./ClipRect.js";import"../geometry.js";import w from"../geometry/Geometry.js";import{fromJSON as R}from"../geometry/support/jsonUtils.js";import S from"../geometry/Extent.js";import b from"../geometry/Polygon.js";import{b as j}from"./layerViewUtils.js";var _;const C={base:w,key:"type",typeMap:{extent:S,polygon:b}};let q=_=class extends f{constructor(e){super(e),this.type="geometry",this.geometry=null}clone(){return new _({geometry:this.geometry?.clone()??null})}commitVersionProperties(){this.commitProperty("geometry")}};e([n({types:C,json:{read:R,write:!0}})],q.prototype,"geometry",void 0),q=_=e([p("esri.views.layers.support.Geometry")],q);const H=q;let A=class extends f{constructor(e){super(e),this.type="path",this.path=[]}commitVersionProperties(){this.commitProperty("path")}};e([n({type:[[[Number]]],json:{write:!0}})],A.prototype,"path",void 0),A=e([p("esri.views.layers.support.Path")],A);const U=A,P=t.ofType({key:"type",base:null,typeMap:{rect:v,path:U,geometry:H}}),O=new(t.ofType(g)),L=f=>{let v=class extends f{constructor(){super(...arguments),this.attached=!1,this.clips=new P,this.highlights=null,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1,this._visibleAtCurrentScale=!0}initialize(){const e=this.view?.spatialReferenceLocked??!0,t=this.view?.spatialReference;t&&e&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new c),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.addHandles([o((()=>this.suspended),(e=>{this.container&&(this.container.visible=!e)}),a),o((()=>this.updateSuspended),(e=>{this.view&&!e&&this.updateRequested&&this.view.requestUpdate()}),a),o((()=>this.layer?.opacity??1),(e=>{this.container&&(this.container.opacity=e)}),a),o((()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal"),(e=>{this.container&&(this.container.blendMode=e)}),a),o((()=>this.layer&&"effect"in this.layer?this.layer.effect:null),(e=>{this.container&&(this.container.effect=e)}),a),o((()=>this._mergedHighlights.items.map((e=>({name:e.name,options:{fillColor:e.options.color,haloColor:e.options.haloColor,fillOpacity:e.options.fillOpacity,haloOpacity:e.options.haloOpacity,haloWidth:e.options.haloWidth,haloBlur:e.options.haloBlur}})))),(()=>{this.container.highlightGradient=u(this.container.highlightGradient,this._mergedHighlights.items)}),a),o((()=>this._mergedHighlights.items.map((e=>e.name))),(()=>{this._updateHighlights()})),h((()=>this.clips),"change",(()=>{this.container&&(this.container.clips=this.clips)}),a),o((()=>({scale:this.view?.scale,scaleRange:this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null})),(({scale:e,scaleRange:t})=>{const i=j(t,e);i!==this._visibleAtCurrentScale&&(this._visibleAtCurrentScale=i)}),a)],"constructor"),this.view?.whenLayerView?this.view.whenLayerView(this.layer).then((e=>{e===this&&this.processAttach()}),(()=>{})):this.when().then((()=>{this.processAttach()}),(()=>{})))}_updateHighlights(){}destroy(){this.processDetach(),this.updateRequested=!1}get highlightOptions(){return m(this)}set highlightOptions(e){y(this,e)}get _mergedHighlights(){if(!this.view)return O;if(!this.highlights)return this.view.highlights;const e=this.view.highlights.clone();for(const t of this.highlights){const i=e.find((e=>e.name===t.name));i&&(i.options=t.options)}return e}get scheduler(){return this.view.scheduler}get spatialReferenceSupported(){const e=this.view?.spatialReference;return null==e||this.supportsSpatialReference(e)}get updating(){return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!!this._updatingHandles?.updating||this.container.transitioning)}get visibleAtCurrentScale(){return this._visibleAtCurrentScale}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.removeHandles("attach"),this.detach(),this.updateRequested=!1)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.updateSuspended||this.view.requestUpdate())}processUpdate(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.updateSuspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}hitTest(e,t){return Promise.resolve(null)}supportsSpatialReference(e){return!0}canResume(){if(!this.spatialReferenceSupported)return!1;switch(this.layer?.type){case"link-chart":case"knowledge-graph-sublayer":break;default:if(l(this.view)&&!this.view.inGeographicLayout)return!1}return!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const e=super.getSuspendInfo(),t=!this.spatialReferenceSupported;return t&&(e.spatialReferenceNotSupported=t),e}addAttachHandles(e){this.addHandles(e,"attach")}_getHighlightBits(e){e=new Set(e);let t=1,i=0;if(!this.view)return 0;const s=this._mergedHighlights;for(const{name:r}of s)e.delete(r)&&(i=t),t<<=1;for(const t of e)r.getLogger(this).error("#highlights",`${t} was not found. Features in this group will not be highlighted.`);return i}};return e([n()],v.prototype,"attached",void 0),e([n({type:P,set(e){const t=i(e,this._get("clips"),P);this._set("clips",t)}})],v.prototype,"clips",void 0),e([n()],v.prototype,"container",void 0),e([n({type:d})],v.prototype,"highlightOptions",null),e([n({type:t.ofType(g)})],v.prototype,"highlights",void 0),e([n()],v.prototype,"_mergedHighlights",null),e([n()],v.prototype,"moving",void 0),e([n({readOnly:!0})],v.prototype,"spatialReferenceSupported",null),e([n({readOnly:!0})],v.prototype,"updateParameters",void 0),e([n()],v.prototype,"updateRequested",void 0),e([n()],v.prototype,"updating",null),e([n()],v.prototype,"view",void 0),e([n()],v.prototype,"_visibleAtCurrentScale",void 0),e([n({readOnly:!0})],v.prototype,"visibleAtCurrentScale",null),v=e([p("esri.views.2d.layers.LayerView2D")],v),v};export{H as C,L};
