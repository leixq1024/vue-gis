/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{f as a}from"./associatedFeatureServiceUtils.js";import{g as t}from"./fetchService.js";import{f as r}from"./requestPresets.js";import{s}from"./layerUtils.js";import{l as c}from"./lazyLayerLoader.js";import n from"../portal/PortalItem.js";import{h as i}from"./portalItemUtils.js";class l{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,a){const t=this._serviceMetadatas.get(e);if(t)return t;const s=await r(e,a);return this._serviceMetadatas.set(e,s),s}async fetchItemData(e){const{id:a}=e;if(!a)return null;const{_itemDatas:t}=this;if(t.has(a))return t.get(a);const r=await e.fetchData();return t.set(a,r),r}async fetchCustomParameters(e,a){const t=await this.fetchItemData(e);return t&&"object"==typeof t&&(a?a(t):t.customParameters)||null}}function o(e){const a={id:e.id,name:e.name},r=t(e.type);return"FeatureLayer"!==r&&(a.layerType=r),a}async function u(e,a,t){if(null==e?.layers||null==e?.tables){const r=await t.fetchServiceMetadata(a,{customParameters:y(e)?.customParameters});(e=e||{}).layers=e.layers||r?.layers?.map(o),e.tables=e.tables||r?.tables?.map(o)}return e}function y(e){if(!e)return null;const{layers:a,tables:t}=e;return a?.length?a[0]:t?.length?t[0]:null}function m(e,a){return[...e.layers||[],...e.tables||[]].filter((({layerType:e})=>e?e===a:"ArcGISFeatureLayer"===a))}function f(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function p(e){switch(e){case"catalog":return"CatalogLayer";case"feature":return"ArcGISFeatureLayer";case"oriented-imagery":return"OrientedImageryLayer";case"subtype-group":return"SubtypeGroupLayer"}return null}function d(e){switch(e){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":return"SubtypeGroupLayer"}return"FeatureLayer"}async function L(e,t,r){if(!e?.url)return t??{};if(t??={},!t.layers){const a=await r.fetchServiceMetadata(e.url);t.layers=a.layers?.map(o)}const{serverUrl:s,portalItem:c}=await a(e.url,{sceneLayerItem:e,customParameters:y(t)?.customParameters}).catch((()=>({serverUrl:null,portalItem:null})));if(null==s)return t.tables=[],t;if(!t.tables&&c){const e=await c.fetchData().catch((()=>null));if(e?.tables)t.tables=e.tables.map(o);else{const a=await r.fetchServiceMetadata(s,{customParameters:y(e)?.customParameters}).catch((()=>null));t.tables=a?.tables?.map(o)}}if(t.tables)for(const e of t.tables)e.url=`${s}/${e.id}`;return t}async function w(t,r){switch(t.type){case"3DTiles Service":return{className:"IntegratedMesh3DTilesLayer"};case"CSV":return{className:"CSVLayer"};case"Feature Collection":return async function(e){await e.load();const a=i(e,"Map Notes"),t=i(e,"Markup");return a||t?{className:"MapNotesLayer"}:i(e,"Route Layer")?{className:"RouteLayer"}:1===f(await e.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(t);case"Feature Service":return async function(e,a){const t=await h(e,a);if("object"==typeof t){const{sourceJSON:e,className:a}=t,r={sourceJSON:e};return null!=t.id&&(r.layerId=t.id),{className:a||"FeatureLayer",properties:r}}return{className:"GroupLayer"}}(t,r);case"Feed":case"Stream Service":return{className:"StreamLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"Group Layer":return{className:"GroupLayer"};case"Image Service":return async function(e,a){await e.load();const t=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await a.fetchItemData(e),s=r?.layerType;if("ArcGISTiledImageServiceLayer"===s)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===s)return{className:"ImageryLayer"};const c=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),n=c.cacheType?.toLowerCase(),i=c.capabilities?.toLowerCase().includes("tilesonly"),l=c.tileInfo?.format?.toLowerCase()??"",o=null==n&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(l);return"map"===n||o||i?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(t,r);case"KML":return{className:"KMLLayer"};case"Knowledge Graph Layer":return{className:"KnowledgeGraphLayer"};case"Map Service":return async function(e,a){const t=await async function(e,a){const{tileInfo:t}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return t}(e,a);return t?{className:"TileLayer"}:{className:"MapImageLayer"}}(t,r);case"Media Layer":return{className:"MediaLayer"};case"Scene Service":return async function(e,t){const r=await h(e,t,(async()=>{try{if(!e.url)return[];const{serverUrl:r}=await a(e.url,{sceneLayerItem:e}),s=await t.fetchServiceMetadata(r);return s?.tables??[]}catch{return[]}}));if("object"==typeof r){const a={};let c;if(null!=r.id?(a.layerId=r.id,c=`${e.url}/layers/${r.id}`):c=e.url,e.typeKeywords?.length)for(const a of Object.keys(s))if(e.typeKeywords.includes(a))return{className:s[a]};const n=await t.fetchServiceMetadata(c,{customParameters:await t.fetchCustomParameters(e,(e=>y(e)?.customParameters))});return{className:s[n?.layerType]||"SceneLayer",properties:a}}if(!1===r){const a=await t.fetchServiceMetadata(e.url);if("Voxel"===a?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(t,r);case"Vector Tile Service":return{className:"VectorTileLayer"};case"WFS":return{className:"WFSLayer"};case"WMS":return{className:"WMSLayer"};case"WMTS":return{className:"WMTSLayer"};default:throw new e("portal:unknown-item-type","Unknown item type '${type}'",{type:t.type})}}async function h(e,a,r){const{url:s,type:c}=e,n="Feature Service"===c;if(!s)return{};if(/\/\d+$/.test(s)){if(n){const r=await a.fetchServiceMetadata(s,{customParameters:await a.fetchCustomParameters(e,(e=>y(e)?.customParameters))});return{id:r.id,className:t(r.type),sourceJSON:r}}return{}}await e.load();let i=await a.fetchItemData(e);if(n){const e=await u(i,s,a),t=S(e);if("object"==typeof t){const a=function(e,a){return null==a?null:[...e.layers||[],...e.tables||[]].find((e=>e.id===a))}(e,t.id);t.className=d(a?.layerType)}return t}if("Scene Service"===c&&(i=await L(e,i,a)),f(i)>0)return S(i);const l=await a.fetchServiceMetadata(s);return r&&(l.tables=await r()),S(l)}function S(e){return 1===f(e)&&{id:y(e)?.id}}const N=Object.freeze(Object.defineProperty({__proto__:null,fromItem:async function(e){let{portalItem:a}=e;!a||a instanceof n||(a=new n(a));const t=await async function(e){await e.load();const a=new l;return async function(e){const a=e.className,t=c[a];return{constructor:await t(),properties:e.properties}}(await w(e,a))}(a);return new(0,t.constructor)({portalItem:a,...t.properties})},selectLayerClassPath:w},Symbol.toStringTag,{value:"Module"}));export{l as L,L as a,f as b,o as c,m as d,N as e,y as g,p as i,d as l,u as p,w as s};
