/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"../geometry.js";import e from"../Graphic.js";import{c as i}from"./asyncUtils.js";import o from"../core/Collection.js";import s from"../core/Error.js";import r from"../core/Evented.js";import{L as p}from"./Logger.js";import{d as n,b as a,a as l}from"./maybe.js";import{watch as c,syncAndInitial as h,sync as m,pausable as d,when as y,initial as u}from"../core/reactiveUtils.js";import{property as v}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as g}from"../core/accessorSupport/decorators/subclass.js";import{j,h as _,g as f}from"./coordsUtils.js";import b from"../layers/GraphicsLayer.js";import x from"../symbols/SimpleMarkerSymbol.js";import{V as G}from"./ViewingMode.js";import{S}from"./SnappingVisualizer2D.js";import{c as M}from"./drawUtils.js";import V from"./GraphicMover.js";import w from"../views/draw/support/HighlightHelper.js";import{a as I}from"./layerUtils2.js";import{h as E}from"./handleUtils.js";import{z as T}from"./quantityUtils.js";import{c as U}from"./screenUtils.js";import k from"../geometry/Point.js";import{S as C,c as O,g as L,m as H,e as R}from"./SketchTooltipInfo.js";import{M as A,S as D}from"./SelectedVertexTooltipInfo.js";import{T as P}from"./TranslateTooltipInfo.js";import{b as F}from"./automaticAreaMeasurementUtils.js";import{c as z,a as B}from"./automaticLengthMeasurementUtils.js";import{d as q}from"./euclideanLengthMeasurementUtils.js";import{s as Z}from"./settings3.js";import{V as N}from"./InputManager.js";import{c as W,E as Q}from"./EditGeometryOperations.js";import{s as J}from"./keybindings.js";import{S as X}from"./SketchOptions.js";import{S as Y}from"./SnappingContext.js";import K from"../geometry/Polyline.js";import"./ensureType.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./metadata.js";import"./utils.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../config.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./writer.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./Axis.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"../intl.js";import"./date.js";import"./locale.js";import"./datetime.js";import"./number.js";import"./substitute.js";import"./messages.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"./colorUtils.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"./shared.js";import"./SimpleObservable.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils4.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"./vec3f64.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils5.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./GraphicsCollection.js";import"../layers/Layer.js";import"../time/TimeExtent.js";import"./timeUtils.js";import"../layers/mixins/BlendLayer.js";import"./jsonUtils.js";import"./parser.js";import"./utils2.js";import"./mat4.js";import"./common.js";import"../layers/mixins/ScaleRangeLayer.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./vec2.js";import"./vec2f64.js";import"./enums2.js";import"./normalizedPoint.js";import"./dehydratedPoint.js";import"./elevationInfoUtils.js";import"./Settings2.js";import"./SnappingVisualizer.js";import"./RightAngleSnappingHint.js";import"./vec3.js";import"./PointSnappingHint.js";import"./GraphicManipulator.js";import"../geometry/projection.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./projectPointToVector.js";import"./defaults.js";import"./defaultsJSON.js";import"./drapedUtils.js";import"./screenUtils2.js";import"./layerViewUtils.js";import"./featureUtils.js";import"./layerUtils.js";import"./utils3.js";import"./basemapUtils.js";import"../Basemap.js";import"./loadAll.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../support/BasemapStyle.js";import"./writeUtils.js";import"./Queue.js";import"../core/signal.js";import"../geometry/coordinateFormatter.js";import"../geometry/support/MeshTransform.js";import"./mat4f64.js";import"./quat.js";import"./vec4.js";import"./quatf64.js";import"./axisAngleDegrees.js";import"./meshVertexSpaceUtils.js";import"../geometry/support/MeshGeoreferencedVertexSpace.js";import"../geometry/support/MeshLocalVertexSpace.js";import"../views/interactive/Tooltip.js";import"./themeUtils.js";import"../widgets/Widget.js";import"./domUtils.js";import"./uuid.js";import"./projector.js";import"./widgetUtils.js";import"./componentsUtils.js";import"./jsxWidgetSupport.js";import"./jsxFactory.js";import"./a11yUtils.js";import"./memoize.js";import"./unitFormatUtils.js";import"./ByteSizeUnit.js";import"./Cyclical.js";import"./getDefaultUnitForView.js";import"./quantityFormatUtils.js";import"./angularMeasurementUtils.js";import"./projectVectorToVector.js";import"../geometry/support/geodesicUtils.js";import"./messageBundle.js";import"./directionModeIcons.js";import"./geodesicMeasurementUtils.js";import"./euclideanAreaMeasurementUtils.js";import"./earcut.js";import"./plane.js";import"./mat3f64.js";import"./vec4f64.js";import"./mathUtils2.js";import"./triangle.js";import"./ray.js";import"./mat3.js";import"./lineSegment.js";import"./geodesicAreaMeasurementUtils.js";import"../geometry/geometryEngine.js";import"./geometryEngineBase.js";import"./_commonjsHelpers.js";import"./hydrated.js";import"./geodesicLengthMeasurementUtils.js";import"./spatialReferenceEllipsoidUtils.js";import"./compilerUtils.js";import"./geometry2dUtils.js";import"../views/interactive/sketch/SketchLabelOptions.js";import"../views/interactive/sketch/SketchTooltipOptions.js";import"./SketchTooltipVisibleElements.js";import"../views/interactive/sketch/SketchValueOptions.js";let $=class extends C{constructor(t){super(t),this.type="translate-vertex",this.distance=T,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=T,this.elevation=null,this.area=null,this.totalLength=null}};function tt(t,e){function i(){const t=e(),i=t.sketchOptions.tooltips.effectiveEnabled?t.activeTooltipInfo:null;return{...t,activeTooltipInfo:i}}let o=!1;function s(t){o||(o=!0,t(),o=!1)}return E([c((()=>{const t=i();return{context:t,geometry:t.graphic?.geometry,vertexGeometry:t.selectedVertex?.geometry}}),(({context:e})=>{s((()=>{!function(t){const e=t.activeTooltipInfo;if(e){switch(e?.type){case"move-point":return function(t,{graphic:e}){et(t,e,e?.geometry)}(e,t);case"selected-vertex":return function(t,{graphic:e,selectedVertex:i}){et(t,e,i?.geometry);const o=e?.geometry;switch(o?.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=F(o);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=z(o),t.area.visible=!1}}(e,t)}e.sketchOptions=t.sketchOptions}}(e),t.info=e.activeTooltipInfo}))}),h),c((()=>{const t=i(),{activeTooltipInfo:e}=t;if(e&&"key"in e)return{context:t,key:e.key}}),((t,e)=>{t&&e&&t.key!==e.key&&s((()=>it(t.context)))}),m),O(t,{onBeforePaste:()=>{o=!0},onAfterPaste:()=>{it(i()),o=!1}})])}function et(t,e,i){e&&"point"===i?.type&&(t.setLocationFromPoint(i),t.elevation.actual=q(i),t.elevation.visible=!!e.geometry?.hasZ,t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function it(t){function e(e,i){const o=i?.geometry;if(!o||"point"!==o.type)return;const{dx:s,dy:r,dz:p}=L(e,o);if(0===s&&0===r&&0===p)return;const{x:n,y:a,z:l,m:c,spatialReference:h}=o,m=new k({x:n+s,y:a+r,z:null!=l?l+p:void 0,m:c,spatialReference:h});t.updateGeometry(i,m,o,s,r)}const{activeTooltipInfo:i,graphic:o,selectedVertex:s}=t;switch(i?.type){case"move-point":return e(i,o);case"selected-vertex":return e(i,s)}}function ot(t,e,i){if(!i)return;const{x:o,y:s}=i.origin,r=e.toMap(i),p=e.toMap(U(o,s)),n=B(p,r);t.distance=null!=n?n:T}t([v()],$.prototype,"type",void 0),t([v()],$.prototype,"distance",void 0),t([v()],$.prototype,"elevation",void 0),t([v()],$.prototype,"area",void 0),t([v()],$.prototype,"totalLength",void 0),$=t([g("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],$);class st{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-start"}}class rt{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape"}}class pt{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-stop"}}class nt{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-start"}}class at{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move"}}class lt{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-stop"}}class ct{constructor(t){this.added=t,this.type="vertex-select"}}class ht{constructor(t){this.removed=t,this.type="vertex-deselect"}}class mt{constructor(t,e,i,o){this.added=t,this.graphic=e,this.oldGraphic=i,this.vertices=o,this.type="vertex-add"}}class dt{constructor(t,e,i,o){this.removed=t,this.graphic=e,this.oldGraphic=i,this.vertices=o,this.type="vertex-remove"}}const yt=Z.reshapeGraphics,ut={vertices:{default:new x({style:"circle",size:yt.vertex.size,color:yt.vertex.color,outline:{color:yt.vertex.outlineColor,width:1}}),hover:new x({style:"circle",size:yt.vertex.hoverSize,color:yt.vertex.hoverColor,outline:{color:yt.vertex.hoverOutlineColor,width:1}}),selected:new x({style:"circle",size:yt.selected.size,color:yt.selected.color,outline:{color:yt.selected.outlineColor,width:1}})},midpoints:{default:new x({style:"circle",size:yt.midpoint.size,color:yt.midpoint.color,outline:{color:yt.midpoint.outlineColor,width:1}}),hover:new x({style:"circle",size:yt.midpoint.size,color:yt.midpoint.color,outline:{color:yt.midpoint.outlineColor,width:1}})}};let vt=class extends r.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.layer=null,this.midpointGraphics=new o,this.midpointSymbol=new x({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new o,this.snappingManager=null,this.symbols=ut,this.sketchOptions=new X,this.type="reshape",this.vertexGraphics=new o,this.view=null}initialize(){const t=this.view;this._highlightHelper=new w({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=d((()=>this.graphic?.geometry),(t=>{if(!t)return;const e=new Set(this.selectedVertices.map((t=>t.attributes?.pointIndex)));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter((t=>e.has(t.attributes.pointIndex))).forEach((t=>this._addToSelection(t)));const{enableMovement:i,_mover:o,graphic:s,midpointGraphics:r,vertexGraphics:p}=this,n=p.concat(r).items;i&&n.push(s),o?.set("graphics",n)}),m),this.tooltip=H((()=>({view:t,options:this.sketchOptions.tooltips}))),this.tooltipInfos=function(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new A(e),selectedVertex:new D(e),translateGraphic:new P(e),translateVertices:new $(e)}}(this.sketchOptions),this.addHandles([y((()=>t?.ready),(()=>{const{layer:t,view:e}=this;I(e,t),this.addHandles(e.on("key-down",(t=>this._keyDownHandler(t)),N.TOOL))}),{once:!0,initial:!0}),c((()=>this.graphic),(()=>this.refresh())),c((()=>this.layer),((t,e)=>{e&&(this._clearSelection(),this._resetGraphics(e)),this.refresh()})),c((()=>this.enableMidpoints),(()=>this.refresh())),tt(this.tooltip,(()=>this._tooltipsContext)),c((()=>this.view.effectiveTheme.accentColor),(()=>this._updateSymbolsForTheme()),u),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this.tooltip=n(this.tooltip)}get _coordinateHelper(){return this._editGeometryOperations?.data.coordinateHelper??W(!!this.graphic.geometry?.hasZ,!!this.graphic.geometry?.hasM,this.view.spatialReference)}get _selectedVertex(){return 1===this.selectedVertices.length?this.selectedVertices.at(0):void 0}get _tooltipsContext(){return{sketchOptions:this.sketchOptions,activeTooltipInfo:this.activeTooltipInfo,graphic:this.graphic,selectedVertex:this._selectedVertex,updateGeometry:(t,e,i,o,s)=>{this._setUpGeometryHelper();const r=t===this.graphic;if(r?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(t),this._syncGeometryAfterVertexMove(t,e,o,s,!0),r){const{view:t}=this,o=t.toScreen(i),s=t.toScreen(e),r=(s?.x??0)-(o?.x??0),p=(s?.y??0)-(o?.y??0);this._emitMoveEvent(r,p),this._emitMoveStopEvent(r,p)}else this._emitReshapeEvent(t),this._emitReshapeStopEvent(t);this._editGeometryOperations=n(this._editGeometryOperations)}}}set highlightsEnabled(t){this._highlightHelper?.removeAll(),this._set("highlightsEnabled",t),this._setUpHighlights()}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||null==t?.geometry)return;const i=t.geometry;"mesh"!==i.type&&"extent"!==i.type?("polygon"===i.type&&j(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic)}_setUpGeometryHelper(){const t=this.graphic.geometry;if(null==t||"mesh"===t.type||"extent"===t.type)return void this._logGeometryTypeError();const e="multipoint"===t.type?new K({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=Q.fromGeometry(e,G.Local)}_saveSnappingContextForHandle(t,e){this._snappingGraphicsLayer=new b({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;a(i),this._snappingContext=new Y({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:e.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new S(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),null!=this._snappingGraphicsLayer&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=n(this._editGeometryOperations),this._snappingTask=l(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach((t=>t.destroy())),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach((t=>t.destroy())),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(null!=t&&("polyline"===t.type||"polygon"===t.type)){const e=gt(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:i,symbols:o}=this,s=[];return t?.forEach(((t,r)=>{t.forEach(((t,p)=>{s.push(new e({geometry:this._coordinateHelper.arrayToPoint(t),symbol:o?.vertices?.default,attributes:{...i,pathIndex:r,pointIndex:p}}))}))})),s}_createMidpointGraphics(t){const{_graphicAttributes:i,symbols:o}=this,s=[];for(let r=0;r<t.length;r++){const p=t[r];for(let t=0;t<p.length;t++){const n=(t+1)%p.length;if("polyline"===this.graphic.geometry?.type&&0===n)continue;const a=p[t],l=p[n],c=this._getMidpoint(a,l);s.push(new e({geometry:c,symbol:o.midpoints.default,attributes:{...i,pathIndex:r,pointIndexStart:t,pointIndexEnd:n}}))}}return s}_updateSymbolsForTheme(){const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:this.symbols.vertices.hover?.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const t of this.vertexGraphics)this._isSelected(t)?t.symbol=this.symbols.vertices.selected:this._hoverGraphic===t?t.symbol=this.symbols.vertices.hover:t.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map((({geometry:t})=>({x:t.x,y:t.y})));for(let i=0;i<e.length;i++){const o=[];for(let t=0;t<e.length;t++){if(i===t)continue;const s=e[i],r=e[t];s.x===r.x&&s.y===r.y&&o.push(t)}t[i].attributes.relatedGraphicIndices=o}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:o,view:s}=this,r=o.concat(i).items;t&&r.push(e),this._mover=new V({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:r,view:s,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick?.(t);else if(this._isMidpoint(e)){if(2===t.viewEvent.button)return;const i=this.graphic.clone(),o=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,o)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),2===t.viewEvent.button?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:o}=t,s=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:s?"move":"reshape",totalDx:i,totalDy:o}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:o}=t;if(o===this.graphic){const{geometry:s}=o;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),void(null!=s&&"point"===s.type&&this._onHandleMove(o,e,i,t,(()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)})))}if(!this.selectedVertices.includes(o)){if(this._clearSelection(),this._isMidpoint(o)){const t=this.graphic.clone(),e=this._createVertexFromMidpoint(o);this._emitVertexAddEvent([o],t,e)}this._addToSelection(o)}this._setUpOperation(t),this._emitReshapeStartEvent(o),this._onHandleMove(o,e,i,t,(()=>{this._updateTooltip(o,t.viewEvent),this._emitReshapeEvent(o)}))}_onGraphicMoveCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:o,graphic:s}=t;e.totalDx+=i,e.totalDy+=o;const{operationType:r}=e,{geometry:p}=s;if(null!=p)if("move"!==r)this._onHandleMove(s,i,o,t,(()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)}));else if("point"===p.type)this._onHandleMove(s,i,o,t,(()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,o)}));else if("polyline"===p.type||"polygon"===p.type){const e=gt(p);this._updateVertexGraphicLocations(e),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,o)}}_onGraphicMoveStopCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:o,graphic:s}=t,{operationType:r}=e;e.totalDx+=i,e.totalDy+=o,this._onHandleMove(s,i,o,t,(()=>"move"===r?this._emitMoveStopEvent():this._emitReshapeStopEvent(s))),this._isMidpoint(s)?this.refresh():(this._updateTooltip(this._isVertex(s)?s:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:o,pointIndex:s}=i.attributes;i.geometry=e.arrayToPoint(t[o][s])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:o,pointIndexEnd:s}=e.attributes,r=t[i];e.geometry=this._getMidpoint(r[o],r[s])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,o=i.arrayToVector(t),s=i.arrayToVector(e),r=i.toXYZ(o),p=i.toXYZ(s),[n,a,l]=_(r,p),c=i.hasM()?0:void 0;return new k({x:n,y:a,z:l,m:c,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){const[e,i]=jt(t);return a(this._editGeometryOperations),this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,o,s,r){l(this._snappingTask);const p=this._snappingContext;if(!p)return;const n=t.geometry,a="graphic-move-stop"===s.type;if(null!=this.snappingManager&&this.selectedVertices.length<2&&!a){const s=this.snappingManager;this._stagedVertex=s.update({point:n,context:p}),this._syncGeometryAfterVertexMove(t,new k(this._stagedVertex),e,o,a),r(),this._snappingTask=i((async i=>{const l=await s.snap({point:n,context:p,signal:i});l.valid&&(this._stagedVertex=l.apply(),this._syncGeometryAfterVertexMove(t,new k(this._stagedVertex),e,o,a),r())}))}else{const i=null!=this._stagedVertex?new k(this._stagedVertex):n;this._syncGeometryAfterVertexMove(t,i,e,o,a),r()}}_syncGeometryAfterVertexMove(t,e,i,o,s=!1){const r=this._editGeometryOperations?.data.geometry;if(r)if("point"===r.type)t.geometry=e;else if("mesh"===r.type)t.geometry=r.centerAt(e);else{const{_coordinateHelper:p}=this,[n,a]=jt(t);let l=f(r);const c=l[n].length-1,h=p.pointToArray(e);l[n][a]=h,"polygon"===r.type&&(0===a?l[n][c]=h:a===c&&(l[n][0]=h)),this._isVertex(t)&&(l=this._moveRelatedCoordinates(l,t,h),l=this._moveSelectedHandleCoordinates(l,t,i,o,"polygon"===r.type),this._updateMidpointGraphicLocations(l)),this._updateGraphicGeometry(r.clone());const m=p.pointToVector(e),d=this._getVertexFromEditGeometry(t),y=p.getZ(m),u=m[0]-d.pos[0],v=m[1]-d.pos[1],g=null!=y?y-d.pos[2]:0;this._editGeometryOperations?.moveVertices([d],u,v,g),s&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:o}=e.attributes;for(const s of o){const o=this.vertexGraphics.at(s),{pathIndex:r,pointIndex:p}=o.attributes;t[r][p]=i,o.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,o,s){for(const r of this.selectedVertices)if(r!==e){const{pathIndex:e,pointIndex:p,relatedGraphicIndices:n}=r.attributes,a=M(r.geometry,i,o,this.view),l=f(a),c=t[e].length-1;t[e][p]=l,r.geometry=a,s&&(0===p?t[e][c]=l:p===c&&(t[e][0]=l));for(const e of n){const i=this.vertexGraphics.at(e),{pathIndex:o,pointIndex:s}=i.attributes;t[o][s]=l,i.geometry=a}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,o=i.geometry;if(null==o||"polygon"!==o.type&&"polyline"!==o.type)return[];const s=o.clone(),r=[],{pathIndex:p,pointIndexStart:n,pointIndexEnd:a}=t.attributes,l=f(t.geometry),c=0===a?n+1:a,h=f(s);return h[p].splice(c,0,l),t.attributes={...e,pathIndex:p,pointIndex:c,relatedGraphicIndices:[]},r.push({coordinates:h[p][c],componentIndex:p,vertexIndex:c}),this._updateGraphicGeometry(s),r}_addToSelection(t){const e=_t(t);for(const t of e)t.symbol=this.symbols.vertices.selected,this.selectedVertices.add(t),this._updateTooltip(t);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,o=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=o,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){null==this._activeOperationInfo&&R(t,this.tooltip)||J.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(null==e||"polygon"!==e.type&&"polyline"!==e.type)return;if("polygon"===e.type&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),o=e.clone();let s=f(o);const r=[],p=_t(t);for(const t of p){const{x:e,y:i}=t.geometry;for(let t=0;t<s.length;t++){const o=s[t];for(let p=0;p<o.length;p++){const[n,a]=o[p];e===n&&i===a&&(r.push({coordinates:s[t][p],componentIndex:t,vertexIndex:p}),s[t].splice(Number(p),1))}}}if("polygon"===o.type)s=s.filter((t=>{if(t.length<2)return!1;const[e,i]=t[0],[o,s]=t[t.length-1];return(2!==t.length||e!==o||i!==s)&&(e===o&&i===s||t.push(t[0]),!0)})),o.rings=s;else{for(const t of s)1===t.length&&s.splice(s.indexOf(t),1);o.paths=s}this._updateGraphicGeometry(o),this.refresh(),this._emitVertexRemoveEvent(p,i,r)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:o,view:s,tooltipInfos:r}=this,p=o?.geometry;"point"===p?.type?i=r.movePoint:this._selectedVertex?i=r.selectedVertex:t===this.graphic?(i=r.translateGraphic,function(t,e,i){t.clear(),ot(t,e,i)}(i,s,e)):t&&this.selectedVertices.length>1&&(i=r.translateVertices,function(t,e,i,o){t.clear(),"polygon"===i?.type?t.area=F(i):"polyline"===i?.type&&(t.totalLength=z(i)),ot(t,e,o)}(i,s,p,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){this._updateHandlesOnExternalGeometryChange?.pause(),this.graphic.geometry=t,this._updateHandlesOnExternalGeometryChange?.resume()}_emitMoveStartEvent(t,e){const i=new nt(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart?.(i)}_emitMoveEvent(t,e){const i=new at(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove?.(i)}_emitMoveStopEvent(t,e){if(null==t||null==e){const i=this._activeOperationInfo;if(!i)return;t=i.totalDx,e=i.totalDy}const i=new lt(this.graphic,t,e);this.emit("move-stop",i),this.callbacks.onMoveStop?.(i)}_emitReshapeStartEvent(t){const e=new st(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),this.callbacks.onReshapeStart?.(e)}_emitReshapeEvent(t){const e=new rt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),this.callbacks.onReshape?.(e)}_emitReshapeStopEvent(t){const e=new pt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),this.callbacks.onReshapeStop?.(e)}_emitSelectEvent(t){const e=new ct(t);this.emit("select",e),this.callbacks.onVertexSelect?.(e)}_emitDeselectEvent(t){const e=new ht(t);this.emit("deselect",e),this.callbacks.onVertexDeselect?.(e)}_emitVertexAddEvent(t,e,i){const o=new mt(t,this.graphic,e,i);this.emit("vertex-add",o),this.callbacks.onVertexAdd?.(o)}_emitVertexRemoveEvent(t,e,i){const o=new dt(t,this.graphic,e,i);this.emit("vertex-remove",o),this.callbacks.onVertexRemove?.(o)}_logGeometryTypeError(){p.getLogger(this).error(new s("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function gt(t){const e=f(t.clone());if("polygon"===t.type)for(const t of e){const e=t[t.length-1];t[0][0]===e[0]&&t[0][1]===e[1]&&t.length>2&&t.pop()}return e}function jt({attributes:t}){return[t?.pathIndex||0,t?.pointIndex||0]}function _t(t){return t instanceof e?[t]:[...t]}t([v()],vt.prototype,"_activeOperationInfo",void 0),t([v()],vt.prototype,"_coordinateHelper",null),t([v()],vt.prototype,"_editGeometryOperations",void 0),t([v()],vt.prototype,"tooltip",void 0),t([v()],vt.prototype,"tooltipInfos",void 0),t([v()],vt.prototype,"activeTooltipInfo",void 0),t([v()],vt.prototype,"_selectedVertex",null),t([v()],vt.prototype,"_tooltipsContext",null),t([v()],vt.prototype,"callbacks",void 0),t([v()],vt.prototype,"enableMidpoints",void 0),t([v()],vt.prototype,"enableMovement",void 0),t([v()],vt.prototype,"enableVertices",void 0),t([v()],vt.prototype,"graphic",void 0),t([v({value:!0})],vt.prototype,"highlightsEnabled",null),t([v()],vt.prototype,"layer",void 0),t([v({readOnly:!0})],vt.prototype,"midpointGraphics",void 0),t([v()],vt.prototype,"midpointSymbol",void 0),t([v({readOnly:!0})],vt.prototype,"selectedVertices",void 0),t([v()],vt.prototype,"snappingManager",void 0),t([v({readOnly:!0})],vt.prototype,"state",null),t([v()],vt.prototype,"symbols",void 0),t([v({type:X})],vt.prototype,"sketchOptions",void 0),t([v({readOnly:!0})],vt.prototype,"type",void 0),t([v({readOnly:!0})],vt.prototype,"vertexGraphics",void 0),t([v()],vt.prototype,"view",void 0),vt=t([g("esri.views.draw.support.Reshape")],vt);const ft=vt;export{ft as default};
