/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as s}from"./tslib.es6.js";import{c as i}from"./asyncUtils.js";import e from"../core/Error.js";import{d as r,a as t}from"./maybe.js";import{isAborted as a,createAbortError as o}from"../core/promiseUtils.js";import{watch as l,syncAndInitial as n}from"../core/reactiveUtils.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import{L as m}from"./LayerView3D.js";import w from"../views/layers/LayerView.js";import c from"../views/layers/ViewshedLayerView.js";import"../core/Accessor.js";import"../core/lang.js";import"../core/Handles.js";import"./Logger.js";import"../config.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"../core/Collection.js";import"../core/Evented.js";import"./ensureType.js";import"./shared.js";import"./SimpleObservable.js";import"./heightModelInfoUtils.js";import"../geometry/HeightModelInfo.js";import"./jsonMap.js";import"../core/JSONSupport.js";import"./unitUtils.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./reader.js";import"./writer.js";import"./arcgisLayerUrl.js";import"./persistableUrlUtils.js";import"../core/Identifiable.js";import"../core/Promise.js";import"./UpdatingHandles.js";import"./layerViewUtils.js";const h="analysis-view-handles";let d=class extends(m(c(w))){constructor(s){super(s),this.type="viewshed-3d",this._analysisModule=null}initialize(){this.addHandles(l((()=>this.layer.source),(s=>{this._destroyAnalysisView(),null!=s&&this._createAnalysisView(s)}),n),h)}destroy(){this.removeHandles(h),this._destroyAnalysisView()}async whenAnalysisView(){if(null!=this.analysisView)return this.analysisView;if(null!=this._createAnalysisViewTask)return this._createAnalysisViewTask.promise;throw new e("layerview:no-analysisview-for-analysis","The analysis has not been set on the ViewshedLayer of this layer view")}isUpdating(){return null!=this._createAnalysisViewTask||null!=this.analysisView&&this.analysisView.updating}_createAnalysisView(s){const e=i((async i=>(this.analysisView=await this._createAnalysisViewPromise(s,i),this._createAnalysisViewTask===e&&(this._createAnalysisViewTask=null),this.analysisView)));this.addResolvingPromise(e.promise),this._createAnalysisViewTask=e}_destroyAnalysisView(){this.analysisView=r(this.analysisView),this._createAnalysisViewTask=t(this._createAnalysisViewTask)}async _createAnalysisViewPromise(s,i){let r=this._analysisModule;if(null==r){const s=await this._loadAnalysisModule();this._analysisModule=s,r=s}const t=new r.default({analysis:s,view:this.view,parent:this});if(await t.when(),a(i)){t.destroy();const i=this.layer.source;if(null!=i&&s!==i)throw o("Source has changed during creation.");throw new e("layerview:no-analysisview-for-analysis","The analysis has not been added to the ViewshedLayer of this layer view",{analysis:s})}return t}_loadAnalysisModule(){return import("../views/3d/analysis/ViewshedAnalysisView3D.js")}};s([y()],d.prototype,"type",void 0),s([y()],d.prototype,"analysisView",void 0),s([y()],d.prototype,"_createAnalysisViewTask",void 0),d=s([p("esri.views.3d.layers.ViewshedLayerView3D")],d);const j=d;export{j as default};
