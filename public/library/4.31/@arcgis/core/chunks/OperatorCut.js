/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{G as t,b as e,e as s,h as n,a as r,E as o,T as i,s as m,i as u,j as c,k as h,n as a,C as l}from"./converterAPI.js";import{G as d,e as y,g as p}from"./Transformation2D.js";var _=l;function g(t,e){return{m_geometry:t,m_side:e}}class C{getOperatorType(){return 10005}accelerateGeometry(t,e,s){return!1}canAccelerateGeometry(t){return!1}supportsCurves(){return!0}execute(t,e,s,n,r){return new f(t,e,s,n,r)}}class f extends t{constructor(t,r,o,i,m){super(),this.m_cutIndex=-1,this.m_cuts=[],this.m_progressTracker=m,this.m_cuttee=r.clone(),this.m_cutter=new e({copy:o}),this.m_bConsiderTouch=t;const u=s(r,o);this.m_tolerance=n(i,u,!0)}next(){return-1===this.m_cutIndex&&this.generateCuts(),++this.m_cutIndex<this.m_cuts.length?this.m_cuts[this.m_cutIndex]:null}getGeometryID(){return 0}tock(){return!0}getRank(){return 1}generateCuts(){switch(this.m_cuttee.getGeometryType()){case d.enumPolyline:this.generatePolylineCuts();break;case d.enumPolygon:this.generatePolygonCuts()}}generatePolylineCuts(){const t=new e,s=new e,n=new e;this.m_cuts.length=0,this.m_cuts.push(t),this.m_cuts.push(s);const r=[];!function(t,e,s,n,r,a){if(e.isEmpty()){const t=g(e,0);return void r.push(t)}if(s.isEmpty()){const t=g(e,0);return void r.push(t)}const l=[],d=new o;{const o=d.createGeometryUserIndex(),y=d.addGeometry(e),p=d.addGeometry(s),C=new i(a);let f=0,E=null;if(d.hasCurves()){E=new _;const t=d.getEnvelope2D(a);f=m(n.total());const e=u(n.total(),t);c(d,e,n.total(),12e3,E,null,a)}d.dbgVerifyCurves(),C.setEditShapeCrackAndCluster(d,n),C.cut(t,o,y,p,l);for(const t of l){null!==E&&E.stitchCurves(d,t,f,!1);const e=g(d.getGeometry(t),h(d.getGeometryUserIndex(t,o)));r.push(e)}null!==E&&E.clearStitcher(d)}}(this.m_bConsiderTouch,this.m_cuttee,this.m_cutter,this.m_tolerance,r,this.m_progressTracker);for(let e=0;e<r.length;e++){const o=r[e];1===o.m_side?t.add(o.m_geometry,!1):2===o.m_side||4===o.m_side?s.add(o.m_geometry,!1):3===o.m_side?this.m_cuts.push(o.m_geometry):0===o.m_side?n.add(o.m_geometry,!1):y("")}n.isEmpty()||t.isEmpty()&&s.isEmpty()&&!(this.m_cuts.length>=3)||this.m_cuts.push(n),t.isEmpty()&&s.isEmpty()&&this.m_cuts.length<3&&(this.m_cuts.length=0)}generatePolygonCuts(){const t=new r,e=new r,s=new r;this.m_cuts.length=0,this.m_cuts.push(t),this.m_cuts.push(e);const n=[];!function(t,e,s,n,h,l){if(e.isEmpty()){const t=g(e,0);return void h.push(t)}if(s.isEmpty()){const t=g(e,0);return void h.push(t)}const d=[],y=new o;{const t=y.createGeometryUserIndex(),p=y.addGeometry(e),C=y.addGeometry(s),f=new i(l);let E=0,G=null;if(y.hasCurves()){G=new _;const t=y.getEnvelope2D(l);E=m(n.total());const e=u(n.total(),t);c(y,e,n.total(),12e3,G,null,l)}y.dbgVerifyCurves(),f.setEditShapeCrackAndCluster(y,n),f.cut(!1,t,p,C,d),null!==G&&G.stitchCurves(y,a,E,!0);let v=y.getGeometry(p);const w=new r,x=new r,k=[];for(let e=0;e<d.length;e++){let s=null;{const r=new o,i=r.addGeometry(v),h=r.addGeometry(y.getGeometry(d[e]));if(r.hasCurves()){const t=r.getEnvelope2D(l);E=m(n.total());const e=u(n.total(),t);c(r,e,n.total(),12e3,G,null,l)}f.setEditShapeCrackAndCluster(r,n);const p=f.intersection(i,h);if(null!==G&&G.stitchCurves(r,a,E,!0),s=r.getGeometry(p),s.isEmpty())continue;const _=y.getGeometryUserIndex(d[e],t);2===_?w.add(s,!1):1===_?x.add(s,!1):k.push(s)}{const t=new o,s=t.addGeometry(v),r=t.addGeometry(y.getGeometry(d[e]));if(t.hasCurves()){const e=t.getEnvelope2D(l);E=m(n.total());const s=u(n.total(),e);c(t,s,n.total(),12e3,G,null,l)}f.setEditShapeCrackAndCluster(t,n);const i=f.difference(s,r);null!==G&&G.stitchCurves(t,a,E,!0),v=t.getGeometry(i)}}if(!v.isEmpty()&&d.length>0&&k.push(v),w.isEmpty()&&x.isEmpty())return;if(!w.isEmpty()){const t=g(w,1);h.push(t)}if(!x.isEmpty()){const t=g(x,2);h.push(t)}for(let t=0,e=k.length;t<e;++t){const e=g(k[t],3);h.push(e)}}}(this.m_bConsiderTouch,this.m_cuttee,this.m_cutter,this.m_tolerance,n,this.m_progressTracker);for(let r=0;r<n.length;r++){const o=n[r];1===o.m_side?t.add(o.m_geometry,!1):2===o.m_side?e.add(o.m_geometry,!1):3===o.m_side?this.m_cuts.push(o.m_geometry):0===o.m_side?s.add(o.m_geometry,!1):y("")}p(s.isEmpty()||1===n.length),t.isEmpty()&&e.isEmpty()&&this.m_cuts.length<3&&(this.m_cuts.length=0)}}export{C as O};
