/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{a as e,b as t}from"./tslib.es6.js";import{G as n,P as i,s as r,f as s,h as o,m,v as a,j as u}from"./Transformation2D.js";import{m as c,o as h,P as l,p as g,q as y,r as _,a as D}from"./converterAPI.js";function v(){return{outPoint:new i,index:-1,t:Number.NaN}}function p(e,t,n){return{outPoint:e.clone(),index:t,t:n}}function N(e,t,n,i){e.outPoint.assign(t),e.index=n,e.t=i}function f(e,t){e.outPoint.assign(t.outPoint),e.index=t.index,e.t=t.t}function P(e,t,n,i){e.index=n,e.t=i,t.queryCoord2D(e.t,e.outPoint)}function I(e,t){const n=v();f(n,e),f(e,t),f(t,n)}function d(e,t,i,r,s,o){if(e.getGeometryType()===n.enumPolygon){for(;r.nextPath();)if(r.hasNextSegment()){const t=r.nextSegment();if(0!==c(e,t.getEndXY(),0))return N(s,t.getEndXY(),-1,Number.NaN),N(o,t.getEndXY(),-1,Number.NaN),!0}r.resetToFirstPath()}if(t.getGeometryType()===n.enumPolygon){for(;i.nextPath();)if(i.hasNextSegment()){const e=i.nextSegment();if(0!==c(t,e.getEndXY(),0))return N(s,e.getEndXY(),-1,Number.NaN),N(o,e.getEndXY(),-1,Number.NaN),!0}i.resetToFirstPath()}return!1}function q(e){const t=e.getPathCount(),n=new Array(e.getSegmentCount());let i=0;for(let r=0;r<t;++r){const t=i+e.getSegmentCountPath(r);for(let s=i,o=e.getPathStart(r);s<t;++s,++o)n[s]=o;i=t}return h(e.getPointCount(),n),n}function M(e,t){return!!Number.isNaN(t)||e<=t}function x(e){const t=new D;return t.addEnvelope(e,!1),t}class E{constructor(e,t){if(this.m_env2DgeometryA=null,this.m_env2DgeometryB=null,this.m_progressCounter=0,this.m_progressTracker=t,this.m_maxSqrDistance=e*e,this.m_maxDistance=e,this.m_bIsNearCalc=!1,Number.isNaN(this.m_maxDistance)?this.m_maxDistance=Number.POSITIVE_INFINITY:this.m_maxDistance=e,this.m_maxSqrDistance=this.m_maxDistance*this.m_maxDistance,Number.isFinite(this.m_maxSqrDistance)){let e=Math.sqrt(this.m_maxSqrDistance);for(;e<this.m_maxDistance;)this.m_maxSqrDistance*=1+Number.EPSILON,e=Math.sqrt(this.m_maxSqrDistance)}}calculate(e,t,n,r){if((e.getGeometryType()!==l.type||t.getGeometryType()!==l.type)&&(this.m_env2DgeometryA=new g,this.m_env2DgeometryB=new g,e.queryEnvelope(this.m_env2DgeometryA),t.queryEnvelope(this.m_env2DgeometryB),!M(this.m_env2DgeometryA.distanceFromEnvelope(this.m_env2DgeometryB),this.m_maxDistance)))return Number.POSITIVE_INFINITY;const s=p(new i,u(),Number.NaN),o=p(new i,u(),Number.NaN),m=this._ExecuteBruteForce(e,t,s,o);return M(m,this.m_maxDistance)?(null!==n&&f(n,s),null!==r&&f(r,o),m):Number.POSITIVE_INFINITY}isNear(e,t){if(this.m_bIsNearCalc=!0,e.isEmpty()||t.isEmpty())return!1;if(e===t)return!0;let n=!0;if(e.getGeometryType()!==l.type&&e.getGeometryType()!==y.type||t.getGeometryType()!==l.type&&t.getGeometryType()!==y.type||(n=!1),n){if(this.m_env2DgeometryA=new g,this.m_env2DgeometryB=new g,e.queryEnvelope(this.m_env2DgeometryA),t.queryEnvelope(this.m_env2DgeometryB),!(this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)>this.m_maxSqrDistance))return!0;if(this.m_env2DgeometryA.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>this.m_maxSqrDistance)return!1}const r=p(new i,u(),Number.NaN),s=p(new i,u(),Number.NaN);return this._ExecuteBruteForce(e,t,r,s)<=this.m_maxDistance}progress_(e=!1){}_ExecuteBruteForce(e,t,i,r){switch(e.getGeometryType()){case n.enumPoint:return this.distancePointGeometry(e,t,i,r);case n.enumMultiPoint:return this.distanceMultipointGeometry(e,t,i,r);case n.enumEnvelope:return this.distanceEnvelopeGeometry(e,t,i,r);case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathGeometry(e,t,i,r);default:return Number.NaN}}distancePointGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:return this.distancePointPoint(e,t,i,r);case n.enumMultiPoint:return this.distancePointMultipoint(e,t,i,r);case n.enumPolyline:case n.enumPolygon:return this.distancePointMultipath(e,t,i,r);case n.enumEnvelope:return this.distancePointEnvelope(e,t,i,r);default:return Number.NaN}}distancePointPoint(e,t,n,r){const s=e.getXY(),o=t.getXY();return N(n,s,0,0),N(r,o,0,0),Math.sqrt(i.sqrDistance(s,o))}distancePointMultipoint(e,t,n,r){const s=e.getXY();let o=this.m_maxSqrDistance,m=o,a=!1;const u=t.getPointCount(),c=new i;for(let e=0;e<u;++e)if(t.queryXY(e,c),m=i.sqrDistance(s,c),this.m_bIsNearCalc){if(m<=o)return 0}else if(!(m>o)&&(!a&&m===o||m<o)&&(o=m,N(n,s,0,0),N(r,c,e,0),a=!0,0===o))return 0;return a?Math.sqrt(o):Number.POSITIVE_INFINITY}distancePointMultipath(e,t,r,s){const o=!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB),m=e.getXY();if(!o&&t.getGeometryType()===n.enumPolygon&&0!==c(t,m,0))return N(r,m,0,0),N(s,m,-1,Number.NaN),0;t.getImpl().getAccelerators();let a=this.m_maxSqrDistance,u=a,h=-1;const l=new g,y=t.querySegmentIterator();let _=!1;for(;y.nextPath();)for(;y.hasNextSegment();){const e=y.nextSegment();e.queryEnvelope(l);const t=l.sqrDistance(m);if(t>a)continue;if(!this.m_bIsNearCalc&&_&&t===a)continue;h=e.getClosestCoordinate(m,!1);const n=e.getCoord2D(h);if(u=i.sqrDistance(m,n),this.m_bIsNearCalc){if(u<=a)return 0}else if(!(u>a)&&(!_||u<a)&&(a=u,N(r,m,0,0),N(s,n,y.getStartPointIndex(),h),_=!0,0===a))return 0}return _?Math.sqrt(a):Number.POSITIVE_INFINITY}distancePointEnvelope(e,t,n,i){const r=e.getXY();N(n,r,0,0),N(i,r,-1,Number.NaN);const s=t.asEnvelope2D();return s.contains(r)?0:Math.sqrt(s.sqrDistance(r,i.outPoint))}distanceMultipointGeometry(e,t,i,s){switch(t.getGeometryType()){case n.enumPoint:{this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distancePointMultipoint(t,e,s,i);return this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumMultiPoint:return this.distanceMultipointMultipoint(e,t,i,s,1,1);case n.enumPolyline:case n.enumPolygon:return this.distanceMultipointMultipath(e,t,i,s);case n.enumEnvelope:return this.distanceMultipointMultipath(e,x(t),i,s);default:return Number.NaN}}distanceMultipointMultipoint(n,a,u,c,h,l){const g={stack:[],error:void 0,hasError:!1};try{if(this.m_bIsNearCalc&&1===h&&1===l){const e=Math.trunc(s(Math.sqrt(n.getPointCount())+1,1,o())),t=Math.trunc(s(Math.sqrt(a.getPointCount())+1,1,o()));if((e>=4||t>=4)&&this.distanceMultipointMultipoint(n,a,u,c,e,t)<=this.m_maxSqrDistance)return 0}let t=this.m_maxSqrDistance;const y=[n],_=[a],D=this.swapGeometriesIfBGtA(y,_);D&&(this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),l=r(h,h=l),I(u,c)),e(g,m((()=>{I(u,c),this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)}),!D),!1);const v=y[0].getImpl(),p=_[0].getImpl(),f=v.getPointCount(),P=p.getPointCount(),d=P>1;let q=!1;const M=new i,x=new i;for(let e=0;e<f;e+=h){if(v.queryXY(e,M),d){const e=this.m_env2DgeometryB.sqrDistance(M);if(this.m_bIsNearCalc){if(e>t)continue;if(this.m_env2DgeometryB.sqrMaxMinDistance(M)<=t)return 0}else if(e>=t)continue}for(let n=0;n<P;n+=l){p.queryXY(n,x);const r=i.sqrDistance(M,x);if(this.m_bIsNearCalc){if(r<=t)return 0}else if(!(r>t||q&&r===t)&&(!q||r<t)&&(N(u,M,e,0),N(c,x,n,0),q=!0,t=r,0===t))return q?Math.sqrt(t):Number.POSITIVE_INFINITY}}return q?Math.sqrt(t):Number.POSITIVE_INFINITY}catch(e){g.error=e,g.hasError=!0}finally{t(g)}}distanceMultipointMultipath(e,t,r,s){let o=!!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)&&t.getGeometryType()===n.enumPolygon;const m=t.querySegmentIterator();m.stripAttributes();const a=new g,u=new i;let h=this.m_maxSqrDistance;const l=e.getImpl(),y=l.getPointCount(),_=y>1;let D=!1;for(;m.nextPath();)for(;m.hasNextSegment();){const e=m.nextSegment();if(e.queryLooseEnvelope(a),_){const e=a.sqrDistanceEnvelope(this.m_env2DgeometryA,null,null);if(this.m_bIsNearCalc){if(e>h)continue}else if(e>h||D&&e===h)continue}for(let n=0;n<y;n++){if(l.queryXY(n,u),o&&0!==c(t,u,0))return N(r,u,-1,Number.NaN),N(s,u,n,0),0;{const e=a.sqrDistance(u);if(this.m_bIsNearCalc){if(e>h)continue}else if(e>h)continue}const i=e.getClosestCoordinate(u,!1),g=e.getCoord2D(i);u.subThis(g);const y=u.sqrLength();if(this.m_bIsNearCalc){if(y<=h)return 0}else if(!(y>h)&&(!D||y<h)&&(h=y,N(r,l.getXY(n),n,0),N(s,g,m.getStartPointIndex(),i),D=!0,0===h))return 0}o=!1}return D?Math.sqrt(h):Number.POSITIVE_INFINITY}distanceEnvelopeGeometry(e,t,i,s){switch(t.getGeometryType()){case n.enumPoint:return this.distancePointEnvelope(t,e,s,i);case n.enumMultiPoint:{this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distanceMultipointMultipath(t,x(e),s,i);return this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathMultipath(x(e),t,i,s);case n.enumEnvelope:return this.distanceEnvelopeEnvelope(e,t,i,s);default:return Number.NaN}}distanceEnvelopeEnvelope(e,t,n,i){n.t=Number.NaN,n.index=-1,i.t=Number.NaN,i.index=-1;const r=e.asEnvelope2D(),s=t.asEnvelope2D();return Math.sqrt(r.sqrDistanceEnvelope(s,n.outPoint,i.outPoint))}distanceMultipathGeometry(e,t,i,s){switch(t.getGeometryType()){case n.enumPoint:{this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distancePointMultipath(t,e,s,i);return this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumMultiPoint:{this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distanceMultipointMultipath(t,e,s,i);return this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathMultipath(e,t,i,s);case n.enumEnvelope:return this.distanceMultipathMultipath(e,x(t),i,s);default:return Number.NaN}}distanceMultipathMultipath(n,i,a,u){const c={stack:[],error:void 0,hasError:!1};try{const t=[n],h=[i],l=this.swapGeometriesIfAGtB(t,h);l&&(this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),I(a,u)),e(c,m((()=>{I(a,u),this.m_env2DgeometryB=r(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)}),!l),!1);const y=t[0],D=h[0],p=y.querySegmentIterator();p.stripAttributes();const N=D.querySegmentIterator();if(N.stripAttributes(),this.m_bIsNearCalc&&this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)<=this.m_maxSqrDistance)return 0;if(this.m_bIsNearCalc){const e=Math.trunc(s(Math.sqrt(y.getPointCount())+1,1,o())),t=Math.trunc(s(Math.sqrt(y.getPointCount())+1,1,o()));if(this.distanceMultipointMultipoint(y,D,a,u,e,t)<=this.m_maxSqrDistance)return 0}if(this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)){const e=v(),t=v();if(d(y,D,p,N,e,t))return f(a,e),f(u,t),0}const M=q(y),x=[],E=new _,b=new g,A=new g,B=new g;let S=this.m_maxSqrDistance,T=!0,C=!1;for(let e=0,t=M.length;e<t;++e){y.querySegment(M[e],E,!0);const t=E.get();if(t.queryEnvelope(b),!(b.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>S)){if(this.m_bIsNearCalc&&b.sqrMaxDistanceEnvelope(this.m_env2DgeometryB)<=S)return 0;for(;N.nextPath();){if(this.progress_(),T)D.queryPathEnvelope(N.getPathIndex(),B),x[N.getPathIndex()]=B.clone();else if(b.sqrDistanceEnvelope(x[N.getPathIndex()],null,null)>S)continue;for(;N.hasNextSegment();){const n=N.nextSegment();if(n.queryEnvelope(A),b.sqrDistanceEnvelope(A,null,null)<=S){const i=!b.isIntersecting(A),r=[0],s=[0];let o=t.distance(n,i,r,s);if(o*=o,this.m_bIsNearCalc&&o<=this.m_maxSqrDistance)return 0;if(o<S||o===S&&M[e]<a.index){if(C=!0,P(a,t,M[e],r[0]),P(u,n,N.getStartPointIndex(),s[0]),0===o)return 0;S=o}}}}N.resetToFirstPath(),T=!1}}return C?Math.sqrt(S):Number.POSITIVE_INFINITY}catch(e){c.error=e,c.hasError=!0}finally{t(c)}}swapGeometriesIfAGtB(e,t){return a(e[0])>a(t[0])&&(t[0]=r(e[0],e[0]=t[0]),!0)}swapGeometriesIfBGtA(e,t){return this.swapGeometriesIfAGtB(t,e)}}export{E as D,v as m,q as s,d as w};
